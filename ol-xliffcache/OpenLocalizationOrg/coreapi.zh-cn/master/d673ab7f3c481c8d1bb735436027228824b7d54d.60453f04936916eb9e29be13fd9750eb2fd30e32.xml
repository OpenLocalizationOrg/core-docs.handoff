{"nodes":[{"pos":[2612,2622],"content":"HashSet<T>","needQuote":true,"nodes":[{"content":"HashSet&lt;T&gt;","pos":[0,10],"source":"HashSet<T>"}]},{"content":"\\n&lt;p&gt;The type of elements in the hash set.&lt;/p&gt;\\n","pos":[3891,3939],"source":"\\n<p>The type of elements in the hash set.</p>\\n"},{"pos":[22005,22014],"content":"HashSet()","needQuote":true,"nodes":[{"content":"HashSet()","pos":[0,9]}]},{"pos":[23291,23314],"content":"HashSet(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"HashSet(IEnumerable&lt;T&gt;)","pos":[0,23],"source":"HashSet(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;The collection whose elements are copied to the new set.&lt;/p&gt;\\n","pos":[24380,24447],"source":"\\n<p>The collection whose elements are copied to the new set.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;collection&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[24566,24624],"source":"\\n<p>\\n<em>collection</em> is <strong>null</strong>.</p>\\n"},{"pos":[25426,25471],"content":"HashSet(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"HashSet(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,45],"source":"HashSet(IEnumerable<T>, IEqualityComparer<T>)"}]},{"content":"\\n&lt;p&gt;The collection whose elements are copied to the new set.&lt;/p&gt;\\n","pos":[26657,26724],"source":"\\n<p>The collection whose elements are copied to the new set.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;collection&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[27306,27364],"source":"\\n<p>\\n<em>collection</em> is <strong>null</strong>.</p>\\n"},{"pos":[28161,28190],"content":"HashSet(IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"HashSet(IEqualityComparer&lt;T&gt;)","pos":[0,29],"source":"HashSet(IEqualityComparer<T>)"}]},{"pos":[30073,30081],"content":"Comparer","needQuote":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[31599,31604],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The number of elements that are contained in the set.&lt;/p&gt;\\n","pos":[32296,32360],"source":"\\n<p>The number of elements that are contained in the set.</p>\\n"},{"pos":[33062,33087],"content":"ICollection<T>.IsReadOnly","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;.IsReadOnly","pos":[0,25],"source":"ICollection<T>.IsReadOnly"}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the collection is read-only; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[33981,34082],"source":"\\n<p>\\n<strong>true</strong> if the collection is read-only; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[34734,34740],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The element to add to the set.&lt;/p&gt;\\n","pos":[35400,35441],"source":"\\n<p>The element to add to the set.</p>\\n"},{"pos":[36129,36136],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[37286,37297],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[39025,39036],"content":"CopyTo(T[])","needQuote":true,"nodes":[{"content":"CopyTo(T[])","pos":[0,11]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[40165,40218],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"pos":[40715,40733],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\\n","pos":[41903,41977],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[42096,42149],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;arrayIndex&lt;/em&gt; is less than 0.&lt;/p&gt;\\n","pos":[42266,42314],"source":"\\n<p>\\n<em>arrayIndex</em> is less than 0.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;arrayIndex&lt;/em&gt; is greater than the length of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\\n","pos":[42411,42505],"source":"\\n<p>\\n<em>arrayIndex</em> is greater than the length of the destination <em>array</em>.</p>\\n"},{"pos":[43165,43190],"content":"CopyTo(T[], Int32, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32, Int32)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\\n","pos":[44423,44497],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n"},{"content":"\\n&lt;p&gt;The number of elements to copy to &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\\n","pos":[44560,44620],"source":"\\n<p>The number of elements to copy to <em>array</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[44739,44792],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;arrayIndex&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is less than 0.&lt;/p&gt;\\n","pos":[44909,45011],"source":"\\n<p>\\n<em>arrayIndex</em> is less than 0.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is less than 0.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;arrayIndex&lt;/em&gt; is greater than the length of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is greater than the available space from the &lt;em&gt;index&lt;/em&gt; to the end of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\\n","pos":[45108,45346],"source":"\\n<p>\\n<em>arrayIndex</em> is greater than the length of the destination <em>array</em>.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is greater than the available space from the <em>index</em> to the end of the destination <em>array</em>.</p>\\n"},{"pos":[46000,46026],"content":"ExceptWith(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"ExceptWith(IEnumerable&lt;T&gt;)","pos":[0,26],"source":"ExceptWith(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[47219,47272],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[47829,47844],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[49519,49548],"content":"IntersectWith(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"IntersectWith(IEnumerable&lt;T&gt;)","pos":[0,29],"source":"IntersectWith(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[50795,50848],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[51558,51590],"content":"IsProperSubsetOf(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"IsProperSubsetOf(IEnumerable&lt;T&gt;)","pos":[0,32],"source":"IsProperSubsetOf(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[53102,53155],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[53883,53917],"content":"IsProperSupersetOf(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"IsProperSupersetOf(IEnumerable&lt;T&gt;)","pos":[0,34],"source":"IsProperSupersetOf(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[55442,55495],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[56207,56233],"content":"IsSubsetOf(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"IsSubsetOf(IEnumerable&lt;T&gt;)","pos":[0,26],"source":"IsSubsetOf(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[57707,57760],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[58446,58474],"content":"IsSupersetOf(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"IsSupersetOf(IEnumerable&lt;T&gt;)","pos":[0,28],"source":"IsSupersetOf(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[59960,60013],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[60695,60719],"content":"Overlaps(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Overlaps(IEnumerable&lt;T&gt;)","pos":[0,24],"source":"Overlaps(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[62227,62280],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[62820,62829],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The element to remove.&lt;/p&gt;\\n","pos":[63606,63639],"source":"\\n<p>The element to remove.</p>\\n"},{"pos":[64571,64596],"content":"RemoveWhere(Predicate<T>)","needQuote":true,"nodes":[{"content":"RemoveWhere(Predicate&lt;T&gt;)","pos":[0,25],"source":"RemoveWhere(Predicate<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[66014,66067],"source":"\\n<p>\\n<em>match</em> is <strong>null</strong>.</p>\\n"},{"pos":[66720,66745],"content":"SetEquals(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"SetEquals(IEnumerable&lt;T&gt;)","pos":[0,25],"source":"SetEquals(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[68210,68263],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[68966,69001],"content":"SymmetricExceptWith(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"SymmetricExceptWith(IEnumerable&lt;T&gt;)","pos":[0,35],"source":"SymmetricExceptWith(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[70292,70345],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[71060,71081],"content":"ICollection<T>.Add(T)","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;.Add(T)","pos":[0,21],"source":"ICollection<T>.Add(T)"}]},{"pos":[73103,73133],"content":"IEnumerable<T>.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;.GetEnumerator()","pos":[0,30],"source":"IEnumerable<T>.GetEnumerator()"}]},{"pos":[75081,75108],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[76797,76809],"content":"TrimExcess()","needQuote":true,"nodes":[{"content":"TrimExcess()","pos":[0,12]}]},{"pos":[78144,78169],"content":"UnionWith(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"UnionWith(IEnumerable&lt;T&gt;)","pos":[0,25],"source":"UnionWith(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;other&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[79397,79450],"source":"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n"},{"pos":[79851,79877],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[80068,80074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[80304,80318],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[80537,80548],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[80612,80613],"content":"<","needQuote":true,"nodes":[]},{"pos":[80640,80641],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[80761,80772],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[80837,80840]},{"pos":[80874,80875],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[80902,80903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81213,81235],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[81486,81505],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[81577,81578],"content":"<","needQuote":true,"nodes":[]},{"pos":[81605,81606],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[81734,81753],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[81826,81829]},{"pos":[81863,81864],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[81891,81892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82210,82224],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[82443,82454],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[82518,82519],"content":"<","needQuote":true,"nodes":[]},{"pos":[82546,82547],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[82667,82678],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[82743,82746]},{"pos":[82780,82781],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[82808,82809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83052,83059],"content":"ISet<T>","needQuote":true,"nodes":[{"content":"ISet&lt;T&gt;","pos":[0,7],"source":"ISet<T>"}]},{"pos":[83250,83254],"content":"ISet","needQuote":true,"nodes":[{"content":"ISet","pos":[0,4]}]},{"pos":[83332,83333],"content":"<","needQuote":true,"nodes":[]},{"pos":[83360,83361],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[83474,83478],"content":"ISet","needQuote":true,"nodes":[{"content":"ISet","pos":[0,4]}]},{"content":"(Of","pos":[83557,83560]},{"pos":[83594,83595],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[83622,83623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83842,83853],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[84052,84062],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[84157,84165],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[84234,84235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84262,84263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84333,84341],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[84410,84411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84438,84439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84622,84636],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[84755,84761],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[84828,84829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84879,84885],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[84945,84946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85029,85035],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[85102,85103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85153,85159],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85219,85220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85434,85456],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[85604,85610],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[85677,85678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85728,85734],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[85795,85796]},{"pos":[85851,85857],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85917,85918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86015,86021],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[86088,86089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86139,86145],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[86206,86207]},{"pos":[86262,86268],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86328,86329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86574,86605],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[86771,86786],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[86862,86863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86913,86919],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[86980,86981]},{"pos":[87036,87042],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87102,87103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87209,87224],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[87300,87301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87351,87357],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[87418,87419]},{"pos":[87474,87480],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87540,87541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87771,87784],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[87885,87896],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[87968,87969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87996,87997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88070,88081],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[88153,88154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88181,88182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88357,88366],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[88459,88466],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[88534,88535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88562,88563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88632,88639],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[88707,88708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88735,88736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88911,88928],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[89037,89052],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[89128,89129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89156,89157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89234,89249],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[89325,89326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89353,89354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89649,89662],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[89779,89790],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[89849,89850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89877,89878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89959,89970],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[90029,90030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90057,90058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90419,90435],"content":"AsQueryable<T>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;T&gt;()","pos":[0,16],"source":"AsQueryable<T>()"}]},{"pos":[90646,90660],"content":"AsQueryable<T>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;T&gt;","pos":[0,14],"source":"AsQueryable<T>"}]},{"pos":[90722,90723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90750,90751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90835,90852],"content":"AsQueryable(Of T)","needQuote":true,"nodes":[{"content":"AsQueryable(Of T)","pos":[0,17]}]},{"pos":[90917,90918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90945,90946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91369,91381],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[91514,91524],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[91591,91592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91619,91620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91709,91719],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[91786,91787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91814,91815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92217,92232],"content":"AsParallel<T>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;T&gt;()","pos":[0,15],"source":"AsParallel<T>()"}]},{"pos":[92466,92479],"content":"AsParallel<T>","needQuote":true,"nodes":[{"content":"AsParallel&lt;T&gt;","pos":[0,13],"source":"AsParallel<T>"}]},{"pos":[92549,92550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92577,92578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92670,92686],"content":"AsParallel(Of T)","needQuote":true,"nodes":[{"content":"AsParallel(Of T)","pos":[0,16]}]},{"pos":[92759,92760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92787,92788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93291,93318],"content":"Aggregate<T>(Func<T, T, T>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;T&gt;(Func&lt;T, T, T&gt;)","pos":[0,27],"source":"Aggregate<T>(Func<T, T, T>)"}]},{"pos":[93609,93621],"content":"Aggregate<T>","needQuote":true,"nodes":[{"content":"Aggregate&lt;T&gt;","pos":[0,12],"source":"Aggregate<T>"}]},{"pos":[93682,93683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93733,93737],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[93795,93796],"content":"<","needQuote":true,"nodes":[]},{"pos":[93823,93824],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[93852,93853]},{"pos":[93885,93886],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[93914,93915]},{"pos":[93947,93948],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[94007,94008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94117,94132],"content":"Aggregate(Of T)","needQuote":true,"nodes":[{"content":"Aggregate(Of T)","pos":[0,15]}]},{"pos":[94196,94197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94247,94251],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[94310,94313]},{"pos":[94347,94348],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[94376,94377]},{"pos":[94409,94410],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[94438,94439]},{"pos":[94471,94472],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[94499,94500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94527,94528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95096,95169],"content":"Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, T, TAccumulate&gt;)","pos":[0,73],"source":"Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)"}]},{"pos":[95602,95627],"content":"Aggregate<T, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate&gt;","pos":[0,25],"source":"Aggregate<T, TAccumulate>"}]},{"pos":[95701,95702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95729,95740],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[95778,95779]},{"pos":[95834,95838],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[95896,95897],"content":"<","needQuote":true,"nodes":[]},{"pos":[95924,95935],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[95973,95974]},{"pos":[96006,96007],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[96035,96036]},{"pos":[96068,96079],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[96148,96149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96262,96290],"content":"Aggregate(Of T, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of T, TAccumulate)","pos":[0,28]}]},{"pos":[96367,96368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96395,96406],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[96444,96445]},{"pos":[96500,96504],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[96563,96566]},{"pos":[96600,96611],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[96649,96650]},{"pos":[96682,96683],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[96711,96712]},{"pos":[96744,96755],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[96792,96793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96820,96821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97543,97653],"content":"Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, T, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,110],"source":"Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[98238,98272],"content":"Aggregate<T, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate, TResult&gt;","pos":[0,34],"source":"Aggregate<T, TAccumulate, TResult>"}]},{"pos":[98355,98356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98383,98394],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[98432,98433]},{"pos":[98488,98492],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[98550,98551],"content":"<","needQuote":true,"nodes":[]},{"pos":[98578,98589],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[98627,98628]},{"pos":[98660,98661],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[98689,98690]},{"pos":[98722,98733],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[98803,98804]},{"pos":[98859,98863],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[98921,98922],"content":"<","needQuote":true,"nodes":[]},{"pos":[98949,98960],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[98998,98999]},{"pos":[99031,99038],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[99103,99104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99238,99275],"content":"Aggregate(Of T, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of T, TAccumulate, TResult)","pos":[0,37]}]},{"pos":[99361,99362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99389,99400],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[99438,99439]},{"pos":[99494,99498],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[99557,99560]},{"pos":[99594,99605],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[99643,99644]},{"pos":[99676,99677],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[99705,99706]},{"pos":[99738,99749],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[99786,99787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[99815,99816]},{"pos":[99871,99875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[99934,99937]},{"pos":[99971,99982],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[100020,100021]},{"pos":[100053,100060],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[100093,100094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100121,100122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100848,100872],"content":"All<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,24],"source":"All<T>(Func<T, Boolean>)"}]},{"pos":[101169,101175],"content":"All<T>","needQuote":true,"nodes":[{"content":"All&lt;T&gt;","pos":[0,6],"source":"All<T>"}]},{"pos":[101230,101231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101281,101285],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[101343,101344],"content":"<","needQuote":true,"nodes":[]},{"pos":[101371,101372],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[101400,101401]},{"pos":[101457,101464],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[101557,101558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101668,101677],"content":"All(Of T)","needQuote":true,"nodes":[{"content":"All(Of T)","pos":[0,9]}]},{"pos":[101735,101736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101786,101790],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[101849,101852]},{"pos":[101886,101887],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[101915,101916]},{"pos":[101972,101979],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[102040,102041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102068,102069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102531,102539],"content":"Any<T>()","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;()","pos":[0,8],"source":"Any<T>()"}]},{"pos":[102721,102727],"content":"Any<T>","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;","pos":[0,6],"source":"Any<T>"}]},{"pos":[102782,102783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102810,102811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102888,102897],"content":"Any(Of T)","needQuote":true,"nodes":[{"content":"Any(Of T)","pos":[0,9]}]},{"pos":[102955,102956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102983,102984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103444,103468],"content":"Any<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,24],"source":"Any<T>(Func<T, Boolean>)"}]},{"pos":[103765,103771],"content":"Any<T>","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;","pos":[0,6],"source":"Any<T>"}]},{"pos":[103826,103827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103877,103881],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[103939,103940],"content":"<","needQuote":true,"nodes":[]},{"pos":[103967,103968],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[103996,103997]},{"pos":[104053,104060],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[104153,104154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104264,104273],"content":"Any(Of T)","needQuote":true,"nodes":[{"content":"Any(Of T)","pos":[0,9]}]},{"pos":[104331,104332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104382,104386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[104445,104448]},{"pos":[104482,104483],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[104511,104512]},{"pos":[104568,104575],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[104636,104637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104664,104665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105145,105162],"content":"AsEnumerable<T>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;T&gt;()","pos":[0,17],"source":"AsEnumerable<T>()"}]},{"pos":[105380,105395],"content":"AsEnumerable<T>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;T&gt;","pos":[0,15],"source":"AsEnumerable<T>"}]},{"pos":[105459,105460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105487,105488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105574,105592],"content":"AsEnumerable(Of T)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of T)","pos":[0,18]}]},{"pos":[105659,105660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105687,105688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106183,106211],"content":"Average<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,28],"source":"Average<T>(Func<T, Decimal>)"}]},{"pos":[106524,106534],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[106593,106594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106644,106648],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[106706,106707],"content":"<","needQuote":true,"nodes":[]},{"pos":[106734,106735],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[106763,106764]},{"pos":[106820,106827],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[106920,106921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107035,107048],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[107110,107111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107161,107165],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[107224,107227]},{"pos":[107261,107262],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[107290,107291]},{"pos":[107347,107354],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[107415,107416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107443,107444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107989,108016],"content":"Average<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,27],"source":"Average<T>(Func<T, Double>)"}]},{"pos":[108325,108335],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[108394,108395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108445,108449],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[108507,108508],"content":"<","needQuote":true,"nodes":[]},{"pos":[108535,108536],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[108564,108565]},{"pos":[108620,108626],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[108718,108719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108832,108845],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[108907,108908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108958,108962],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[109021,109024]},{"pos":[109058,109059],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[109087,109088]},{"pos":[109143,109149],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[109209,109210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109237,109238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109778,109804],"content":"Average<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,26],"source":"Average<T>(Func<T, Int32>)"}]},{"pos":[110109,110119],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[110178,110179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110229,110233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[110291,110292],"content":"<","needQuote":true,"nodes":[]},{"pos":[110319,110320],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[110348,110349]},{"pos":[110403,110408],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[110499,110500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110612,110625],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[110687,110688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110738,110742],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[110801,110804]},{"pos":[110838,110839],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[110867,110868]},{"pos":[110922,110927],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[110986,110987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111014,111015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111552,111578],"content":"Average<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,26],"source":"Average<T>(Func<T, Int64>)"}]},{"pos":[111883,111893],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[111952,111953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112003,112007],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[112065,112066],"content":"<","needQuote":true,"nodes":[]},{"pos":[112093,112094],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[112122,112123]},{"pos":[112177,112182],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[112273,112274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112386,112399],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[112461,112462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112512,112516],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[112575,112578]},{"pos":[112612,112613],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[112641,112642]},{"pos":[112696,112701],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[112760,112761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112788,112789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113364,113402],"content":"Average<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,38],"source":"Average<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[113782,113792],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[113851,113852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113902,113906],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[113964,113965],"content":"<","needQuote":true,"nodes":[]},{"pos":[113992,113993],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[114021,114022]},{"pos":[114081,114089],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[114151,114152],"content":"<","needQuote":true,"nodes":[]},{"pos":[114203,114210],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[114335,114336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114467,114480],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[114542,114543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114593,114597],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[114656,114659]},{"pos":[114693,114694],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[114722,114723]},{"pos":[114782,114790],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[114853,114856]},{"pos":[114914,114921],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[114982,114983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115010,115011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115038,115039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115658,115695],"content":"Average<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,37],"source":"Average<T>(Func<T, Nullable<Double>>)"}]},{"pos":[116071,116081],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[116140,116141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116191,116195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[116253,116254],"content":"<","needQuote":true,"nodes":[]},{"pos":[116281,116282],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[116310,116311]},{"pos":[116370,116378],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[116440,116441],"content":"<","needQuote":true,"nodes":[]},{"pos":[116491,116497],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[116621,116622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116752,116765],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[116827,116828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116878,116882],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[116941,116944]},{"pos":[116978,116979],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[117007,117008]},{"pos":[117067,117075],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[117138,117141]},{"pos":[117198,117204],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[117264,117265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117292,117293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117320,117321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117935,117971],"content":"Average<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,36],"source":"Average<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[118343,118353],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[118412,118413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118463,118467],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[118525,118526],"content":"<","needQuote":true,"nodes":[]},{"pos":[118553,118554],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[118582,118583]},{"pos":[118642,118650],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[118712,118713],"content":"<","needQuote":true,"nodes":[]},{"pos":[118762,118767],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[118890,118891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119020,119033],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[119095,119096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119146,119150],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[119209,119212]},{"pos":[119246,119247],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[119275,119276]},{"pos":[119335,119343],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[119406,119409]},{"pos":[119465,119470],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[119529,119530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119557,119558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119585,119586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120197,120233],"content":"Average<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,36],"source":"Average<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[120605,120615],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[120674,120675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120725,120729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[120787,120788],"content":"<","needQuote":true,"nodes":[]},{"pos":[120815,120816],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[120844,120845]},{"pos":[120904,120912],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[120974,120975],"content":"<","needQuote":true,"nodes":[]},{"pos":[121024,121029],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[121152,121153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121282,121295],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[121357,121358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121408,121412],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[121471,121474]},{"pos":[121508,121509],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[121537,121538]},{"pos":[121597,121605],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[121668,121671]},{"pos":[121727,121732],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[121791,121792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121819,121820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121847,121848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122461,122498],"content":"Average<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,37],"source":"Average<T>(Func<T, Nullable<Single>>)"}]},{"pos":[122874,122884],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[122943,122944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122994,122998],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[123056,123057],"content":"<","needQuote":true,"nodes":[]},{"pos":[123084,123085],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[123113,123114]},{"pos":[123173,123181],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[123243,123244],"content":"<","needQuote":true,"nodes":[]},{"pos":[123294,123300],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[123424,123425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123555,123568],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[123630,123631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123681,123685],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[123744,123747]},{"pos":[123781,123782],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[123810,123811]},{"pos":[123870,123878],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[123941,123944]},{"pos":[124001,124007],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[124067,124068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124095,124096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124123,124124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124706,124733],"content":"Average<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,27],"source":"Average<T>(Func<T, Single>)"}]},{"pos":[125042,125052],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[125111,125112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125162,125166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[125224,125225],"content":"<","needQuote":true,"nodes":[]},{"pos":[125252,125253],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[125281,125282]},{"pos":[125337,125343],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[125435,125436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125549,125562],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[125624,125625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125675,125679],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[125738,125741]},{"pos":[125775,125776],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[125804,125805]},{"pos":[125860,125866],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[125926,125927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125954,125955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126403,126418],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[126622,126635],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[126697,126698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126725,126726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126804,126820],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[126885,126886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126913,126914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127406,127431],"content":"Concat<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Concat&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,25],"source":"Concat<T>(IEnumerable<T>)"}]},{"pos":[127772,127781],"content":"Concat<T>","needQuote":true,"nodes":[{"content":"Concat&lt;T&gt;","pos":[0,9],"source":"Concat<T>"}]},{"pos":[127839,127840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127917,127928],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[128013,128014],"content":"<","needQuote":true,"nodes":[]},{"pos":[128041,128042],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[128101,128102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128227,128239],"content":"Concat(Of T)","needQuote":true,"nodes":[{"content":"Concat(Of T)","pos":[0,12]}]},{"pos":[128300,128301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128378,128389],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[128475,128478]},{"pos":[128512,128513],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[128540,128541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128568,128569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129063,129075],"content":"Append<T>(T)","needQuote":true,"nodes":[{"content":"Append&lt;T&gt;(T)","pos":[0,12],"source":"Append<T>(T)"}]},{"pos":[129277,129286],"content":"Append<T>","needQuote":true,"nodes":[{"content":"Append&lt;T&gt;","pos":[0,9],"source":"Append<T>"}]},{"pos":[129344,129345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129372,129373],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[129400,129401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129486,129498],"content":"Append(Of T)","needQuote":true,"nodes":[{"content":"Append(Of T)","pos":[0,12]}]},{"pos":[129559,129560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129587,129588],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[129615,129616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130043,130056],"content":"Prepend<T>(T)","needQuote":true,"nodes":[{"content":"Prepend&lt;T&gt;(T)","pos":[0,13],"source":"Prepend<T>(T)"}]},{"pos":[130262,130272],"content":"Prepend<T>","needQuote":true,"nodes":[{"content":"Prepend&lt;T&gt;","pos":[0,10],"source":"Prepend<T>"}]},{"pos":[130331,130332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130359,130360],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[130387,130388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130474,130487],"content":"Prepend(Of T)","needQuote":true,"nodes":[{"content":"Prepend(Of T)","pos":[0,13]}]},{"pos":[130549,130550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130577,130578],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[130605,130606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131038,131052],"content":"Contains<T>(T)","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;(T)","pos":[0,14],"source":"Contains<T>(T)"}]},{"pos":[131262,131273],"content":"Contains<T>","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;","pos":[0,11],"source":"Contains<T>"}]},{"pos":[131333,131334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131361,131362],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[131389,131390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131477,131491],"content":"Contains(Of T)","needQuote":true,"nodes":[{"content":"Contains(Of T)","pos":[0,14]}]},{"pos":[131554,131555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131582,131583],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[131610,131611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132146,132182],"content":"Contains<T>(T, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;(T, IEqualityComparer&lt;T&gt;)","pos":[0,36],"source":"Contains<T>(T, IEqualityComparer<T>)"}]},{"pos":[132568,132579],"content":"Contains<T>","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;","pos":[0,11],"source":"Contains<T>"}]},{"pos":[132639,132640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132667,132668],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[132696,132697]},{"pos":[132785,132802],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[132893,132894],"content":"<","needQuote":true,"nodes":[]},{"pos":[132921,132922],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[132981,132982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133119,133133],"content":"Contains(Of T)","needQuote":true,"nodes":[{"content":"Contains(Of T)","pos":[0,14]}]},{"pos":[133196,133197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133224,133225],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[133253,133254]},{"pos":[133342,133359],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[133451,133454]},{"pos":[133488,133489],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[133516,133517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133544,133545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134062,134072],"content":"Count<T>()","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;()","pos":[0,10],"source":"Count<T>()"}]},{"pos":[134262,134270],"content":"Count<T>","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;","pos":[0,8],"source":"Count<T>"}]},{"pos":[134327,134328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134355,134356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134435,134446],"content":"Count(Of T)","needQuote":true,"nodes":[{"content":"Count(Of T)","pos":[0,11]}]},{"pos":[134506,134507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134534,134535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135005,135031],"content":"Count<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,26],"source":"Count<T>(Func<T, Boolean>)"}]},{"pos":[135336,135344],"content":"Count<T>","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;","pos":[0,8],"source":"Count<T>"}]},{"pos":[135401,135402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135452,135456],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[135514,135515],"content":"<","needQuote":true,"nodes":[]},{"pos":[135542,135543],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[135571,135572]},{"pos":[135628,135635],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[135728,135729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135841,135852],"content":"Count(Of T)","needQuote":true,"nodes":[{"content":"Count(Of T)","pos":[0,11]}]},{"pos":[135912,135913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135963,135967],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[136026,136029]},{"pos":[136063,136064],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[136092,136093]},{"pos":[136149,136156],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136217,136218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136245,136246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136736,136755],"content":"DefaultIfEmpty<T>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;()","pos":[0,19],"source":"DefaultIfEmpty<T>()"}]},{"pos":[136981,136998],"content":"DefaultIfEmpty<T>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;","pos":[0,17],"source":"DefaultIfEmpty<T>"}]},{"pos":[137064,137065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137092,137093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137181,137201],"content":"DefaultIfEmpty(Of T)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of T)","pos":[0,20]}]},{"pos":[137270,137271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137298,137299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137758,137778],"content":"DefaultIfEmpty<T>(T)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;(T)","pos":[0,20],"source":"DefaultIfEmpty<T>(T)"}]},{"pos":[138012,138029],"content":"DefaultIfEmpty<T>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;","pos":[0,17],"source":"DefaultIfEmpty<T>"}]},{"pos":[138095,138096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138123,138124],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[138151,138152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138245,138265],"content":"DefaultIfEmpty(Of T)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of T)","pos":[0,20]}]},{"pos":[138334,138335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138362,138363],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[138390,138391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138835,138848],"content":"Distinct<T>()","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;()","pos":[0,13],"source":"Distinct<T>()"}]},{"pos":[139050,139061],"content":"Distinct<T>","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;","pos":[0,11],"source":"Distinct<T>"}]},{"pos":[139121,139122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139149,139150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139232,139246],"content":"Distinct(Of T)","needQuote":true,"nodes":[{"content":"Distinct(Of T)","pos":[0,14]}]},{"pos":[139309,139310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139337,139338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139859,139892],"content":"Distinct<T>(IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;(IEqualityComparer&lt;T&gt;)","pos":[0,33],"source":"Distinct<T>(IEqualityComparer<T>)"}]},{"pos":[140265,140276],"content":"Distinct<T>","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;","pos":[0,11],"source":"Distinct<T>"}]},{"pos":[140336,140337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140420,140437],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[140528,140529],"content":"<","needQuote":true,"nodes":[]},{"pos":[140556,140557],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[140616,140617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140750,140764],"content":"Distinct(Of T)","needQuote":true,"nodes":[{"content":"Distinct(Of T)","pos":[0,14]}]},{"pos":[140827,140828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140911,140928],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[141020,141023]},{"pos":[141057,141058],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[141085,141086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141113,141114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141656,141675],"content":"ElementAt<T>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;T&gt;(Int32)","pos":[0,19],"source":"ElementAt<T>(Int32)"}]},{"pos":[141924,141936],"content":"ElementAt<T>","needQuote":true,"nodes":[{"content":"ElementAt&lt;T&gt;","pos":[0,12],"source":"ElementAt<T>"}]},{"pos":[141997,141998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142047,142052],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[142111,142112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142209,142224],"content":"ElementAt(Of T)","needQuote":true,"nodes":[{"content":"ElementAt(Of T)","pos":[0,15]}]},{"pos":[142288,142289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142338,142343],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[142402,142403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142896,142924],"content":"ElementAtOrDefault<T>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;T&gt;(Int32)","pos":[0,28],"source":"ElementAtOrDefault<T>(Int32)"}]},{"pos":[143209,143230],"content":"ElementAtOrDefault<T>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;T&gt;","pos":[0,21],"source":"ElementAtOrDefault<T>"}]},{"pos":[143300,143301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143350,143355],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[143414,143415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143521,143545],"content":"ElementAtOrDefault(Of T)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of T)","pos":[0,24]}]},{"pos":[143618,143619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143668,143673],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[143732,143733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144291,144316],"content":"Except<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,25],"source":"Except<T>(IEnumerable<T>)"}]},{"pos":[144657,144666],"content":"Except<T>","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;","pos":[0,9],"source":"Except<T>"}]},{"pos":[144724,144725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144802,144813],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[144898,144899],"content":"<","needQuote":true,"nodes":[]},{"pos":[144926,144927],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[144986,144987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145112,145124],"content":"Except(Of T)","needQuote":true,"nodes":[{"content":"Except(Of T)","pos":[0,12]}]},{"pos":[145185,145186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145263,145274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[145360,145363]},{"pos":[145397,145398],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[145425,145426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145453,145454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146128,146175],"content":"Except<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,47],"source":"Except<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[146692,146701],"content":"Except<T>","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;","pos":[0,9],"source":"Except<T>"}]},{"pos":[146759,146760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146837,146848],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[146933,146934],"content":"<","needQuote":true,"nodes":[]},{"pos":[146961,146962],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[147022,147023]},{"pos":[147111,147128],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[147219,147220],"content":"<","needQuote":true,"nodes":[]},{"pos":[147247,147248],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[147307,147308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147483,147495],"content":"Except(Of T)","needQuote":true,"nodes":[{"content":"Except(Of T)","pos":[0,12]}]},{"pos":[147556,147557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147634,147645],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[147731,147734]},{"pos":[147768,147769],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[147796,147797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[147825,147826]},{"pos":[147914,147931],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[148023,148026]},{"pos":[148060,148061],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[148088,148089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148116,148117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148697,148707],"content":"First<T>()","needQuote":true,"nodes":[{"content":"First&lt;T&gt;()","pos":[0,10],"source":"First<T>()"}]},{"pos":[148897,148905],"content":"First<T>","needQuote":true,"nodes":[{"content":"First&lt;T&gt;","pos":[0,8],"source":"First<T>"}]},{"pos":[148962,148963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148990,148991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149070,149081],"content":"First(Of T)","needQuote":true,"nodes":[{"content":"First(Of T)","pos":[0,11]}]},{"pos":[149141,149142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149169,149170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149640,149666],"content":"First<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,26],"source":"First<T>(Func<T, Boolean>)"}]},{"pos":[149971,149979],"content":"First<T>","needQuote":true,"nodes":[{"content":"First&lt;T&gt;","pos":[0,8],"source":"First<T>"}]},{"pos":[150036,150037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150087,150091],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[150149,150150],"content":"<","needQuote":true,"nodes":[]},{"pos":[150177,150178],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[150206,150207]},{"pos":[150263,150270],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[150363,150364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150476,150487],"content":"First(Of T)","needQuote":true,"nodes":[{"content":"First(Of T)","pos":[0,11]}]},{"pos":[150547,150548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150598,150602],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[150661,150664]},{"pos":[150698,150699],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[150727,150728]},{"pos":[150784,150791],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[150852,150853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150880,150881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151371,151390],"content":"FirstOrDefault<T>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;()","pos":[0,19],"source":"FirstOrDefault<T>()"}]},{"pos":[151616,151633],"content":"FirstOrDefault<T>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;","pos":[0,17],"source":"FirstOrDefault<T>"}]},{"pos":[151699,151700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151727,151728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151816,151836],"content":"FirstOrDefault(Of T)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of T)","pos":[0,20]}]},{"pos":[151905,151906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151933,151934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152449,152484],"content":"FirstOrDefault<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,35],"source":"FirstOrDefault<T>(Func<T, Boolean>)"}]},{"pos":[152825,152842],"content":"FirstOrDefault<T>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;","pos":[0,17],"source":"FirstOrDefault<T>"}]},{"pos":[152908,152909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152959,152963],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[153021,153022],"content":"<","needQuote":true,"nodes":[]},{"pos":[153049,153050],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[153078,153079]},{"pos":[153135,153142],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[153235,153236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153357,153377],"content":"FirstOrDefault(Of T)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of T)","pos":[0,20]}]},{"pos":[153446,153447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153497,153501],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[153560,153563]},{"pos":[153597,153598],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[153626,153627]},{"pos":[153683,153690],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[153751,153752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153779,153780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154329,154360],"content":"GroupBy<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,31],"source":"GroupBy<T, TKey>(Func<T, TKey>)"}]},{"pos":[154657,154673],"content":"GroupBy<T, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;","pos":[0,16],"source":"GroupBy<T, TKey>"}]},{"pos":[154738,154739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154789,154793],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[154851,154852],"content":"<","needQuote":true,"nodes":[]},{"pos":[154879,154880],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[154908,154909]},{"pos":[154941,154945],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[155007,155008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155111,155130],"content":"GroupBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey)","pos":[0,19]}]},{"pos":[155198,155199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155249,155253],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[155312,155315]},{"pos":[155349,155350],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[155378,155379]},{"pos":[155411,155415],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[155445,155446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155473,155474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156100,156156],"content":"GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,56],"source":"GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[156638,156654],"content":"GroupBy<T, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;","pos":[0,16],"source":"GroupBy<T, TKey>"}]},{"pos":[156719,156720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156770,156774],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[156832,156833],"content":"<","needQuote":true,"nodes":[]},{"pos":[156860,156861],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[156889,156890]},{"pos":[156922,156926],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[156989,156990]},{"pos":[157078,157095],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[157186,157187],"content":"<","needQuote":true,"nodes":[]},{"pos":[157214,157218],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[157280,157281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157434,157453],"content":"GroupBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey)","pos":[0,19]}]},{"pos":[157521,157522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157572,157576],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[157635,157638]},{"pos":[157672,157673],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[157701,157702]},{"pos":[157734,157738],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[157768,157769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[157797,157798]},{"pos":[157886,157903],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[157995,157998]},{"pos":[158032,158036],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[158066,158067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158094,158095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158770,158830],"content":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;)","pos":[0,60],"source":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)"}]},{"pos":[159255,159281],"content":"GroupBy<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;","pos":[0,26],"source":"GroupBy<T, TKey, TElement>"}]},{"pos":[159356,159357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159407,159411],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[159469,159470],"content":"<","needQuote":true,"nodes":[]},{"pos":[159497,159498],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[159526,159527]},{"pos":[159559,159563],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[159626,159627]},{"pos":[159682,159686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[159744,159745],"content":"<","needQuote":true,"nodes":[]},{"pos":[159772,159773],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[159801,159802]},{"pos":[159834,159842],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[159908,159909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160033,160062],"content":"GroupBy(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement)","pos":[0,29]}]},{"pos":[160140,160141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160191,160195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[160254,160257]},{"pos":[160291,160292],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[160320,160321]},{"pos":[160353,160357],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[160387,160388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[160416,160417]},{"pos":[160472,160476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[160535,160538]},{"pos":[160572,160573],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[160601,160602]},{"pos":[160634,160642],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[160676,160677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160704,160705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161462,161547],"content":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,85],"source":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[162157,162183],"content":"GroupBy<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;","pos":[0,26],"source":"GroupBy<T, TKey, TElement>"}]},{"pos":[162258,162259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162309,162313],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[162371,162372],"content":"<","needQuote":true,"nodes":[]},{"pos":[162399,162400],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[162428,162429]},{"pos":[162461,162465],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[162528,162529]},{"pos":[162584,162588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[162646,162647],"content":"<","needQuote":true,"nodes":[]},{"pos":[162674,162675],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[162703,162704]},{"pos":[162736,162744],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[162811,162812]},{"pos":[162900,162917],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[163008,163009],"content":"<","needQuote":true,"nodes":[]},{"pos":[163036,163040],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[163102,163103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163277,163306],"content":"GroupBy(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement)","pos":[0,29]}]},{"pos":[163384,163385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163435,163439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[163498,163501]},{"pos":[163535,163536],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[163564,163565]},{"pos":[163597,163601],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[163631,163632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[163660,163661]},{"pos":[163716,163720],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[163779,163782]},{"pos":[163816,163817],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[163845,163846]},{"pos":[163878,163886],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[163920,163921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[163949,163950]},{"pos":[164038,164055],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[164147,164150]},{"pos":[164184,164188],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[164218,164219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164246,164247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165094,165171],"content":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;TKey, IEnumerable&lt;T&gt;, TResult&gt;)","pos":[0,77],"source":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)"}]},{"pos":[165751,165776],"content":"GroupBy<T, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;","pos":[0,25],"source":"GroupBy<T, TKey, TResult>"}]},{"pos":[165850,165851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165901,165905],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[165963,165964],"content":"<","needQuote":true,"nodes":[]},{"pos":[165991,165992],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[166020,166021]},{"pos":[166053,166057],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[166120,166121]},{"pos":[166176,166180],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[166238,166239],"content":"<","needQuote":true,"nodes":[]},{"pos":[166266,166270],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[166301,166302]},{"pos":[166384,166395],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[166480,166481],"content":"<","needQuote":true,"nodes":[]},{"pos":[166508,166509],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[166569,166570]},{"pos":[166602,166609],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[166674,166675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166843,166871],"content":"GroupBy(Of T, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TResult)","pos":[0,28]}]},{"pos":[166948,166949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166999,167003],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[167062,167065]},{"pos":[167099,167100],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[167128,167129]},{"pos":[167161,167165],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[167195,167196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[167224,167225]},{"pos":[167280,167284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[167343,167346]},{"pos":[167380,167384],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[167415,167416]},{"pos":[167498,167509],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[167595,167598]},{"pos":[167632,167633],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[167660,167661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[167689,167690]},{"pos":[167722,167729],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[167762,167763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167790,167791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168719,168821],"content":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;TKey, IEnumerable&lt;T&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,102],"source":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[169586,169611],"content":"GroupBy<T, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;","pos":[0,25],"source":"GroupBy<T, TKey, TResult>"}]},{"pos":[169685,169686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169736,169740],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[169798,169799],"content":"<","needQuote":true,"nodes":[]},{"pos":[169826,169827],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[169855,169856]},{"pos":[169888,169892],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[169955,169956]},{"pos":[170011,170015],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[170073,170074],"content":"<","needQuote":true,"nodes":[]},{"pos":[170101,170105],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[170136,170137]},{"pos":[170219,170230],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[170315,170316],"content":"<","needQuote":true,"nodes":[]},{"pos":[170343,170344],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[170404,170405]},{"pos":[170437,170444],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[170510,170511]},{"pos":[170599,170616],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[170707,170708],"content":"<","needQuote":true,"nodes":[]},{"pos":[170735,170739],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[170801,170802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171020,171048],"content":"GroupBy(Of T, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TResult)","pos":[0,28]}]},{"pos":[171125,171126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171176,171180],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[171239,171242]},{"pos":[171276,171277],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[171305,171306]},{"pos":[171338,171342],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[171372,171373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[171401,171402]},{"pos":[171457,171461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[171520,171523]},{"pos":[171557,171561],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[171592,171593]},{"pos":[171675,171686],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[171772,171775]},{"pos":[171809,171810],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[171837,171838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[171866,171867]},{"pos":[171899,171906],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[171939,171940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[171968,171969]},{"pos":[172057,172074],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[172166,172169]},{"pos":[172203,172207],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[172237,172238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172265,172266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173250,173363],"content":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,113],"source":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[174092,174127],"content":"GroupBy<T, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;","pos":[0,35],"source":"GroupBy<T, TKey, TElement, TResult>"}]},{"pos":[174211,174212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174262,174266],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[174324,174325],"content":"<","needQuote":true,"nodes":[]},{"pos":[174352,174353],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[174381,174382]},{"pos":[174414,174418],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[174481,174482]},{"pos":[174537,174541],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[174599,174600],"content":"<","needQuote":true,"nodes":[]},{"pos":[174627,174628],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[174656,174657]},{"pos":[174689,174697],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[174764,174765]},{"pos":[174820,174824],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[174882,174883],"content":"<","needQuote":true,"nodes":[]},{"pos":[174910,174914],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[174945,174946]},{"pos":[175028,175039],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[175124,175125],"content":"<","needQuote":true,"nodes":[]},{"pos":[175152,175160],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[175227,175228]},{"pos":[175260,175267],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[175332,175333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175522,175560],"content":"GroupBy(Of T, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement, TResult)","pos":[0,38]}]},{"pos":[175647,175648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175698,175702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[175761,175764]},{"pos":[175798,175799],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[175827,175828]},{"pos":[175860,175864],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[175894,175895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[175923,175924]},{"pos":[175979,175983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[176042,176045]},{"pos":[176079,176080],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[176108,176109]},{"pos":[176141,176149],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[176183,176184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[176212,176213]},{"pos":[176268,176272],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[176331,176334]},{"pos":[176368,176372],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[176403,176404]},{"pos":[176486,176497],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[176583,176586]},{"pos":[176620,176628],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[176662,176663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[176691,176692]},{"pos":[176724,176731],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[176764,176765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176792,176793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177873,178011],"content":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,138],"source":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[178925,178960],"content":"GroupBy<T, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;","pos":[0,35],"source":"GroupBy<T, TKey, TElement, TResult>"}]},{"pos":[179044,179045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179095,179099],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[179157,179158],"content":"<","needQuote":true,"nodes":[]},{"pos":[179185,179186],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[179214,179215]},{"pos":[179247,179251],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[179314,179315]},{"pos":[179370,179374],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[179432,179433],"content":"<","needQuote":true,"nodes":[]},{"pos":[179460,179461],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[179489,179490]},{"pos":[179522,179530],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[179597,179598]},{"pos":[179653,179657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[179715,179716],"content":"<","needQuote":true,"nodes":[]},{"pos":[179743,179747],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[179778,179779]},{"pos":[179861,179872],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[179957,179958],"content":"<","needQuote":true,"nodes":[]},{"pos":[179985,179993],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[180060,180061]},{"pos":[180093,180100],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[180166,180167]},{"pos":[180255,180272],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[180363,180364],"content":"<","needQuote":true,"nodes":[]},{"pos":[180391,180395],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[180457,180458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180697,180735],"content":"GroupBy(Of T, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement, TResult)","pos":[0,38]}]},{"pos":[180822,180823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180873,180877],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[180936,180939]},{"pos":[180973,180974],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[181002,181003]},{"pos":[181035,181039],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[181069,181070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[181098,181099]},{"pos":[181154,181158],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[181217,181220]},{"pos":[181254,181255],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[181283,181284]},{"pos":[181316,181324],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[181358,181359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[181387,181388]},{"pos":[181443,181447],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[181506,181509]},{"pos":[181543,181547],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[181578,181579]},{"pos":[181661,181672],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[181758,181761]},{"pos":[181795,181803],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[181837,181838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[181866,181867]},{"pos":[181899,181906],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[181939,181940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[181968,181969]},{"pos":[182057,182074],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[182166,182169]},{"pos":[182203,182207],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[182237,182238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182265,182266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183439,183569],"content":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,130],"source":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)"}]},{"pos":[184455,184490],"content":"GroupJoin<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;","pos":[0,35],"source":"GroupJoin<T, TInner, TKey, TResult>"}]},{"pos":[184574,184575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184652,184663],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[184748,184749],"content":"<","needQuote":true,"nodes":[]},{"pos":[184776,184782],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[184847,184848]},{"pos":[184903,184907],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[184965,184966],"content":"<","needQuote":true,"nodes":[]},{"pos":[184993,184994],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[185022,185023]},{"pos":[185055,185059],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[185122,185123]},{"pos":[185178,185182],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[185240,185241],"content":"<","needQuote":true,"nodes":[]},{"pos":[185268,185274],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[185307,185308]},{"pos":[185340,185344],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[185407,185408]},{"pos":[185463,185467],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[185525,185526],"content":"<","needQuote":true,"nodes":[]},{"pos":[185553,185554],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[185582,185583]},{"pos":[185665,185676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[185761,185762],"content":"<","needQuote":true,"nodes":[]},{"pos":[185789,185795],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[185860,185861]},{"pos":[185893,185900],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[185965,185966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186201,186239],"content":"GroupJoin(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of T, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[186326,186327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186404,186415],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[186501,186504]},{"pos":[186538,186544],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[186576,186577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[186605,186606]},{"pos":[186661,186665],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[186724,186727]},{"pos":[186761,186762],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[186790,186791]},{"pos":[186823,186827],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[186857,186858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[186886,186887]},{"pos":[186942,186946],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[187005,187008]},{"pos":[187042,187048],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[187081,187082]},{"pos":[187114,187118],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[187148,187149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[187177,187178]},{"pos":[187233,187237],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[187296,187299]},{"pos":[187333,187334],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[187362,187363]},{"pos":[187445,187456],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[187542,187545]},{"pos":[187579,187585],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[187617,187618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[187646,187647]},{"pos":[187679,187686],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[187719,187720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187747,187748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189004,189159],"content":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,155],"source":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[190230,190265],"content":"GroupJoin<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;","pos":[0,35],"source":"GroupJoin<T, TInner, TKey, TResult>"}]},{"pos":[190349,190350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190427,190438],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[190523,190524],"content":"<","needQuote":true,"nodes":[]},{"pos":[190551,190557],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[190622,190623]},{"pos":[190678,190682],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[190740,190741],"content":"<","needQuote":true,"nodes":[]},{"pos":[190768,190769],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[190797,190798]},{"pos":[190830,190834],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[190897,190898]},{"pos":[190953,190957],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[191015,191016],"content":"<","needQuote":true,"nodes":[]},{"pos":[191043,191049],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[191082,191083]},{"pos":[191115,191119],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[191182,191183]},{"pos":[191238,191242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[191300,191301],"content":"<","needQuote":true,"nodes":[]},{"pos":[191328,191329],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[191357,191358]},{"pos":[191440,191451],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[191536,191537],"content":"<","needQuote":true,"nodes":[]},{"pos":[191564,191570],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[191635,191636]},{"pos":[191668,191675],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[191741,191742]},{"pos":[191830,191847],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[191938,191939],"content":"<","needQuote":true,"nodes":[]},{"pos":[191966,191970],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[192032,192033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192318,192356],"content":"GroupJoin(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of T, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[192443,192444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192521,192532],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[192618,192621]},{"pos":[192655,192661],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[192693,192694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[192722,192723]},{"pos":[192778,192782],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[192841,192844]},{"pos":[192878,192879],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[192907,192908]},{"pos":[192940,192944],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[192974,192975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[193003,193004]},{"pos":[193059,193063],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[193122,193125]},{"pos":[193159,193165],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[193198,193199]},{"pos":[193231,193235],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[193265,193266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[193294,193295]},{"pos":[193350,193354],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[193413,193416]},{"pos":[193450,193451],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[193479,193480]},{"pos":[193562,193573],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[193659,193662]},{"pos":[193696,193702],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[193734,193735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[193763,193764]},{"pos":[193796,193803],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[193836,193837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[193865,193866]},{"pos":[193954,193971],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[194063,194066]},{"pos":[194100,194104],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[194134,194135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194162,194163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195178,195206],"content":"Intersect<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,28],"source":"Intersect<T>(IEnumerable<T>)"}]},{"pos":[195559,195571],"content":"Intersect<T>","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;","pos":[0,12],"source":"Intersect<T>"}]},{"pos":[195632,195633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195710,195721],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[195806,195807],"content":"<","needQuote":true,"nodes":[]},{"pos":[195834,195835],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[195894,195895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196023,196038],"content":"Intersect(Of T)","needQuote":true,"nodes":[{"content":"Intersect(Of T)","pos":[0,15]}]},{"pos":[196102,196103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196180,196191],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[196277,196280]},{"pos":[196314,196315],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[196342,196343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196370,196371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197060,197110],"content":"Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,50],"source":"Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[197639,197651],"content":"Intersect<T>","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;","pos":[0,12],"source":"Intersect<T>"}]},{"pos":[197712,197713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197790,197801],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[197886,197887],"content":"<","needQuote":true,"nodes":[]},{"pos":[197914,197915],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[197975,197976]},{"pos":[198064,198081],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[198172,198173],"content":"<","needQuote":true,"nodes":[]},{"pos":[198200,198201],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[198260,198261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198439,198454],"content":"Intersect(Of T)","needQuote":true,"nodes":[{"content":"Intersect(Of T)","pos":[0,15]}]},{"pos":[198518,198519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198596,198607],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[198693,198696]},{"pos":[198730,198731],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[198758,198759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[198787,198788]},{"pos":[198876,198893],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[198985,198988]},{"pos":[199022,199023],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[199050,199051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199078,199079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199916,200028],"content":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, TInner, TResult&gt;)","pos":[0,112],"source":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)"}]},{"pos":[200755,200785],"content":"Join<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;","pos":[0,30],"source":"Join<T, TInner, TKey, TResult>"}]},{"pos":[200864,200865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200942,200953],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[201038,201039],"content":"<","needQuote":true,"nodes":[]},{"pos":[201066,201072],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[201137,201138]},{"pos":[201193,201197],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[201255,201256],"content":"<","needQuote":true,"nodes":[]},{"pos":[201283,201284],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[201312,201313]},{"pos":[201345,201349],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[201412,201413]},{"pos":[201468,201472],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[201530,201531],"content":"<","needQuote":true,"nodes":[]},{"pos":[201558,201564],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[201597,201598]},{"pos":[201630,201634],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[201697,201698]},{"pos":[201753,201757],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[201815,201816],"content":"<","needQuote":true,"nodes":[]},{"pos":[201843,201844],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[201872,201873]},{"pos":[201905,201911],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[201944,201945]},{"pos":[201977,201984],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[202049,202050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202240,202273],"content":"Join(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of T, TInner, TKey, TResult)","pos":[0,33]}]},{"pos":[202355,202356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202433,202444],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[202530,202533]},{"pos":[202567,202573],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[202605,202606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202634,202635]},{"pos":[202690,202694],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202753,202756]},{"pos":[202790,202791],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[202819,202820]},{"pos":[202852,202856],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[202886,202887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202915,202916]},{"pos":[202971,202975],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[203034,203037]},{"pos":[203071,203077],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[203110,203111]},{"pos":[203143,203147],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[203177,203178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[203206,203207]},{"pos":[203262,203266],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[203325,203328]},{"pos":[203362,203363],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[203391,203392]},{"pos":[203424,203430],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[203463,203464]},{"pos":[203496,203503],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[203536,203537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203564,203565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204647,204784],"content":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,137],"source":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[205696,205726],"content":"Join<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;","pos":[0,30],"source":"Join<T, TInner, TKey, TResult>"}]},{"pos":[205805,205806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205883,205894],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[205979,205980],"content":"<","needQuote":true,"nodes":[]},{"pos":[206007,206013],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[206078,206079]},{"pos":[206134,206138],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[206196,206197],"content":"<","needQuote":true,"nodes":[]},{"pos":[206224,206225],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[206253,206254]},{"pos":[206286,206290],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[206353,206354]},{"pos":[206409,206413],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[206471,206472],"content":"<","needQuote":true,"nodes":[]},{"pos":[206499,206505],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[206538,206539]},{"pos":[206571,206575],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[206638,206639]},{"pos":[206694,206698],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[206756,206757],"content":"<","needQuote":true,"nodes":[]},{"pos":[206784,206785],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[206813,206814]},{"pos":[206846,206852],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[206885,206886]},{"pos":[206918,206925],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[206991,206992]},{"pos":[207080,207097],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[207188,207189],"content":"<","needQuote":true,"nodes":[]},{"pos":[207216,207220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[207282,207283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207523,207556],"content":"Join(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of T, TInner, TKey, TResult)","pos":[0,33]}]},{"pos":[207638,207639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207716,207727],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[207813,207816]},{"pos":[207850,207856],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[207888,207889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[207917,207918]},{"pos":[207973,207977],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[208036,208039]},{"pos":[208073,208074],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[208102,208103]},{"pos":[208135,208139],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[208169,208170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[208198,208199]},{"pos":[208254,208258],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[208317,208320]},{"pos":[208354,208360],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[208393,208394]},{"pos":[208426,208430],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[208460,208461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[208489,208490]},{"pos":[208545,208549],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[208608,208611]},{"pos":[208645,208646],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[208674,208675]},{"pos":[208707,208713],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[208746,208747]},{"pos":[208779,208786],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[208819,208820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[208848,208849]},{"pos":[208937,208954],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[209046,209049]},{"pos":[209083,209087],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[209117,209118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209145,209146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209978,209987],"content":"Last<T>()","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;()","pos":[0,9],"source":"Last<T>()"}]},{"pos":[210173,210180],"content":"Last<T>","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;","pos":[0,7],"source":"Last<T>"}]},{"pos":[210236,210237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210264,210265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210343,210353],"content":"Last(Of T)","needQuote":true,"nodes":[{"content":"Last(Of T)","pos":[0,10]}]},{"pos":[210412,210413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210440,210441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210906,210931],"content":"Last<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,25],"source":"Last<T>(Func<T, Boolean>)"}]},{"pos":[211232,211239],"content":"Last<T>","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;","pos":[0,7],"source":"Last<T>"}]},{"pos":[211295,211296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211346,211350],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[211408,211409],"content":"<","needQuote":true,"nodes":[]},{"pos":[211436,211437],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[211465,211466]},{"pos":[211522,211529],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[211622,211623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211734,211744],"content":"Last(Of T)","needQuote":true,"nodes":[{"content":"Last(Of T)","pos":[0,10]}]},{"pos":[211803,211804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211854,211858],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[211917,211920]},{"pos":[211954,211955],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[211983,211984]},{"pos":[212040,212047],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[212108,212109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212136,212137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212622,212640],"content":"LastOrDefault<T>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;()","pos":[0,18],"source":"LastOrDefault<T>()"}]},{"pos":[212862,212878],"content":"LastOrDefault<T>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;","pos":[0,16],"source":"LastOrDefault<T>"}]},{"pos":[212943,212944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212971,212972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213059,213078],"content":"LastOrDefault(Of T)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of T)","pos":[0,19]}]},{"pos":[213146,213147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213174,213175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213685,213719],"content":"LastOrDefault<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,34],"source":"LastOrDefault<T>(Func<T, Boolean>)"}]},{"pos":[214056,214072],"content":"LastOrDefault<T>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;","pos":[0,16],"source":"LastOrDefault<T>"}]},{"pos":[214137,214138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214188,214192],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[214250,214251],"content":"<","needQuote":true,"nodes":[]},{"pos":[214278,214279],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[214307,214308]},{"pos":[214364,214371],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[214464,214465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214585,214604],"content":"LastOrDefault(Of T)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of T)","pos":[0,19]}]},{"pos":[214672,214673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214723,214727],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[214786,214789]},{"pos":[214823,214824],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[214852,214853]},{"pos":[214909,214916],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[214977,214978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215005,215006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215510,215524],"content":"LongCount<T>()","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;()","pos":[0,14],"source":"LongCount<T>()"}]},{"pos":[215730,215742],"content":"LongCount<T>","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;","pos":[0,12],"source":"LongCount<T>"}]},{"pos":[215803,215804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[215831,215832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215915,215930],"content":"LongCount(Of T)","needQuote":true,"nodes":[{"content":"LongCount(Of T)","pos":[0,15]}]},{"pos":[215994,215995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216022,216023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216513,216543],"content":"LongCount<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,30],"source":"LongCount<T>(Func<T, Boolean>)"}]},{"pos":[216864,216876],"content":"LongCount<T>","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;","pos":[0,12],"source":"LongCount<T>"}]},{"pos":[216937,216938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216988,216992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[217050,217051],"content":"<","needQuote":true,"nodes":[]},{"pos":[217078,217079],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[217107,217108]},{"pos":[217164,217171],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[217264,217265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217381,217396],"content":"LongCount(Of T)","needQuote":true,"nodes":[{"content":"LongCount(Of T)","pos":[0,15]}]},{"pos":[217460,217461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217511,217515],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[217574,217577]},{"pos":[217611,217612],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[217640,217641]},{"pos":[217697,217704],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[217765,217766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217793,217794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218274,218282],"content":"Max<T>()","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;()","pos":[0,8],"source":"Max<T>()"}]},{"pos":[218464,218470],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[218525,218526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218553,218554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218631,218640],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[218698,218699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218726,218727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219187,219211],"content":"Max<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,24],"source":"Max<T>(Func<T, Decimal>)"}]},{"pos":[219508,219514],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[219569,219570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219620,219624],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[219682,219683],"content":"<","needQuote":true,"nodes":[]},{"pos":[219710,219711],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[219739,219740]},{"pos":[219796,219803],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[219896,219897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220007,220016],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[220074,220075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220125,220129],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[220188,220191]},{"pos":[220225,220226],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[220254,220255]},{"pos":[220311,220318],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[220379,220380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220407,220408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220933,220956],"content":"Max<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,23],"source":"Max<T>(Func<T, Double>)"}]},{"pos":[221249,221255],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[221310,221311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221361,221365],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[221423,221424],"content":"<","needQuote":true,"nodes":[]},{"pos":[221451,221452],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[221480,221481]},{"pos":[221536,221542],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[221634,221635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221744,221753],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[221811,221812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221862,221866],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[221925,221928]},{"pos":[221962,221963],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[221991,221992]},{"pos":[222047,222053],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[222113,222114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222141,222142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222662,222684],"content":"Max<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,22],"source":"Max<T>(Func<T, Int32>)"}]},{"pos":[222973,222979],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[223034,223035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223085,223089],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[223147,223148],"content":"<","needQuote":true,"nodes":[]},{"pos":[223175,223176],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[223204,223205]},{"pos":[223259,223264],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[223355,223356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223464,223473],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[223531,223532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223582,223586],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[223645,223648]},{"pos":[223682,223683],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[223711,223712]},{"pos":[223766,223771],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[223830,223831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223858,223859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224376,224398],"content":"Max<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,22],"source":"Max<T>(Func<T, Int64>)"}]},{"pos":[224687,224693],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[224748,224749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224799,224803],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[224861,224862],"content":"<","needQuote":true,"nodes":[]},{"pos":[224889,224890],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[224918,224919]},{"pos":[224973,224978],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[225069,225070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225178,225187],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[225245,225246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225296,225300],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[225359,225362]},{"pos":[225396,225397],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[225425,225426]},{"pos":[225480,225485],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[225544,225545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225572,225573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226128,226162],"content":"Max<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,34],"source":"Max<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[226526,226532],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[226587,226588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226638,226642],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[226700,226701],"content":"<","needQuote":true,"nodes":[]},{"pos":[226728,226729],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[226757,226758]},{"pos":[226817,226825],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[226887,226888],"content":"<","needQuote":true,"nodes":[]},{"pos":[226939,226946],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[227071,227072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227199,227208],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[227266,227267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227317,227321],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[227380,227383]},{"pos":[227417,227418],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[227446,227447]},{"pos":[227506,227514],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[227577,227580]},{"pos":[227638,227645],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[227706,227707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227734,227735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227762,227763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228362,228395],"content":"Max<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,33],"source":"Max<T>(Func<T, Nullable<Double>>)"}]},{"pos":[228755,228761],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[228816,228817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228867,228871],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[228929,228930],"content":"<","needQuote":true,"nodes":[]},{"pos":[228957,228958],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[228986,228987]},{"pos":[229046,229054],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[229116,229117],"content":"<","needQuote":true,"nodes":[]},{"pos":[229167,229173],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[229297,229298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229424,229433],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[229491,229492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229542,229546],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[229605,229608]},{"pos":[229642,229643],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[229671,229672]},{"pos":[229731,229739],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[229802,229805]},{"pos":[229862,229868],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[229928,229929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229956,229957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229984,229985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230579,230611],"content":"Max<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,32],"source":"Max<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[230967,230973],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[231028,231029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231079,231083],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[231141,231142],"content":"<","needQuote":true,"nodes":[]},{"pos":[231169,231170],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[231198,231199]},{"pos":[231258,231266],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[231328,231329],"content":"<","needQuote":true,"nodes":[]},{"pos":[231378,231383],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[231506,231507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231632,231641],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[231699,231700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231750,231754],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[231813,231816]},{"pos":[231850,231851],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[231879,231880]},{"pos":[231939,231947],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[232010,232013]},{"pos":[232069,232074],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[232133,232134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232161,232162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232189,232190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232781,232813],"content":"Max<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,32],"source":"Max<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[233169,233175],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[233230,233231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233281,233285],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[233343,233344],"content":"<","needQuote":true,"nodes":[]},{"pos":[233371,233372],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[233400,233401]},{"pos":[233460,233468],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[233530,233531],"content":"<","needQuote":true,"nodes":[]},{"pos":[233580,233585],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[233708,233709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233834,233843],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[233901,233902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233952,233956],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[234015,234018]},{"pos":[234052,234053],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[234081,234082]},{"pos":[234141,234149],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[234212,234215]},{"pos":[234271,234276],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[234335,234336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234363,234364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234391,234392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234985,235018],"content":"Max<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,33],"source":"Max<T>(Func<T, Nullable<Single>>)"}]},{"pos":[235378,235384],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[235439,235440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235490,235494],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[235552,235553],"content":"<","needQuote":true,"nodes":[]},{"pos":[235580,235581],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[235609,235610]},{"pos":[235669,235677],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[235739,235740],"content":"<","needQuote":true,"nodes":[]},{"pos":[235790,235796],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[235920,235921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236047,236056],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[236114,236115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236165,236169],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[236228,236231]},{"pos":[236265,236266],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[236294,236295]},{"pos":[236354,236362],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[236425,236428]},{"pos":[236485,236491],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[236551,236552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236579,236580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236607,236608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237170,237193],"content":"Max<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,23],"source":"Max<T>(Func<T, Single>)"}]},{"pos":[237486,237492],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[237547,237548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237598,237602],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[237660,237661],"content":"<","needQuote":true,"nodes":[]},{"pos":[237688,237689],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[237717,237718]},{"pos":[237773,237779],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[237871,237872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237981,237990],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[238048,238049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238099,238103],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[238162,238165]},{"pos":[238199,238200],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[238228,238229]},{"pos":[238284,238290],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[238350,238351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238378,238379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238887,238920],"content":"Max<T, TResult>(Func<T, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;T, TResult&gt;(Func&lt;T, TResult&gt;)","pos":[0,33],"source":"Max<T, TResult>(Func<T, TResult>)"}]},{"pos":[239219,239234],"content":"Max<T, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;T, TResult&gt;","pos":[0,15],"source":"Max<T, TResult>"}]},{"pos":[239298,239299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239349,239353],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[239411,239412],"content":"<","needQuote":true,"nodes":[]},{"pos":[239439,239440],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[239468,239469]},{"pos":[239501,239508],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[239573,239574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239673,239691],"content":"Max(Of T, TResult)","needQuote":true,"nodes":[{"content":"Max(Of T, TResult)","pos":[0,18]}]},{"pos":[239758,239759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239809,239813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[239872,239875]},{"pos":[239909,239910],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[239938,239939]},{"pos":[239971,239978],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[240011,240012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240039,240040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240509,240517],"content":"Min<T>()","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;()","pos":[0,8],"source":"Min<T>()"}]},{"pos":[240699,240705],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[240760,240761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240788,240789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240866,240875],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[240933,240934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240961,240962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241422,241446],"content":"Min<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,24],"source":"Min<T>(Func<T, Decimal>)"}]},{"pos":[241743,241749],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[241804,241805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241855,241859],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[241917,241918],"content":"<","needQuote":true,"nodes":[]},{"pos":[241945,241946],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[241974,241975]},{"pos":[242031,242038],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[242131,242132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242242,242251],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[242309,242310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242360,242364],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[242423,242426]},{"pos":[242460,242461],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[242489,242490]},{"pos":[242546,242553],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[242614,242615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242642,242643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243168,243191],"content":"Min<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,23],"source":"Min<T>(Func<T, Double>)"}]},{"pos":[243484,243490],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[243545,243546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243596,243600],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[243658,243659],"content":"<","needQuote":true,"nodes":[]},{"pos":[243686,243687],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[243715,243716]},{"pos":[243771,243777],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[243869,243870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243979,243988],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[244046,244047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244097,244101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[244160,244163]},{"pos":[244197,244198],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[244226,244227]},{"pos":[244282,244288],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[244348,244349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244376,244377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244897,244919],"content":"Min<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,22],"source":"Min<T>(Func<T, Int32>)"}]},{"pos":[245208,245214],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[245269,245270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245320,245324],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[245382,245383],"content":"<","needQuote":true,"nodes":[]},{"pos":[245410,245411],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[245439,245440]},{"pos":[245494,245499],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[245590,245591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245699,245708],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[245766,245767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245817,245821],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[245880,245883]},{"pos":[245917,245918],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[245946,245947]},{"pos":[246001,246006],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[246065,246066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246093,246094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246611,246633],"content":"Min<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,22],"source":"Min<T>(Func<T, Int64>)"}]},{"pos":[246922,246928],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[246983,246984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247034,247038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[247096,247097],"content":"<","needQuote":true,"nodes":[]},{"pos":[247124,247125],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[247153,247154]},{"pos":[247208,247213],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[247304,247305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247413,247422],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[247480,247481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247531,247535],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[247594,247597]},{"pos":[247631,247632],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[247660,247661]},{"pos":[247715,247720],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[247779,247780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247807,247808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248363,248397],"content":"Min<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,34],"source":"Min<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[248761,248767],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[248822,248823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248873,248877],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[248935,248936],"content":"<","needQuote":true,"nodes":[]},{"pos":[248963,248964],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[248992,248993]},{"pos":[249052,249060],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[249122,249123],"content":"<","needQuote":true,"nodes":[]},{"pos":[249174,249181],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[249306,249307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249434,249443],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[249501,249502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249552,249556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[249615,249618]},{"pos":[249652,249653],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[249681,249682]},{"pos":[249741,249749],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[249812,249815]},{"pos":[249873,249880],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[249941,249942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249969,249970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249997,249998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250597,250630],"content":"Min<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,33],"source":"Min<T>(Func<T, Nullable<Double>>)"}]},{"pos":[250990,250996],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[251051,251052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251102,251106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[251164,251165],"content":"<","needQuote":true,"nodes":[]},{"pos":[251192,251193],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[251221,251222]},{"pos":[251281,251289],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[251351,251352],"content":"<","needQuote":true,"nodes":[]},{"pos":[251402,251408],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[251532,251533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251659,251668],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[251726,251727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251777,251781],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[251840,251843]},{"pos":[251877,251878],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[251906,251907]},{"pos":[251966,251974],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[252037,252040]},{"pos":[252097,252103],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[252163,252164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252191,252192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252219,252220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252814,252846],"content":"Min<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,32],"source":"Min<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[253202,253208],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[253263,253264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253314,253318],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[253376,253377],"content":"<","needQuote":true,"nodes":[]},{"pos":[253404,253405],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[253433,253434]},{"pos":[253493,253501],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[253563,253564],"content":"<","needQuote":true,"nodes":[]},{"pos":[253613,253618],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[253741,253742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253867,253876],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[253934,253935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253985,253989],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[254048,254051]},{"pos":[254085,254086],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[254114,254115]},{"pos":[254174,254182],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[254245,254248]},{"pos":[254304,254309],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[254368,254369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254396,254397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254424,254425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255016,255048],"content":"Min<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,32],"source":"Min<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[255404,255410],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[255465,255466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255516,255520],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[255578,255579],"content":"<","needQuote":true,"nodes":[]},{"pos":[255606,255607],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[255635,255636]},{"pos":[255695,255703],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[255765,255766],"content":"<","needQuote":true,"nodes":[]},{"pos":[255815,255820],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[255943,255944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256069,256078],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[256136,256137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256187,256191],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[256250,256253]},{"pos":[256287,256288],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[256316,256317]},{"pos":[256376,256384],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[256447,256450]},{"pos":[256506,256511],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[256570,256571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256598,256599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256626,256627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257220,257253],"content":"Min<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,33],"source":"Min<T>(Func<T, Nullable<Single>>)"}]},{"pos":[257613,257619],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[257674,257675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257725,257729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[257787,257788],"content":"<","needQuote":true,"nodes":[]},{"pos":[257815,257816],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[257844,257845]},{"pos":[257904,257912],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[257974,257975],"content":"<","needQuote":true,"nodes":[]},{"pos":[258025,258031],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[258155,258156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258282,258291],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[258349,258350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258400,258404],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[258463,258466]},{"pos":[258500,258501],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[258529,258530]},{"pos":[258589,258597],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[258660,258663]},{"pos":[258720,258726],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[258786,258787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258814,258815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258842,258843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259405,259428],"content":"Min<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,23],"source":"Min<T>(Func<T, Single>)"}]},{"pos":[259721,259727],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[259782,259783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259833,259837],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[259895,259896],"content":"<","needQuote":true,"nodes":[]},{"pos":[259923,259924],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[259952,259953]},{"pos":[260008,260014],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[260106,260107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260216,260225],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[260283,260284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260334,260338],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[260397,260400]},{"pos":[260434,260435],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[260463,260464]},{"pos":[260519,260525],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[260585,260586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260613,260614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261122,261155],"content":"Min<T, TResult>(Func<T, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;T, TResult&gt;(Func&lt;T, TResult&gt;)","pos":[0,33],"source":"Min<T, TResult>(Func<T, TResult>)"}]},{"pos":[261454,261469],"content":"Min<T, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;T, TResult&gt;","pos":[0,15],"source":"Min<T, TResult>"}]},{"pos":[261533,261534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261584,261588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[261646,261647],"content":"<","needQuote":true,"nodes":[]},{"pos":[261674,261675],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[261703,261704]},{"pos":[261736,261743],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[261808,261809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261908,261926],"content":"Min(Of T, TResult)","needQuote":true,"nodes":[{"content":"Min(Of T, TResult)","pos":[0,18]}]},{"pos":[261993,261994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262044,262048],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[262107,262110]},{"pos":[262144,262145],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[262173,262174]},{"pos":[262206,262213],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[262246,262247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262274,262275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262725,262742],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[262954,262969],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[263033,263034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263061,263062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263142,263160],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[263227,263228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263255,263256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263713,263744],"content":"OrderBy<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,31],"source":"OrderBy<T, TKey>(Func<T, TKey>)"}]},{"pos":[264041,264057],"content":"OrderBy<T, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;","pos":[0,16],"source":"OrderBy<T, TKey>"}]},{"pos":[264122,264123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264173,264177],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[264235,264236],"content":"<","needQuote":true,"nodes":[]},{"pos":[264263,264264],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[264292,264293]},{"pos":[264325,264329],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[264391,264392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264495,264514],"content":"OrderBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of T, TKey)","pos":[0,19]}]},{"pos":[264582,264583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264633,264637],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[264696,264699]},{"pos":[264733,264734],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[264762,264763]},{"pos":[264795,264799],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[264829,264830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264857,264858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265468,265516],"content":"OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,48],"source":"OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)"}]},{"pos":[265966,265982],"content":"OrderBy<T, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;","pos":[0,16],"source":"OrderBy<T, TKey>"}]},{"pos":[266047,266048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266098,266102],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[266160,266161],"content":"<","needQuote":true,"nodes":[]},{"pos":[266188,266189],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[266217,266218]},{"pos":[266250,266254],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[266317,266318]},{"pos":[266398,266407],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[266490,266491],"content":"<","needQuote":true,"nodes":[]},{"pos":[266518,266522],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[266584,266585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266730,266749],"content":"OrderBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of T, TKey)","pos":[0,19]}]},{"pos":[266817,266818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266868,266872],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266931,266934]},{"pos":[266968,266969],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[266997,266998]},{"pos":[267030,267034],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[267064,267065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[267093,267094]},{"pos":[267174,267183],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[267267,267270]},{"pos":[267304,267308],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[267338,267339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267366,267367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267989,268030],"content":"OrderByDescending<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,41],"source":"OrderByDescending<T, TKey>(Func<T, TKey>)"}]},{"pos":[268367,268393],"content":"OrderByDescending<T, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;","pos":[0,26],"source":"OrderByDescending<T, TKey>"}]},{"pos":[268468,268469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268519,268523],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[268581,268582],"content":"<","needQuote":true,"nodes":[]},{"pos":[268609,268610],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[268638,268639]},{"pos":[268671,268675],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[268737,268738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268851,268880],"content":"OrderByDescending(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of T, TKey)","pos":[0,29]}]},{"pos":[268958,268959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269009,269013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[269072,269075]},{"pos":[269109,269110],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[269138,269139]},{"pos":[269171,269175],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[269205,269206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269233,269234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269894,269952],"content":"OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,58],"source":"OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)"}]},{"pos":[270442,270468],"content":"OrderByDescending<T, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;","pos":[0,26],"source":"OrderByDescending<T, TKey>"}]},{"pos":[270543,270544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270594,270598],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[270656,270657],"content":"<","needQuote":true,"nodes":[]},{"pos":[270684,270685],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[270713,270714]},{"pos":[270746,270750],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[270813,270814]},{"pos":[270894,270903],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[270986,270987],"content":"<","needQuote":true,"nodes":[]},{"pos":[271014,271018],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[271080,271081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271236,271265],"content":"OrderByDescending(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of T, TKey)","pos":[0,29]}]},{"pos":[271343,271344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271394,271398],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[271457,271460]},{"pos":[271494,271495],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[271523,271524]},{"pos":[271556,271560],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[271590,271591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[271619,271620]},{"pos":[271700,271709],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[271793,271796]},{"pos":[271830,271834],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[271864,271865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271892,271893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272479,272491],"content":"Reverse<T>()","needQuote":true,"nodes":[{"content":"Reverse&lt;T&gt;()","pos":[0,12],"source":"Reverse<T>()"}]},{"pos":[272689,272699],"content":"Reverse<T>","needQuote":true,"nodes":[{"content":"Reverse&lt;T&gt;","pos":[0,10],"source":"Reverse<T>"}]},{"pos":[272758,272759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272786,272787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272868,272881],"content":"Reverse(Of T)","needQuote":true,"nodes":[{"content":"Reverse(Of T)","pos":[0,13]}]},{"pos":[272943,272944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272971,272972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273434,273470],"content":"Select<T, TResult>(Func<T, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;(Func&lt;T, TResult&gt;)","pos":[0,36],"source":"Select<T, TResult>(Func<T, TResult>)"}]},{"pos":[273781,273799],"content":"Select<T, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;","pos":[0,18],"source":"Select<T, TResult>"}]},{"pos":[273866,273867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273917,273921],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[273979,273980],"content":"<","needQuote":true,"nodes":[]},{"pos":[274007,274008],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[274036,274037]},{"pos":[274069,274076],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[274141,274142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274244,274265],"content":"Select(Of T, TResult)","needQuote":true,"nodes":[{"content":"Select(Of T, TResult)","pos":[0,21]}]},{"pos":[274335,274336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274386,274390],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[274449,274452]},{"pos":[274486,274487],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[274515,274516]},{"pos":[274548,274555],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[274588,274589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274616,274617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275176,275219],"content":"Select<T, TResult>(Func<T, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;(Func&lt;T, Int32, TResult&gt;)","pos":[0,43],"source":"Select<T, TResult>(Func<T, Int32, TResult>)"}]},{"pos":[275578,275596],"content":"Select<T, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;","pos":[0,18],"source":"Select<T, TResult>"}]},{"pos":[275663,275664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275714,275718],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[275776,275777],"content":"<","needQuote":true,"nodes":[]},{"pos":[275804,275805],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[275833,275834]},{"pos":[275888,275893],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[275953,275954]},{"pos":[275986,275993],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[276058,276059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276174,276195],"content":"Select(Of T, TResult)","needQuote":true,"nodes":[{"content":"Select(Of T, TResult)","pos":[0,21]}]},{"pos":[276265,276266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276316,276320],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[276379,276382]},{"pos":[276416,276417],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[276445,276446]},{"pos":[276500,276505],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[276565,276566]},{"pos":[276598,276605],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[276638,276639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276666,276667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277315,277368],"content":"SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;(Func&lt;T, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,53],"source":"SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)"}]},{"pos":[277834,277856],"content":"SelectMany<T, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;","pos":[0,22],"source":"SelectMany<T, TResult>"}]},{"pos":[277927,277928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277978,277982],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[278040,278041],"content":"<","needQuote":true,"nodes":[]},{"pos":[278068,278069],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[278097,278098]},{"pos":[278180,278191],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[278276,278277],"content":"<","needQuote":true,"nodes":[]},{"pos":[278304,278311],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[278408,278409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278555,278580],"content":"SelectMany(Of T, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TResult)","pos":[0,25]}]},{"pos":[278654,278655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278705,278709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[278768,278771]},{"pos":[278805,278806],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[278834,278835]},{"pos":[278917,278928],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[279014,279017]},{"pos":[279051,279058],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[279091,279092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279119,279120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279147,279148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279876,279936],"content":"SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;(Func&lt;T, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,60],"source":"SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)"}]},{"pos":[280450,280472],"content":"SelectMany<T, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;","pos":[0,22],"source":"SelectMany<T, TResult>"}]},{"pos":[280543,280544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280594,280598],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[280656,280657],"content":"<","needQuote":true,"nodes":[]},{"pos":[280684,280685],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[280713,280714]},{"pos":[280768,280773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[280833,280834]},{"pos":[280916,280927],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[281012,281013],"content":"<","needQuote":true,"nodes":[]},{"pos":[281040,281047],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[281144,281145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281304,281329],"content":"SelectMany(Of T, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TResult)","pos":[0,25]}]},{"pos":[281403,281404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281454,281458],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[281517,281520]},{"pos":[281554,281555],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[281583,281584]},{"pos":[281638,281643],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[281703,281704]},{"pos":[281786,281797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[281883,281886]},{"pos":[281920,281927],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[281960,281961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281988,281989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282016,282017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282816,282917],"content":"SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;(Func&lt;T, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;T, TCollection, TResult&gt;)","pos":[0,101],"source":"SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)"}]},{"pos":[283572,283607],"content":"SelectMany<T, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;","pos":[0,35],"source":"SelectMany<T, TCollection, TResult>"}]},{"pos":[283691,283692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283742,283746],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[283804,283805],"content":"<","needQuote":true,"nodes":[]},{"pos":[283832,283833],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[283861,283862]},{"pos":[283944,283955],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[284040,284041],"content":"<","needQuote":true,"nodes":[]},{"pos":[284068,284079],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[284181,284182]},{"pos":[284237,284241],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[284299,284300],"content":"<","needQuote":true,"nodes":[]},{"pos":[284327,284328],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[284356,284357]},{"pos":[284389,284400],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[284438,284439]},{"pos":[284471,284478],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[284543,284544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284715,284753],"content":"SelectMany(Of T, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TCollection, TResult)","pos":[0,38]}]},{"pos":[284840,284841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284891,284895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[284954,284957]},{"pos":[284991,284992],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[285020,285021]},{"pos":[285103,285114],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[285200,285203]},{"pos":[285237,285248],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[285285,285286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285313,285314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[285342,285343]},{"pos":[285398,285402],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[285461,285464]},{"pos":[285498,285499],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[285527,285528]},{"pos":[285560,285571],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[285609,285610]},{"pos":[285642,285649],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[285682,285683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285710,285711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286633,286741],"content":"SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;(Func&lt;T, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;T, TCollection, TResult&gt;)","pos":[0,108],"source":"SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)"}]},{"pos":[287444,287479],"content":"SelectMany<T, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;","pos":[0,35],"source":"SelectMany<T, TCollection, TResult>"}]},{"pos":[287563,287564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287614,287618],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[287676,287677],"content":"<","needQuote":true,"nodes":[]},{"pos":[287704,287705],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[287733,287734]},{"pos":[287788,287793],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[287853,287854]},{"pos":[287936,287947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[288032,288033],"content":"<","needQuote":true,"nodes":[]},{"pos":[288060,288071],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[288173,288174]},{"pos":[288229,288233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[288291,288292],"content":"<","needQuote":true,"nodes":[]},{"pos":[288319,288320],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[288348,288349]},{"pos":[288381,288392],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[288430,288431]},{"pos":[288463,288470],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[288535,288536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288720,288758],"content":"SelectMany(Of T, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TCollection, TResult)","pos":[0,38]}]},{"pos":[288845,288846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288896,288900],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[288959,288962]},{"pos":[288996,288997],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[289025,289026]},{"pos":[289080,289085],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[289145,289146]},{"pos":[289228,289239],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[289325,289328]},{"pos":[289362,289373],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[289410,289411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289438,289439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[289467,289468]},{"pos":[289523,289527],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289586,289589]},{"pos":[289623,289624],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[289652,289653]},{"pos":[289685,289696],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[289734,289735]},{"pos":[289767,289774],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[289807,289808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289835,289836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290655,290687],"content":"SequenceEqual<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,32],"source":"SequenceEqual<T>(IEnumerable<T>)"}]},{"pos":[291056,291072],"content":"SequenceEqual<T>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;","pos":[0,16],"source":"SequenceEqual<T>"}]},{"pos":[291137,291138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291215,291226],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[291311,291312],"content":"<","needQuote":true,"nodes":[]},{"pos":[291339,291340],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[291399,291400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291532,291551],"content":"SequenceEqual(Of T)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of T)","pos":[0,19]}]},{"pos":[291619,291620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291697,291708],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[291794,291797]},{"pos":[291831,291832],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[291859,291860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291887,291888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292597,292651],"content":"SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,54],"source":"SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[293196,293212],"content":"SequenceEqual<T>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;","pos":[0,16],"source":"SequenceEqual<T>"}]},{"pos":[293277,293278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293355,293366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[293451,293452],"content":"<","needQuote":true,"nodes":[]},{"pos":[293479,293480],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[293540,293541]},{"pos":[293629,293646],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[293737,293738],"content":"<","needQuote":true,"nodes":[]},{"pos":[293765,293766],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[293825,293826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294008,294027],"content":"SequenceEqual(Of T)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of T)","pos":[0,19]}]},{"pos":[294095,294096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294173,294184],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[294270,294273]},{"pos":[294307,294308],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[294335,294336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[294364,294365]},{"pos":[294453,294470],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[294562,294565]},{"pos":[294599,294600],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[294627,294628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294655,294656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295259,295270],"content":"Single<T>()","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;()","pos":[0,11],"source":"Single<T>()"}]},{"pos":[295464,295473],"content":"Single<T>","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;","pos":[0,9],"source":"Single<T>"}]},{"pos":[295531,295532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295559,295560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295640,295652],"content":"Single(Of T)","needQuote":true,"nodes":[{"content":"Single(Of T)","pos":[0,12]}]},{"pos":[295713,295714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295741,295742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296217,296244],"content":"Single<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,27],"source":"Single<T>(Func<T, Boolean>)"}]},{"pos":[296553,296562],"content":"Single<T>","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;","pos":[0,9],"source":"Single<T>"}]},{"pos":[296620,296621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296671,296675],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[296733,296734],"content":"<","needQuote":true,"nodes":[]},{"pos":[296761,296762],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[296790,296791]},{"pos":[296847,296854],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[296947,296948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297061,297073],"content":"Single(Of T)","needQuote":true,"nodes":[{"content":"Single(Of T)","pos":[0,12]}]},{"pos":[297134,297135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297185,297189],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[297248,297251]},{"pos":[297285,297286],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[297314,297315]},{"pos":[297371,297378],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[297439,297440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297467,297468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297963,297983],"content":"SingleOrDefault<T>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;()","pos":[0,20],"source":"SingleOrDefault<T>()"}]},{"pos":[298213,298231],"content":"SingleOrDefault<T>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;","pos":[0,18],"source":"SingleOrDefault<T>"}]},{"pos":[298298,298299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298326,298327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298416,298437],"content":"SingleOrDefault(Of T)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of T)","pos":[0,21]}]},{"pos":[298507,298508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298535,298536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299056,299092],"content":"SingleOrDefault<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,36],"source":"SingleOrDefault<T>(Func<T, Boolean>)"}]},{"pos":[299437,299455],"content":"SingleOrDefault<T>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;","pos":[0,18],"source":"SingleOrDefault<T>"}]},{"pos":[299522,299523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299573,299577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[299635,299636],"content":"<","needQuote":true,"nodes":[]},{"pos":[299663,299664],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[299692,299693]},{"pos":[299749,299756],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[299849,299850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299972,299993],"content":"SingleOrDefault(Of T)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of T)","pos":[0,21]}]},{"pos":[300063,300064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300114,300118],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[300177,300180]},{"pos":[300214,300215],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[300243,300244]},{"pos":[300300,300307],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[300368,300369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300396,300397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300924,300938],"content":"Skip<T>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;T&gt;(Int32)","pos":[0,14],"source":"Skip<T>(Int32)"}]},{"pos":[301167,301174],"content":"Skip<T>","needQuote":true,"nodes":[{"content":"Skip&lt;T&gt;","pos":[0,7],"source":"Skip<T>"}]},{"pos":[301230,301231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301280,301285],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[301344,301345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301437,301447],"content":"Skip(Of T)","needQuote":true,"nodes":[{"content":"Skip(Of T)","pos":[0,10]}]},{"pos":[301506,301507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301556,301561],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[301620,301621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302119,302149],"content":"SkipWhile<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,30],"source":"SkipWhile<T>(Func<T, Boolean>)"}]},{"pos":[302470,302482],"content":"SkipWhile<T>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;","pos":[0,12],"source":"SkipWhile<T>"}]},{"pos":[302543,302544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302594,302598],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[302656,302657],"content":"<","needQuote":true,"nodes":[]},{"pos":[302684,302685],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[302713,302714]},{"pos":[302770,302777],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[302870,302871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302987,303002],"content":"SkipWhile(Of T)","needQuote":true,"nodes":[{"content":"SkipWhile(Of T)","pos":[0,15]}]},{"pos":[303066,303067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303117,303121],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[303180,303183]},{"pos":[303217,303218],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[303246,303247]},{"pos":[303303,303310],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[303371,303372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303399,303400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303983,304020],"content":"SkipWhile<T>(Func<T, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;(Func&lt;T, Int32, Boolean&gt;)","pos":[0,37],"source":"SkipWhile<T>(Func<T, Int32, Boolean>)"}]},{"pos":[304389,304401],"content":"SkipWhile<T>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;","pos":[0,12],"source":"SkipWhile<T>"}]},{"pos":[304462,304463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304513,304517],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[304575,304576],"content":"<","needQuote":true,"nodes":[]},{"pos":[304603,304604],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[304632,304633]},{"pos":[304687,304692],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[304752,304753]},{"pos":[304809,304816],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[304909,304910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305039,305054],"content":"SkipWhile(Of T)","needQuote":true,"nodes":[{"content":"SkipWhile(Of T)","pos":[0,15]}]},{"pos":[305118,305119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305169,305173],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[305232,305235]},{"pos":[305269,305270],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[305298,305299]},{"pos":[305353,305358],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[305418,305419]},{"pos":[305475,305482],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[305543,305544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305571,305572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306144,306168],"content":"Sum<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,24],"source":"Sum<T>(Func<T, Decimal>)"}]},{"pos":[306465,306471],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[306526,306527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306577,306581],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306639,306640],"content":"<","needQuote":true,"nodes":[]},{"pos":[306667,306668],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[306696,306697]},{"pos":[306753,306760],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[306853,306854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306964,306973],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[307031,307032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307082,307086],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[307145,307148]},{"pos":[307182,307183],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[307211,307212]},{"pos":[307268,307275],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[307336,307337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307364,307365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307890,307913],"content":"Sum<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,23],"source":"Sum<T>(Func<T, Double>)"}]},{"pos":[308206,308212],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[308267,308268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308318,308322],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[308380,308381],"content":"<","needQuote":true,"nodes":[]},{"pos":[308408,308409],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[308437,308438]},{"pos":[308493,308499],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[308591,308592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308701,308710],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[308768,308769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308819,308823],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[308882,308885]},{"pos":[308919,308920],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[308948,308949]},{"pos":[309004,309010],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[309070,309071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309098,309099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309619,309641],"content":"Sum<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,22],"source":"Sum<T>(Func<T, Int32>)"}]},{"pos":[309930,309936],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[309991,309992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310042,310046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[310104,310105],"content":"<","needQuote":true,"nodes":[]},{"pos":[310132,310133],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[310161,310162]},{"pos":[310216,310221],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[310312,310313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310421,310430],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[310488,310489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310539,310543],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[310602,310605]},{"pos":[310639,310640],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[310668,310669]},{"pos":[310723,310728],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[310787,310788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310815,310816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311333,311355],"content":"Sum<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,22],"source":"Sum<T>(Func<T, Int64>)"}]},{"pos":[311644,311650],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[311705,311706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311756,311760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[311818,311819],"content":"<","needQuote":true,"nodes":[]},{"pos":[311846,311847],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[311875,311876]},{"pos":[311930,311935],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[312026,312027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312135,312144],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[312202,312203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312253,312257],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[312316,312319]},{"pos":[312353,312354],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[312382,312383]},{"pos":[312437,312442],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[312501,312502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312529,312530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313085,313119],"content":"Sum<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,34],"source":"Sum<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[313483,313489],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[313544,313545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313595,313599],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[313657,313658],"content":"<","needQuote":true,"nodes":[]},{"pos":[313685,313686],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[313714,313715]},{"pos":[313774,313782],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[313844,313845],"content":"<","needQuote":true,"nodes":[]},{"pos":[313896,313903],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[314028,314029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314156,314165],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[314223,314224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314274,314278],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[314337,314340]},{"pos":[314374,314375],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[314403,314404]},{"pos":[314463,314471],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[314534,314537]},{"pos":[314595,314602],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[314663,314664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314691,314692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314719,314720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315319,315352],"content":"Sum<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,33],"source":"Sum<T>(Func<T, Nullable<Double>>)"}]},{"pos":[315712,315718],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[315773,315774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315824,315828],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[315886,315887],"content":"<","needQuote":true,"nodes":[]},{"pos":[315914,315915],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[315943,315944]},{"pos":[316003,316011],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[316073,316074],"content":"<","needQuote":true,"nodes":[]},{"pos":[316124,316130],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[316254,316255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316381,316390],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[316448,316449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316499,316503],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[316562,316565]},{"pos":[316599,316600],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[316628,316629]},{"pos":[316688,316696],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[316759,316762]},{"pos":[316819,316825],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[316885,316886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316913,316914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316941,316942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317536,317568],"content":"Sum<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,32],"source":"Sum<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[317924,317930],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[317985,317986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318036,318040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[318098,318099],"content":"<","needQuote":true,"nodes":[]},{"pos":[318126,318127],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[318155,318156]},{"pos":[318215,318223],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[318285,318286],"content":"<","needQuote":true,"nodes":[]},{"pos":[318335,318340],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[318463,318464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318589,318598],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[318656,318657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318707,318711],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[318770,318773]},{"pos":[318807,318808],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[318836,318837]},{"pos":[318896,318904],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[318967,318970]},{"pos":[319026,319031],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[319090,319091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319118,319119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319146,319147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319738,319770],"content":"Sum<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,32],"source":"Sum<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[320126,320132],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[320187,320188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320238,320242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[320300,320301],"content":"<","needQuote":true,"nodes":[]},{"pos":[320328,320329],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[320357,320358]},{"pos":[320417,320425],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[320487,320488],"content":"<","needQuote":true,"nodes":[]},{"pos":[320537,320542],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[320665,320666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320791,320800],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[320858,320859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320909,320913],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[320972,320975]},{"pos":[321009,321010],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[321038,321039]},{"pos":[321098,321106],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[321169,321172]},{"pos":[321228,321233],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[321292,321293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321320,321321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321348,321349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321942,321975],"content":"Sum<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,33],"source":"Sum<T>(Func<T, Nullable<Single>>)"}]},{"pos":[322335,322341],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[322396,322397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322447,322451],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322509,322510],"content":"<","needQuote":true,"nodes":[]},{"pos":[322537,322538],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[322566,322567]},{"pos":[322626,322634],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[322696,322697],"content":"<","needQuote":true,"nodes":[]},{"pos":[322747,322753],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[322877,322878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323004,323013],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[323071,323072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323122,323126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[323185,323188]},{"pos":[323222,323223],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[323251,323252]},{"pos":[323311,323319],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[323382,323385]},{"pos":[323442,323448],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[323508,323509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323536,323537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323564,323565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324127,324150],"content":"Sum<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,23],"source":"Sum<T>(Func<T, Single>)"}]},{"pos":[324443,324449],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[324504,324505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324555,324559],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[324617,324618],"content":"<","needQuote":true,"nodes":[]},{"pos":[324645,324646],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[324674,324675]},{"pos":[324730,324736],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[324828,324829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324938,324947],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[325005,325006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325056,325060],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[325119,325122]},{"pos":[325156,325157],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[325185,325186]},{"pos":[325241,325247],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[325307,325308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325335,325336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325824,325838],"content":"Take<T>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;T&gt;(Int32)","pos":[0,14],"source":"Take<T>(Int32)"}]},{"pos":[326067,326074],"content":"Take<T>","needQuote":true,"nodes":[{"content":"Take&lt;T&gt;","pos":[0,7],"source":"Take<T>"}]},{"pos":[326130,326131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326180,326185],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[326244,326245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326337,326347],"content":"Take(Of T)","needQuote":true,"nodes":[{"content":"Take(Of T)","pos":[0,10]}]},{"pos":[326406,326407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326456,326461],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[326520,326521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327019,327049],"content":"TakeWhile<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,30],"source":"TakeWhile<T>(Func<T, Boolean>)"}]},{"pos":[327370,327382],"content":"TakeWhile<T>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;","pos":[0,12],"source":"TakeWhile<T>"}]},{"pos":[327443,327444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327494,327498],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[327556,327557],"content":"<","needQuote":true,"nodes":[]},{"pos":[327584,327585],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[327613,327614]},{"pos":[327670,327677],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[327770,327771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327887,327902],"content":"TakeWhile(Of T)","needQuote":true,"nodes":[{"content":"TakeWhile(Of T)","pos":[0,15]}]},{"pos":[327966,327967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328017,328021],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[328080,328083]},{"pos":[328117,328118],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[328146,328147]},{"pos":[328203,328210],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[328271,328272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328299,328300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328883,328920],"content":"TakeWhile<T>(Func<T, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;(Func&lt;T, Int32, Boolean&gt;)","pos":[0,37],"source":"TakeWhile<T>(Func<T, Int32, Boolean>)"}]},{"pos":[329289,329301],"content":"TakeWhile<T>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;","pos":[0,12],"source":"TakeWhile<T>"}]},{"pos":[329362,329363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329413,329417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[329475,329476],"content":"<","needQuote":true,"nodes":[]},{"pos":[329503,329504],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[329532,329533]},{"pos":[329587,329592],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[329652,329653]},{"pos":[329709,329716],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[329809,329810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329939,329954],"content":"TakeWhile(Of T)","needQuote":true,"nodes":[{"content":"TakeWhile(Of T)","pos":[0,15]}]},{"pos":[330018,330019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330069,330073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[330132,330135]},{"pos":[330169,330170],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[330198,330199]},{"pos":[330253,330258],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[330318,330319]},{"pos":[330375,330382],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[330443,330444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330471,330472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330987,330999],"content":"ToArray<T>()","needQuote":true,"nodes":[{"content":"ToArray&lt;T&gt;()","pos":[0,12],"source":"ToArray<T>()"}]},{"pos":[331197,331207],"content":"ToArray<T>","needQuote":true,"nodes":[{"content":"ToArray&lt;T&gt;","pos":[0,10],"source":"ToArray<T>"}]},{"pos":[331266,331267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331294,331295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331376,331389],"content":"ToArray(Of T)","needQuote":true,"nodes":[{"content":"ToArray(Of T)","pos":[0,13]}]},{"pos":[331451,331452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331479,331480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331951,331987],"content":"ToDictionary<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,36],"source":"ToDictionary<T, TKey>(Func<T, TKey>)"}]},{"pos":[332304,332325],"content":"ToDictionary<T, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;","pos":[0,21],"source":"ToDictionary<T, TKey>"}]},{"pos":[332395,332396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332446,332450],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[332508,332509],"content":"<","needQuote":true,"nodes":[]},{"pos":[332536,332537],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[332565,332566]},{"pos":[332598,332602],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[332664,332665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332773,332797],"content":"ToDictionary(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey)","pos":[0,24]}]},{"pos":[332870,332871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332921,332925],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[332984,332987]},{"pos":[333021,333022],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[333050,333051]},{"pos":[333083,333087],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[333117,333118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333145,333146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333797,333858],"content":"ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,61],"source":"ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[334360,334381],"content":"ToDictionary<T, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;","pos":[0,21],"source":"ToDictionary<T, TKey>"}]},{"pos":[334451,334452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334502,334506],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[334564,334565],"content":"<","needQuote":true,"nodes":[]},{"pos":[334592,334593],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[334621,334622]},{"pos":[334654,334658],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[334721,334722]},{"pos":[334810,334827],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[334918,334919],"content":"<","needQuote":true,"nodes":[]},{"pos":[334946,334950],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[335012,335013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335171,335195],"content":"ToDictionary(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey)","pos":[0,24]}]},{"pos":[335268,335269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335319,335323],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[335382,335385]},{"pos":[335419,335420],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[335448,335449]},{"pos":[335481,335485],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[335515,335516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[335544,335545]},{"pos":[335633,335650],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[335742,335745]},{"pos":[335779,335783],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[335813,335814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335841,335842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336542,336607],"content":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;)","pos":[0,65],"source":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)"}]},{"pos":[337052,337083],"content":"ToDictionary<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;","pos":[0,31],"source":"ToDictionary<T, TKey, TElement>"}]},{"pos":[337163,337164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337214,337218],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[337276,337277],"content":"<","needQuote":true,"nodes":[]},{"pos":[337304,337305],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[337333,337334]},{"pos":[337366,337370],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[337433,337434]},{"pos":[337489,337493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[337551,337552],"content":"<","needQuote":true,"nodes":[]},{"pos":[337579,337580],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[337608,337609]},{"pos":[337641,337649],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[337715,337716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337845,337879],"content":"ToDictionary(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey, TElement)","pos":[0,34]}]},{"pos":[337962,337963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338013,338017],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[338076,338079]},{"pos":[338113,338114],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[338142,338143]},{"pos":[338175,338179],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[338209,338210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[338238,338239]},{"pos":[338294,338298],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[338357,338360]},{"pos":[338394,338395],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[338423,338424]},{"pos":[338456,338464],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[338498,338499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338526,338527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339309,339399],"content":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[340029,340060],"content":"ToDictionary<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;","pos":[0,31],"source":"ToDictionary<T, TKey, TElement>"}]},{"pos":[340140,340141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340191,340195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[340253,340254],"content":"<","needQuote":true,"nodes":[]},{"pos":[340281,340282],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[340310,340311]},{"pos":[340343,340347],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[340410,340411]},{"pos":[340466,340470],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[340528,340529],"content":"<","needQuote":true,"nodes":[]},{"pos":[340556,340557],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[340585,340586]},{"pos":[340618,340626],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[340693,340694]},{"pos":[340782,340799],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[340890,340891],"content":"<","needQuote":true,"nodes":[]},{"pos":[340918,340922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[340984,340985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341164,341198],"content":"ToDictionary(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey, TElement)","pos":[0,34]}]},{"pos":[341281,341282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341332,341336],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[341395,341398]},{"pos":[341432,341433],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[341461,341462]},{"pos":[341494,341498],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[341528,341529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[341557,341558]},{"pos":[341613,341617],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[341676,341679]},{"pos":[341713,341714],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[341742,341743]},{"pos":[341775,341783],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[341817,341818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[341846,341847]},{"pos":[341935,341952],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[342044,342047]},{"pos":[342081,342085],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[342115,342116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342143,342144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342819,342830],"content":"ToList<T>()","needQuote":true,"nodes":[{"content":"ToList&lt;T&gt;()","pos":[0,11],"source":"ToList<T>()"}]},{"pos":[343024,343033],"content":"ToList<T>","needQuote":true,"nodes":[{"content":"ToList&lt;T&gt;","pos":[0,9],"source":"ToList<T>"}]},{"pos":[343091,343092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343119,343120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343200,343212],"content":"ToList(Of T)","needQuote":true,"nodes":[{"content":"ToList(Of T)","pos":[0,12]}]},{"pos":[343273,343274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343301,343302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343762,343794],"content":"ToLookup<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,32],"source":"ToLookup<T, TKey>(Func<T, TKey>)"}]},{"pos":[344095,344112],"content":"ToLookup<T, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;","pos":[0,17],"source":"ToLookup<T, TKey>"}]},{"pos":[344178,344179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344229,344233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[344291,344292],"content":"<","needQuote":true,"nodes":[]},{"pos":[344319,344320],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[344348,344349]},{"pos":[344381,344385],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[344447,344448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344552,344572],"content":"ToLookup(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey)","pos":[0,20]}]},{"pos":[344641,344642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344692,344696],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[344755,344758]},{"pos":[344792,344793],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[344821,344822]},{"pos":[344854,344858],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[344888,344889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344916,344917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345548,345605],"content":"ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,57],"source":"ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[346091,346108],"content":"ToLookup<T, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;","pos":[0,17],"source":"ToLookup<T, TKey>"}]},{"pos":[346174,346175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346225,346229],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[346287,346288],"content":"<","needQuote":true,"nodes":[]},{"pos":[346315,346316],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[346344,346345]},{"pos":[346377,346381],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[346444,346445]},{"pos":[346533,346550],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[346641,346642],"content":"<","needQuote":true,"nodes":[]},{"pos":[346669,346673],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[346735,346736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346890,346910],"content":"ToLookup(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey)","pos":[0,20]}]},{"pos":[346979,346980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347030,347034],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[347093,347096]},{"pos":[347130,347131],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[347159,347160]},{"pos":[347192,347196],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[347226,347227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[347255,347256]},{"pos":[347344,347361],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[347453,347456]},{"pos":[347490,347494],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[347524,347525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347552,347553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348233,348294],"content":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;)","pos":[0,61],"source":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)"}]},{"pos":[348723,348750],"content":"ToLookup<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;","pos":[0,27],"source":"ToLookup<T, TKey, TElement>"}]},{"pos":[348826,348827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348877,348881],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[348939,348940],"content":"<","needQuote":true,"nodes":[]},{"pos":[348967,348968],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[348996,348997]},{"pos":[349029,349033],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[349096,349097]},{"pos":[349152,349156],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[349214,349215],"content":"<","needQuote":true,"nodes":[]},{"pos":[349242,349243],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[349271,349272]},{"pos":[349304,349312],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[349378,349379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349504,349534],"content":"ToLookup(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey, TElement)","pos":[0,30]}]},{"pos":[349613,349614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349664,349668],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[349727,349730]},{"pos":[349764,349765],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[349793,349794]},{"pos":[349826,349830],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[349860,349861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[349889,349890]},{"pos":[349945,349949],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[350008,350011]},{"pos":[350045,350046],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[350074,350075]},{"pos":[350107,350115],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[350149,350150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350177,350178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350940,351026],"content":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,86],"source":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[351640,351667],"content":"ToLookup<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;","pos":[0,27],"source":"ToLookup<T, TKey, TElement>"}]},{"pos":[351743,351744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351794,351798],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[351856,351857],"content":"<","needQuote":true,"nodes":[]},{"pos":[351884,351885],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[351913,351914]},{"pos":[351946,351950],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[352013,352014]},{"pos":[352069,352073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[352131,352132],"content":"<","needQuote":true,"nodes":[]},{"pos":[352159,352160],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[352188,352189]},{"pos":[352221,352229],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[352296,352297]},{"pos":[352385,352402],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[352493,352494],"content":"<","needQuote":true,"nodes":[]},{"pos":[352521,352525],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[352587,352588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352763,352793],"content":"ToLookup(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey, TElement)","pos":[0,30]}]},{"pos":[352872,352873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352923,352927],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[352986,352989]},{"pos":[353023,353024],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[353052,353053]},{"pos":[353085,353089],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[353119,353120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[353148,353149]},{"pos":[353204,353208],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[353267,353270]},{"pos":[353304,353305],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[353333,353334]},{"pos":[353366,353374],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[353408,353409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[353437,353438]},{"pos":[353526,353543],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[353635,353638]},{"pos":[353672,353676],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[353706,353707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353734,353735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354485,354509],"content":"Union<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,24],"source":"Union<T>(IEnumerable<T>)"}]},{"pos":[354846,354854],"content":"Union<T>","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;","pos":[0,8],"source":"Union<T>"}]},{"pos":[354911,354912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354989,355000],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[355085,355086],"content":"<","needQuote":true,"nodes":[]},{"pos":[355113,355114],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[355173,355174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355298,355309],"content":"Union(Of T)","needQuote":true,"nodes":[{"content":"Union(Of T)","pos":[0,11]}]},{"pos":[355369,355370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355447,355458],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[355544,355547]},{"pos":[355581,355582],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[355609,355610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355637,355638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356307,356353],"content":"Union<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,46],"source":"Union<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[356866,356874],"content":"Union<T>","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;","pos":[0,8],"source":"Union<T>"}]},{"pos":[356931,356932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357009,357020],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[357105,357106],"content":"<","needQuote":true,"nodes":[]},{"pos":[357133,357134],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[357194,357195]},{"pos":[357283,357300],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[357391,357392],"content":"<","needQuote":true,"nodes":[]},{"pos":[357419,357420],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[357479,357480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357654,357665],"content":"Union(Of T)","needQuote":true,"nodes":[{"content":"Union(Of T)","pos":[0,11]}]},{"pos":[357725,357726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357803,357814],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[357900,357903]},{"pos":[357937,357938],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[357965,357966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[357994,357995]},{"pos":[358083,358100],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[358192,358195]},{"pos":[358229,358230],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[358257,358258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358285,358286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358928,358954],"content":"Where<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,26],"source":"Where<T>(Func<T, Boolean>)"}]},{"pos":[359259,359267],"content":"Where<T>","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;","pos":[0,8],"source":"Where<T>"}]},{"pos":[359324,359325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359375,359379],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[359437,359438],"content":"<","needQuote":true,"nodes":[]},{"pos":[359465,359466],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[359494,359495]},{"pos":[359551,359558],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[359651,359652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359764,359775],"content":"Where(Of T)","needQuote":true,"nodes":[{"content":"Where(Of T)","pos":[0,11]}]},{"pos":[359835,359836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359886,359890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[359949,359952]},{"pos":[359986,359987],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[360015,360016]},{"pos":[360072,360079],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[360140,360141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360168,360169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360732,360765],"content":"Where<T>(Func<T, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;(Func&lt;T, Int32, Boolean&gt;)","pos":[0,33],"source":"Where<T>(Func<T, Int32, Boolean>)"}]},{"pos":[361118,361126],"content":"Where<T>","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;","pos":[0,8],"source":"Where<T>"}]},{"pos":[361183,361184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361234,361238],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[361296,361297],"content":"<","needQuote":true,"nodes":[]},{"pos":[361324,361325],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[361353,361354]},{"pos":[361408,361413],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[361473,361474]},{"pos":[361530,361537],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[361630,361631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361756,361767],"content":"Where(Of T)","needQuote":true,"nodes":[{"content":"Where(Of T)","pos":[0,11]}]},{"pos":[361827,361828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361878,361882],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[361941,361944]},{"pos":[361978,361979],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[362007,362008]},{"pos":[362062,362067],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[362127,362128]},{"pos":[362184,362191],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[362252,362253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362280,362281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362933,363006],"content":"Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;T, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;T, TSecond, TResult&gt;)","pos":[0,73],"source":"Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)"}]},{"pos":[363533,363557],"content":"Zip<T, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;T, TSecond, TResult&gt;","pos":[0,24],"source":"Zip<T, TSecond, TResult>"}]},{"pos":[363630,363631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363708,363719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[363804,363805],"content":"<","needQuote":true,"nodes":[]},{"pos":[363832,363839],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[363905,363906]},{"pos":[363961,363965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[364023,364024],"content":"<","needQuote":true,"nodes":[]},{"pos":[364051,364052],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[364080,364081]},{"pos":[364113,364120],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[364154,364155]},{"pos":[364187,364194],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[364259,364260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364407,364434],"content":"Zip(Of T, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of T, TSecond, TResult)","pos":[0,27]}]},{"pos":[364510,364511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364588,364599],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[364685,364688]},{"pos":[364722,364729],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[364762,364763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[364791,364792]},{"pos":[364847,364851],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[364910,364913]},{"pos":[364947,364948],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[364976,364977]},{"pos":[365009,365016],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[365050,365051]},{"pos":[365083,365090],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[365123,365124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365151,365152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365584,365590],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[365731,365745],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[365964,365975],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[366039,366040],"content":"<","needQuote":true,"nodes":[]},{"pos":[366067,366068],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[366188,366199],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[366264,366267]},{"pos":[366301,366302],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[366329,366330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366555,366577],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[366828,366847],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[366919,366920],"content":"<","needQuote":true,"nodes":[]},{"pos":[366947,366948],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[367076,367095],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[367168,367171]},{"pos":[367205,367206],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[367233,367234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367475,367489],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[367708,367719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[367783,367784],"content":"<","needQuote":true,"nodes":[]},{"pos":[367811,367812],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[367932,367943],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[368008,368011]},{"pos":[368045,368046],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[368073,368074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368284,368291],"content":"ISet<T>","needQuote":true,"nodes":[{"content":"ISet&lt;T&gt;","pos":[0,7],"source":"ISet<T>"}]},{"pos":[368482,368486],"content":"ISet","needQuote":true,"nodes":[{"content":"ISet","pos":[0,4]}]},{"pos":[368543,368544],"content":"<","needQuote":true,"nodes":[]},{"pos":[368571,368572],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[368685,368689],"content":"ISet","needQuote":true,"nodes":[{"content":"ISet","pos":[0,4]}]},{"content":"(Of","pos":[368747,368750]},{"pos":[368784,368785],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[368812,368813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368987,369005],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[369206,369230],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[369409,369420],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[369479,369480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369547,369558],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[369635,369636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369749,369760],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[369819,369820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369887,369898],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[369975,369976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370204,370213],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[370427,370471],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[370871,370892],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[370961,370962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371039,371050],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[371135,371136],"content":"<","needQuote":true,"nodes":[]},{"pos":[371163,371171],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[371237,371238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371367,371391],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[371463,371464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371541,371552],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[371638,371641]},{"pos":[371675,371683],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[371717,371718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371745,371746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372119,372142],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[372337,372347],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[372414,372415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372482,372493],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[372570,372571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372692,372702],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[372769,372770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372837,372848],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[372925,372926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373179,373197],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[373446,373487],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[373904,373923],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[373999,374000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374077,374088],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[374173,374174],"content":"<","needQuote":true,"nodes":[]},{"pos":[374201,374208],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[374273,374274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374411,374433],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[374512,374513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374590,374601],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[374687,374690]},{"pos":[374724,374731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[374764,374765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374792,374793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375218,375291],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[375824,375842],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[375909,375910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375987,375998],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[376083,376084],"content":"<","needQuote":true,"nodes":[]},{"pos":[376111,376118],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[376184,376185]},{"pos":[376240,376244],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[376302,376303],"content":"<","needQuote":true,"nodes":[]},{"pos":[376330,376337],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[376371,376372]},{"pos":[376404,376411],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[376445,376446]},{"pos":[376478,376485],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[376550,376551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376704,376725],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[376795,376796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376873,376884],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[376970,376973]},{"pos":[377007,377014],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[377047,377048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[377076,377077]},{"pos":[377132,377136],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[377195,377198]},{"pos":[377232,377239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[377273,377274]},{"pos":[377306,377313],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[377347,377348]},{"pos":[377380,377387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[377420,377421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377448,377449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377881,377891],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[378136,378243],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[378882,378913],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[378993,378994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379071,379082],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[379167,379168],"content":"<","needQuote":true,"nodes":[]},{"pos":[379195,379202],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[379268,379269]},{"pos":[379301,379312],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[379350,379351]},{"pos":[379406,379410],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[379468,379469],"content":"<","needQuote":true,"nodes":[]},{"pos":[379496,379507],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[379545,379546]},{"pos":[379578,379585],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[379619,379620]},{"pos":[379652,379663],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[379732,379733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379890,379924],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[380007,380008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380085,380096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[380182,380185]},{"pos":[380219,380226],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[380259,380260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[380288,380289]},{"pos":[380321,380332],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[380370,380371]},{"pos":[380426,380430],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[380489,380492]},{"pos":[380526,380537],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[380575,380576]},{"pos":[380608,380615],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[380649,380650]},{"pos":[380682,380693],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[380730,380731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380758,380759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381348,381492],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[382283,382323],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[382412,382413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382490,382501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[382586,382587],"content":"<","needQuote":true,"nodes":[]},{"pos":[382614,382621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[382687,382688]},{"pos":[382720,382731],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[382769,382770]},{"pos":[382825,382829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[382887,382888],"content":"<","needQuote":true,"nodes":[]},{"pos":[382915,382926],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[382964,382965]},{"pos":[382997,383004],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[383038,383039]},{"pos":[383071,383082],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[383152,383153]},{"pos":[383208,383212],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[383270,383271],"content":"<","needQuote":true,"nodes":[]},{"pos":[383298,383309],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[383347,383348]},{"pos":[383380,383387],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[383452,383453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383631,383674],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[383766,383767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383844,383855],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[383941,383944]},{"pos":[383978,383985],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[384018,384019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[384047,384048]},{"pos":[384080,384091],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[384129,384130]},{"pos":[384185,384189],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[384248,384251]},{"pos":[384285,384296],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[384334,384335]},{"pos":[384367,384374],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[384408,384409]},{"pos":[384441,384452],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[384489,384490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[384518,384519]},{"pos":[384574,384578],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[384637,384640]},{"pos":[384674,384685],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[384723,384724]},{"pos":[384756,384763],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[384796,384797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384824,384825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385488,385546],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[386049,386061],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[386122,386123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386200,386211],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[386296,386297],"content":"<","needQuote":true,"nodes":[]},{"pos":[386324,386331],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[386397,386398]},{"pos":[386453,386457],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[386515,386516],"content":"<","needQuote":true,"nodes":[]},{"pos":[386543,386550],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[386584,386585]},{"pos":[386641,386648],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[386741,386742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386896,386911],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[386975,386976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387053,387064],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[387150,387153]},{"pos":[387187,387194],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[387227,387228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[387256,387257]},{"pos":[387312,387316],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[387375,387378]},{"pos":[387412,387419],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[387453,387454]},{"pos":[387510,387517],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[387578,387579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387606,387607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388039,388073],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[388438,388450],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[388511,388512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[388589,388600],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[388685,388686],"content":"<","needQuote":true,"nodes":[]},{"pos":[388713,388720],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[388785,388786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388908,388923],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[388987,388988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389065,389076],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[389162,389165]},{"pos":[389199,389206],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[389239,389240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389267,389268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389649,389707],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[390210,390222],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[390283,390284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390361,390372],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[390457,390458],"content":"<","needQuote":true,"nodes":[]},{"pos":[390485,390492],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[390558,390559]},{"pos":[390614,390618],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[390676,390677],"content":"<","needQuote":true,"nodes":[]},{"pos":[390704,390711],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[390745,390746]},{"pos":[390802,390809],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[390902,390903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391057,391072],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[391136,391137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[391214,391225],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[391311,391314]},{"pos":[391348,391355],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[391388,391389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[391417,391418]},{"pos":[391473,391477],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[391536,391539]},{"pos":[391573,391580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[391614,391615]},{"pos":[391671,391678],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[391739,391740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391767,391768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392209,392252],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[392653,392674],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[392744,392745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392822,392833],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[392918,392919],"content":"<","needQuote":true,"nodes":[]},{"pos":[392946,392953],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[393018,393019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393150,393174],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[393247,393248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393325,393336],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[393422,393425]},{"pos":[393459,393466],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[393499,393500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393527,393528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393940,394002],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[394521,394537],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[394602,394603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[394680,394691],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[394776,394777],"content":"<","needQuote":true,"nodes":[]},{"pos":[394804,394811],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[394877,394878]},{"pos":[394933,394937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[394995,394996],"content":"<","needQuote":true,"nodes":[]},{"pos":[395023,395030],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[395064,395065]},{"pos":[395121,395128],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[395221,395222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395380,395399],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[395467,395468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395545,395556],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[395642,395645]},{"pos":[395679,395686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[395719,395720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[395748,395749]},{"pos":[395804,395808],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[395867,395870]},{"pos":[395904,395911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[395945,395946]},{"pos":[396002,396009],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[396070,396071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396098,396099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396578,396639],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[397154,397170],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[397235,397236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397313,397324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[397409,397410],"content":"<","needQuote":true,"nodes":[]},{"pos":[397437,397444],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[397510,397511]},{"pos":[397566,397570],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[397628,397629],"content":"<","needQuote":true,"nodes":[]},{"pos":[397656,397663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[397697,397698]},{"pos":[397753,397759],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[397851,397852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398009,398028],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[398096,398097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398174,398185],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[398271,398274]},{"pos":[398308,398315],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[398348,398349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[398377,398378]},{"pos":[398433,398437],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[398496,398499]},{"pos":[398533,398540],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[398574,398575]},{"pos":[398630,398636],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[398696,398697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398724,398725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399200,399260],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[399771,399787],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[399852,399853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399930,399941],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[400026,400027],"content":"<","needQuote":true,"nodes":[]},{"pos":[400054,400061],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[400127,400128]},{"pos":[400183,400187],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[400245,400246],"content":"<","needQuote":true,"nodes":[]},{"pos":[400273,400280],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[400314,400315]},{"pos":[400369,400374],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[400465,400466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400622,400641],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[400709,400710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[400787,400798],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[400884,400887]},{"pos":[400921,400928],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[400961,400962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[400990,400991]},{"pos":[401046,401050],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[401109,401112]},{"pos":[401146,401153],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[401187,401188]},{"pos":[401242,401247],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[401306,401307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401334,401335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401807,401867],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[402378,402394],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[402459,402460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402537,402548],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[402633,402634],"content":"<","needQuote":true,"nodes":[]},{"pos":[402661,402668],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[402734,402735]},{"pos":[402790,402794],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[402852,402853],"content":"<","needQuote":true,"nodes":[]},{"pos":[402880,402887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[402921,402922]},{"pos":[402976,402981],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[403072,403073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403229,403248],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[403316,403317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403394,403405],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[403491,403494]},{"pos":[403528,403535],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[403568,403569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[403597,403598]},{"pos":[403653,403657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[403716,403719]},{"pos":[403753,403760],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[403794,403795]},{"pos":[403849,403854],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[403913,403914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403941,403942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404433,404505],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[405091,405107],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[405172,405173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405250,405261],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[405346,405347],"content":"<","needQuote":true,"nodes":[]},{"pos":[405374,405381],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[405447,405448]},{"pos":[405503,405507],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[405565,405566],"content":"<","needQuote":true,"nodes":[]},{"pos":[405593,405600],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[405634,405635]},{"pos":[405694,405702],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[405764,405765],"content":"<","needQuote":true,"nodes":[]},{"pos":[405816,405823],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[405948,405949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406124,406143],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[406211,406212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406289,406300],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[406386,406389]},{"pos":[406423,406430],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[406463,406464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[406492,406493]},{"pos":[406548,406552],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[406611,406614]},{"pos":[406648,406655],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[406689,406690]},{"pos":[406749,406757],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[406820,406823]},{"pos":[406881,406888],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[406949,406950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406977,406978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407005,407006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407542,407613],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[408195,408211],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[408276,408277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408354,408365],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[408450,408451],"content":"<","needQuote":true,"nodes":[]},{"pos":[408478,408485],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[408551,408552]},{"pos":[408607,408611],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[408669,408670],"content":"<","needQuote":true,"nodes":[]},{"pos":[408697,408704],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[408738,408739]},{"pos":[408798,408806],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[408868,408869],"content":"<","needQuote":true,"nodes":[]},{"pos":[408919,408925],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[409049,409050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409224,409243],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[409311,409312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409389,409400],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[409486,409489]},{"pos":[409523,409530],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[409563,409564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[409592,409593]},{"pos":[409648,409652],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[409711,409714]},{"pos":[409748,409755],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[409789,409790]},{"pos":[409849,409857],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[409920,409923]},{"pos":[409980,409986],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[410046,410047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410074,410075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410102,410103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410635,410705],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[411283,411299],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[411364,411365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411442,411453],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[411538,411539],"content":"<","needQuote":true,"nodes":[]},{"pos":[411566,411573],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[411639,411640]},{"pos":[411695,411699],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[411757,411758],"content":"<","needQuote":true,"nodes":[]},{"pos":[411785,411792],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[411826,411827]},{"pos":[411886,411894],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[411956,411957],"content":"<","needQuote":true,"nodes":[]},{"pos":[412006,412011],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[412134,412135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412308,412327],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[412395,412396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412473,412484],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[412570,412573]},{"pos":[412607,412614],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[412647,412648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[412676,412677]},{"pos":[412732,412736],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[412795,412798]},{"pos":[412832,412839],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[412873,412874]},{"pos":[412933,412941],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[413004,413007]},{"pos":[413063,413068],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[413127,413128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413155,413156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413183,413184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413713,413783],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[414361,414377],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[414442,414443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414520,414531],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[414616,414617],"content":"<","needQuote":true,"nodes":[]},{"pos":[414644,414651],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[414717,414718]},{"pos":[414773,414777],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[414835,414836],"content":"<","needQuote":true,"nodes":[]},{"pos":[414863,414870],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[414904,414905]},{"pos":[414964,414972],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[415034,415035],"content":"<","needQuote":true,"nodes":[]},{"pos":[415084,415089],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[415212,415213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415386,415405],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[415473,415474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415551,415562],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[415648,415651]},{"pos":[415685,415692],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[415725,415726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[415754,415755]},{"pos":[415810,415814],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[415873,415876]},{"pos":[415910,415917],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[415951,415952]},{"pos":[416011,416019],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[416082,416085]},{"pos":[416141,416146],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[416205,416206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416233,416234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416261,416262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416792,416863],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[417445,417461],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[417526,417527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417604,417615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[417700,417701],"content":"<","needQuote":true,"nodes":[]},{"pos":[417728,417735],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[417801,417802]},{"pos":[417857,417861],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[417919,417920],"content":"<","needQuote":true,"nodes":[]},{"pos":[417947,417954],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[417988,417989]},{"pos":[418048,418056],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[418118,418119],"content":"<","needQuote":true,"nodes":[]},{"pos":[418169,418175],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[418299,418300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418474,418493],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[418561,418562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418639,418650],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[418736,418739]},{"pos":[418773,418780],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[418813,418814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[418842,418843]},{"pos":[418898,418902],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[418961,418964]},{"pos":[418998,419005],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[419039,419040]},{"pos":[419099,419107],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[419170,419173]},{"pos":[419230,419236],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[419296,419297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419324,419325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419352,419353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419869,419930],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[420445,420461],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[420526,420527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420604,420615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[420700,420701],"content":"<","needQuote":true,"nodes":[]},{"pos":[420728,420735],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[420801,420802]},{"pos":[420857,420861],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[420919,420920],"content":"<","needQuote":true,"nodes":[]},{"pos":[420947,420954],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[420988,420989]},{"pos":[421044,421050],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[421142,421143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421300,421319],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[421387,421388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421465,421476],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[421562,421565]},{"pos":[421599,421606],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[421639,421640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[421668,421669]},{"pos":[421724,421728],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[421787,421790]},{"pos":[421824,421831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[421865,421866]},{"pos":[421921,421927],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[421987,421988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422015,422016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422445,422471],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[422778,422791],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[422853,422854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422921,422932],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[423009,423010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423120,423136],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[423201,423202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423269,423280],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[423357,423358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423723,423782],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[424329,424344],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[424408,424409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424486,424497],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[424582,424583],"content":"<","needQuote":true,"nodes":[]},{"pos":[424610,424617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[424683,424684]},{"pos":[424766,424777],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[424862,424863],"content":"<","needQuote":true,"nodes":[]},{"pos":[424890,424897],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[424962,424963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425132,425150],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[425217,425218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425295,425306],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[425392,425395]},{"pos":[425429,425436],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[425469,425470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[425498,425499]},{"pos":[425581,425592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[425678,425681]},{"pos":[425715,425722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[425755,425756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425783,425784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426240,426286],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[426694,426709],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[426773,426774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426851,426862],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[426947,426948],"content":"<","needQuote":true,"nodes":[]},{"pos":[426975,426982],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[427048,427049]},{"pos":[427081,427088],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[427121,427122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427251,427269],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[427336,427337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427414,427425],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[427511,427514]},{"pos":[427548,427555],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[427588,427589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[427617,427618]},{"pos":[427650,427657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[427690,427691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428079,428126],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[428538,428554],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[428619,428620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428697,428708],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[428793,428794],"content":"<","needQuote":true,"nodes":[]},{"pos":[428821,428828],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[428894,428895]},{"pos":[428927,428934],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[428967,428968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429098,429117],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[429185,429186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429263,429274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[429360,429363]},{"pos":[429397,429404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[429437,429438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[429466,429467]},{"pos":[429499,429506],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[429539,429540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429932,429980],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[430396,430413],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[430479,430480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430557,430568],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[430653,430654],"content":"<","needQuote":true,"nodes":[]},{"pos":[430681,430688],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[430754,430755]},{"pos":[430787,430794],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[430827,430828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430959,430979],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[431048,431049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431126,431137],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[431223,431226]},{"pos":[431260,431267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[431300,431301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[431329,431330]},{"pos":[431362,431369],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[431402,431403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431848,431924],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[432534,432551],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[432617,432618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432695,432706],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[432791,432792],"content":"<","needQuote":true,"nodes":[]},{"pos":[432819,432826],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[432892,432893]},{"pos":[432925,432932],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[432966,432967]},{"pos":[433055,433072],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[433163,433164],"content":"<","needQuote":true,"nodes":[]},{"pos":[433191,433198],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[433263,433264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433445,433465],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[433534,433535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433612,433623],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[433709,433712]},{"pos":[433746,433753],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[433786,433787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[433815,433816]},{"pos":[433848,433855],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[433889,433890]},{"pos":[433978,433995],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[434087,434090]},{"pos":[434124,434131],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[434164,434165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434192,434193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434690,434726],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[435099,435113],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[435176,435177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435254,435265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[435350,435351],"content":"<","needQuote":true,"nodes":[]},{"pos":[435378,435385],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[435450,435451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435575,435592],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[435658,435659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435736,435747],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[435833,435836]},{"pos":[435870,435877],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[435910,435911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435938,435939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436328,436388],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[436899,436913],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[436976,436977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437054,437065],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[437150,437151],"content":"<","needQuote":true,"nodes":[]},{"pos":[437178,437185],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[437251,437252]},{"pos":[437307,437311],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[437369,437370],"content":"<","needQuote":true,"nodes":[]},{"pos":[437397,437404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[437438,437439]},{"pos":[437495,437502],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[437595,437596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437752,437769],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[437835,437836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437913,437924],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[438010,438013]},{"pos":[438047,438054],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[438087,438088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[438116,438117]},{"pos":[438172,438176],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[438235,438238]},{"pos":[438272,438279],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[438313,438314]},{"pos":[438370,438377],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[438438,438439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438466,438467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438916,438961],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[439370,439393],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[439465,439466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439543,439554],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[439639,439640],"content":"<","needQuote":true,"nodes":[]},{"pos":[439667,439674],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[439739,439740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439873,439899],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[439974,439975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440052,440063],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[440149,440152]},{"pos":[440186,440193],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[440226,440227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440254,440255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440652,440706],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[441146,441169],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[441241,441242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441319,441330],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[441415,441416],"content":"<","needQuote":true,"nodes":[]},{"pos":[441443,441450],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[441516,441517]},{"pos":[441549,441556],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[441589,441590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441727,441753],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[441828,441829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441906,441917],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[442003,442006]},{"pos":[442040,442047],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[442080,442081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[442109,442110]},{"pos":[442142,442149],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[442182,442183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442592,442631],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[443016,443033],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[443099,443100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443177,443188],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[443273,443274],"content":"<","needQuote":true,"nodes":[]},{"pos":[443301,443308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[443373,443374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443501,443521],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[443590,443591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443668,443679],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[443765,443768]},{"pos":[443802,443809],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[443842,443843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443870,443871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444290,444357],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[444936,444953],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[445019,445020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445097,445108],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[445193,445194],"content":"<","needQuote":true,"nodes":[]},{"pos":[445221,445228],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[445294,445295]},{"pos":[445383,445400],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[445491,445492],"content":"<","needQuote":true,"nodes":[]},{"pos":[445519,445526],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[445591,445592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445769,445789],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[445858,445859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445936,445947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[446033,446036]},{"pos":[446070,446077],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[446110,446111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[446139,446140]},{"pos":[446228,446245],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[446337,446340]},{"pos":[446374,446381],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[446414,446415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446442,446443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446935,446982],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[447419,447437],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[447504,447505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447582,447593],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[447678,447679],"content":"<","needQuote":true,"nodes":[]},{"pos":[447706,447713],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[447779,447780]},{"pos":[447834,447839],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[447898,447899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448040,448061],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[448131,448132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448209,448220],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[448306,448309]},{"pos":[448343,448350],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[448383,448384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[448412,448413]},{"pos":[448467,448472],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[448531,448532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448954,449010],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[449483,449510],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[449586,449587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449664,449675],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[449760,449761],"content":"<","needQuote":true,"nodes":[]},{"pos":[449788,449795],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[449861,449862]},{"pos":[449916,449921],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[449980,449981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450131,450161],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[450240,450241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450318,450329],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[450415,450418]},{"pos":[450452,450459],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[450492,450493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[450521,450522]},{"pos":[450576,450581],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[450640,450641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451109,451168],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[451715,451730],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[451794,451795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451872,451883],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[451968,451969],"content":"<","needQuote":true,"nodes":[]},{"pos":[451996,452003],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[452069,452070]},{"pos":[452152,452163],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[452248,452249],"content":"<","needQuote":true,"nodes":[]},{"pos":[452276,452283],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[452348,452349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452518,452536],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[452603,452604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452681,452692],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[452778,452781]},{"pos":[452815,452822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[452855,452856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[452884,452885]},{"pos":[452967,452978],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[453064,453067]},{"pos":[453101,453108],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[453141,453142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453169,453170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453716,453803],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[454544,454559],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[454623,454624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454701,454712],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[454797,454798],"content":"<","needQuote":true,"nodes":[]},{"pos":[454825,454832],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[454898,454899]},{"pos":[454981,454992],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[455077,455078],"content":"<","needQuote":true,"nodes":[]},{"pos":[455105,455112],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[455178,455179]},{"pos":[455267,455284],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[455375,455376],"content":"<","needQuote":true,"nodes":[]},{"pos":[455403,455410],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[455475,455476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455695,455713],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[455780,455781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455858,455869],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[455955,455958]},{"pos":[455992,455999],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[456032,456033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[456061,456062]},{"pos":[456144,456155],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[456241,456244]},{"pos":[456278,456285],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[456318,456319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[456347,456348]},{"pos":[456436,456453],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[456545,456548]},{"pos":[456582,456589],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[456622,456623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456650,456651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457211,457247],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[457620,457634],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[457697,457698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457775,457786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[457871,457872],"content":"<","needQuote":true,"nodes":[]},{"pos":[457899,457906],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[457971,457972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458096,458113],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[458179,458180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458257,458268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[458354,458357]},{"pos":[458391,458398],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[458431,458432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458459,458460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458849,458909],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[459420,459434],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[459497,459498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459575,459586],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[459671,459672],"content":"<","needQuote":true,"nodes":[]},{"pos":[459699,459706],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[459772,459773]},{"pos":[459828,459832],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[459890,459891],"content":"<","needQuote":true,"nodes":[]},{"pos":[459918,459925],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[459959,459960]},{"pos":[460016,460023],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[460116,460117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460273,460290],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[460356,460357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460434,460445],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[460531,460534]},{"pos":[460568,460575],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[460608,460609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[460637,460638]},{"pos":[460693,460697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[460756,460759]},{"pos":[460793,460800],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[460834,460835]},{"pos":[460891,460898],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[460959,460960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460987,460988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461437,461482],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[461891,461914],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[461986,461987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462064,462075],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[462160,462161],"content":"<","needQuote":true,"nodes":[]},{"pos":[462188,462195],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[462260,462261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462394,462420],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[462495,462496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462573,462584],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[462670,462673]},{"pos":[462707,462714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[462747,462748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462775,462776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463201,463270],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[463817,463840],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[463912,463913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463990,464001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[464086,464087],"content":"<","needQuote":true,"nodes":[]},{"pos":[464114,464121],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[464187,464188]},{"pos":[464243,464247],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[464305,464306],"content":"<","needQuote":true,"nodes":[]},{"pos":[464333,464340],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[464374,464375]},{"pos":[464431,464438],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[464531,464532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464697,464723],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[464798,464799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464876,464887],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[464973,464976]},{"pos":[465010,465017],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[465050,465051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[465079,465080]},{"pos":[465135,465139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[465198,465201]},{"pos":[465235,465242],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[465276,465277]},{"pos":[465333,465340],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[465401,465402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465429,465430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465920,465985],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[466488,466510],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[466581,466582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466659,466670],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[466755,466756],"content":"<","needQuote":true,"nodes":[]},{"pos":[466783,466790],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[466856,466857]},{"pos":[466912,466916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[466974,466975],"content":"<","needQuote":true,"nodes":[]},{"pos":[467002,467009],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[467043,467044]},{"pos":[467076,467080],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[467142,467143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467290,467315],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[467389,467390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467467,467478],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467564,467567]},{"pos":[467601,467608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[467641,467642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467670,467671]},{"pos":[467726,467730],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[467789,467792]},{"pos":[467826,467833],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[467867,467868]},{"pos":[467900,467904],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[467934,467935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467962,467963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468477,468567],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[469255,469277],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[469348,469349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469426,469437],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[469522,469523],"content":"<","needQuote":true,"nodes":[]},{"pos":[469550,469557],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[469623,469624]},{"pos":[469679,469683],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[469741,469742],"content":"<","needQuote":true,"nodes":[]},{"pos":[469769,469776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[469810,469811]},{"pos":[469843,469847],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[469910,469911]},{"pos":[469999,470016],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[470107,470108],"content":"<","needQuote":true,"nodes":[]},{"pos":[470135,470139],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[470201,470202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470399,470424],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[470498,470499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470576,470587],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[470673,470676]},{"pos":[470710,470717],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[470750,470751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[470779,470780]},{"pos":[470835,470839],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[470898,470901]},{"pos":[470935,470942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[470976,470977]},{"pos":[471009,471013],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[471043,471044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[471072,471073]},{"pos":[471161,471178],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[471270,471273]},{"pos":[471307,471311],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[471341,471342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471369,471370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471958,472058],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[472707,472739],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[472820,472821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472898,472909],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[472994,472995],"content":"<","needQuote":true,"nodes":[]},{"pos":[473022,473029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[473095,473096]},{"pos":[473151,473155],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[473213,473214],"content":"<","needQuote":true,"nodes":[]},{"pos":[473241,473248],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[473282,473283]},{"pos":[473315,473319],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[473382,473383]},{"pos":[473438,473442],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[473500,473501],"content":"<","needQuote":true,"nodes":[]},{"pos":[473528,473535],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[473569,473570]},{"pos":[473602,473610],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[473676,473677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473845,473880],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[473964,473965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474042,474053],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[474139,474142]},{"pos":[474176,474183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[474216,474217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[474245,474246]},{"pos":[474301,474305],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[474364,474367]},{"pos":[474401,474408],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[474442,474443]},{"pos":[474475,474479],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[474509,474510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[474538,474539]},{"pos":[474594,474598],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[474657,474660]},{"pos":[474694,474701],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[474735,474736]},{"pos":[474768,474776],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[474810,474811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474838,474839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475468,475593],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[476427,476459],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[476540,476541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476618,476629],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[476714,476715],"content":"<","needQuote":true,"nodes":[]},{"pos":[476742,476749],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[476815,476816]},{"pos":[476871,476875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[476933,476934],"content":"<","needQuote":true,"nodes":[]},{"pos":[476961,476968],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[477002,477003]},{"pos":[477035,477039],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[477102,477103]},{"pos":[477158,477162],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[477220,477221],"content":"<","needQuote":true,"nodes":[]},{"pos":[477248,477255],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[477289,477290]},{"pos":[477322,477330],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[477397,477398]},{"pos":[477486,477503],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[477594,477595],"content":"<","needQuote":true,"nodes":[]},{"pos":[477622,477626],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[477688,477689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477907,477942],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[478026,478027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478104,478115],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[478201,478204]},{"pos":[478238,478245],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[478278,478279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[478307,478308]},{"pos":[478363,478367],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[478426,478429]},{"pos":[478463,478470],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[478504,478505]},{"pos":[478537,478541],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[478571,478572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[478600,478601]},{"pos":[478656,478660],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[478719,478722]},{"pos":[478756,478763],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[478797,478798]},{"pos":[478830,478838],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[478872,478873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[478901,478902]},{"pos":[478990,479007],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[479099,479102]},{"pos":[479136,479140],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[479170,479171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479198,479199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479925,480042],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[480846,480877],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[480957,480958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481035,481046],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[481131,481132],"content":"<","needQuote":true,"nodes":[]},{"pos":[481159,481166],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481232,481233]},{"pos":[481288,481292],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481350,481351],"content":"<","needQuote":true,"nodes":[]},{"pos":[481378,481385],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481419,481420]},{"pos":[481452,481456],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[481519,481520]},{"pos":[481575,481579],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481637,481638],"content":"<","needQuote":true,"nodes":[]},{"pos":[481665,481669],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[481700,481701]},{"pos":[481783,481794],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[481879,481880],"content":"<","needQuote":true,"nodes":[]},{"pos":[481907,481914],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481980,481981]},{"pos":[482013,482020],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[482085,482086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482298,482332],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[482415,482416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482493,482504],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[482590,482593]},{"pos":[482627,482634],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[482667,482668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[482696,482697]},{"pos":[482752,482756],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[482815,482818]},{"pos":[482852,482859],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[482893,482894]},{"pos":[482926,482930],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[482960,482961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[482989,482990]},{"pos":[483045,483049],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[483108,483111]},{"pos":[483145,483149],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[483180,483181]},{"pos":[483263,483274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[483360,483363]},{"pos":[483397,483404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[483437,483438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[483466,483467]},{"pos":[483499,483506],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[483539,483540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483567,483568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484322,484464],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[485453,485484],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[485564,485565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485642,485653],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[485738,485739],"content":"<","needQuote":true,"nodes":[]},{"pos":[485766,485773],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[485839,485840]},{"pos":[485895,485899],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[485957,485958],"content":"<","needQuote":true,"nodes":[]},{"pos":[485985,485992],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[486026,486027]},{"pos":[486059,486063],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[486126,486127]},{"pos":[486182,486186],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[486244,486245],"content":"<","needQuote":true,"nodes":[]},{"pos":[486272,486276],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[486307,486308]},{"pos":[486390,486401],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[486486,486487],"content":"<","needQuote":true,"nodes":[]},{"pos":[486514,486521],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[486587,486588]},{"pos":[486620,486627],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[486693,486694]},{"pos":[486782,486799],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[486890,486891],"content":"<","needQuote":true,"nodes":[]},{"pos":[486918,486922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[486984,486985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487247,487281],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[487364,487365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487442,487453],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[487539,487542]},{"pos":[487576,487583],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[487616,487617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[487645,487646]},{"pos":[487701,487705],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[487764,487767]},{"pos":[487801,487808],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[487842,487843]},{"pos":[487875,487879],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[487909,487910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[487938,487939]},{"pos":[487994,487998],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[488057,488060]},{"pos":[488094,488098],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[488129,488130]},{"pos":[488212,488223],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[488309,488312]},{"pos":[488346,488353],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[488386,488387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[488415,488416]},{"pos":[488448,488455],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[488488,488489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[488517,488518]},{"pos":[488606,488623],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[488715,488718]},{"pos":[488752,488756],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[488786,488787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488814,488815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489643,489796],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[490749,490790],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[490880,490881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490958,490969],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[491054,491055],"content":"<","needQuote":true,"nodes":[]},{"pos":[491082,491089],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491155,491156]},{"pos":[491211,491215],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[491273,491274],"content":"<","needQuote":true,"nodes":[]},{"pos":[491301,491308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491342,491343]},{"pos":[491375,491379],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[491442,491443]},{"pos":[491498,491502],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[491560,491561],"content":"<","needQuote":true,"nodes":[]},{"pos":[491588,491595],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491629,491630]},{"pos":[491662,491670],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[491737,491738]},{"pos":[491793,491797],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[491855,491856],"content":"<","needQuote":true,"nodes":[]},{"pos":[491883,491887],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[491918,491919]},{"pos":[492001,492012],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[492097,492098],"content":"<","needQuote":true,"nodes":[]},{"pos":[492125,492133],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[492200,492201]},{"pos":[492233,492240],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[492305,492306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492539,492583],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[492676,492677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492754,492765],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[492851,492854]},{"pos":[492888,492895],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[492928,492929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[492957,492958]},{"pos":[493013,493017],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[493076,493079]},{"pos":[493113,493120],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[493154,493155]},{"pos":[493187,493191],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[493221,493222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[493250,493251]},{"pos":[493306,493310],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[493369,493372]},{"pos":[493406,493413],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[493447,493448]},{"pos":[493480,493488],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[493522,493523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[493551,493552]},{"pos":[493607,493611],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[493670,493673]},{"pos":[493707,493711],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[493742,493743]},{"pos":[493825,493836],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[493922,493925]},{"pos":[493959,493967],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[494001,494002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[494030,494031]},{"pos":[494063,494070],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[494103,494104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494131,494132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495003,495181],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[496319,496360],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[496450,496451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496528,496539],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[496624,496625],"content":"<","needQuote":true,"nodes":[]},{"pos":[496652,496659],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[496725,496726]},{"pos":[496781,496785],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[496843,496844],"content":"<","needQuote":true,"nodes":[]},{"pos":[496871,496878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[496912,496913]},{"pos":[496945,496949],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[497012,497013]},{"pos":[497068,497072],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[497130,497131],"content":"<","needQuote":true,"nodes":[]},{"pos":[497158,497165],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[497199,497200]},{"pos":[497232,497240],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[497307,497308]},{"pos":[497363,497367],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[497425,497426],"content":"<","needQuote":true,"nodes":[]},{"pos":[497453,497457],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[497488,497489]},{"pos":[497571,497582],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[497667,497668],"content":"<","needQuote":true,"nodes":[]},{"pos":[497695,497703],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[497770,497771]},{"pos":[497803,497810],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[497876,497877]},{"pos":[497965,497982],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[498073,498074],"content":"<","needQuote":true,"nodes":[]},{"pos":[498101,498105],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[498167,498168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498451,498495],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[498588,498589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498666,498677],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[498763,498766]},{"pos":[498800,498807],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[498840,498841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[498869,498870]},{"pos":[498925,498929],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[498988,498991]},{"pos":[499025,499032],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499066,499067]},{"pos":[499099,499103],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[499133,499134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[499162,499163]},{"pos":[499218,499222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[499281,499284]},{"pos":[499318,499325],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499359,499360]},{"pos":[499392,499400],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[499434,499435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[499463,499464]},{"pos":[499519,499523],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[499582,499585]},{"pos":[499619,499623],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[499654,499655]},{"pos":[499737,499748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[499834,499837]},{"pos":[499871,499879],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[499913,499914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[499942,499943]},{"pos":[499975,499982],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[500015,500016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[500044,500045]},{"pos":[500133,500150],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[500242,500245]},{"pos":[500279,500283],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[500313,500314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500341,500342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501312,501478],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[502576,502616],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[502705,502706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502783,502794],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[502879,502880],"content":"<","needQuote":true,"nodes":[]},{"pos":[502907,502913],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[502978,502979]},{"pos":[503061,503072],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[503157,503158],"content":"<","needQuote":true,"nodes":[]},{"pos":[503185,503191],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[503256,503257]},{"pos":[503312,503316],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[503374,503375],"content":"<","needQuote":true,"nodes":[]},{"pos":[503402,503408],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[503441,503442]},{"pos":[503474,503478],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[503541,503542]},{"pos":[503597,503601],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[503659,503660],"content":"<","needQuote":true,"nodes":[]},{"pos":[503687,503693],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[503726,503727]},{"pos":[503759,503763],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[503826,503827]},{"pos":[503882,503886],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[503944,503945],"content":"<","needQuote":true,"nodes":[]},{"pos":[503972,503978],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[504011,504012]},{"pos":[504094,504105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[504190,504191],"content":"<","needQuote":true,"nodes":[]},{"pos":[504218,504224],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[504289,504290]},{"pos":[504322,504329],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[504394,504395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504674,504717],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[504809,504810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504887,504898],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[504984,504987]},{"pos":[505021,505027],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[505059,505060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505088,505089]},{"pos":[505171,505182],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[505268,505271]},{"pos":[505305,505311],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[505343,505344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505372,505373]},{"pos":[505428,505432],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[505491,505494]},{"pos":[505528,505534],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[505567,505568]},{"pos":[505600,505604],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[505634,505635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505663,505664]},{"pos":[505719,505723],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[505782,505785]},{"pos":[505819,505825],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[505858,505859]},{"pos":[505891,505895],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[505925,505926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505954,505955]},{"pos":[506010,506014],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[506073,506076]},{"pos":[506110,506116],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[506149,506150]},{"pos":[506232,506243],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[506329,506332]},{"pos":[506366,506372],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[506404,506405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[506433,506434]},{"pos":[506466,506473],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[506506,506507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506534,506535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507527,507718],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[509001,509041],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[509130,509131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509208,509219],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[509304,509305],"content":"<","needQuote":true,"nodes":[]},{"pos":[509332,509338],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[509403,509404]},{"pos":[509486,509497],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[509582,509583],"content":"<","needQuote":true,"nodes":[]},{"pos":[509610,509616],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[509681,509682]},{"pos":[509737,509741],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[509799,509800],"content":"<","needQuote":true,"nodes":[]},{"pos":[509827,509833],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[509866,509867]},{"pos":[509899,509903],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[509966,509967]},{"pos":[510022,510026],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[510084,510085],"content":"<","needQuote":true,"nodes":[]},{"pos":[510112,510118],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[510151,510152]},{"pos":[510184,510188],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[510251,510252]},{"pos":[510307,510311],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[510369,510370],"content":"<","needQuote":true,"nodes":[]},{"pos":[510397,510403],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[510436,510437]},{"pos":[510519,510530],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[510615,510616],"content":"<","needQuote":true,"nodes":[]},{"pos":[510643,510649],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[510714,510715]},{"pos":[510747,510754],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[510820,510821]},{"pos":[510909,510926],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[511017,511018],"content":"<","needQuote":true,"nodes":[]},{"pos":[511045,511049],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[511111,511112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511441,511484],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[511576,511577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511654,511665],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[511751,511754]},{"pos":[511788,511794],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[511826,511827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[511855,511856]},{"pos":[511938,511949],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[512035,512038]},{"pos":[512072,512078],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[512110,512111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[512139,512140]},{"pos":[512195,512199],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[512258,512261]},{"pos":[512295,512301],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[512334,512335]},{"pos":[512367,512371],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[512401,512402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[512430,512431]},{"pos":[512486,512490],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[512549,512552]},{"pos":[512586,512592],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[512625,512626]},{"pos":[512658,512662],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[512692,512693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[512721,512722]},{"pos":[512777,512781],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[512840,512843]},{"pos":[512877,512883],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[512916,512917]},{"pos":[512999,513010],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[513096,513099]},{"pos":[513133,513139],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[513171,513172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[513200,513201]},{"pos":[513233,513240],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[513273,513274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[513302,513303]},{"pos":[513391,513408],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[513500,513503]},{"pos":[513537,513541],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[513571,513572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513599,513600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514538,514600],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[515159,515177],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[515244,515245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515322,515333],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[515418,515419],"content":"<","needQuote":true,"nodes":[]},{"pos":[515446,515453],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[515519,515520]},{"pos":[515602,515613],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[515698,515699],"content":"<","needQuote":true,"nodes":[]},{"pos":[515726,515733],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[515798,515799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515971,515992],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[516062,516063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516140,516151],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[516237,516240]},{"pos":[516274,516281],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[516314,516315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[516343,516344]},{"pos":[516426,516437],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[516523,516526]},{"pos":[516560,516567],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[516600,516601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516628,516629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517187,517277],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[518030,518048],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[518115,518116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518193,518204],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[518289,518290],"content":"<","needQuote":true,"nodes":[]},{"pos":[518317,518324],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[518390,518391]},{"pos":[518473,518484],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[518569,518570],"content":"<","needQuote":true,"nodes":[]},{"pos":[518597,518604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[518670,518671]},{"pos":[518759,518776],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[518867,518868],"content":"<","needQuote":true,"nodes":[]},{"pos":[518895,518902],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[518967,518968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519190,519211],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[519281,519282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519359,519370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[519456,519459]},{"pos":[519493,519500],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[519533,519534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[519562,519563]},{"pos":[519645,519656],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[519742,519745]},{"pos":[519779,519786],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[519819,519820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[519848,519849]},{"pos":[519937,519954],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[520046,520049]},{"pos":[520083,520090],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[520123,520124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520151,520152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520831,520979],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[521918,521953],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[522037,522038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522115,522126],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[522211,522212],"content":"<","needQuote":true,"nodes":[]},{"pos":[522239,522245],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[522310,522311]},{"pos":[522393,522404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[522489,522490],"content":"<","needQuote":true,"nodes":[]},{"pos":[522517,522523],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[522588,522589]},{"pos":[522644,522648],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[522706,522707],"content":"<","needQuote":true,"nodes":[]},{"pos":[522734,522740],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[522773,522774]},{"pos":[522806,522810],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[522873,522874]},{"pos":[522929,522933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[522991,522992],"content":"<","needQuote":true,"nodes":[]},{"pos":[523019,523025],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[523058,523059]},{"pos":[523091,523095],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[523158,523159]},{"pos":[523214,523218],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[523276,523277],"content":"<","needQuote":true,"nodes":[]},{"pos":[523304,523310],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[523343,523344]},{"pos":[523376,523382],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[523415,523416]},{"pos":[523448,523455],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[523520,523521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523755,523793],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[523880,523881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523958,523969],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[524055,524058]},{"pos":[524092,524098],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[524130,524131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[524159,524160]},{"pos":[524242,524253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[524339,524342]},{"pos":[524376,524382],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[524414,524415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[524443,524444]},{"pos":[524499,524503],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[524562,524565]},{"pos":[524599,524605],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[524638,524639]},{"pos":[524671,524675],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[524705,524706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[524734,524735]},{"pos":[524790,524794],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[524853,524856]},{"pos":[524890,524896],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[524929,524930]},{"pos":[524962,524966],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[524996,524997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[525025,525026]},{"pos":[525081,525085],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[525144,525147]},{"pos":[525181,525187],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[525220,525221]},{"pos":[525253,525259],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[525292,525293]},{"pos":[525325,525332],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[525365,525366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525393,525394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526257,526430],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[527554,527589],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[527673,527674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527751,527762],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[527847,527848],"content":"<","needQuote":true,"nodes":[]},{"pos":[527875,527881],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[527946,527947]},{"pos":[528029,528040],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[528125,528126],"content":"<","needQuote":true,"nodes":[]},{"pos":[528153,528159],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[528224,528225]},{"pos":[528280,528284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[528342,528343],"content":"<","needQuote":true,"nodes":[]},{"pos":[528370,528376],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[528409,528410]},{"pos":[528442,528446],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[528509,528510]},{"pos":[528565,528569],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[528627,528628],"content":"<","needQuote":true,"nodes":[]},{"pos":[528655,528661],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[528694,528695]},{"pos":[528727,528731],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[528794,528795]},{"pos":[528850,528854],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[528912,528913],"content":"<","needQuote":true,"nodes":[]},{"pos":[528940,528946],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[528979,528980]},{"pos":[529012,529018],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[529051,529052]},{"pos":[529084,529091],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[529157,529158]},{"pos":[529246,529263],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[529354,529355],"content":"<","needQuote":true,"nodes":[]},{"pos":[529382,529386],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[529448,529449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529733,529771],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[529858,529859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529936,529947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530033,530036]},{"pos":[530070,530076],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[530108,530109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[530137,530138]},{"pos":[530220,530231],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530317,530320]},{"pos":[530354,530360],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[530392,530393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[530421,530422]},{"pos":[530477,530481],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[530540,530543]},{"pos":[530577,530583],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[530616,530617]},{"pos":[530649,530653],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[530683,530684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[530712,530713]},{"pos":[530768,530772],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[530831,530834]},{"pos":[530868,530874],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[530907,530908]},{"pos":[530940,530944],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[530974,530975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[531003,531004]},{"pos":[531059,531063],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[531122,531125]},{"pos":[531159,531165],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[531198,531199]},{"pos":[531231,531237],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[531270,531271]},{"pos":[531303,531310],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[531343,531344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[531372,531373]},{"pos":[531461,531478],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[531570,531573]},{"pos":[531607,531611],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[531641,531642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531669,531670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532475,532510],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[532879,532892],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[532954,532955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533032,533043],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[533128,533129],"content":"<","needQuote":true,"nodes":[]},{"pos":[533156,533163],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[533228,533229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533352,533368],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[533433,533434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533511,533522],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[533608,533611]},{"pos":[533645,533652],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[533685,533686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533713,533714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534099,534158],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[534665,534678],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[534740,534741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534818,534829],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[534914,534915],"content":"<","needQuote":true,"nodes":[]},{"pos":[534942,534949],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[535015,535016]},{"pos":[535071,535075],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[535133,535134],"content":"<","needQuote":true,"nodes":[]},{"pos":[535161,535168],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[535202,535203]},{"pos":[535259,535266],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[535359,535360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535515,535531],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[535596,535597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535674,535685],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[535771,535774]},{"pos":[535808,535815],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[535848,535849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[535877,535878]},{"pos":[535933,535937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[535996,535999]},{"pos":[536033,536040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[536074,536075]},{"pos":[536131,536138],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[536199,536200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536227,536228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536673,536717],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[537122,537144],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[537215,537216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537293,537304],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[537389,537390],"content":"<","needQuote":true,"nodes":[]},{"pos":[537417,537424],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[537489,537490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537622,537647],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[537721,537722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537799,537810],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[537896,537899]},{"pos":[537933,537940],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[537973,537974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538001,538002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538423,538491],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[539034,539056],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[539127,539128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539205,539216],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[539301,539302],"content":"<","needQuote":true,"nodes":[]},{"pos":[539329,539336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[539402,539403]},{"pos":[539458,539462],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[539520,539521],"content":"<","needQuote":true,"nodes":[]},{"pos":[539548,539555],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[539589,539590]},{"pos":[539646,539653],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[539746,539747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539911,539936],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[540010,540011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540088,540099],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[540185,540188]},{"pos":[540222,540229],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540262,540263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[540291,540292]},{"pos":[540347,540351],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[540410,540413]},{"pos":[540447,540454],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[540488,540489]},{"pos":[540545,540552],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[540613,540614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540641,540642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541110,541150],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[541539,541557],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[541624,541625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541702,541713],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[541798,541799],"content":"<","needQuote":true,"nodes":[]},{"pos":[541826,541833],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[541898,541899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542027,542048],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[542118,542119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542196,542207],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[542293,542296]},{"pos":[542330,542337],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[542370,542371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542398,542399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542804,542868],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[543395,543413],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[543480,543481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543558,543569],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[543654,543655],"content":"<","needQuote":true,"nodes":[]},{"pos":[543682,543689],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[543755,543756]},{"pos":[543811,543815],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[543873,543874],"content":"<","needQuote":true,"nodes":[]},{"pos":[543901,543908],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[543942,543943]},{"pos":[543999,544006],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[544099,544100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544260,544281],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[544351,544352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544429,544440],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[544526,544529]},{"pos":[544563,544570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[544603,544604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[544632,544633]},{"pos":[544688,544692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[544751,544754]},{"pos":[544788,544795],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[544829,544830]},{"pos":[544886,544893],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[544954,544955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544982,544983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545433,545467],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[545832,545844],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[545905,545906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545983,545994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[546079,546080],"content":"<","needQuote":true,"nodes":[]},{"pos":[546107,546114],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546179,546180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546302,546317],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[546381,546382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546459,546470],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[546556,546559]},{"pos":[546593,546600],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546633,546634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546661,546662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547043,547101],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[547604,547616],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[547677,547678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547755,547766],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[547851,547852],"content":"<","needQuote":true,"nodes":[]},{"pos":[547879,547886],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[547952,547953]},{"pos":[548008,548012],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[548070,548071],"content":"<","needQuote":true,"nodes":[]},{"pos":[548098,548105],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[548139,548140]},{"pos":[548196,548203],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[548296,548297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548451,548466],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[548530,548531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548608,548619],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[548705,548708]},{"pos":[548742,548749],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[548782,548783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[548811,548812]},{"pos":[548867,548871],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[548930,548933]},{"pos":[548967,548974],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[549008,549009]},{"pos":[549065,549072],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[549133,549134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549161,549162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549625,549682],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[550181,550193],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[550254,550255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550332,550343],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[550428,550429],"content":"<","needQuote":true,"nodes":[]},{"pos":[550456,550463],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[550529,550530]},{"pos":[550585,550589],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[550647,550648],"content":"<","needQuote":true,"nodes":[]},{"pos":[550675,550682],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[550716,550717]},{"pos":[550772,550778],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[550870,550871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551024,551039],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[551103,551104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551181,551192],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[551278,551281]},{"pos":[551315,551322],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[551355,551356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[551384,551385]},{"pos":[551440,551444],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[551503,551506]},{"pos":[551540,551547],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[551581,551582]},{"pos":[551637,551643],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[551703,551704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551731,551732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552191,552247],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[552742,552754],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[552815,552816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552893,552904],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[552989,552990],"content":"<","needQuote":true,"nodes":[]},{"pos":[553017,553024],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[553090,553091]},{"pos":[553146,553150],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[553208,553209],"content":"<","needQuote":true,"nodes":[]},{"pos":[553236,553243],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[553277,553278]},{"pos":[553332,553337],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[553428,553429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553581,553596],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[553660,553661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553738,553749],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[553835,553838]},{"pos":[553872,553879],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[553912,553913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[553941,553942]},{"pos":[553997,554001],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[554060,554063]},{"pos":[554097,554104],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[554138,554139]},{"pos":[554193,554198],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[554257,554258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554285,554286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554742,554798],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[555293,555305],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[555366,555367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555444,555455],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[555540,555541],"content":"<","needQuote":true,"nodes":[]},{"pos":[555568,555575],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[555641,555642]},{"pos":[555697,555701],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[555759,555760],"content":"<","needQuote":true,"nodes":[]},{"pos":[555787,555794],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[555828,555829]},{"pos":[555883,555888],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[555979,555980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556132,556147],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[556211,556212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556289,556300],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[556386,556389]},{"pos":[556423,556430],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[556463,556464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[556492,556493]},{"pos":[556548,556552],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[556611,556614]},{"pos":[556648,556655],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[556689,556690]},{"pos":[556744,556749],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[556808,556809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556836,556837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557312,557380],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[557950,557962],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[558023,558024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558101,558112],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[558197,558198],"content":"<","needQuote":true,"nodes":[]},{"pos":[558225,558232],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[558298,558299]},{"pos":[558354,558358],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[558416,558417],"content":"<","needQuote":true,"nodes":[]},{"pos":[558444,558451],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[558485,558486]},{"pos":[558545,558553],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[558615,558616],"content":"<","needQuote":true,"nodes":[]},{"pos":[558667,558674],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[558799,558800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558971,558986],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[559050,559051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559128,559139],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[559225,559228]},{"pos":[559262,559269],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[559302,559303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[559331,559332]},{"pos":[559387,559391],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[559450,559453]},{"pos":[559487,559494],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[559528,559529]},{"pos":[559588,559596],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[559659,559662]},{"pos":[559720,559727],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[559788,559789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559816,559817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559844,559845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560365,560432],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[560998,561010],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[561071,561072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561149,561160],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[561245,561246],"content":"<","needQuote":true,"nodes":[]},{"pos":[561273,561280],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[561346,561347]},{"pos":[561402,561406],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[561464,561465],"content":"<","needQuote":true,"nodes":[]},{"pos":[561492,561499],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[561533,561534]},{"pos":[561593,561601],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[561663,561664],"content":"<","needQuote":true,"nodes":[]},{"pos":[561714,561720],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[561844,561845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562015,562030],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[562094,562095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562172,562183],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[562269,562272]},{"pos":[562306,562313],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[562346,562347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[562375,562376]},{"pos":[562431,562435],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[562494,562497]},{"pos":[562531,562538],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[562572,562573]},{"pos":[562632,562640],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[562703,562706]},{"pos":[562763,562769],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[562829,562830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562857,562858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562885,562886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563402,563468],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[564030,564042],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[564103,564104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564181,564192],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[564277,564278],"content":"<","needQuote":true,"nodes":[]},{"pos":[564305,564312],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564378,564379]},{"pos":[564434,564438],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[564496,564497],"content":"<","needQuote":true,"nodes":[]},{"pos":[564524,564531],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564565,564566]},{"pos":[564625,564633],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[564695,564696],"content":"<","needQuote":true,"nodes":[]},{"pos":[564745,564750],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[564873,564874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565043,565058],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[565122,565123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565200,565211],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[565297,565300]},{"pos":[565334,565341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[565374,565375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[565403,565404]},{"pos":[565459,565463],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[565522,565525]},{"pos":[565559,565566],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[565600,565601]},{"pos":[565660,565668],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[565731,565734]},{"pos":[565790,565795],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[565854,565855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565882,565883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565910,565911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566424,566490],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[567052,567064],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[567125,567126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567203,567214],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[567299,567300],"content":"<","needQuote":true,"nodes":[]},{"pos":[567327,567334],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[567400,567401]},{"pos":[567456,567460],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[567518,567519],"content":"<","needQuote":true,"nodes":[]},{"pos":[567546,567553],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[567587,567588]},{"pos":[567647,567655],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[567717,567718],"content":"<","needQuote":true,"nodes":[]},{"pos":[567767,567772],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[567895,567896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568065,568080],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[568144,568145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568222,568233],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[568319,568322]},{"pos":[568356,568363],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[568396,568397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[568425,568426]},{"pos":[568481,568485],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[568544,568547]},{"pos":[568581,568588],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[568622,568623]},{"pos":[568682,568690],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[568753,568756]},{"pos":[568812,568817],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[568876,568877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568904,568905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568932,568933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569447,569514],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[570080,570092],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[570153,570154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570231,570242],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[570327,570328],"content":"<","needQuote":true,"nodes":[]},{"pos":[570355,570362],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[570428,570429]},{"pos":[570484,570488],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[570546,570547],"content":"<","needQuote":true,"nodes":[]},{"pos":[570574,570581],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[570615,570616]},{"pos":[570675,570683],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[570745,570746],"content":"<","needQuote":true,"nodes":[]},{"pos":[570796,570802],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[570926,570927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571097,571112],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[571176,571177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571254,571265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[571351,571354]},{"pos":[571388,571395],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[571428,571429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[571457,571458]},{"pos":[571513,571517],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[571576,571579]},{"pos":[571613,571620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571654,571655]},{"pos":[571714,571722],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[571785,571788]},{"pos":[571845,571851],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[571911,571912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571939,571940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571967,571968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572468,572525],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[573024,573036],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[573097,573098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573175,573186],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[573271,573272],"content":"<","needQuote":true,"nodes":[]},{"pos":[573299,573306],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[573372,573373]},{"pos":[573428,573432],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[573490,573491],"content":"<","needQuote":true,"nodes":[]},{"pos":[573518,573525],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[573559,573560]},{"pos":[573615,573621],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[573713,573714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573867,573882],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[573946,573947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574024,574035],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[574121,574124]},{"pos":[574158,574165],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[574198,574199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[574227,574228]},{"pos":[574283,574287],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[574346,574349]},{"pos":[574383,574390],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[574424,574425]},{"pos":[574480,574486],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[574546,574547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574574,574575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575025,575092],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[575597,575618],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[575688,575689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575766,575777],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[575862,575863],"content":"<","needQuote":true,"nodes":[]},{"pos":[575890,575897],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[575963,575964]},{"pos":[576019,576023],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[576081,576082],"content":"<","needQuote":true,"nodes":[]},{"pos":[576109,576116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[576150,576151]},{"pos":[576183,576190],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[576255,576256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576399,576423],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[576496,576497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576574,576585],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[576671,576674]},{"pos":[576708,576715],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[576748,576749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[576777,576778]},{"pos":[576833,576837],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[576896,576899]},{"pos":[576933,576940],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[576974,576975]},{"pos":[577007,577014],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[577047,577048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577075,577076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577515,577549],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[577914,577926],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[577987,577988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578065,578076],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[578161,578162],"content":"<","needQuote":true,"nodes":[]},{"pos":[578189,578196],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[578261,578262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578384,578399],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[578463,578464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578541,578552],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[578638,578641]},{"pos":[578675,578682],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[578715,578716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578743,578744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579125,579183],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[579686,579698],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[579759,579760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[579837,579848],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[579933,579934],"content":"<","needQuote":true,"nodes":[]},{"pos":[579961,579968],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[580034,580035]},{"pos":[580090,580094],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[580152,580153],"content":"<","needQuote":true,"nodes":[]},{"pos":[580180,580187],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[580221,580222]},{"pos":[580278,580285],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[580378,580379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580533,580548],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[580612,580613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580690,580701],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[580787,580790]},{"pos":[580824,580831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[580864,580865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[580893,580894]},{"pos":[580949,580953],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[581012,581015]},{"pos":[581049,581056],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581090,581091]},{"pos":[581147,581154],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[581215,581216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581243,581244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581707,581764],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[582263,582275],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[582336,582337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582414,582425],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[582510,582511],"content":"<","needQuote":true,"nodes":[]},{"pos":[582538,582545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[582611,582612]},{"pos":[582667,582671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[582729,582730],"content":"<","needQuote":true,"nodes":[]},{"pos":[582757,582764],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[582798,582799]},{"pos":[582854,582860],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[582952,582953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583106,583121],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[583185,583186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583263,583274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[583360,583363]},{"pos":[583397,583404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[583437,583438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583466,583467]},{"pos":[583522,583526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[583585,583588]},{"pos":[583622,583629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583663,583664]},{"pos":[583719,583725],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[583785,583786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583813,583814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584273,584329],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[584824,584836],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[584897,584898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584975,584986],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[585071,585072],"content":"<","needQuote":true,"nodes":[]},{"pos":[585099,585106],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[585172,585173]},{"pos":[585228,585232],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[585290,585291],"content":"<","needQuote":true,"nodes":[]},{"pos":[585318,585325],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[585359,585360]},{"pos":[585414,585419],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[585510,585511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585663,585678],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[585742,585743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585820,585831],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[585917,585920]},{"pos":[585954,585961],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[585994,585995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[586023,586024]},{"pos":[586079,586083],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[586142,586145]},{"pos":[586179,586186],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586220,586221]},{"pos":[586275,586280],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[586339,586340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586367,586368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586824,586880],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[587375,587387],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[587448,587449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587526,587537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[587622,587623],"content":"<","needQuote":true,"nodes":[]},{"pos":[587650,587657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[587723,587724]},{"pos":[587779,587783],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[587841,587842],"content":"<","needQuote":true,"nodes":[]},{"pos":[587869,587876],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[587910,587911]},{"pos":[587965,587970],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[588061,588062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588214,588229],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[588293,588294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[588371,588382],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[588468,588471]},{"pos":[588505,588512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[588545,588546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[588574,588575]},{"pos":[588630,588634],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[588693,588696]},{"pos":[588730,588737],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[588771,588772]},{"pos":[588826,588831],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[588890,588891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588918,588919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589394,589462],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[590032,590044],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[590105,590106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590183,590194],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[590279,590280],"content":"<","needQuote":true,"nodes":[]},{"pos":[590307,590314],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590380,590381]},{"pos":[590436,590440],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[590498,590499],"content":"<","needQuote":true,"nodes":[]},{"pos":[590526,590533],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590567,590568]},{"pos":[590627,590635],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[590697,590698],"content":"<","needQuote":true,"nodes":[]},{"pos":[590749,590756],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[590881,590882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591053,591068],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[591132,591133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591210,591221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[591307,591310]},{"pos":[591344,591351],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[591384,591385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[591413,591414]},{"pos":[591469,591473],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[591532,591535]},{"pos":[591569,591576],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[591610,591611]},{"pos":[591670,591678],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[591741,591744]},{"pos":[591802,591809],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[591870,591871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591898,591899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591926,591927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592447,592514],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[593080,593092],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[593153,593154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593231,593242],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[593327,593328],"content":"<","needQuote":true,"nodes":[]},{"pos":[593355,593362],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[593428,593429]},{"pos":[593484,593488],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[593546,593547],"content":"<","needQuote":true,"nodes":[]},{"pos":[593574,593581],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[593615,593616]},{"pos":[593675,593683],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[593745,593746],"content":"<","needQuote":true,"nodes":[]},{"pos":[593796,593802],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[593926,593927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594097,594112],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[594176,594177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594254,594265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[594351,594354]},{"pos":[594388,594395],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594428,594429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[594457,594458]},{"pos":[594513,594517],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[594576,594579]},{"pos":[594613,594620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[594654,594655]},{"pos":[594714,594722],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[594785,594788]},{"pos":[594845,594851],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[594911,594912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594939,594940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594967,594968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595484,595550],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[596112,596124],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[596185,596186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596263,596274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596359,596360],"content":"<","needQuote":true,"nodes":[]},{"pos":[596387,596394],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596460,596461]},{"pos":[596516,596520],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596578,596579],"content":"<","needQuote":true,"nodes":[]},{"pos":[596606,596613],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596647,596648]},{"pos":[596707,596715],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[596777,596778],"content":"<","needQuote":true,"nodes":[]},{"pos":[596827,596832],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[596955,596956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597125,597140],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[597204,597205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597282,597293],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[597379,597382]},{"pos":[597416,597423],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[597456,597457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[597485,597486]},{"pos":[597541,597545],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[597604,597607]},{"pos":[597641,597648],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597682,597683]},{"pos":[597742,597750],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[597813,597816]},{"pos":[597872,597877],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[597936,597937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597964,597965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597992,597993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598506,598572],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[599134,599146],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[599207,599208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599285,599296],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[599381,599382],"content":"<","needQuote":true,"nodes":[]},{"pos":[599409,599416],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[599482,599483]},{"pos":[599538,599542],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[599600,599601],"content":"<","needQuote":true,"nodes":[]},{"pos":[599628,599635],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[599669,599670]},{"pos":[599729,599737],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[599799,599800],"content":"<","needQuote":true,"nodes":[]},{"pos":[599849,599854],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[599977,599978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600147,600162],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[600226,600227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[600304,600315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[600401,600404]},{"pos":[600438,600445],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[600478,600479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[600507,600508]},{"pos":[600563,600567],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[600626,600629]},{"pos":[600663,600670],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[600704,600705]},{"pos":[600764,600772],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[600835,600838]},{"pos":[600894,600899],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[600958,600959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600986,600987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601014,601015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601529,601596],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[602162,602174],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[602235,602236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602313,602324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[602409,602410],"content":"<","needQuote":true,"nodes":[]},{"pos":[602437,602444],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[602510,602511]},{"pos":[602566,602570],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[602628,602629],"content":"<","needQuote":true,"nodes":[]},{"pos":[602656,602663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[602697,602698]},{"pos":[602757,602765],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[602827,602828],"content":"<","needQuote":true,"nodes":[]},{"pos":[602878,602884],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[603008,603009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603179,603194],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[603258,603259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603336,603347],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[603433,603436]},{"pos":[603470,603477],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[603510,603511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[603539,603540]},{"pos":[603595,603599],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[603658,603661]},{"pos":[603695,603702],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603736,603737]},{"pos":[603796,603804],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[603867,603870]},{"pos":[603927,603933],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[603993,603994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604021,604022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604049,604050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604550,604607],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[605106,605118],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[605179,605180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605257,605268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[605353,605354],"content":"<","needQuote":true,"nodes":[]},{"pos":[605381,605388],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[605454,605455]},{"pos":[605510,605514],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[605572,605573],"content":"<","needQuote":true,"nodes":[]},{"pos":[605600,605607],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[605641,605642]},{"pos":[605697,605703],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[605795,605796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605949,605964],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[606028,606029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[606106,606117],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[606203,606206]},{"pos":[606240,606247],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[606280,606281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[606309,606310]},{"pos":[606365,606369],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[606428,606431]},{"pos":[606465,606472],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[606506,606507]},{"pos":[606562,606568],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[606628,606629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606656,606657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607107,607174],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[607679,607700],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[607770,607771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607848,607859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[607944,607945],"content":"<","needQuote":true,"nodes":[]},{"pos":[607972,607979],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[608045,608046]},{"pos":[608101,608105],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608163,608164],"content":"<","needQuote":true,"nodes":[]},{"pos":[608191,608198],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[608232,608233]},{"pos":[608265,608272],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[608337,608338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608481,608505],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[608578,608579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608656,608667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[608753,608756]},{"pos":[608790,608797],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[608830,608831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[608859,608860]},{"pos":[608915,608919],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[608978,608981]},{"pos":[609015,609022],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[609056,609057]},{"pos":[609089,609096],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[609129,609130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609157,609158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609587,609615],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[609930,609945],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[610009,610010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610077,610088],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[610165,610166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610278,610296],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[610363,610364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610431,610442],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[610519,610520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610869,610934],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[611437,611459],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[611530,611531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611608,611619],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[611704,611705],"content":"<","needQuote":true,"nodes":[]},{"pos":[611732,611739],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[611805,611806]},{"pos":[611861,611865],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[611923,611924],"content":"<","needQuote":true,"nodes":[]},{"pos":[611951,611958],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[611992,611993]},{"pos":[612025,612029],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[612091,612092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612239,612264],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[612338,612339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612416,612427],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[612513,612516]},{"pos":[612550,612557],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[612590,612591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[612619,612620]},{"pos":[612675,612679],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[612738,612741]},{"pos":[612775,612782],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[612816,612817]},{"pos":[612849,612853],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[612883,612884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612911,612912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613418,613500],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[614156,614178],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[614249,614250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614327,614338],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614423,614424],"content":"<","needQuote":true,"nodes":[]},{"pos":[614451,614458],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[614524,614525]},{"pos":[614580,614584],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[614642,614643],"content":"<","needQuote":true,"nodes":[]},{"pos":[614670,614677],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[614711,614712]},{"pos":[614744,614748],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[614811,614812]},{"pos":[614892,614901],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[614984,614985],"content":"<","needQuote":true,"nodes":[]},{"pos":[615012,615016],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[615078,615079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615268,615293],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[615367,615368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615445,615456],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[615542,615545]},{"pos":[615579,615586],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[615619,615620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[615648,615649]},{"pos":[615704,615708],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[615767,615770]},{"pos":[615804,615811],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[615845,615846]},{"pos":[615878,615882],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[615912,615913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[615941,615942]},{"pos":[616022,616031],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[616115,616118]},{"pos":[616152,616156],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[616186,616187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616214,616215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616768,616843],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[617386,617418],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[617499,617500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617577,617588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[617673,617674],"content":"<","needQuote":true,"nodes":[]},{"pos":[617701,617708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[617774,617775]},{"pos":[617830,617834],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[617892,617893],"content":"<","needQuote":true,"nodes":[]},{"pos":[617920,617927],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[617961,617962]},{"pos":[617994,617998],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[618060,618061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618218,618253],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[618337,618338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618415,618426],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[618512,618515]},{"pos":[618549,618556],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[618589,618590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618618,618619]},{"pos":[618674,618678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[618737,618740]},{"pos":[618774,618781],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[618815,618816]},{"pos":[618848,618852],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[618882,618883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618910,618911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619457,619549],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[620245,620277],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[620358,620359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620436,620447],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620532,620533],"content":"<","needQuote":true,"nodes":[]},{"pos":[620560,620567],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620633,620634]},{"pos":[620689,620693],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[620751,620752],"content":"<","needQuote":true,"nodes":[]},{"pos":[620779,620786],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620820,620821]},{"pos":[620853,620857],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[620920,620921]},{"pos":[621001,621010],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[621093,621094],"content":"<","needQuote":true,"nodes":[]},{"pos":[621121,621125],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[621187,621188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621387,621422],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[621506,621507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621584,621595],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[621681,621684]},{"pos":[621718,621725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[621758,621759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[621787,621788]},{"pos":[621843,621847],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[621906,621909]},{"pos":[621943,621950],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[621984,621985]},{"pos":[622017,622021],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[622051,622052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[622080,622081]},{"pos":[622161,622170],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[622254,622257]},{"pos":[622291,622295],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[622325,622326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622353,622354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622906,622944],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[623325,623341],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[623406,623407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623484,623495],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623580,623581],"content":"<","needQuote":true,"nodes":[]},{"pos":[623608,623615],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[623680,623681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623807,623826],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[623894,623895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623972,623983],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624069,624072]},{"pos":[624106,624113],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624146,624147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624174,624175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624560,624630],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[625147,625171],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[625244,625245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625322,625333],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[625418,625419],"content":"<","needQuote":true,"nodes":[]},{"pos":[625446,625453],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[625519,625520]},{"pos":[625575,625579],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[625637,625638],"content":"<","needQuote":true,"nodes":[]},{"pos":[625665,625672],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[625706,625707]},{"pos":[625739,625746],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[625811,625812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625958,625985],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[626061,626062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626139,626150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[626236,626239]},{"pos":[626273,626280],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[626313,626314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[626342,626343]},{"pos":[626398,626402],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[626461,626464]},{"pos":[626498,626505],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[626539,626540]},{"pos":[626572,626579],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[626612,626613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626640,626641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627126,627203],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[627768,627792],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[627865,627866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627943,627954],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[628039,628040],"content":"<","needQuote":true,"nodes":[]},{"pos":[628067,628074],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[628140,628141]},{"pos":[628196,628200],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[628258,628259],"content":"<","needQuote":true,"nodes":[]},{"pos":[628286,628293],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[628327,628328]},{"pos":[628382,628387],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[628447,628448]},{"pos":[628480,628487],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[628552,628553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628712,628739],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[628815,628816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628893,628904],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[628990,628993]},{"pos":[629027,629034],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[629067,629068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629096,629097]},{"pos":[629152,629156],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629215,629218]},{"pos":[629252,629259],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[629293,629294]},{"pos":[629348,629353],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[629413,629414]},{"pos":[629446,629453],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[629486,629487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629514,629515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630058,630145],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[630817,630845],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[630922,630923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631000,631011],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[631096,631097],"content":"<","needQuote":true,"nodes":[]},{"pos":[631124,631131],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[631197,631198]},{"pos":[631253,631257],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[631315,631316],"content":"<","needQuote":true,"nodes":[]},{"pos":[631343,631350],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[631384,631385]},{"pos":[631467,631478],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[631563,631564],"content":"<","needQuote":true,"nodes":[]},{"pos":[631591,631598],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[631695,631696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631886,631917],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[631997,631998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632075,632086],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632172,632175]},{"pos":[632209,632216],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632249,632250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[632278,632279]},{"pos":[632334,632338],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[632397,632400]},{"pos":[632434,632441],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[632475,632476]},{"pos":[632558,632569],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632655,632658]},{"pos":[632692,632699],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[632732,632733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632760,632761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632788,632789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633399,633493],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[634213,634241],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[634318,634319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634396,634407],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[634492,634493],"content":"<","needQuote":true,"nodes":[]},{"pos":[634520,634527],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634593,634594]},{"pos":[634649,634653],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[634711,634712],"content":"<","needQuote":true,"nodes":[]},{"pos":[634739,634746],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634780,634781]},{"pos":[634835,634840],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[634900,634901]},{"pos":[634983,634994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[635079,635080],"content":"<","needQuote":true,"nodes":[]},{"pos":[635107,635114],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[635211,635212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635415,635446],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[635526,635527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635604,635615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[635701,635704]},{"pos":[635738,635745],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[635778,635779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635807,635808]},{"pos":[635863,635867],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[635926,635929]},{"pos":[635963,635970],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[636004,636005]},{"pos":[636059,636064],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[636124,636125]},{"pos":[636207,636218],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[636304,636307]},{"pos":[636341,636348],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[636381,636382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636409,636410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636437,636438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637087,637228],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[638107,638148],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[638238,638239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638316,638327],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[638412,638413],"content":"<","needQuote":true,"nodes":[]},{"pos":[638440,638447],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[638513,638514]},{"pos":[638569,638573],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[638631,638632],"content":"<","needQuote":true,"nodes":[]},{"pos":[638659,638666],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[638700,638701]},{"pos":[638783,638794],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[638879,638880],"content":"<","needQuote":true,"nodes":[]},{"pos":[638907,638918],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[639020,639021]},{"pos":[639076,639080],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[639138,639139],"content":"<","needQuote":true,"nodes":[]},{"pos":[639166,639173],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639207,639208]},{"pos":[639240,639251],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[639289,639290]},{"pos":[639322,639329],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[639394,639395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639610,639654],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[639747,639748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639825,639836],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[639922,639925]},{"pos":[639959,639966],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[639999,640000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[640028,640029]},{"pos":[640084,640088],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[640147,640150]},{"pos":[640184,640191],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640225,640226]},{"pos":[640308,640319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[640405,640408]},{"pos":[640442,640453],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[640490,640491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640518,640519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[640547,640548]},{"pos":[640603,640607],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[640666,640669]},{"pos":[640703,640710],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640744,640745]},{"pos":[640777,640788],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[640826,640827]},{"pos":[640859,640866],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[640899,640900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640927,640928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641699,641847],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[642774,642815],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[642905,642906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642983,642994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[643079,643080],"content":"<","needQuote":true,"nodes":[]},{"pos":[643107,643114],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[643180,643181]},{"pos":[643236,643240],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[643298,643299],"content":"<","needQuote":true,"nodes":[]},{"pos":[643326,643333],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[643367,643368]},{"pos":[643422,643427],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[643487,643488]},{"pos":[643570,643581],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[643666,643667],"content":"<","needQuote":true,"nodes":[]},{"pos":[643694,643705],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[643807,643808]},{"pos":[643863,643867],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[643925,643926],"content":"<","needQuote":true,"nodes":[]},{"pos":[643953,643960],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[643994,643995]},{"pos":[644027,644038],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[644076,644077]},{"pos":[644109,644116],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[644181,644182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644410,644454],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[644547,644548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644625,644636],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[644722,644725]},{"pos":[644759,644766],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[644799,644800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[644828,644829]},{"pos":[644884,644888],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[644947,644950]},{"pos":[644984,644991],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645025,645026]},{"pos":[645080,645085],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[645145,645146]},{"pos":[645228,645239],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[645325,645328]},{"pos":[645362,645373],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[645410,645411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645438,645439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[645467,645468]},{"pos":[645523,645527],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[645586,645589]},{"pos":[645623,645630],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645664,645665]},{"pos":[645697,645708],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[645746,645747]},{"pos":[645779,645786],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[645819,645820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645847,645848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646594,646660],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[647235,647257],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[647328,647329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647406,647417],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[647502,647503],"content":"<","needQuote":true,"nodes":[]},{"pos":[647530,647537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[647603,647604]},{"pos":[647686,647697],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[647782,647783],"content":"<","needQuote":true,"nodes":[]},{"pos":[647810,647817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647882,647883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648059,648084],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[648158,648159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648236,648247],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[648333,648336]},{"pos":[648370,648377],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[648410,648411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[648439,648440]},{"pos":[648522,648533],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[648619,648622]},{"pos":[648656,648663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[648696,648697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648724,648725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649299,649393],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[650162,650184],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[650255,650256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650333,650344],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[650429,650430],"content":"<","needQuote":true,"nodes":[]},{"pos":[650457,650464],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[650530,650531]},{"pos":[650613,650624],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[650709,650710],"content":"<","needQuote":true,"nodes":[]},{"pos":[650737,650744],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[650810,650811]},{"pos":[650899,650916],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[651007,651008],"content":"<","needQuote":true,"nodes":[]},{"pos":[651035,651042],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651107,651108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651334,651359],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[651433,651434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651511,651522],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[651608,651611]},{"pos":[651645,651652],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651685,651686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[651714,651715]},{"pos":[651797,651808],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[651894,651897]},{"pos":[651931,651938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651971,651972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[652000,652001]},{"pos":[652089,652106],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[652198,652201]},{"pos":[652235,652242],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[652275,652276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652303,652304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652886,652923],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[653300,653315],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[653379,653380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653457,653468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[653553,653554],"content":"<","needQuote":true,"nodes":[]},{"pos":[653581,653588],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[653653,653654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653779,653797],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[653864,653865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653942,653953],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[654039,654042]},{"pos":[654076,654083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[654116,654117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654144,654145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654538,654599],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[655114,655129],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[655193,655194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655271,655282],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[655367,655368],"content":"<","needQuote":true,"nodes":[]},{"pos":[655395,655402],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655468,655469]},{"pos":[655524,655528],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[655586,655587],"content":"<","needQuote":true,"nodes":[]},{"pos":[655614,655621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655655,655656]},{"pos":[655712,655719],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[655812,655813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655970,655988],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[656055,656056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656133,656144],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[656230,656233]},{"pos":[656267,656274],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[656307,656308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[656336,656337]},{"pos":[656392,656396],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[656455,656458]},{"pos":[656492,656499],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[656533,656534]},{"pos":[656590,656597],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[656658,656659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656686,656687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657140,657186],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[657599,657623],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[657696,657697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657774,657785],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[657870,657871],"content":"<","needQuote":true,"nodes":[]},{"pos":[657898,657905],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[657970,657971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658105,658132],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[658208,658209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658286,658297],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[658383,658386]},{"pos":[658420,658427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[658460,658461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658488,658489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658918,658988],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[659539,659563],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[659636,659637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659714,659725],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[659810,659811],"content":"<","needQuote":true,"nodes":[]},{"pos":[659838,659845],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[659911,659912]},{"pos":[659967,659971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[660029,660030],"content":"<","needQuote":true,"nodes":[]},{"pos":[660057,660064],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660098,660099]},{"pos":[660155,660162],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[660255,660256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660422,660449],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[660525,660526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660603,660614],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[660700,660703]},{"pos":[660737,660744],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[660777,660778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[660806,660807]},{"pos":[660862,660866],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[660925,660928]},{"pos":[660962,660969],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661003,661004]},{"pos":[661060,661067],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[661128,661129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661156,661157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661639,661681],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[662098,662111],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[662173,662174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662251,662262],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[662347,662348],"content":"<","needQuote":true,"nodes":[]},{"pos":[662375,662382],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[662448,662449]},{"pos":[662503,662508],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[662567,662568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662704,662720],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[662785,662786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662863,662874],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[662960,662963]},{"pos":[662997,663004],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[663037,663038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[663066,663067]},{"pos":[663121,663126],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[663185,663186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663603,663667],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[664194,664212],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[664279,664280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[664357,664368],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[664453,664454],"content":"<","needQuote":true,"nodes":[]},{"pos":[664481,664488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[664554,664555]},{"pos":[664610,664614],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[664672,664673],"content":"<","needQuote":true,"nodes":[]},{"pos":[664700,664707],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[664741,664742]},{"pos":[664798,664805],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[664898,664899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665059,665080],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[665150,665151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665228,665239],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[665325,665328]},{"pos":[665362,665369],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[665402,665403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[665431,665432]},{"pos":[665487,665491],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[665550,665553]},{"pos":[665587,665594],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665628,665629]},{"pos":[665685,665692],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[665753,665754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665781,665782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666283,666354],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[666929,666947],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[667014,667015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667092,667103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[667188,667189],"content":"<","needQuote":true,"nodes":[]},{"pos":[667216,667223],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667289,667290]},{"pos":[667345,667349],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[667407,667408],"content":"<","needQuote":true,"nodes":[]},{"pos":[667435,667442],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667476,667477]},{"pos":[667531,667536],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[667596,667597]},{"pos":[667653,667660],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[667753,667754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667927,667948],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[668018,668019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[668096,668107],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[668193,668196]},{"pos":[668230,668237],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[668270,668271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[668299,668300]},{"pos":[668355,668359],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[668418,668421]},{"pos":[668455,668462],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668496,668497]},{"pos":[668551,668556],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[668616,668617]},{"pos":[668673,668680],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[668741,668742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668769,668770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669279,669337],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[669840,669852],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[669913,669914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[669991,670002],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[670087,670088],"content":"<","needQuote":true,"nodes":[]},{"pos":[670115,670122],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670188,670189]},{"pos":[670244,670248],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[670306,670307],"content":"<","needQuote":true,"nodes":[]},{"pos":[670334,670341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670375,670376]},{"pos":[670432,670439],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[670532,670533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670687,670702],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[670766,670767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670844,670855],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[670941,670944]},{"pos":[670978,670985],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[671018,671019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[671047,671048]},{"pos":[671103,671107],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[671166,671169]},{"pos":[671203,671210],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[671244,671245]},{"pos":[671301,671308],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[671369,671370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671397,671398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671861,671918],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[672417,672429],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[672490,672491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[672568,672579],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[672664,672665],"content":"<","needQuote":true,"nodes":[]},{"pos":[672692,672699],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672765,672766]},{"pos":[672821,672825],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[672883,672884],"content":"<","needQuote":true,"nodes":[]},{"pos":[672911,672918],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672952,672953]},{"pos":[673008,673014],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[673106,673107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673260,673275],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[673339,673340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[673417,673428],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[673514,673517]},{"pos":[673551,673558],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[673591,673592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[673620,673621]},{"pos":[673676,673680],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[673739,673742]},{"pos":[673776,673783],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[673817,673818]},{"pos":[673873,673879],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[673939,673940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673967,673968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674427,674483],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[674978,674990],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[675051,675052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[675129,675140],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[675225,675226],"content":"<","needQuote":true,"nodes":[]},{"pos":[675253,675260],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675326,675327]},{"pos":[675382,675386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[675444,675445],"content":"<","needQuote":true,"nodes":[]},{"pos":[675472,675479],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675513,675514]},{"pos":[675568,675573],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[675664,675665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675817,675832],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[675896,675897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[675974,675985],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[676071,676074]},{"pos":[676108,676115],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[676148,676149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[676177,676178]},{"pos":[676233,676237],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[676296,676299]},{"pos":[676333,676340],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676374,676375]},{"pos":[676429,676434],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[676493,676494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676521,676522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676978,677034],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[677529,677541],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[677602,677603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[677680,677691],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[677776,677777],"content":"<","needQuote":true,"nodes":[]},{"pos":[677804,677811],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[677877,677878]},{"pos":[677933,677937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[677995,677996],"content":"<","needQuote":true,"nodes":[]},{"pos":[678023,678030],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678064,678065]},{"pos":[678119,678124],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[678215,678216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678368,678383],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[678447,678448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678525,678536],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[678622,678625]},{"pos":[678659,678666],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[678699,678700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[678728,678729]},{"pos":[678784,678788],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[678847,678850]},{"pos":[678884,678891],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678925,678926]},{"pos":[678980,678985],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[679044,679045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679072,679073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679548,679616],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[680186,680198],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[680259,680260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680337,680348],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[680433,680434],"content":"<","needQuote":true,"nodes":[]},{"pos":[680461,680468],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680534,680535]},{"pos":[680590,680594],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[680652,680653],"content":"<","needQuote":true,"nodes":[]},{"pos":[680680,680687],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680721,680722]},{"pos":[680781,680789],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[680851,680852],"content":"<","needQuote":true,"nodes":[]},{"pos":[680903,680910],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[681035,681036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681207,681222],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[681286,681287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[681364,681375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[681461,681464]},{"pos":[681498,681505],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[681538,681539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[681567,681568]},{"pos":[681623,681627],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[681686,681689]},{"pos":[681723,681730],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[681764,681765]},{"pos":[681824,681832],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[681895,681898]},{"pos":[681956,681963],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[682024,682025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682052,682053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682080,682081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682601,682668],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[683234,683246],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[683307,683308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[683385,683396],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[683481,683482],"content":"<","needQuote":true,"nodes":[]},{"pos":[683509,683516],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[683582,683583]},{"pos":[683638,683642],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[683700,683701],"content":"<","needQuote":true,"nodes":[]},{"pos":[683728,683735],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[683769,683770]},{"pos":[683829,683837],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[683899,683900],"content":"<","needQuote":true,"nodes":[]},{"pos":[683950,683956],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[684080,684081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[684251,684266],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[684330,684331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[684408,684419],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[684505,684508]},{"pos":[684542,684549],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[684582,684583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[684611,684612]},{"pos":[684667,684671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[684730,684733]},{"pos":[684767,684774],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684808,684809]},{"pos":[684868,684876],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[684939,684942]},{"pos":[684999,685005],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[685065,685066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685093,685094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685121,685122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685638,685704],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[686266,686278],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[686339,686340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[686417,686428],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[686513,686514],"content":"<","needQuote":true,"nodes":[]},{"pos":[686541,686548],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[686614,686615]},{"pos":[686670,686674],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[686732,686733],"content":"<","needQuote":true,"nodes":[]},{"pos":[686760,686767],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[686801,686802]},{"pos":[686861,686869],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[686931,686932],"content":"<","needQuote":true,"nodes":[]},{"pos":[686981,686986],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[687109,687110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687279,687294],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[687358,687359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687436,687447],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[687533,687536]},{"pos":[687570,687577],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[687610,687611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[687639,687640]},{"pos":[687695,687699],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[687758,687761]},{"pos":[687795,687802],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687836,687837]},{"pos":[687896,687904],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[687967,687970]},{"pos":[688026,688031],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[688090,688091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688118,688119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688146,688147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688660,688726],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[689288,689300],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[689361,689362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[689439,689450],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[689535,689536],"content":"<","needQuote":true,"nodes":[]},{"pos":[689563,689570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[689636,689637]},{"pos":[689692,689696],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[689754,689755],"content":"<","needQuote":true,"nodes":[]},{"pos":[689782,689789],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[689823,689824]},{"pos":[689883,689891],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[689953,689954],"content":"<","needQuote":true,"nodes":[]},{"pos":[690003,690008],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[690131,690132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690301,690316],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[690380,690381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690458,690469],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[690555,690558]},{"pos":[690592,690599],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690632,690633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[690661,690662]},{"pos":[690717,690721],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[690780,690783]},{"pos":[690817,690824],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690858,690859]},{"pos":[690918,690926],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[690989,690992]},{"pos":[691048,691053],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[691112,691113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691140,691141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691168,691169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691683,691750],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[692316,692328],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[692389,692390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692467,692478],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[692563,692564],"content":"<","needQuote":true,"nodes":[]},{"pos":[692591,692598],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692664,692665]},{"pos":[692720,692724],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[692782,692783],"content":"<","needQuote":true,"nodes":[]},{"pos":[692810,692817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692851,692852]},{"pos":[692911,692919],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[692981,692982],"content":"<","needQuote":true,"nodes":[]},{"pos":[693032,693038],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[693162,693163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693333,693348],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[693412,693413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[693490,693501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[693587,693590]},{"pos":[693624,693631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[693664,693665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[693693,693694]},{"pos":[693749,693753],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[693812,693815]},{"pos":[693849,693856],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693890,693891]},{"pos":[693950,693958],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[694021,694024]},{"pos":[694081,694087],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[694147,694148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694175,694176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694203,694204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694704,694761],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[695260,695272],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[695333,695334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[695411,695422],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[695507,695508],"content":"<","needQuote":true,"nodes":[]},{"pos":[695535,695542],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695608,695609]},{"pos":[695664,695668],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[695726,695727],"content":"<","needQuote":true,"nodes":[]},{"pos":[695754,695761],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695795,695796]},{"pos":[695851,695857],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[695949,695950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696103,696118],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[696182,696183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[696260,696271],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[696357,696360]},{"pos":[696394,696401],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[696434,696435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[696463,696464]},{"pos":[696519,696523],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[696582,696585]},{"pos":[696619,696626],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696660,696661]},{"pos":[696716,696722],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[696782,696783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696810,696811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697254,697296],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[697713,697726],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[697788,697789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[697866,697877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[697962,697963],"content":"<","needQuote":true,"nodes":[]},{"pos":[697990,697997],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698063,698064]},{"pos":[698118,698123],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[698182,698183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698319,698335],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[698400,698401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[698478,698489],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[698575,698578]},{"pos":[698612,698619],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[698652,698653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[698681,698682]},{"pos":[698736,698741],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[698800,698801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699218,699282],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[699809,699827],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[699894,699895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699972,699983],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[700068,700069],"content":"<","needQuote":true,"nodes":[]},{"pos":[700096,700103],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[700169,700170]},{"pos":[700225,700229],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[700287,700288],"content":"<","needQuote":true,"nodes":[]},{"pos":[700315,700322],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[700356,700357]},{"pos":[700413,700420],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[700513,700514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700674,700695],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[700765,700766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[700843,700854],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[700940,700943]},{"pos":[700977,700984],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[701017,701018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[701046,701047]},{"pos":[701102,701106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[701165,701168]},{"pos":[701202,701209],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701243,701244]},{"pos":[701300,701307],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[701368,701369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[701396,701397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[701898,701969],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[702544,702562],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[702629,702630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[702707,702718],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[702803,702804],"content":"<","needQuote":true,"nodes":[]},{"pos":[702831,702838],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702904,702905]},{"pos":[702960,702964],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[703022,703023],"content":"<","needQuote":true,"nodes":[]},{"pos":[703050,703057],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[703091,703092]},{"pos":[703146,703151],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[703211,703212]},{"pos":[703268,703275],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[703368,703369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703542,703563],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[703633,703634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[703711,703722],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[703808,703811]},{"pos":[703845,703852],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[703885,703886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[703914,703915]},{"pos":[703970,703974],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[704033,704036]},{"pos":[704070,704077],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704111,704112]},{"pos":[704166,704171],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[704231,704232]},{"pos":[704288,704295],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[704356,704357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704384,704385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704866,704904],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[705285,705301],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[705366,705367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[705444,705455],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[705540,705541],"content":"<","needQuote":true,"nodes":[]},{"pos":[705568,705575],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[705640,705641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705767,705786],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[705854,705855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[705932,705943],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[706029,706032]},{"pos":[706066,706073],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[706106,706107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706134,706135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706526,706596],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[707119,707146],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[707222,707223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[707300,707311],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[707396,707397],"content":"<","needQuote":true,"nodes":[]},{"pos":[707424,707431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707497,707498]},{"pos":[707553,707557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[707615,707616],"content":"<","needQuote":true,"nodes":[]},{"pos":[707643,707650],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707684,707685]},{"pos":[707717,707721],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[707783,707784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[707936,707966],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[708045,708046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[708123,708134],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[708220,708223]},{"pos":[708257,708264],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[708297,708298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708326,708327]},{"pos":[708382,708386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[708445,708448]},{"pos":[708482,708489],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[708523,708524]},{"pos":[708556,708560],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[708590,708591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708618,708619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[709153,709248],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[709956,709983],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[710059,710060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710137,710148],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[710233,710234],"content":"<","needQuote":true,"nodes":[]},{"pos":[710261,710268],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710334,710335]},{"pos":[710390,710394],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[710452,710453],"content":"<","needQuote":true,"nodes":[]},{"pos":[710480,710487],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710521,710522]},{"pos":[710554,710558],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[710621,710622]},{"pos":[710710,710727],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[710818,710819],"content":"<","needQuote":true,"nodes":[]},{"pos":[710846,710850],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[710912,710913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711115,711145],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[711224,711225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[711302,711313],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[711399,711402]},{"pos":[711436,711443],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[711476,711477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711505,711506]},{"pos":[711561,711565],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[711624,711627]},{"pos":[711661,711668],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711702,711703]},{"pos":[711735,711739],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[711769,711770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711798,711799]},{"pos":[711887,711904],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[711996,711999]},{"pos":[712033,712037],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[712067,712068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712095,712096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712704,712809],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[713478,713515],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[713601,713602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[713679,713690],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[713775,713776],"content":"<","needQuote":true,"nodes":[]},{"pos":[713803,713810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713876,713877]},{"pos":[713932,713936],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[713994,713995],"content":"<","needQuote":true,"nodes":[]},{"pos":[714022,714029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714063,714064]},{"pos":[714096,714100],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[714163,714164]},{"pos":[714219,714223],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[714281,714282],"content":"<","needQuote":true,"nodes":[]},{"pos":[714309,714316],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714350,714351]},{"pos":[714383,714391],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[714457,714458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714631,714671],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[714760,714761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[714838,714849],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[714935,714938]},{"pos":[714972,714979],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[715012,715013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715041,715042]},{"pos":[715097,715101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[715160,715163]},{"pos":[715197,715204],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[715238,715239]},{"pos":[715271,715275],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[715305,715306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715334,715335]},{"pos":[715390,715394],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[715453,715456]},{"pos":[715490,715497],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[715531,715532]},{"pos":[715564,715572],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[715606,715607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715634,715635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[716284,716414],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[717268,717305],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[717391,717392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[717469,717480],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[717565,717566],"content":"<","needQuote":true,"nodes":[]},{"pos":[717593,717600],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717666,717667]},{"pos":[717722,717726],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717784,717785],"content":"<","needQuote":true,"nodes":[]},{"pos":[717812,717819],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717853,717854]},{"pos":[717886,717890],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[717953,717954]},{"pos":[718009,718013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[718071,718072],"content":"<","needQuote":true,"nodes":[]},{"pos":[718099,718106],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[718140,718141]},{"pos":[718173,718181],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[718248,718249]},{"pos":[718337,718354],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[718445,718446],"content":"<","needQuote":true,"nodes":[]},{"pos":[718473,718477],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[718539,718540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718763,718803],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[718892,718893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[718970,718981],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[719067,719070]},{"pos":[719104,719111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[719144,719145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719173,719174]},{"pos":[719229,719233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719292,719295]},{"pos":[719329,719336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719370,719371]},{"pos":[719403,719407],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[719437,719438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719466,719467]},{"pos":[719522,719526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719585,719588]},{"pos":[719622,719629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719663,719664]},{"pos":[719696,719704],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[719738,719739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719767,719768]},{"pos":[719856,719873],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[719965,719968]},{"pos":[720002,720006],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[720036,720037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720064,720065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720719,720756],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[721133,721148],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[721212,721213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[721290,721301],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[721386,721387],"content":"<","needQuote":true,"nodes":[]},{"pos":[721414,721421],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[721486,721487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721612,721630],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[721697,721698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[721775,721786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[721872,721875]},{"pos":[721909,721916],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[721949,721950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721977,721978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[722362,722428],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[722935,722958],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[723030,723031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723108,723119],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[723204,723205],"content":"<","needQuote":true,"nodes":[]},{"pos":[723232,723239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723305,723306]},{"pos":[723361,723365],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[723423,723424],"content":"<","needQuote":true,"nodes":[]},{"pos":[723451,723458],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723492,723493]},{"pos":[723525,723529],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[723591,723592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[723740,723766],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[723841,723842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723919,723930],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[724016,724019]},{"pos":[724053,724060],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[724093,724094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[724122,724123]},{"pos":[724178,724182],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[724241,724244]},{"pos":[724278,724285],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[724319,724320]},{"pos":[724352,724356],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[724386,724387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724414,724415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724933,725024],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[725716,725739],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[725811,725812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[725889,725900],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[725985,725986],"content":"<","needQuote":true,"nodes":[]},{"pos":[726013,726020],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[726086,726087]},{"pos":[726142,726146],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[726204,726205],"content":"<","needQuote":true,"nodes":[]},{"pos":[726232,726239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[726273,726274]},{"pos":[726306,726310],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[726373,726374]},{"pos":[726462,726479],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[726570,726571],"content":"<","needQuote":true,"nodes":[]},{"pos":[726598,726602],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726664,726665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726863,726889],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[726964,726965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[727042,727053],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[727139,727142]},{"pos":[727176,727183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[727216,727217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[727245,727246]},{"pos":[727301,727305],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[727364,727367]},{"pos":[727401,727408],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[727442,727443]},{"pos":[727475,727479],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[727509,727510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[727538,727539]},{"pos":[727627,727644],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[727736,727739]},{"pos":[727773,727777],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[727807,727808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727835,727836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[728428,728529],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[729182,729215],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[729297,729298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[729375,729386],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729471,729472],"content":"<","needQuote":true,"nodes":[]},{"pos":[729499,729506],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[729572,729573]},{"pos":[729628,729632],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[729690,729691],"content":"<","needQuote":true,"nodes":[]},{"pos":[729718,729725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[729759,729760]},{"pos":[729792,729796],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[729859,729860]},{"pos":[729915,729919],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[729977,729978],"content":"<","needQuote":true,"nodes":[]},{"pos":[730005,730012],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730046,730047]},{"pos":[730079,730087],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[730153,730154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[730323,730359],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[730444,730445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[730522,730533],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[730619,730622]},{"pos":[730656,730663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[730696,730697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[730725,730726]},{"pos":[730781,730785],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[730844,730847]},{"pos":[730881,730888],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730922,730923]},{"pos":[730955,730959],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[730989,730990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731018,731019]},{"pos":[731074,731078],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[731137,731140]},{"pos":[731174,731181],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[731215,731216]},{"pos":[731248,731256],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[731290,731291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731318,731319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731952,732078],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[732916,732949],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[733031,733032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[733109,733120],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[733205,733206],"content":"<","needQuote":true,"nodes":[]},{"pos":[733233,733240],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733306,733307]},{"pos":[733362,733366],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[733424,733425],"content":"<","needQuote":true,"nodes":[]},{"pos":[733452,733459],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733493,733494]},{"pos":[733526,733530],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[733593,733594]},{"pos":[733649,733653],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[733711,733712],"content":"<","needQuote":true,"nodes":[]},{"pos":[733739,733746],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733780,733781]},{"pos":[733813,733821],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[733888,733889]},{"pos":[733977,733994],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[734085,734086],"content":"<","needQuote":true,"nodes":[]},{"pos":[734113,734117],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[734179,734180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734399,734435],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[734520,734521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[734598,734609],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[734695,734698]},{"pos":[734732,734739],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[734772,734773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[734801,734802]},{"pos":[734857,734861],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[734920,734923]},{"pos":[734957,734964],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[734998,734999]},{"pos":[735031,735035],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[735065,735066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[735094,735095]},{"pos":[735150,735154],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[735213,735216]},{"pos":[735250,735257],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[735291,735292]},{"pos":[735324,735332],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[735366,735367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[735395,735396]},{"pos":[735484,735501],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[735593,735596]},{"pos":[735630,735634],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[735664,735665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[735692,735693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736378,736436],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[736979,736993],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[737056,737057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[737134,737145],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[737230,737231],"content":"<","needQuote":true,"nodes":[]},{"pos":[737258,737265],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[737331,737332]},{"pos":[737414,737425],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[737510,737511],"content":"<","needQuote":true,"nodes":[]},{"pos":[737538,737545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[737610,737611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737779,737796],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[737862,737863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[737940,737951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[738037,738040]},{"pos":[738074,738081],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[738114,738115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[738143,738144]},{"pos":[738226,738237],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[738323,738326]},{"pos":[738360,738367],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[738400,738401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738428,738429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738971,739057],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[739794,739808],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[739871,739872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739949,739960],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[740045,740046],"content":"<","needQuote":true,"nodes":[]},{"pos":[740073,740080],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740146,740147]},{"pos":[740229,740240],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[740325,740326],"content":"<","needQuote":true,"nodes":[]},{"pos":[740353,740360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740426,740427]},{"pos":[740515,740532],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[740623,740624],"content":"<","needQuote":true,"nodes":[]},{"pos":[740651,740658],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[740723,740724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[740942,740959],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[741025,741026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[741103,741114],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741200,741203]},{"pos":[741237,741244],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[741277,741278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[741306,741307]},{"pos":[741389,741400],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741486,741489]},{"pos":[741523,741530],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[741563,741564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[741592,741593]},{"pos":[741681,741698],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[741790,741793]},{"pos":[741827,741834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[741867,741868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741895,741896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[742485,742545],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[743056,743070],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[743133,743134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[743211,743222],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743307,743308],"content":"<","needQuote":true,"nodes":[]},{"pos":[743335,743342],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743408,743409]},{"pos":[743464,743468],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743526,743527],"content":"<","needQuote":true,"nodes":[]},{"pos":[743554,743561],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743595,743596]},{"pos":[743652,743659],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[743752,743753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[743909,743926],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[743992,743993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[744070,744081],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[744167,744170]},{"pos":[744204,744211],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[744244,744245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[744273,744274]},{"pos":[744329,744333],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[744392,744395]},{"pos":[744429,744436],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[744470,744471]},{"pos":[744527,744534],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[744595,744596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744623,744624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745109,745176],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[745735,745749],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[745812,745813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[745890,745901],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[745986,745987],"content":"<","needQuote":true,"nodes":[]},{"pos":[746014,746021],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[746087,746088]},{"pos":[746143,746147],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[746205,746206],"content":"<","needQuote":true,"nodes":[]},{"pos":[746233,746240],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[746274,746275]},{"pos":[746329,746334],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[746394,746395]},{"pos":[746451,746458],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[746551,746552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746721,746738],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[746804,746805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[746882,746893],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[746979,746982]},{"pos":[747016,747023],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[747056,747057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[747085,747086]},{"pos":[747141,747145],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[747204,747207]},{"pos":[747241,747248],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[747282,747283]},{"pos":[747337,747342],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[747402,747403]},{"pos":[747459,747466],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[747527,747528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747555,747556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[748090,748194],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[748918,748947],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[749025,749026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749103,749114],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[749199,749200],"content":"<","needQuote":true,"nodes":[]},{"pos":[749227,749233],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[749298,749299]},{"pos":[749381,749392],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[749477,749478],"content":"<","needQuote":true,"nodes":[]},{"pos":[749505,749512],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[749578,749579]},{"pos":[749634,749638],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[749696,749697],"content":"<","needQuote":true,"nodes":[]},{"pos":[749724,749730],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[749763,749764]},{"pos":[749796,749803],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[749837,749838]},{"pos":[749870,749877],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[749942,749943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750134,750166],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[750247,750248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[750325,750336],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[750422,750425]},{"pos":[750459,750465],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[750497,750498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750526,750527]},{"pos":[750609,750620],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[750706,750709]},{"pos":[750743,750750],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[750783,750784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750812,750813]},{"pos":[750868,750872],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[750931,750934]},{"pos":[750968,750974],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[751007,751008]},{"pos":[751040,751047],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[751081,751082]},{"pos":[751114,751121],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[751154,751155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751182,751183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751685,751696],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[751939,751959],"content":"IEqualityComparer<T>","needQuote":true,"nodes":[{"content":"IEqualityComparer&lt;T&gt;","pos":[0,20],"source":"IEqualityComparer<T>"}]},{"pos":[752202,752219],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[752310,752311],"content":"<","needQuote":true,"nodes":[]},{"pos":[752338,752339],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[752465,752482],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[752574,752577]},{"pos":[752611,752612],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[752639,752640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752883,752903],"content":"IEqualityComparer<T>","needQuote":true,"nodes":[{"content":"IEqualityComparer&lt;T&gt;","pos":[0,20],"source":"IEqualityComparer<T>"}]},{"pos":[753146,753163],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[753233,753234],"content":"<","needQuote":true,"nodes":[]},{"pos":[753261,753262],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[753388,753405],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[753476,753479]},{"pos":[753513,753514],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[753541,753542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753881,753886],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[754361,754366],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[754742,754747],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[754905,754910],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[755269,755274],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[755773,755783],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[756146,756153],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[756322,756332],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[756663,756664],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[756753,756754],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[756967,756974],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[757186,757191],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[757264,757265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[757292,757293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757387,757392],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[757468,757469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[757496,757497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757744,757751],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[757963,757968],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[758041,758042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758069,758070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758164,758169],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[758245,758246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758273,758274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758632,758643],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[758870,758878],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[758954,758955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758982,758983],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[759010,759011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[759112,759120],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[759199,759200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[759227,759228],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[759255,759256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[759525,759536],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[759763,759771],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[759847,759848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[759875,759876],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[759903,759904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760005,760013],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[760092,760093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760120,760121],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[760148,760149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760350,760353],"content":"T[]","needQuote":true,"nodes":[{"content":"T[]","pos":[0,3]}]},{"pos":[760429,760430],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[760458,760460]},{"pos":[760502,760503],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[760530,760532],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[760814,760832],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[761130,761136],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[761210,761211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[761238,761239],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[761267,761269]},{"content":",","pos":[761301,761302]},{"pos":[761356,761361],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[761420,761421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761535,761541],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[761618,761619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[761646,761647],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[761674,761676],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[761705,761706]},{"pos":[761760,761765],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[761824,761825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762133,762151],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[762449,762455],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[762529,762530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762557,762558],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[762586,762588]},{"content":",","pos":[762620,762621]},{"pos":[762675,762680],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[762739,762740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762854,762860],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[762937,762938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762965,762966],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[762993,762995],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[763024,763025]},{"pos":[763079,763084],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[763143,763144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763469,763489],"content":"HashSet.Enumerator<>","needQuote":true,"nodes":[{"content":"HashSet.Enumerator&lt;&gt;","pos":[0,20],"source":"HashSet.Enumerator<>"}]},{"pos":[763733,763751],"content":"HashSet.Enumerator","needQuote":true,"nodes":[{"content":"HashSet.Enumerator","pos":[0,18]}]},{"pos":[763822,763823],"content":"<","needQuote":true,"nodes":[]},{"pos":[763950,763968],"content":"HashSet.Enumerator","needQuote":true,"nodes":[{"content":"HashSet.Enumerator","pos":[0,18]}]},{"content":"(Of","pos":[764040,764043]},{"pos":[764077,764078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764429,764438],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[764659,764665],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[764739,764740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[764767,764768],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[764795,764796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764895,764901],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[764978,764979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765006,765007],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[765034,765035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765296,765305],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[765526,765532],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[765606,765607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765634,765635],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[765662,765663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765762,765768],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[765845,765846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765873,765874],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[765901,765902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766161,766173],"content":"Predicate<T>","needQuote":true,"nodes":[{"content":"Predicate&lt;T&gt;","pos":[0,12],"source":"Predicate<T>"}]},{"pos":[766324,766333],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[766375,766376],"content":"<","needQuote":true,"nodes":[]},{"pos":[766403,766404],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[766502,766511],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[766554,766557]},{"pos":[766591,766592],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[766619,766620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766792,766804],"content":"Predicate<T>","needQuote":true,"nodes":[{"content":"Predicate&lt;T&gt;","pos":[0,12],"source":"Predicate<T>"}]},{"pos":[766955,766964],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[767006,767007],"content":"<","needQuote":true,"nodes":[]},{"pos":[767034,767035],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[767133,767142],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[767185,767188]},{"pos":[767222,767223],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[767250,767251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767551,767557],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[767769,767772],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[767843,767844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[767871,767872],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[767899,767900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767996,767999],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[768073,768074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768101,768102],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[768129,768130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768379,768385],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[768597,768600],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[768671,768672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768699,768700],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[768727,768728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768824,768827],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[768901,768902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768929,768930],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[768957,768958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769317,769332],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[769568,769581],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[769662,769663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[769690,769691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769793,769806],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[769890,769891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[769918,769919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770259,770273],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[770492,770503],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[770567,770568],"content":"<","needQuote":true,"nodes":[]},{"pos":[770595,770596],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[770716,770727],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[770792,770795]},{"pos":[770829,770830],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[770857,770858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771091,771106],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[771342,771355],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[771436,771437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771464,771465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771567,771580],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[771664,771665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771692,771693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771956,771970],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[772189,772200],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[772264,772265],"content":"<","needQuote":true,"nodes":[]},{"pos":[772292,772293],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[772413,772424],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[772489,772492]},{"pos":[772526,772527],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[772554,772555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772817,772832],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[772971,772984],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[773054,773055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[773082,773083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773175,773188],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[773258,773259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[773286,773287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773503,773514],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[773696,773717],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[773911,773938],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[774157,774174],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[774367,774388],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Collections.Generic.HashSet`1\n  commentId: T:System.Collections.Generic.HashSet`1\n  id: HashSet`1\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.HashSet`1.#ctor\n  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})\n  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})\n  - System.Collections.Generic.HashSet`1.Add(`0)\n  - System.Collections.Generic.HashSet`1.Clear\n  - System.Collections.Generic.HashSet`1.Comparer\n  - System.Collections.Generic.HashSet`1.Contains(`0)\n  - System.Collections.Generic.HashSet`1.CopyTo(`0[])\n  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  - System.Collections.Generic.HashSet`1.Count\n  - System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.GetEnumerator\n  - System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.Remove(`0)\n  - System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})\n  - System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.HashSet`1.TrimExcess\n  - System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})\n  langs:\n  - csharp\n  - vb\n  name: HashSet<T>\n  fullName: System.Collections.Generic.HashSet<T>\n  type: Class\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HashSet\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 51\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Represents a set of values.</p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerTypeProxy(typeof (ICollectionDebugView<>))]\n\n      [DebuggerDisplay(\"Count = {Count}\")]\n\n      [SuppressMessage(\"Microsoft.Naming\", \"CA1710:IdentifiersShouldHaveCorrectSuffix\", Justification = \"By design\")]\n\n      public class HashSet<T> : ISet<T>, ICollection<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable\n    content.vb: >-\n      <DebuggerTypeProxy(GetType(ICollectionDebugView(Of )))>\n\n      <DebuggerDisplay(\"Count = {Count}\")>\n\n      <SuppressMessage(\"Microsoft.Naming\", \"CA1710:IdentifiersShouldHaveCorrectSuffix\", Justification:=\"By design\")>\n\n      Public Class HashSet(Of T)\n          Implements ISet(Of T), ICollection(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of elements in the hash set.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedSet`1\n    commentId: T:System.Collections.Generic.SortedSet`1\n  - type: System.Collections.Generic.ISet`1\n    commentId: T:System.Collections.Generic.ISet`1\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{{T}}\n  - System.Collections.Generic.IReadOnlyCollection{{T}}\n  - System.Collections.Generic.IEnumerable{{T}}\n  - System.Collections.Generic.ISet{{T}}\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Collections.Generic.HashSet(Of T)\n  name.vb: HashSet(Of T)\n  nameWithType: HashSet<T>\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``1(System.Func{{T},{T},{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.All``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Append``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Prepend``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Single})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``2(System.Func{{T},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Single})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``2(System.Func{{T},{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Single})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{T},{TSecond},{TResult}})\n  nameWithType.vb: HashSet(Of T)\n- uid: System.Collections.Generic.HashSet`1.#ctor\n  commentId: M:System.Collections.Generic.HashSet`1.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: HashSet()\n  fullName: System.Collections.Generic.HashSet<T>.HashSet()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 77\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty and uses the default equality comparer for the set type.</p>\\n\"\n  syntax:\n    content: public HashSet()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet()\n  nameWithType: HashSet<T>.HashSet()\n  nameWithType.vb: HashSet(Of T).HashSet()\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: HashSet(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 95\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that uses the default equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</p>\\n\"\n  syntax:\n    content: public HashSet(IEnumerable<T> collection)\n    content.vb: Public Sub New(collection As IEnumerable(Of T))\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection whose elements are copied to the new set.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>collection</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: HashSet(IEnumerable(Of T))\n  nameWithType: HashSet<T>.HashSet(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).HashSet(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})\n  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: HashSet(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 106\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that uses the specified equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</p>\\n\"\n  syntax:\n    content: public HashSet(IEnumerable<T> collection, IEqualityComparer<T> comparer)\n    content.vb: Public Sub New(collection As IEnumerable(Of T), comparer As IEqualityComparer(Of T))\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection whose elements are copied to the new set.</p>\\n\"\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{{T}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IEqualityComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to use when comparing values in the set, or <strong>null</strong> to use the default <xref href=\\\"System.Collections.Generic.EqualityComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation for the set type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>collection</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: HashSet(IEnumerable(Of T), IEqualityComparer(Of T))\n  nameWithType: HashSet<T>.HashSet(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: HashSet(Of T).HashSet(IEnumerable(Of T), IEqualityComparer(Of T))\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})\n  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: HashSet(IEqualityComparer<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEqualityComparer<T>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 81\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty and uses the specified equality comparer for the set type.</p>\\n\"\n  syntax:\n    content: public HashSet(IEqualityComparer<T> comparer)\n    content.vb: Public Sub New(comparer As IEqualityComparer(Of T))\n    parameters:\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{{T}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IEqualityComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to use when comparing values in the set, or <strong>null</strong> to use the default <xref href=\\\"System.Collections.Generic.EqualityComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation for the set type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet(System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: HashSet(IEqualityComparer(Of T))\n  nameWithType: HashSet<T>.HashSet(IEqualityComparer<T>)\n  nameWithType.vb: HashSet(Of T).HashSet(IEqualityComparer(Of T))\n- uid: System.Collections.Generic.HashSet`1.Comparer\n  commentId: P:System.Collections.Generic.HashSet`1.Comparer\n  id: Comparer\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: Comparer\n  fullName: System.Collections.Generic.HashSet<T>.Comparer\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Comparer\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 901\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Collections.Generic.IEqualityComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is used to determine equality for the values in the set.</p>\\n\"\n  syntax:\n    content: public IEqualityComparer<T> Comparer { get; }\n    content.vb: Public ReadOnly Property Comparer As IEqualityComparer(Of T)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEqualityComparer{{T}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IEqualityComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is used to determine equality for the values in the set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.HashSet(Of T).Comparer\n  nameWithType: HashSet<T>.Comparer\n  nameWithType.vb: HashSet(Of T).Comparer\n- uid: System.Collections.Generic.HashSet`1.Count\n  commentId: P:System.Collections.Generic.HashSet`1.Count\n  id: Count\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Collections.Generic.HashSet<T>.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 303\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the number of elements that are contained in a set.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of elements that are contained in the set.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{{T}}.Count\n  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.HashSet(Of T).Count\n  nameWithType: HashSet<T>.Count\n  nameWithType.vb: HashSet(Of T).Count\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  commentId: P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: ICollection<T>.IsReadOnly\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<T>.IsReadOnly\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 311\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a value indicating whether a collection is read-only.</p>\\n\"\n  syntax:\n    content: bool ICollection<T>.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<T>.IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the collection is read-only; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{{T}}.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly\n  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly\n  nameWithType: HashSet<T>.ICollection<T>.IsReadOnly\n  nameWithType.vb: HashSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly\n- uid: System.Collections.Generic.HashSet`1.Add(`0)\n  commentId: M:System.Collections.Generic.HashSet`1.Add(`0)\n  id: Add(`0)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: Add(T)\n  fullName: System.Collections.Generic.HashSet<T>.Add(T)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 345\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Adds the specified element to a set.</p>\\n\"\n  syntax:\n    content: public bool Add(T item)\n    content.vb: Public Function Add(item As T) As Boolean\n    parameters:\n    - id: item\n      type: '{T}'\n      description: \"\\n<p>The element to add to the set.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the element is added to the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; <strong>false</strong> if the element is already present.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).Add(T)\n  nameWithType: HashSet<T>.Add(T)\n  nameWithType.vb: HashSet(Of T).Add(T)\n- uid: System.Collections.Generic.HashSet`1.Clear\n  commentId: M:System.Collections.Generic.HashSet`1.Clear\n  id: Clear\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Collections.Generic.HashSet<T>.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 201\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes all elements from a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Clear()\n    content.vb: Public Sub Clear\n  implements:\n  - System.Collections.Generic.ICollection{{T}}.Clear\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).Clear()\n  nameWithType: HashSet<T>.Clear()\n  nameWithType.vb: HashSet(Of T).Clear()\n- uid: System.Collections.Generic.HashSet`1.Contains(`0)\n  commentId: M:System.Collections.Generic.HashSet`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: Contains(T)\n  fullName: System.Collections.Generic.HashSet<T>.Contains(T)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 223\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object contains the specified element.</p>\\n\"\n  syntax:\n    content: public bool Contains(T item)\n    content.vb: Public Function Contains(item As T) As Boolean\n    parameters:\n    - id: item\n      type: '{T}'\n      description: \"\\n<p>The element to locate in the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object contains the specified element; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{{T}}.Contains({T})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).Contains(T)\n  nameWithType: HashSet<T>.Contains(T)\n  nameWithType.vb: HashSet(Of T).Contains(T)\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])\n  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[])\n  id: CopyTo(`0[])\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(T[])\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 823\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Copies the elements of a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to an array.</p>\\n\"\n  syntax:\n    content: public void CopyTo(T[] array)\n    content.vb: Public Sub CopyTo(array As T())\n    parameters:\n    - id: array\n      type: '{T}[]'\n      description: \"\\n<p>The one-dimensional array that is the destination of the elements copied from the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. The array must have zero-based indexing.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T())\n  name.vb: CopyTo(T())\n  nameWithType: HashSet<T>.CopyTo(T[])\n  nameWithType.vb: HashSet(Of T).CopyTo(T())\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)\n  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 246\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Copies the elements of a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to an array, starting at the specified array index.</p>\\n\"\n  syntax:\n    content: public void CopyTo(T[] array, int arrayIndex)\n    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)\n    parameters:\n    - id: array\n      type: '{T}[]'\n      description: \"\\n<p>The one-dimensional array that is the destination of the elements copied from the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. The array must have zero-based indexing.</p>\\n\"\n    - id: arrayIndex\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>arrayIndex</em> is less than 0.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>arrayIndex</em> is greater than the length of the destination <em>array</em>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  nameWithType: HashSet<T>.CopyTo(T[], Int32)\n  nameWithType.vb: HashSet(Of T).CopyTo(T(), Int32)\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  id: CopyTo(`0[],System.Int32,System.Int32)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(T[], Int32, Int32)\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 825\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Copies the specified number of elements of a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to an array, starting at the specified array index.</p>\\n\"\n  syntax:\n    content: public void CopyTo(T[] array, int arrayIndex, int count)\n    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer, count As Integer)\n    parameters:\n    - id: array\n      type: '{T}[]'\n      description: \"\\n<p>The one-dimensional array that is the destination of the elements copied from the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. The array must have zero-based indexing.</p>\\n\"\n    - id: arrayIndex\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of elements to copy to <em>array</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>arrayIndex</em> is less than 0.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is less than 0.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>arrayIndex</em> is greater than the length of the destination <em>array</em>.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is greater than the available space from the <em>index</em> to the end of the destination <em>array</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T(), System.Int32, System.Int32)\n  name.vb: CopyTo(T(), Int32, Int32)\n  nameWithType: HashSet<T>.CopyTo(T[], Int32, Int32)\n  nameWithType.vb: HashSet(Of T).CopyTo(T(), Int32, Int32)\n- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  id: ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: ExceptWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExceptWith\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 434\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes all elements in the specified collection from the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void ExceptWith(IEnumerable<T> other)\n    content.vb: Public Sub ExceptWith(other As IEnumerable(Of T))\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection of items to remove from the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: ExceptWith(IEnumerable(Of T))\n  nameWithType: HashSet<T>.ExceptWith(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).ExceptWith(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.GetEnumerator\n  commentId: M:System.Collections.Generic.HashSet`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 320\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public HashSet<T>.Enumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As HashSet(Of T).Enumerator\n    return:\n      type: System.Collections.Generic.HashSet`1.Enumerator\n      description: \"\\n<p>A <xref href=\\\"System.Collections.Generic.HashSet`1.Enumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).GetEnumerator()\n  nameWithType: HashSet<T>.GetEnumerator()\n  nameWithType.vb: HashSet(Of T).GetEnumerator()\n- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  id: IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: IntersectWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IntersectWith\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 386\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Modifies the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to contain only elements that are present in that object and in the specified collection.</p>\\n\"\n  syntax:\n    content: public void IntersectWith(IEnumerable<T> other)\n    content.vb: Public Sub IntersectWith(other As IEnumerable(Of T))\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: IntersectWith(IEnumerable(Of T))\n  nameWithType: HashSet<T>.IntersectWith(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).IntersectWith(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: IsProperSubsetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsProperSubsetOf\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 575\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a proper subset of the specified collection.</p>\\n\"\n  syntax:\n    content: public bool IsProperSubsetOf(IEnumerable<T> other)\n    content.vb: Public Function IsProperSubsetOf(other As IEnumerable(Of T)) As Boolean\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a proper subset of <em>other</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: IsProperSubsetOf(IEnumerable(Of T))\n  nameWithType: HashSet<T>.IsProperSubsetOf(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).IsProperSubsetOf(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: IsProperSupersetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsProperSupersetOf\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 692\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a proper superset of the specified collection.</p>\\n\"\n  syntax:\n    content: public bool IsProperSupersetOf(IEnumerable<T> other)\n    content.vb: Public Function IsProperSupersetOf(other As IEnumerable(Of T)) As Boolean\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a proper superset of <em>other</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: IsProperSupersetOf(IEnumerable(Of T))\n  nameWithType: HashSet<T>.IsProperSupersetOf(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).IsProperSupersetOf(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: IsSubsetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsSubsetOf\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 518\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a subset of the specified collection.</p>\\n\"\n  syntax:\n    content: public bool IsSubsetOf(IEnumerable<T> other)\n    content.vb: Public Function IsSubsetOf(other As IEnumerable(Of T)) As Boolean\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a subset of <em>other</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: IsSubsetOf(IEnumerable(Of T))\n  nameWithType: HashSet<T>.IsSubsetOf(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).IsSubsetOf(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: IsSupersetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsSupersetOf\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 634\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a superset of the specified collection.</p>\\n\"\n  syntax:\n    content: public bool IsSupersetOf(IEnumerable<T> other)\n    content.vb: Public Function IsSupersetOf(other As IEnumerable(Of T)) As Boolean\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a superset of <em>other</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: IsSupersetOf(IEnumerable(Of T))\n  nameWithType: HashSet<T>.IsSupersetOf(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).IsSupersetOf(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})\n  id: Overlaps(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: Overlaps(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Overlaps\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 743\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and a specified collection share common elements.</p>\\n\"\n  syntax:\n    content: public bool Overlaps(IEnumerable<T> other)\n    content.vb: Public Function Overlaps(other As IEnumerable(Of T)) As Boolean\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and <em>other</em> share at least one common element; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Overlaps(IEnumerable(Of T))\n  nameWithType: HashSet<T>.Overlaps(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).Overlaps(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.Remove(`0)\n  commentId: M:System.Collections.Generic.HashSet`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: Remove(T)\n  fullName: System.Collections.Generic.HashSet<T>.Remove(T)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 256\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes the specified element from a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool Remove(T item)\n    content.vb: Public Function Remove(item As T) As Boolean\n    parameters:\n    - id: item\n      type: '{T}'\n      description: \"\\n<p>The element to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the element is successfully found and removed; otherwise, <strong>false</strong>.  This method returns <strong>false</strong> if <em>item</em> is not found in the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{{T}}.Remove({T})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).Remove(T)\n  nameWithType: HashSet<T>.Remove(T)\n  nameWithType.vb: HashSet(Of T).Remove(T)\n- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})\n  id: RemoveWhere(System.Predicate{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: RemoveWhere(Predicate<T>)\n  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveWhere\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 869\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes all elements that match the conditions defined by the specified predicate from a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: public int RemoveWhere(Predicate<T> match)\n    content.vb: Public Function RemoveWhere(match As Predicate(Of T)) As Integer\n    parameters:\n    - id: match\n      type: System.Predicate{{T}}\n      description: \"\\n<p>The <xref href=\\\"System.Predicate`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate that defines the conditions of the elements to remove.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of elements that were removed from the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>match</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).RemoveWhere(System.Predicate(Of T))\n  name.vb: RemoveWhere(Predicate(Of T))\n  nameWithType: HashSet<T>.RemoveWhere(Predicate<T>)\n  nameWithType.vb: HashSet(Of T).RemoveWhere(Predicate(Of T))\n- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})\n  id: SetEquals(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: SetEquals(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetEquals\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 778\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and the specified collection contain the same elements.</p>\\n\"\n  syntax:\n    content: public bool SetEquals(IEnumerable<T> other)\n    content.vb: Public Function SetEquals(other As IEnumerable(Of T)) As Boolean\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is equal to <em>other</em>; otherwise, false.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: SetEquals(IEnumerable(Of T))\n  nameWithType: HashSet<T>.SetEquals(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).SetEquals(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: SymmetricExceptWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SymmetricExceptWith\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 466\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Modifies the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to contain only elements that are present either in that object or in the specified collection, but not both.</p>\\n\"\n  syntax:\n    content: public void SymmetricExceptWith(IEnumerable<T> other)\n    content.vb: Public Sub SymmetricExceptWith(other As IEnumerable(Of T))\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: SymmetricExceptWith(IEnumerable(Of T))\n  nameWithType: HashSet<T>.SymmetricExceptWith(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).SymmetricExceptWith(IEnumerable(Of T))\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  id: System#Collections#Generic#ICollection{T}#Add(`0)\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: ICollection<T>.Add(T)\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.Add(T)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<T>.Add\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 192\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Adds an item to an <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: void ICollection<T>.Add(T item)\n    content.vb: Sub System.Collections.Generic.ICollection<T>.Add(item As T) Implements ICollection(Of T).Add\n    parameters:\n    - id: item\n      type: '{T}'\n      description: \"\\n<p>The object to add to the <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{{T}}.Add({T})\n  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)\n  name.vb: System.Collections.Generic.ICollection<T>.Add(T)\n  nameWithType: HashSet<T>.ICollection<T>.Add(T)\n  nameWithType.vb: HashSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable<T>.GetEnumerator()\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 325\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through a collection.</p>\\n\"\n  syntax:\n    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()\n    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator\n    return:\n      type: System.Collections.Generic.IEnumerator{{T}}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerator`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that can be used to iterate through the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  implements:\n  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator\n  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  nameWithType: HashSet<T>.IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 330\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through a collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that can be used to iterate through the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: HashSet<T>.IEnumerable.GetEnumerator()\n  nameWithType.vb: HashSet(Of T).System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.Generic.HashSet`1.TrimExcess\n  commentId: M:System.Collections.Generic.HashSet`1.TrimExcess\n  id: TrimExcess\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: TrimExcess()\n  fullName: System.Collections.Generic.HashSet<T>.TrimExcess()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TrimExcess\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 920\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Sets the capacity of a <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to the actual number of elements it contains, rounded up to a nearby, implementation-specific value.</p>\\n\"\n  syntax:\n    content: public void TrimExcess()\n    content.vb: Public Sub TrimExcess\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).TrimExcess()\n  nameWithType: HashSet<T>.TrimExcess()\n  nameWithType.vb: HashSet(Of T).TrimExcess()\n- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})\n  id: UnionWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  - vb\n  name: UnionWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnionWith\n    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs\n    startLine: 358\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Modifies the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to contain all elements that are present in itself, the specified collection, or both.</p>\\n\"\n  syntax:\n    content: public void UnionWith(IEnumerable<T> other)\n    content.vb: Public Sub UnionWith(other As IEnumerable(Of T))\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection to compare to the current <xref href=\\\"System.Collections.Generic.HashSet`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>other</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.HashSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: UnionWith(IEnumerable(Of T))\n  nameWithType: HashSet<T>.UnionWith(IEnumerable<T>)\n  nameWithType.vb: HashSet(Of T).UnionWith(IEnumerable(Of T))\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.Generic.ICollection{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n  commentId: T:System.Collections.Generic.ICollection{`0}\n- uid: System.Collections.Generic.IReadOnlyCollection{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyCollection`1\n  name: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}\n- uid: System.Collections.Generic.IEnumerable{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable{`0}\n- uid: System.Collections.Generic.ISet{{T}}\n  definition: System.Collections.Generic.ISet`1\n  name: ISet<T>\n  fullName: System.Collections.Generic.ISet<T>\n  fullname.vb: System.Collections.Generic.ISet(Of T)\n  name.vb: ISet(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ISet`1\n    name: ISet\n    fullName: System.Collections.Generic.ISet\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ISet`1\n    name: ISet\n    fullName: System.Collections.Generic.ISet\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ISet<T>\n  nameWithType.vb: ISet(Of T)\n  commentId: '!:System.Collections.Generic.ISet{`0}'\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  nameWithType: IEnumerable\n  commentId: T:System.Collections.IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable()\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<T>()\n  fullName: System.Linq.Queryable.AsQueryable<T>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of T)()\n  name.vb: AsQueryable(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<T>\n    fullName: System.Linq.Queryable.AsQueryable<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of T)\n    fullName: System.Linq.Queryable.AsQueryable(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<T>()\n  nameWithType.vb: Queryable.AsQueryable(Of T)()\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<T>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<T>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of T)()\n  name.vb: AsParallel(Of T)()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<T>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of T)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<T>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of T)()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``1(System.Func{{T},{T},{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<T>(Func<T, T, T>)\n  fullName: System.Linq.Enumerable.Aggregate<T>(System.Func<T, T, T>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of T)(System.Func(Of T, T, T))\n  name.vb: Aggregate(Of T)(Func(Of T, T, T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<T>\n    fullName: System.Linq.Enumerable.Aggregate<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of T)\n    fullName: System.Linq.Enumerable.Aggregate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<T>(Func<T, T, T>)\n  nameWithType.vb: Enumerable.Aggregate(Of T)(Func(Of T, T, T))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate>(TAccumulate, System.Func<TAccumulate, T, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of T, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, T, TAccumulate))\n  name.vb: Aggregate(Of T, TAccumulate)(TAccumulate, Func(Of TAccumulate, T, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<T, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of T, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of T, TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of T, TAccumulate)(TAccumulate, Func(Of TAccumulate, T, TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, T, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of T, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, T, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of T, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, T, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<T, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of T, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of T, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of T, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, T, TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.All``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.All<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: All(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<T>\n    fullName: System.Linq.Enumerable.All<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of T)\n    fullName: System.Linq.Enumerable.All(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.All(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<T>()\n  fullName: System.Linq.Enumerable.Any<T>()\n  fullname.vb: System.Linq.Enumerable.Any(Of T)()\n  name.vb: Any(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<T>\n    fullName: System.Linq.Enumerable.Any<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of T)\n    fullName: System.Linq.Enumerable.Any(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<T>()\n  nameWithType.vb: Enumerable.Any(Of T)()\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Any<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Any(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<T>\n    fullName: System.Linq.Enumerable.Any<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of T)\n    fullName: System.Linq.Enumerable.Any(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<T>()\n  fullName: System.Linq.Enumerable.AsEnumerable<T>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of T)()\n  name.vb: AsEnumerable(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<T>\n    fullName: System.Linq.Enumerable.AsEnumerable<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of T)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<T>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of T)()\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Average(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Double))\n  name.vb: Average(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Average(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Average(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Single))\n  name.vb: Average(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Concat<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Concat(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<T>\n    fullName: System.Linq.Enumerable.Concat<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of T)\n    fullName: System.Linq.Enumerable.Concat(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Concat(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Append``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<T>(T)\n  fullName: System.Linq.Enumerable.Append<T>(T)\n  fullname.vb: System.Linq.Enumerable.Append(Of T)(T)\n  name.vb: Append(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<T>\n    fullName: System.Linq.Enumerable.Append<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of T)\n    fullName: System.Linq.Enumerable.Append(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<T>(T)\n  nameWithType.vb: Enumerable.Append(Of T)(T)\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Prepend``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<T>(T)\n  fullName: System.Linq.Enumerable.Prepend<T>(T)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of T)(T)\n  name.vb: Prepend(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<T>\n    fullName: System.Linq.Enumerable.Prepend<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of T)\n    fullName: System.Linq.Enumerable.Prepend(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<T>(T)\n  nameWithType.vb: Enumerable.Prepend(Of T)(T)\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<T>(T)\n  fullName: System.Linq.Enumerable.Contains<T>(T)\n  fullname.vb: System.Linq.Enumerable.Contains(Of T)(T)\n  name.vb: Contains(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<T>\n    fullName: System.Linq.Enumerable.Contains<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of T)\n    fullName: System.Linq.Enumerable.Contains(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<T>(T)\n  nameWithType.vb: Enumerable.Contains(Of T)(T)\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<T>(T, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Contains<T>(T, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of T)(T, System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Contains(Of T)(T, IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<T>\n    fullName: System.Linq.Enumerable.Contains<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of T)\n    fullName: System.Linq.Enumerable.Contains(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<T>(T, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Contains(Of T)(T, IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<T>()\n  fullName: System.Linq.Enumerable.Count<T>()\n  fullname.vb: System.Linq.Enumerable.Count(Of T)()\n  name.vb: Count(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<T>\n    fullName: System.Linq.Enumerable.Count<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of T)\n    fullName: System.Linq.Enumerable.Count(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<T>()\n  nameWithType.vb: Enumerable.Count(Of T)()\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Count<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Count(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<T>\n    fullName: System.Linq.Enumerable.Count<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of T)\n    fullName: System.Linq.Enumerable.Count(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<T>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<T>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of T)()\n  name.vb: DefaultIfEmpty(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<T>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of T)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<T>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of T)()\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<T>(T)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<T>(T)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of T)(T)\n  name.vb: DefaultIfEmpty(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<T>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of T)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<T>(T)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of T)(T)\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<T>()\n  fullName: System.Linq.Enumerable.Distinct<T>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of T)()\n  name.vb: Distinct(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<T>\n    fullName: System.Linq.Enumerable.Distinct<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of T)\n    fullName: System.Linq.Enumerable.Distinct(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<T>()\n  nameWithType.vb: Enumerable.Distinct(Of T)()\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<T>(IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Distinct<T>(System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of T)(System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Distinct(Of T)(IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<T>\n    fullName: System.Linq.Enumerable.Distinct<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of T)\n    fullName: System.Linq.Enumerable.Distinct(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<T>(IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Distinct(Of T)(IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<T>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of T)(System.Int32)\n  name.vb: ElementAt(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<T>\n    fullName: System.Linq.Enumerable.ElementAt<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of T)\n    fullName: System.Linq.Enumerable.ElementAt(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<T>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<T>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of T)(System.Int32)\n  name.vb: ElementAtOrDefault(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<T>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of T)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<T>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Except<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Except(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Except(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<T>\n    fullName: System.Linq.Enumerable.Except<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of T)\n    fullName: System.Linq.Enumerable.Except(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Except(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Except(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Except(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<T>\n    fullName: System.Linq.Enumerable.Except<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of T)\n    fullName: System.Linq.Enumerable.Except(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Except(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<T>()\n  fullName: System.Linq.Enumerable.First<T>()\n  fullname.vb: System.Linq.Enumerable.First(Of T)()\n  name.vb: First(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<T>\n    fullName: System.Linq.Enumerable.First<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of T)\n    fullName: System.Linq.Enumerable.First(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<T>()\n  nameWithType.vb: Enumerable.First(Of T)()\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.First<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: First(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<T>\n    fullName: System.Linq.Enumerable.First<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of T)\n    fullName: System.Linq.Enumerable.First(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.First(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<T>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<T>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of T)()\n  name.vb: FirstOrDefault(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<T>\n    fullName: System.Linq.Enumerable.FirstOrDefault<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of T)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<T>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of T)()\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: FirstOrDefault(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<T>\n    fullName: System.Linq.Enumerable.FirstOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of T)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: GroupBy(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<T, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))\n  name.vb: GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>(System.Func<T, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<T>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)(System.Func(Of T, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of T), TResult))\n  name.vb: GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<T, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of T, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>(System.Func<T, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<T>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)(System.Func(Of T, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of T), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>(System.Func<T, TKey>, System.Func<T, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<T, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of T, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>(System.Func<T, TKey>, System.Func<T, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Intersect<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Intersect(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<T>\n    fullName: System.Linq.Enumerable.Intersect<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of T)\n    fullName: System.Linq.Enumerable.Intersect(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Intersect(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Intersect<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Intersect(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<T>\n    fullName: System.Linq.Enumerable.Intersect<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of T)\n    fullName: System.Linq.Enumerable.Intersect(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Intersect(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult))\n  name.vb: Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<T>()\n  fullName: System.Linq.Enumerable.Last<T>()\n  fullname.vb: System.Linq.Enumerable.Last(Of T)()\n  name.vb: Last(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<T>\n    fullName: System.Linq.Enumerable.Last<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of T)\n    fullName: System.Linq.Enumerable.Last(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<T>()\n  nameWithType.vb: Enumerable.Last(Of T)()\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Last<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Last(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<T>\n    fullName: System.Linq.Enumerable.Last<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of T)\n    fullName: System.Linq.Enumerable.Last(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<T>()\n  fullName: System.Linq.Enumerable.LastOrDefault<T>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of T)()\n  name.vb: LastOrDefault(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<T>\n    fullName: System.Linq.Enumerable.LastOrDefault<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of T)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<T>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of T)()\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: LastOrDefault(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<T>\n    fullName: System.Linq.Enumerable.LastOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of T)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<T>()\n  fullName: System.Linq.Enumerable.LongCount<T>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of T)()\n  name.vb: LongCount(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<T>\n    fullName: System.Linq.Enumerable.LongCount<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of T)\n    fullName: System.Linq.Enumerable.LongCount(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<T>()\n  nameWithType.vb: Enumerable.LongCount(Of T)()\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: LongCount(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<T>\n    fullName: System.Linq.Enumerable.LongCount<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of T)\n    fullName: System.Linq.Enumerable.LongCount(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<T>()\n  fullName: System.Linq.Enumerable.Max<T>()\n  fullname.vb: System.Linq.Enumerable.Max(Of T)()\n  name.vb: Max(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>()\n  nameWithType.vb: Enumerable.Max(Of T)()\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Max(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Double))\n  name.vb: Max(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Max(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Max(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Single))\n  name.vb: Max(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``2(System.Func{{T},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<T, TResult>(Func<T, TResult>)\n  fullName: System.Linq.Enumerable.Max<T, TResult>(System.Func<T, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T, TResult)(System.Func(Of T, TResult))\n  name.vb: Max(Of T, TResult)(Func(Of T, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<T, TResult>\n    fullName: System.Linq.Enumerable.Max<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of T, TResult)\n    fullName: System.Linq.Enumerable.Max(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T, TResult>(Func<T, TResult>)\n  nameWithType.vb: Enumerable.Max(Of T, TResult)(Func(Of T, TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<T>()\n  fullName: System.Linq.Enumerable.Min<T>()\n  fullname.vb: System.Linq.Enumerable.Min(Of T)()\n  name.vb: Min(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>()\n  nameWithType.vb: Enumerable.Min(Of T)()\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Min(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Double))\n  name.vb: Min(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Min(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Min(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Single))\n  name.vb: Min(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``2(System.Func{{T},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<T, TResult>(Func<T, TResult>)\n  fullName: System.Linq.Enumerable.Min<T, TResult>(System.Func<T, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T, TResult)(System.Func(Of T, TResult))\n  name.vb: Min(Of T, TResult)(Func(Of T, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<T, TResult>\n    fullName: System.Linq.Enumerable.Min<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of T, TResult)\n    fullName: System.Linq.Enumerable.Min(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T, TResult>(Func<T, TResult>)\n  nameWithType.vb: Enumerable.Min(Of T, TResult)(Func(Of T, TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: OrderBy(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<T, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<T, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: OrderByDescending(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<T, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<T, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<T>()\n  fullName: System.Linq.Enumerable.Reverse<T>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of T)()\n  name.vb: Reverse(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<T>\n    fullName: System.Linq.Enumerable.Reverse<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of T)\n    fullName: System.Linq.Enumerable.Reverse(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<T>()\n  nameWithType.vb: Enumerable.Reverse(Of T)()\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<T, TResult>(Func<T, TResult>)\n  fullName: System.Linq.Enumerable.Select<T, TResult>(System.Func<T, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of T, TResult)(System.Func(Of T, TResult))\n  name.vb: Select(Of T, TResult)(Func(Of T, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<T, TResult>\n    fullName: System.Linq.Enumerable.Select<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of T, TResult)\n    fullName: System.Linq.Enumerable.Select(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<T, TResult>(Func<T, TResult>)\n  nameWithType.vb: Enumerable.Select(Of T, TResult)(Func(Of T, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<T, TResult>(Func<T, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<T, TResult>(System.Func<T, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of T, TResult)(System.Func(Of T, System.Int32, TResult))\n  name.vb: Select(Of T, TResult)(Func(Of T, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<T, TResult>\n    fullName: System.Linq.Enumerable.Select<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of T, TResult)\n    fullName: System.Linq.Enumerable.Select(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<T, TResult>(Func<T, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of T, TResult)(Func(Of T, Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TResult)(System.Func(Of T, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of T, TResult)(Func(Of T, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<T, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of T, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TResult)(Func(Of T, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TResult>(System.Func<T, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TResult)(System.Func(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of T, TResult)(Func(Of T, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<T, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of T, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TResult)(Func(Of T, Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>(System.Func<T, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<T, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)(System.Func(Of T, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of T, TCollection, TResult))\n  name.vb: SelectMany(Of T, TCollection, TResult)(Func(Of T, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<T, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of T, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TCollection, TResult)(Func(Of T, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>(System.Func<T, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<T, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)(System.Func(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of T, TCollection, TResult))\n  name.vb: SelectMany(Of T, TCollection, TResult)(Func(Of T, Int32, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<T, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of T, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TCollection, TResult)(Func(Of T, Int32, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.SequenceEqual<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: SequenceEqual(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<T>\n    fullName: System.Linq.Enumerable.SequenceEqual<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of T)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.SequenceEqual<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: SequenceEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<T>\n    fullName: System.Linq.Enumerable.SequenceEqual<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of T)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<T>()\n  fullName: System.Linq.Enumerable.Single<T>()\n  fullname.vb: System.Linq.Enumerable.Single(Of T)()\n  name.vb: Single(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<T>\n    fullName: System.Linq.Enumerable.Single<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of T)\n    fullName: System.Linq.Enumerable.Single(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<T>()\n  nameWithType.vb: Enumerable.Single(Of T)()\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Single<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Single(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<T>\n    fullName: System.Linq.Enumerable.Single<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of T)\n    fullName: System.Linq.Enumerable.Single(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<T>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<T>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of T)()\n  name.vb: SingleOrDefault(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<T>\n    fullName: System.Linq.Enumerable.SingleOrDefault<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of T)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<T>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of T)()\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: SingleOrDefault(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<T>\n    fullName: System.Linq.Enumerable.SingleOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of T)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<T>(Int32)\n  fullName: System.Linq.Enumerable.Skip<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of T)(System.Int32)\n  name.vb: Skip(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<T>\n    fullName: System.Linq.Enumerable.Skip<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of T)\n    fullName: System.Linq.Enumerable.Skip(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<T>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: SkipWhile(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<T>\n    fullName: System.Linq.Enumerable.SkipWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of T)\n    fullName: System.Linq.Enumerable.SkipWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<T>(Func<T, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<T>(System.Func<T, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of T)(System.Func(Of T, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of T)(Func(Of T, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<T>\n    fullName: System.Linq.Enumerable.SkipWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of T)\n    fullName: System.Linq.Enumerable.SkipWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<T>(Func<T, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of T)(Func(Of T, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Sum(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Double))\n  name.vb: Sum(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Sum(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Sum(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Single))\n  name.vb: Sum(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<T>(Int32)\n  fullName: System.Linq.Enumerable.Take<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of T)(System.Int32)\n  name.vb: Take(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<T>\n    fullName: System.Linq.Enumerable.Take<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of T)\n    fullName: System.Linq.Enumerable.Take(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<T>(Int32)\n  nameWithType.vb: Enumerable.Take(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: TakeWhile(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<T>\n    fullName: System.Linq.Enumerable.TakeWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of T)\n    fullName: System.Linq.Enumerable.TakeWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<T>(Func<T, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<T>(System.Func<T, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of T)(System.Func(Of T, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of T)(Func(Of T, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<T>\n    fullName: System.Linq.Enumerable.TakeWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of T)\n    fullName: System.Linq.Enumerable.TakeWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<T>(Func<T, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of T)(Func(Of T, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<T>()\n  fullName: System.Linq.Enumerable.ToArray<T>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of T)()\n  name.vb: ToArray(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<T>\n    fullName: System.Linq.Enumerable.ToArray<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of T)\n    fullName: System.Linq.Enumerable.ToArray(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<T>()\n  nameWithType.vb: Enumerable.ToArray(Of T)()\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: ToDictionary(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<T, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<T, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))\n  name.vb: ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<T>()\n  fullName: System.Linq.Enumerable.ToList<T>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of T)()\n  name.vb: ToList(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<T>\n    fullName: System.Linq.Enumerable.ToList<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of T)\n    fullName: System.Linq.Enumerable.ToList(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<T>()\n  nameWithType.vb: Enumerable.ToList(Of T)()\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: ToLookup(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<T, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<T, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))\n  name.vb: ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Union<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Union(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Union(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<T>\n    fullName: System.Linq.Enumerable.Union<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of T)\n    fullName: System.Linq.Enumerable.Union(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Union(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Union<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Union(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Union(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<T>\n    fullName: System.Linq.Enumerable.Union<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of T)\n    fullName: System.Linq.Enumerable.Union(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Union(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Where<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Where(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<T>\n    fullName: System.Linq.Enumerable.Where<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of T)\n    fullName: System.Linq.Enumerable.Where(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<T>(Func<T, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<T>(System.Func<T, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of T)(System.Func(Of T, System.Int32, System.Boolean))\n  name.vb: Where(Of T)(Func(Of T, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<T>\n    fullName: System.Linq.Enumerable.Where<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of T)\n    fullName: System.Linq.Enumerable.Where(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<T>(Func<T, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of T)(Func(Of T, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{T},{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<T, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<T, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of T, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of T, TSecond, TResult))\n  name.vb: Zip(Of T, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of T, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<T, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<T, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of T, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of T, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of T, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of T, TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n  commentId: T:System.Collections.Generic.ICollection`1\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  commentId: T:System.Collections.Generic.IReadOnlyCollection`1\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic.ISet`1\n  isExternal: false\n  name: ISet<T>\n  fullName: System.Collections.Generic.ISet<T>\n  fullname.vb: System.Collections.Generic.ISet(Of T)\n  name.vb: ISet(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ISet`1\n    name: ISet\n    fullName: System.Collections.Generic.ISet\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ISet`1\n    name: ISet\n    fullName: System.Collections.Generic.ISet\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ISet<T>\n  nameWithType.vb: ISet(Of T)\n  commentId: T:System.Collections.Generic.ISet`1\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  nameWithType: Queryable\n  commentId: T:System.Linq.Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  nameWithType: Enumerable\n  commentId: T:System.Linq.Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  nameWithType: System.Linq\n  commentId: N:System.Linq\n- uid: System.Collections.Generic.IEqualityComparer{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEqualityComparer`1\n  name: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)\n  name.vb: IEqualityComparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEqualityComparer<T>\n  nameWithType.vb: IEqualityComparer(Of T)\n  commentId: T:System.Collections.Generic.IEqualityComparer{`0}\n- uid: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)\n  name.vb: IEqualityComparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEqualityComparer<T>\n  nameWithType.vb: IEqualityComparer(Of T)\n  commentId: T:System.Collections.Generic.IEqualityComparer`1\n- uid: System.Collections.Generic.ICollection{{T}}.Count\n  parent: System.Collections.Generic.ICollection{{T}}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection{`0}.Count\n- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count\n  parent: System.Collections.Generic.IReadOnlyCollection{{T}}\n  definition: System.Collections.Generic.IReadOnlyCollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count\n  nameWithType: IReadOnlyCollection<T>.Count\n  nameWithType.vb: IReadOnlyCollection(Of T).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n- uid: System.Collections.Generic.IReadOnlyCollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count\n  nameWithType: IReadOnlyCollection<T>.Count\n  nameWithType.vb: IReadOnlyCollection(Of T).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count\n- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{{T}}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Collections.Generic.ICollection{{T}}.Clear\n  parent: System.Collections.Generic.ICollection{{T}}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n  commentId: M:System.Collections.Generic.ICollection{`0}.Clear\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})\n  parent: System.Collections.Generic.ICollection{{T}}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n- uid: '{T}[]'\n  name: T[]\n  fullName: T[]\n  fullname.vb: T()\n  name.vb: T()\n  spec.csharp:\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  nameWithType: T[]\n  nameWithType.vb: T()\n- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)\n  parent: System.Collections.Generic.ICollection{{T}}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n- uid: System.Collections.Generic.HashSet`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: HashSet.Enumerator<>\n  fullName: System.Collections.Generic.HashSet.Enumerator<>\n  fullname.vb: System.Collections.Generic.HashSet.Enumerator(Of )\n  name.vb: HashSet.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.HashSet`1.Enumerator\n    name: HashSet.Enumerator\n    fullName: System.Collections.Generic.HashSet.Enumerator\n  - name: <\n    fullName: <\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.HashSet`1.Enumerator\n    name: HashSet.Enumerator\n    fullName: System.Collections.Generic.HashSet.Enumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: )\n    fullName: )\n  nameWithType: HashSet.Enumerator<>\n  nameWithType.vb: HashSet.Enumerator(Of )\n  commentId: T:System.Collections.Generic.HashSet`1.Enumerator\n- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})\n  parent: System.Collections.Generic.ICollection{{T}}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n- uid: System.Predicate{{T}}\n  parent: System\n  definition: System.Predicate`1\n  name: Predicate<T>\n  fullName: System.Predicate<T>\n  fullname.vb: System.Predicate(Of T)\n  name.vb: Predicate(Of T)\n  spec.csharp:\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Predicate<T>\n  nameWithType.vb: Predicate(Of T)\n  commentId: T:System.Predicate{``0}\n- uid: System.Predicate`1\n  isExternal: false\n  name: Predicate<T>\n  fullName: System.Predicate<T>\n  fullname.vb: System.Predicate(Of T)\n  name.vb: Predicate(Of T)\n  spec.csharp:\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Predicate<T>\n  nameWithType.vb: Predicate(Of T)\n  commentId: T:System.Predicate`1\n- uid: System.Collections.Generic.ICollection{{T}}.Add({T})\n  parent: System.Collections.Generic.ICollection{{T}}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{{T}}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator{`0}\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable.GetEnumerator()\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}