{"nodes":[{"pos":[1001,1023],"content":"ProductInfoHeaderValue","needQuote":true,"nodes":[{"content":"ProductInfoHeaderValue","pos":[0,22]}]},{"pos":[2352,2394],"content":"ProductInfoHeaderValue(ProductHeaderValue)","needQuote":true,"nodes":[{"content":"ProductInfoHeaderValue(ProductHeaderValue)","pos":[0,42]}]},{"pos":[3853,3883],"content":"ProductInfoHeaderValue(String)","needQuote":true,"nodes":[{"content":"ProductInfoHeaderValue(String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A comment value.&lt;/p&gt;\\n","pos":[4676,4703],"source":"\\n<p>A comment value.</p>\\n"},{"pos":[5154,5192],"content":"ProductInfoHeaderValue(String, String)","needQuote":true,"nodes":[{"content":"ProductInfoHeaderValue(String, String)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The product name value.&lt;/p&gt;\\n","pos":[6061,6095],"source":"\\n<p>The product name value.</p>\\n"},{"content":"\\n&lt;p&gt;The product version value.&lt;/p&gt;\\n","pos":[6168,6205],"source":"\\n<p>The product version value.</p>\\n"},{"pos":[6581,6588],"content":"Comment","needQuote":true,"nodes":[{"content":"Comment","pos":[0,7]}]},{"pos":[7932,7939],"content":"Product","needQuote":true,"nodes":[{"content":"Product","pos":[0,7]}]},{"pos":[9412,9426],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[10312,10369],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[11155,11168],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12511,12524],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents product info header value information.&lt;/p&gt;\\n","pos":[13335,13409],"source":"\\n<p>A string that represents product info header value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[13875,13940],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid product info header value information.&lt;/p&gt;\\n","pos":[14033,14112],"source":"\\n<p>\\n<em>input</em> is not valid product info header value information.</p>\\n"},{"pos":[14488,14498],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16001,16045],"content":"TryParse(String, out ProductInfoHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out ProductInfoHeaderValue)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[16988,17022],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[18162,18185],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[18367,18373],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18560,18582],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18730,18736],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18803,18804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18854,18860],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18921,18922]},{"pos":[18977,18983],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19043,19044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19141,19147],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19214,19215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19265,19271],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19332,19333]},{"pos":[19388,19394],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19454,19455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19700,19731],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19897,19912],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19988,19989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20039,20045],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20106,20107]},{"pos":[20162,20168],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20228,20229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20335,20350],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20426,20427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20477,20483],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20544,20545]},{"pos":[20600,20606],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20666,20667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20893,20902],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20995,21002],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21070,21071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21098,21099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21168,21175],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21243,21244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21271,21272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21447,21464],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21573,21588],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21664,21665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21692,21693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21770,21785],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21861,21862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21889,21890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22035,22041],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[22218,22236],"content":"ProductHeaderValue","needQuote":true,"nodes":[{"content":"ProductHeaderValue","pos":[0,18]}]},{"pos":[22451,22457],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22630,22644],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[22763,22769],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22836,22837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22887,22893],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22953,22954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23037,23043],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23110,23111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23161,23167],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23227,23228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23401,23408],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23574,23587],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[23688,23699],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23771,23772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23799,23800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23873,23884],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23956,23957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23984,23985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24145,24150],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24342,24364],"content":"ProductInfoHeaderValue","needQuote":true,"nodes":[{"content":"ProductInfoHeaderValue","pos":[0,22]}]},{"pos":[24606,24616],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[24711,24719],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24788,24789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24816,24817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24887,24895],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24964,24965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24992,24993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25146,25167],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[25366,25381],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue\n  commentId: T:System.Net.Http.Headers.ProductInfoHeaderValue\n  id: ProductInfoHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)\n  - System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)\n  - System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)\n  - System.Net.Http.Headers.ProductInfoHeaderValue.Comment\n  - System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode\n  - System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.ProductInfoHeaderValue.Product\n  - System.Net.Http.Headers.ProductInfoHeaderValue.ToString\n  - System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)\n  langs:\n  - csharp\n  - vb\n  name: ProductInfoHeaderValue\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProductInfoHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 494\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents a value which can either be a product or a comment in a User-Agent header.</p>\\n\"\n  syntax:\n    content: public class ProductInfoHeaderValue\n    content.vb: Public Class ProductInfoHeaderValue\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ProductInfoHeaderValue\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)\n  id: '#ctor(System.Net.Http.Headers.ProductHeaderValue)'\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ProductInfoHeaderValue(ProductHeaderValue)\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.ProductInfoHeaderValue(System.Net.Http.Headers.ProductHeaderValue)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 496\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ProductInfoHeaderValue(ProductHeaderValue product)\n    content.vb: Public Sub New(product As ProductHeaderValue)\n    parameters:\n    - id: product\n      type: System.Net.Http.Headers.ProductHeaderValue\n      description: \"\\n<p>A <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ProductInfoHeaderValue.ProductInfoHeaderValue(ProductHeaderValue)\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ProductInfoHeaderValue(String)\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.ProductInfoHeaderValue(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 497\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ProductInfoHeaderValue(string comment)\n    content.vb: Public Sub New(comment As String)\n    parameters:\n    - id: comment\n      type: System.String\n      description: \"\\n<p>A comment value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ProductInfoHeaderValue.ProductInfoHeaderValue(String)\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ProductInfoHeaderValue(String, String)\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.ProductInfoHeaderValue(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 498\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ProductInfoHeaderValue(string productName, string productVersion)\n    content.vb: Public Sub New(productName As String, productVersion As String)\n    parameters:\n    - id: productName\n      type: System.String\n      description: \"\\n<p>The product name value.</p>\\n\"\n    - id: productVersion\n      type: System.String\n      description: \"\\n<p>The product version value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ProductInfoHeaderValue.ProductInfoHeaderValue(String, String)\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.Comment\n  commentId: P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment\n  id: Comment\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Comment\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.Comment\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Comment\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 499\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the comment from the <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public string Comment { get; }\n    content.vb: Public ReadOnly Property Comment As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The comment value this <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProductInfoHeaderValue.Comment\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.Product\n  commentId: P:System.Net.Http.Headers.ProductInfoHeaderValue.Product\n  id: Product\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Product\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.Product\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Product\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 500\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the product from the <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public ProductHeaderValue Product { get; }\n    content.vb: Public ReadOnly Property Product As ProductHeaderValue\n    parameters: []\n    return:\n      type: System.Net.Http.Headers.ProductHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.ProductHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The product value from this <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProductInfoHeaderValue.Product\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 501\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ProductInfoHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 502\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ProductInfoHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 503\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static ProductInfoHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As ProductInfoHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents product info header value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.ProductInfoHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid product info header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ProductInfoHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 504\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ProductInfoHeaderValue.ToString()\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)\n  commentId: M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)\n  parent: System.Net.Http.Headers.ProductInfoHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out ProductInfoHeaderValue)\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String, out System.Net.Http.Headers.ProductInfoHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 505\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out ProductInfoHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As ProductInfoHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.ProductInfoHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.ProductInfoHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.ProductInfoHeaderValue)\n  name.vb: TryParse(String, ByRef ProductInfoHeaderValue)\n  nameWithType: ProductInfoHeaderValue.TryParse(String, out ProductInfoHeaderValue)\n  nameWithType.vb: ProductInfoHeaderValue.TryParse(String, ByRef ProductInfoHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Http.Headers.ProductHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: ProductHeaderValue\n  fullName: System.Net.Http.Headers.ProductHeaderValue\n  commentId: T:System.Net.Http.Headers.ProductHeaderValue\n  nameWithType: ProductHeaderValue\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Net.Http.Headers.ProductInfoHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: ProductInfoHeaderValue\n  fullName: System.Net.Http.Headers.ProductInfoHeaderValue\n  commentId: T:System.Net.Http.Headers.ProductInfoHeaderValue\n  nameWithType: ProductInfoHeaderValue\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}