{"nodes":[{"pos":[4758,4772],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"pos":[5592,5595],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[6434,6443],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[7328,7344],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[8239,8249],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[9098,9101],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[9934,9941],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[10796,10805],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[11672,11682],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[12555,12566],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[13428,13434],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[14274,14279],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[15112,15116],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[15956,15964],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[16829,16840],"content":"Conditional","needQuote":true,"nodes":[{"content":"Conditional","pos":[0,11]}]},{"pos":[17708,17716],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[18569,18576],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[19447,19461],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[20345,20354],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[21218,21227],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[22085,22092],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[22939,22945],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[23806,23818],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[24688,24695],"content":"Dynamic","needQuote":true,"nodes":[{"content":"Dynamic","pos":[0,7]}]},{"pos":[25539,25544],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[26398,26409],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[27305,27322],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[28218,28227],"content":"Extension","needQuote":true,"nodes":[{"content":"Extension","pos":[0,9]}]},{"pos":[29076,29080],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[29930,29941],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[30840,30858],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[31758,31767],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[32619,32624],"content":"Index","needQuote":true,"nodes":[{"content":"Index","pos":[0,5]}]},{"pos":[33463,33469],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[34315,34322],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[35169,35175],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[36015,36020],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[36859,36865],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[37717,37726],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[38608,38623],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[39508,39516],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[40394,40409],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[41294,41302],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[42147,42151],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[43004,43016],"content":"MemberAccess","needQuote":true,"nodes":[{"content":"MemberAccess","pos":[0,12]}]},{"pos":[43895,43905],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[44764,44770],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[45631,45643],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[46516,46524],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[47399,47413],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[48333,48354],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[49284,49299],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[50178,50184],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[51048,51061],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[51923,51926],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[52781,52795],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[53688,53700],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[54558,54561],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[55398,55406],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[56281,56295],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[57158,57160],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[57993,58001],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[58852,58858],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[59710,59719],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[60613,60632],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[61566,61585],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[62477,62482],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[63336,63347],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[64246,64264],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[65191,65209],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[66097,66102],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[66953,66963],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[67852,67868],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[68781,68797],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[69686,69694],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[70569,70583],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[71503,71524],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[72454,72469],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[73348,73354],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[74194,74199],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[75029,75032],"content":"Try","needQuote":true,"nodes":[{"content":"Try","pos":[0,3]}]},{"pos":[75863,75869],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[76721,76730],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[77585,77591],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[78443,78452],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[79304,79309],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[80047,80070],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[80309,80323],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]}],"content":"items:\n- uid: System.Linq.Expressions.ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n  id: ExpressionType\n  parent: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.ExpressionType.Add\n  - System.Linq.Expressions.ExpressionType.AddAssign\n  - System.Linq.Expressions.ExpressionType.AddAssignChecked\n  - System.Linq.Expressions.ExpressionType.AddChecked\n  - System.Linq.Expressions.ExpressionType.And\n  - System.Linq.Expressions.ExpressionType.AndAlso\n  - System.Linq.Expressions.ExpressionType.AndAssign\n  - System.Linq.Expressions.ExpressionType.ArrayIndex\n  - System.Linq.Expressions.ExpressionType.ArrayLength\n  - System.Linq.Expressions.ExpressionType.Assign\n  - System.Linq.Expressions.ExpressionType.Block\n  - System.Linq.Expressions.ExpressionType.Call\n  - System.Linq.Expressions.ExpressionType.Coalesce\n  - System.Linq.Expressions.ExpressionType.Conditional\n  - System.Linq.Expressions.ExpressionType.Constant\n  - System.Linq.Expressions.ExpressionType.Convert\n  - System.Linq.Expressions.ExpressionType.ConvertChecked\n  - System.Linq.Expressions.ExpressionType.DebugInfo\n  - System.Linq.Expressions.ExpressionType.Decrement\n  - System.Linq.Expressions.ExpressionType.Default\n  - System.Linq.Expressions.ExpressionType.Divide\n  - System.Linq.Expressions.ExpressionType.DivideAssign\n  - System.Linq.Expressions.ExpressionType.Dynamic\n  - System.Linq.Expressions.ExpressionType.Equal\n  - System.Linq.Expressions.ExpressionType.ExclusiveOr\n  - System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  - System.Linq.Expressions.ExpressionType.Extension\n  - System.Linq.Expressions.ExpressionType.Goto\n  - System.Linq.Expressions.ExpressionType.GreaterThan\n  - System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  - System.Linq.Expressions.ExpressionType.Increment\n  - System.Linq.Expressions.ExpressionType.Index\n  - System.Linq.Expressions.ExpressionType.Invoke\n  - System.Linq.Expressions.ExpressionType.IsFalse\n  - System.Linq.Expressions.ExpressionType.IsTrue\n  - System.Linq.Expressions.ExpressionType.Label\n  - System.Linq.Expressions.ExpressionType.Lambda\n  - System.Linq.Expressions.ExpressionType.LeftShift\n  - System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  - System.Linq.Expressions.ExpressionType.LessThan\n  - System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  - System.Linq.Expressions.ExpressionType.ListInit\n  - System.Linq.Expressions.ExpressionType.Loop\n  - System.Linq.Expressions.ExpressionType.MemberAccess\n  - System.Linq.Expressions.ExpressionType.MemberInit\n  - System.Linq.Expressions.ExpressionType.Modulo\n  - System.Linq.Expressions.ExpressionType.ModuloAssign\n  - System.Linq.Expressions.ExpressionType.Multiply\n  - System.Linq.Expressions.ExpressionType.MultiplyAssign\n  - System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  - System.Linq.Expressions.ExpressionType.MultiplyChecked\n  - System.Linq.Expressions.ExpressionType.Negate\n  - System.Linq.Expressions.ExpressionType.NegateChecked\n  - System.Linq.Expressions.ExpressionType.New\n  - System.Linq.Expressions.ExpressionType.NewArrayBounds\n  - System.Linq.Expressions.ExpressionType.NewArrayInit\n  - System.Linq.Expressions.ExpressionType.Not\n  - System.Linq.Expressions.ExpressionType.NotEqual\n  - System.Linq.Expressions.ExpressionType.OnesComplement\n  - System.Linq.Expressions.ExpressionType.Or\n  - System.Linq.Expressions.ExpressionType.OrAssign\n  - System.Linq.Expressions.ExpressionType.OrElse\n  - System.Linq.Expressions.ExpressionType.Parameter\n  - System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  - System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  - System.Linq.Expressions.ExpressionType.Power\n  - System.Linq.Expressions.ExpressionType.PowerAssign\n  - System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  - System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  - System.Linq.Expressions.ExpressionType.Quote\n  - System.Linq.Expressions.ExpressionType.RightShift\n  - System.Linq.Expressions.ExpressionType.RightShiftAssign\n  - System.Linq.Expressions.ExpressionType.RuntimeVariables\n  - System.Linq.Expressions.ExpressionType.Subtract\n  - System.Linq.Expressions.ExpressionType.SubtractAssign\n  - System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  - System.Linq.Expressions.ExpressionType.SubtractChecked\n  - System.Linq.Expressions.ExpressionType.Switch\n  - System.Linq.Expressions.ExpressionType.Throw\n  - System.Linq.Expressions.ExpressionType.Try\n  - System.Linq.Expressions.ExpressionType.TypeAs\n  - System.Linq.Expressions.ExpressionType.TypeEqual\n  - System.Linq.Expressions.ExpressionType.TypeIs\n  - System.Linq.Expressions.ExpressionType.UnaryPlus\n  - System.Linq.Expressions.ExpressionType.Unbox\n  langs:\n  - csharp\n  - vb\n  name: ExpressionType\n  nameWithType: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n  type: Enum\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExpressionType\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 437\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public enum ExpressionType\n    content.vb: Public Enum ExpressionType\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n- uid: System.Linq.Expressions.ExpressionType.Add\n  commentId: F:System.Linq.Expressions.ExpressionType.Add\n  id: Add\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Add\n  nameWithType: ExpressionType.Add\n  fullName: System.Linq.Expressions.ExpressionType.Add\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 439\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Add = 0\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.AddAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.AddAssign\n  id: AddAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: AddAssign\n  nameWithType: ExpressionType.AddAssign\n  fullName: System.Linq.Expressions.ExpressionType.AddAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 440\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: AddAssign = 63\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.AddAssignChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.AddAssignChecked\n  id: AddAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: AddAssignChecked\n  nameWithType: ExpressionType.AddAssignChecked\n  fullName: System.Linq.Expressions.ExpressionType.AddAssignChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAssignChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 441\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: AddAssignChecked = 74\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.AddChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.AddChecked\n  id: AddChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: AddChecked\n  nameWithType: ExpressionType.AddChecked\n  fullName: System.Linq.Expressions.ExpressionType.AddChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 442\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: AddChecked = 1\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.And\n  commentId: F:System.Linq.Expressions.ExpressionType.And\n  id: And\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: And\n  nameWithType: ExpressionType.And\n  fullName: System.Linq.Expressions.ExpressionType.And\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: And\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 443\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: And = 2\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.AndAlso\n  commentId: F:System.Linq.Expressions.ExpressionType.AndAlso\n  id: AndAlso\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: AndAlso\n  nameWithType: ExpressionType.AndAlso\n  fullName: System.Linq.Expressions.ExpressionType.AndAlso\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AndAlso\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 444\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: AndAlso = 3\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.AndAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.AndAssign\n  id: AndAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: AndAssign\n  nameWithType: ExpressionType.AndAssign\n  fullName: System.Linq.Expressions.ExpressionType.AndAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AndAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 445\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: AndAssign = 64\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.ArrayIndex\n  commentId: F:System.Linq.Expressions.ExpressionType.ArrayIndex\n  id: ArrayIndex\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: ArrayIndex\n  nameWithType: ExpressionType.ArrayIndex\n  fullName: System.Linq.Expressions.ExpressionType.ArrayIndex\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ArrayIndex\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 446\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: ArrayIndex = 5\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.ArrayLength\n  commentId: F:System.Linq.Expressions.ExpressionType.ArrayLength\n  id: ArrayLength\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: ArrayLength\n  nameWithType: ExpressionType.ArrayLength\n  fullName: System.Linq.Expressions.ExpressionType.ArrayLength\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ArrayLength\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 447\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: ArrayLength = 4\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Assign\n  commentId: F:System.Linq.Expressions.ExpressionType.Assign\n  id: Assign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Assign\n  nameWithType: ExpressionType.Assign\n  fullName: System.Linq.Expressions.ExpressionType.Assign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Assign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 448\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Assign = 46\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Block\n  commentId: F:System.Linq.Expressions.ExpressionType.Block\n  id: Block\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Block\n  nameWithType: ExpressionType.Block\n  fullName: System.Linq.Expressions.ExpressionType.Block\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Block\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 449\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Block = 47\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Call\n  commentId: F:System.Linq.Expressions.ExpressionType.Call\n  id: Call\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Call\n  nameWithType: ExpressionType.Call\n  fullName: System.Linq.Expressions.ExpressionType.Call\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Call\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 450\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Call = 6\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Coalesce\n  commentId: F:System.Linq.Expressions.ExpressionType.Coalesce\n  id: Coalesce\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Coalesce\n  nameWithType: ExpressionType.Coalesce\n  fullName: System.Linq.Expressions.ExpressionType.Coalesce\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Coalesce\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 451\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Coalesce = 7\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Conditional\n  commentId: F:System.Linq.Expressions.ExpressionType.Conditional\n  id: Conditional\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Conditional\n  nameWithType: ExpressionType.Conditional\n  fullName: System.Linq.Expressions.ExpressionType.Conditional\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Conditional\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 452\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Conditional = 8\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Constant\n  commentId: F:System.Linq.Expressions.ExpressionType.Constant\n  id: Constant\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Constant\n  nameWithType: ExpressionType.Constant\n  fullName: System.Linq.Expressions.ExpressionType.Constant\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Constant\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 453\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Constant = 9\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Convert\n  commentId: F:System.Linq.Expressions.ExpressionType.Convert\n  id: Convert\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Convert\n  nameWithType: ExpressionType.Convert\n  fullName: System.Linq.Expressions.ExpressionType.Convert\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Convert\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 454\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Convert = 10\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.ConvertChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.ConvertChecked\n  id: ConvertChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: ConvertChecked\n  nameWithType: ExpressionType.ConvertChecked\n  fullName: System.Linq.Expressions.ExpressionType.ConvertChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConvertChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 455\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: ConvertChecked = 11\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.DebugInfo\n  commentId: F:System.Linq.Expressions.ExpressionType.DebugInfo\n  id: DebugInfo\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: DebugInfo\n  nameWithType: ExpressionType.DebugInfo\n  fullName: System.Linq.Expressions.ExpressionType.DebugInfo\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DebugInfo\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 456\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: DebugInfo = 48\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Decrement\n  commentId: F:System.Linq.Expressions.ExpressionType.Decrement\n  id: Decrement\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Decrement\n  nameWithType: ExpressionType.Decrement\n  fullName: System.Linq.Expressions.ExpressionType.Decrement\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Decrement\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 457\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Decrement = 49\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Default\n  commentId: F:System.Linq.Expressions.ExpressionType.Default\n  id: Default\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Default\n  nameWithType: ExpressionType.Default\n  fullName: System.Linq.Expressions.ExpressionType.Default\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Default\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 458\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Default = 51\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Divide\n  commentId: F:System.Linq.Expressions.ExpressionType.Divide\n  id: Divide\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Divide\n  nameWithType: ExpressionType.Divide\n  fullName: System.Linq.Expressions.ExpressionType.Divide\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Divide\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 459\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Divide = 12\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.DivideAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.DivideAssign\n  id: DivideAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: DivideAssign\n  nameWithType: ExpressionType.DivideAssign\n  fullName: System.Linq.Expressions.ExpressionType.DivideAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DivideAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 460\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: DivideAssign = 65\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Dynamic\n  commentId: F:System.Linq.Expressions.ExpressionType.Dynamic\n  id: Dynamic\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Dynamic\n  nameWithType: ExpressionType.Dynamic\n  fullName: System.Linq.Expressions.ExpressionType.Dynamic\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dynamic\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 461\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Dynamic = 50\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Equal\n  commentId: F:System.Linq.Expressions.ExpressionType.Equal\n  id: Equal\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Equal\n  nameWithType: ExpressionType.Equal\n  fullName: System.Linq.Expressions.ExpressionType.Equal\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equal\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 462\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Equal = 13\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.ExclusiveOr\n  commentId: F:System.Linq.Expressions.ExpressionType.ExclusiveOr\n  id: ExclusiveOr\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: ExclusiveOr\n  nameWithType: ExpressionType.ExclusiveOr\n  fullName: System.Linq.Expressions.ExpressionType.ExclusiveOr\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExclusiveOr\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 463\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: ExclusiveOr = 14\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  id: ExclusiveOrAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: ExclusiveOrAssign\n  nameWithType: ExpressionType.ExclusiveOrAssign\n  fullName: System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExclusiveOrAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 464\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: ExclusiveOrAssign = 66\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Extension\n  commentId: F:System.Linq.Expressions.ExpressionType.Extension\n  id: Extension\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Extension\n  nameWithType: ExpressionType.Extension\n  fullName: System.Linq.Expressions.ExpressionType.Extension\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Extension\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 465\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Extension = 52\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Goto\n  commentId: F:System.Linq.Expressions.ExpressionType.Goto\n  id: Goto\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Goto\n  nameWithType: ExpressionType.Goto\n  fullName: System.Linq.Expressions.ExpressionType.Goto\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Goto\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 466\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Goto = 53\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.GreaterThan\n  commentId: F:System.Linq.Expressions.ExpressionType.GreaterThan\n  id: GreaterThan\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan\n  nameWithType: ExpressionType.GreaterThan\n  fullName: System.Linq.Expressions.ExpressionType.GreaterThan\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThan\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 467\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: GreaterThan = 15\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  id: GreaterThanOrEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual\n  nameWithType: ExpressionType.GreaterThanOrEqual\n  fullName: System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThanOrEqual\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 468\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: GreaterThanOrEqual = 16\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Increment\n  commentId: F:System.Linq.Expressions.ExpressionType.Increment\n  id: Increment\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Increment\n  nameWithType: ExpressionType.Increment\n  fullName: System.Linq.Expressions.ExpressionType.Increment\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Increment\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 469\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Increment = 54\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Index\n  commentId: F:System.Linq.Expressions.ExpressionType.Index\n  id: Index\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Index\n  nameWithType: ExpressionType.Index\n  fullName: System.Linq.Expressions.ExpressionType.Index\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Index\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 470\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Index = 55\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Invoke\n  commentId: F:System.Linq.Expressions.ExpressionType.Invoke\n  id: Invoke\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Invoke\n  nameWithType: ExpressionType.Invoke\n  fullName: System.Linq.Expressions.ExpressionType.Invoke\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Invoke\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 471\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Invoke = 17\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.IsFalse\n  commentId: F:System.Linq.Expressions.ExpressionType.IsFalse\n  id: IsFalse\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: IsFalse\n  nameWithType: ExpressionType.IsFalse\n  fullName: System.Linq.Expressions.ExpressionType.IsFalse\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsFalse\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 472\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: IsFalse = 84\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.IsTrue\n  commentId: F:System.Linq.Expressions.ExpressionType.IsTrue\n  id: IsTrue\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: IsTrue\n  nameWithType: ExpressionType.IsTrue\n  fullName: System.Linq.Expressions.ExpressionType.IsTrue\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsTrue\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 473\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: IsTrue = 83\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Label\n  commentId: F:System.Linq.Expressions.ExpressionType.Label\n  id: Label\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Label\n  nameWithType: ExpressionType.Label\n  fullName: System.Linq.Expressions.ExpressionType.Label\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Label\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 474\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Label = 56\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Lambda\n  commentId: F:System.Linq.Expressions.ExpressionType.Lambda\n  id: Lambda\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Lambda\n  nameWithType: ExpressionType.Lambda\n  fullName: System.Linq.Expressions.ExpressionType.Lambda\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Lambda\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 475\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Lambda = 18\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.LeftShift\n  commentId: F:System.Linq.Expressions.ExpressionType.LeftShift\n  id: LeftShift\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: LeftShift\n  nameWithType: ExpressionType.LeftShift\n  fullName: System.Linq.Expressions.ExpressionType.LeftShift\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LeftShift\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 476\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: LeftShift = 19\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  id: LeftShiftAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: LeftShiftAssign\n  nameWithType: ExpressionType.LeftShiftAssign\n  fullName: System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LeftShiftAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 477\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: LeftShiftAssign = 67\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.LessThan\n  commentId: F:System.Linq.Expressions.ExpressionType.LessThan\n  id: LessThan\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: LessThan\n  nameWithType: ExpressionType.LessThan\n  fullName: System.Linq.Expressions.ExpressionType.LessThan\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThan\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 478\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: LessThan = 20\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  id: LessThanOrEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual\n  nameWithType: ExpressionType.LessThanOrEqual\n  fullName: System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThanOrEqual\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 479\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: LessThanOrEqual = 21\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.ListInit\n  commentId: F:System.Linq.Expressions.ExpressionType.ListInit\n  id: ListInit\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: ListInit\n  nameWithType: ExpressionType.ListInit\n  fullName: System.Linq.Expressions.ExpressionType.ListInit\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ListInit\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 480\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: ListInit = 22\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Loop\n  commentId: F:System.Linq.Expressions.ExpressionType.Loop\n  id: Loop\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Loop\n  nameWithType: ExpressionType.Loop\n  fullName: System.Linq.Expressions.ExpressionType.Loop\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Loop\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 481\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Loop = 58\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.MemberAccess\n  commentId: F:System.Linq.Expressions.ExpressionType.MemberAccess\n  id: MemberAccess\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: MemberAccess\n  nameWithType: ExpressionType.MemberAccess\n  fullName: System.Linq.Expressions.ExpressionType.MemberAccess\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MemberAccess\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 482\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: MemberAccess = 23\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.MemberInit\n  commentId: F:System.Linq.Expressions.ExpressionType.MemberInit\n  id: MemberInit\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: MemberInit\n  nameWithType: ExpressionType.MemberInit\n  fullName: System.Linq.Expressions.ExpressionType.MemberInit\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MemberInit\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 483\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: MemberInit = 24\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Modulo\n  commentId: F:System.Linq.Expressions.ExpressionType.Modulo\n  id: Modulo\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Modulo\n  nameWithType: ExpressionType.Modulo\n  fullName: System.Linq.Expressions.ExpressionType.Modulo\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Modulo\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 484\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Modulo = 25\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.ModuloAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.ModuloAssign\n  id: ModuloAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: ModuloAssign\n  nameWithType: ExpressionType.ModuloAssign\n  fullName: System.Linq.Expressions.ExpressionType.ModuloAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ModuloAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 485\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: ModuloAssign = 68\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Multiply\n  commentId: F:System.Linq.Expressions.ExpressionType.Multiply\n  id: Multiply\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Multiply\n  nameWithType: ExpressionType.Multiply\n  fullName: System.Linq.Expressions.ExpressionType.Multiply\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Multiply\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 486\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Multiply = 26\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.MultiplyAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.MultiplyAssign\n  id: MultiplyAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: MultiplyAssign\n  nameWithType: ExpressionType.MultiplyAssign\n  fullName: System.Linq.Expressions.ExpressionType.MultiplyAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MultiplyAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 487\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: MultiplyAssign = 69\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  id: MultiplyAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: MultiplyAssignChecked\n  nameWithType: ExpressionType.MultiplyAssignChecked\n  fullName: System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MultiplyAssignChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 488\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: MultiplyAssignChecked = 75\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.MultiplyChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.MultiplyChecked\n  id: MultiplyChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: MultiplyChecked\n  nameWithType: ExpressionType.MultiplyChecked\n  fullName: System.Linq.Expressions.ExpressionType.MultiplyChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MultiplyChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 489\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: MultiplyChecked = 27\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Negate\n  commentId: F:System.Linq.Expressions.ExpressionType.Negate\n  id: Negate\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Negate\n  nameWithType: ExpressionType.Negate\n  fullName: System.Linq.Expressions.ExpressionType.Negate\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Negate\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 490\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Negate = 28\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.NegateChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.NegateChecked\n  id: NegateChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: NegateChecked\n  nameWithType: ExpressionType.NegateChecked\n  fullName: System.Linq.Expressions.ExpressionType.NegateChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NegateChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 491\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: NegateChecked = 30\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.New\n  commentId: F:System.Linq.Expressions.ExpressionType.New\n  id: New\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: New\n  nameWithType: ExpressionType.New\n  fullName: System.Linq.Expressions.ExpressionType.New\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: New\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 492\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: New = 31\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.NewArrayBounds\n  commentId: F:System.Linq.Expressions.ExpressionType.NewArrayBounds\n  id: NewArrayBounds\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: NewArrayBounds\n  nameWithType: ExpressionType.NewArrayBounds\n  fullName: System.Linq.Expressions.ExpressionType.NewArrayBounds\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NewArrayBounds\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 493\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: NewArrayBounds = 33\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.NewArrayInit\n  commentId: F:System.Linq.Expressions.ExpressionType.NewArrayInit\n  id: NewArrayInit\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: NewArrayInit\n  nameWithType: ExpressionType.NewArrayInit\n  fullName: System.Linq.Expressions.ExpressionType.NewArrayInit\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NewArrayInit\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 494\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: NewArrayInit = 32\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Not\n  commentId: F:System.Linq.Expressions.ExpressionType.Not\n  id: Not\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Not\n  nameWithType: ExpressionType.Not\n  fullName: System.Linq.Expressions.ExpressionType.Not\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Not\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 495\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Not = 34\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.NotEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.NotEqual\n  id: NotEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: NotEqual\n  nameWithType: ExpressionType.NotEqual\n  fullName: System.Linq.Expressions.ExpressionType.NotEqual\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NotEqual\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 496\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: NotEqual = 35\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.OnesComplement\n  commentId: F:System.Linq.Expressions.ExpressionType.OnesComplement\n  id: OnesComplement\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: OnesComplement\n  nameWithType: ExpressionType.OnesComplement\n  fullName: System.Linq.Expressions.ExpressionType.OnesComplement\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnesComplement\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 497\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: OnesComplement = 82\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Or\n  commentId: F:System.Linq.Expressions.ExpressionType.Or\n  id: Or\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Or\n  nameWithType: ExpressionType.Or\n  fullName: System.Linq.Expressions.ExpressionType.Or\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Or\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 498\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Or = 36\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.OrAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.OrAssign\n  id: OrAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: OrAssign\n  nameWithType: ExpressionType.OrAssign\n  fullName: System.Linq.Expressions.ExpressionType.OrAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OrAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 499\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: OrAssign = 70\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.OrElse\n  commentId: F:System.Linq.Expressions.ExpressionType.OrElse\n  id: OrElse\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: OrElse\n  nameWithType: ExpressionType.OrElse\n  fullName: System.Linq.Expressions.ExpressionType.OrElse\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OrElse\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 500\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: OrElse = 37\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Parameter\n  commentId: F:System.Linq.Expressions.ExpressionType.Parameter\n  id: Parameter\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Parameter\n  nameWithType: ExpressionType.Parameter\n  fullName: System.Linq.Expressions.ExpressionType.Parameter\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parameter\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 501\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Parameter = 38\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  id: PostDecrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: PostDecrementAssign\n  nameWithType: ExpressionType.PostDecrementAssign\n  fullName: System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PostDecrementAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 502\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: PostDecrementAssign = 80\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  id: PostIncrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: PostIncrementAssign\n  nameWithType: ExpressionType.PostIncrementAssign\n  fullName: System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PostIncrementAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 503\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: PostIncrementAssign = 79\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Power\n  commentId: F:System.Linq.Expressions.ExpressionType.Power\n  id: Power\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Power\n  nameWithType: ExpressionType.Power\n  fullName: System.Linq.Expressions.ExpressionType.Power\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Power\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 504\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Power = 39\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.PowerAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PowerAssign\n  id: PowerAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: PowerAssign\n  nameWithType: ExpressionType.PowerAssign\n  fullName: System.Linq.Expressions.ExpressionType.PowerAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PowerAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 505\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: PowerAssign = 71\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  id: PreDecrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: PreDecrementAssign\n  nameWithType: ExpressionType.PreDecrementAssign\n  fullName: System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreDecrementAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 506\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: PreDecrementAssign = 78\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  id: PreIncrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: PreIncrementAssign\n  nameWithType: ExpressionType.PreIncrementAssign\n  fullName: System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreIncrementAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 507\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: PreIncrementAssign = 77\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Quote\n  commentId: F:System.Linq.Expressions.ExpressionType.Quote\n  id: Quote\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Quote\n  nameWithType: ExpressionType.Quote\n  fullName: System.Linq.Expressions.ExpressionType.Quote\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Quote\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 508\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Quote = 40\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.RightShift\n  commentId: F:System.Linq.Expressions.ExpressionType.RightShift\n  id: RightShift\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: RightShift\n  nameWithType: ExpressionType.RightShift\n  fullName: System.Linq.Expressions.ExpressionType.RightShift\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RightShift\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 509\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: RightShift = 41\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.RightShiftAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.RightShiftAssign\n  id: RightShiftAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: RightShiftAssign\n  nameWithType: ExpressionType.RightShiftAssign\n  fullName: System.Linq.Expressions.ExpressionType.RightShiftAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RightShiftAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 510\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: RightShiftAssign = 72\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.RuntimeVariables\n  commentId: F:System.Linq.Expressions.ExpressionType.RuntimeVariables\n  id: RuntimeVariables\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: RuntimeVariables\n  nameWithType: ExpressionType.RuntimeVariables\n  fullName: System.Linq.Expressions.ExpressionType.RuntimeVariables\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RuntimeVariables\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 511\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: RuntimeVariables = 57\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Subtract\n  commentId: F:System.Linq.Expressions.ExpressionType.Subtract\n  id: Subtract\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Subtract\n  nameWithType: ExpressionType.Subtract\n  fullName: System.Linq.Expressions.ExpressionType.Subtract\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 512\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Subtract = 42\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.SubtractAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.SubtractAssign\n  id: SubtractAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: SubtractAssign\n  nameWithType: ExpressionType.SubtractAssign\n  fullName: System.Linq.Expressions.ExpressionType.SubtractAssign\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SubtractAssign\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 513\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: SubtractAssign = 73\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  id: SubtractAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: SubtractAssignChecked\n  nameWithType: ExpressionType.SubtractAssignChecked\n  fullName: System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SubtractAssignChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 514\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: SubtractAssignChecked = 76\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.SubtractChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.SubtractChecked\n  id: SubtractChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: SubtractChecked\n  nameWithType: ExpressionType.SubtractChecked\n  fullName: System.Linq.Expressions.ExpressionType.SubtractChecked\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SubtractChecked\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 515\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: SubtractChecked = 43\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Switch\n  commentId: F:System.Linq.Expressions.ExpressionType.Switch\n  id: Switch\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Switch\n  nameWithType: ExpressionType.Switch\n  fullName: System.Linq.Expressions.ExpressionType.Switch\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Switch\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 516\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Switch = 59\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Throw\n  commentId: F:System.Linq.Expressions.ExpressionType.Throw\n  id: Throw\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Throw\n  nameWithType: ExpressionType.Throw\n  fullName: System.Linq.Expressions.ExpressionType.Throw\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Throw\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 517\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Throw = 60\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Try\n  commentId: F:System.Linq.Expressions.ExpressionType.Try\n  id: Try\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Try\n  nameWithType: ExpressionType.Try\n  fullName: System.Linq.Expressions.ExpressionType.Try\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Try\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 518\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Try = 61\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.TypeAs\n  commentId: F:System.Linq.Expressions.ExpressionType.TypeAs\n  id: TypeAs\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: TypeAs\n  nameWithType: ExpressionType.TypeAs\n  fullName: System.Linq.Expressions.ExpressionType.TypeAs\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypeAs\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 519\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: TypeAs = 44\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.TypeEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.TypeEqual\n  id: TypeEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: TypeEqual\n  nameWithType: ExpressionType.TypeEqual\n  fullName: System.Linq.Expressions.ExpressionType.TypeEqual\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypeEqual\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 520\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: TypeEqual = 81\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.TypeIs\n  commentId: F:System.Linq.Expressions.ExpressionType.TypeIs\n  id: TypeIs\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: TypeIs\n  nameWithType: ExpressionType.TypeIs\n  fullName: System.Linq.Expressions.ExpressionType.TypeIs\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypeIs\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 521\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: TypeIs = 45\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.UnaryPlus\n  commentId: F:System.Linq.Expressions.ExpressionType.UnaryPlus\n  id: UnaryPlus\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: UnaryPlus\n  nameWithType: ExpressionType.UnaryPlus\n  fullName: System.Linq.Expressions.ExpressionType.UnaryPlus\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnaryPlus\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 522\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: UnaryPlus = 29\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n- uid: System.Linq.Expressions.ExpressionType.Unbox\n  commentId: F:System.Linq.Expressions.ExpressionType.Unbox\n  id: Unbox\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  - vb\n  name: Unbox\n  nameWithType: ExpressionType.Unbox\n  fullName: System.Linq.Expressions.ExpressionType.Unbox\n  type: Field\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Unbox\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 523\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: Unbox = 62\n    return:\n      type: System.Linq.Expressions.ExpressionType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\nreferences:\n- uid: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n- uid: System.Linq.Expressions.ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  nameWithType: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n"}