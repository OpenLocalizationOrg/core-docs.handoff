{"nodes":[{"pos":[1276,1306],"content":"IPAddressInformationCollection","needQuote":true,"nodes":[{"content":"IPAddressInformationCollection","pos":[0,30]}]},{"pos":[32464,32469],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[34152,34162],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[34965,35013],"source":"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n"},{"pos":[35613,35624],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The zero-based index of the element.&lt;/p&gt;\\n","pos":[36563,36610],"source":"\\n<p>The zero-based index of the element.</p>\\n"},{"pos":[37631,37656],"content":"Add(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(IPAddressInformation)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The object to be added to the collection.&lt;/p&gt;\\n","pos":[38632,38684],"source":"\\n<p>The object to be added to the collection.</p>\\n"},{"pos":[39284,39291],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[40742,40772],"content":"Contains(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(IPAddressInformation)","pos":[0,30]}]},{"pos":[43058,43095],"content":"CopyTo(IPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(IPAddressInformation[], Int32)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;A one-dimensional array that receives a copy of the collection.&lt;/p&gt;\\n","pos":[44017,44091],"source":"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which the copy begins.&lt;/p&gt;\\n","pos":[44155,44230],"source":"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[44349,44396],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[44397,44403],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than zero.","pos":[44520,44561],"source":"\\n<p>\\n<em>offset</em> is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[44562,44568],"source":" </p>\\n"},{"pos":[46245,46260],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[48181,48209],"content":"Remove(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(IPAddressInformation)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The object to be removed.&lt;/p&gt;\\n","pos":[49213,49249],"source":"\\n<p>The object to be removed.</p>\\n"},{"pos":[50163,50190],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[51777,51806],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[52006,52012],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52289,52322],"content":"ICollection<IPAddressInformation>","needQuote":true,"nodes":[{"content":"ICollection&lt;IPAddressInformation&gt;","pos":[0,33],"source":"ICollection<IPAddressInformation>"}]},{"pos":[52658,52669],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[52754,52755],"content":"<","needQuote":true,"nodes":[]},{"pos":[52842,52862],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[53031,53042],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[53128,53131]},{"pos":[53225,53245],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[53321,53322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53749,53782],"content":"IEnumerable<IPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;IPAddressInformation&gt;","pos":[0,33],"source":"IEnumerable<IPAddressInformation>"}]},{"pos":[54118,54129],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[54214,54215],"content":"<","needQuote":true,"nodes":[]},{"pos":[54302,54322],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[54491,54502],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[54588,54591]},{"pos":[54685,54705],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[54781,54782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55106,55117],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[55316,55326],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[55421,55429],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[55498,55499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55526,55527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55597,55605],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[55674,55675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55702,55703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55886,55900],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[56019,56025],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56092,56093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56143,56149],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56209,56210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56293,56299],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56366,56367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56417,56423],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56483,56484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56698,56720],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[56868,56874],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56941,56942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56992,56998],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57059,57060]},{"pos":[57115,57121],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57181,57182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57279,57285],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[57352,57353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57403,57409],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57470,57471]},{"pos":[57526,57532],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57592,57593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57838,57869],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[58035,58050],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[58126,58127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58177,58183],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58244,58245]},{"pos":[58300,58306],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58366,58367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58473,58488],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[58564,58565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58615,58621],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58682,58683]},{"pos":[58738,58744],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58804,58805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59035,59048],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[59149,59160],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[59232,59233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59260,59261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59334,59345],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[59417,59418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59445,59446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59621,59630],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[59723,59730],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[59798,59799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59826,59827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59896,59903],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[59971,59972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59999,60000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60175,60192],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[60301,60316],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[60392,60393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60420,60421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60498,60513],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[60589,60590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60617,60618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60913,60926],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[61043,61054],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[61113,61114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61141,61142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61223,61234],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[61293,61294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61321,61322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61731,61766],"content":"AsQueryable<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;IPAddressInformation&gt;()","pos":[0,35],"source":"AsQueryable<IPAddressInformation>()"}]},{"pos":[62094,62127],"content":"AsQueryable<IPAddressInformation>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;IPAddressInformation&gt;","pos":[0,33],"source":"AsQueryable<IPAddressInformation>"}]},{"pos":[62238,62239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62266,62267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62351,62387],"content":"AsQueryable(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"AsQueryable(Of IPAddressInformation)","pos":[0,36]}]},{"pos":[62501,62502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62529,62530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62991,63003],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[63136,63146],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[63213,63214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63241,63242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63331,63341],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[63408,63409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63436,63437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63887,63921],"content":"AsParallel<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;IPAddressInformation&gt;()","pos":[0,34],"source":"AsParallel<IPAddressInformation>()"}]},{"pos":[64272,64304],"content":"AsParallel<IPAddressInformation>","needQuote":true,"nodes":[{"content":"AsParallel&lt;IPAddressInformation&gt;","pos":[0,32],"source":"AsParallel<IPAddressInformation>"}]},{"pos":[64423,64424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64451,64452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64544,64579],"content":"AsParallel(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"AsParallel(Of IPAddressInformation)","pos":[0,35]}]},{"pos":[64701,64702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64729,64730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65460,65563],"content":"Aggregate<IPAddressInformation>(Func<IPAddressInformation, IPAddressInformation, IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, IPAddressInformation, IPAddressInformation&gt;)","pos":[0,103],"source":"Aggregate<IPAddressInformation>(Func<IPAddressInformation, IPAddressInformation, IPAddressInformation>)"}]},{"pos":[66322,66353],"content":"Aggregate<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Aggregate&lt;IPAddressInformation&gt;","pos":[0,31],"source":"Aggregate<IPAddressInformation>"}]},{"pos":[66463,66464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66514,66518],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[66576,66577],"content":"<","needQuote":true,"nodes":[]},{"pos":[66664,66684],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[66761,66762]},{"pos":[66854,66874],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[66951,66952]},{"pos":[67044,67064],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[67172,67173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67282,67316],"content":"Aggregate(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Aggregate(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[67429,67430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67480,67484],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[67543,67546]},{"pos":[67640,67660],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[67737,67738]},{"pos":[67830,67850],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[67927,67928]},{"pos":[68020,68040],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[68116,68117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68144,68145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68960,69071],"content":"Aggregate<IPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;IPAddressInformation, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, IPAddressInformation, TAccumulate&gt;)","pos":[0,111],"source":"Aggregate<IPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>)"}]},{"pos":[69738,69782],"content":"Aggregate<IPAddressInformation, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;IPAddressInformation, TAccumulate&gt;","pos":[0,44],"source":"Aggregate<IPAddressInformation, TAccumulate>"}]},{"pos":[69905,69906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69933,69944],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[69982,69983]},{"pos":[70038,70042],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[70100,70101],"content":"<","needQuote":true,"nodes":[]},{"pos":[70128,70139],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[70177,70178]},{"pos":[70270,70290],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[70367,70368]},{"pos":[70400,70411],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[70480,70481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70594,70641],"content":"Aggregate(Of IPAddressInformation, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of IPAddressInformation, TAccumulate)","pos":[0,47]}]},{"pos":[70767,70768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70795,70806],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[70844,70845]},{"pos":[70900,70904],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[70963,70966]},{"pos":[71000,71011],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[71049,71050]},{"pos":[71142,71162],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[71239,71240]},{"pos":[71272,71283],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[71320,71321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71348,71349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72242,72390],"content":"Aggregate<IPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;IPAddressInformation, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, IPAddressInformation, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,148],"source":"Aggregate<IPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[73209,73262],"content":"Aggregate<IPAddressInformation, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;IPAddressInformation, TAccumulate, TResult&gt;","pos":[0,53],"source":"Aggregate<IPAddressInformation, TAccumulate, TResult>"}]},{"pos":[73394,73395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73422,73433],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[73471,73472]},{"pos":[73527,73531],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[73589,73590],"content":"<","needQuote":true,"nodes":[]},{"pos":[73617,73628],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[73666,73667]},{"pos":[73759,73779],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[73856,73857]},{"pos":[73889,73900],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[73970,73971]},{"pos":[74026,74030],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[74088,74089],"content":"<","needQuote":true,"nodes":[]},{"pos":[74116,74127],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[74165,74166]},{"pos":[74198,74205],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[74270,74271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74405,74461],"content":"Aggregate(Of IPAddressInformation, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of IPAddressInformation, TAccumulate, TResult)","pos":[0,56]}]},{"pos":[74596,74597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74624,74635],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[74673,74674]},{"pos":[74729,74733],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[74792,74795]},{"pos":[74829,74840],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[74878,74879]},{"pos":[74971,74991],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[75068,75069]},{"pos":[75101,75112],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[75149,75150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[75178,75179]},{"pos":[75234,75238],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[75297,75300]},{"pos":[75334,75345],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[75383,75384]},{"pos":[75416,75423],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[75456,75457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75484,75485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76382,76444],"content":"All<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,62],"source":"All<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[76975,77000],"content":"All<IPAddressInformation>","needQuote":true,"nodes":[{"content":"All&lt;IPAddressInformation&gt;","pos":[0,25],"source":"All<IPAddressInformation>"}]},{"pos":[77104,77105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77155,77159],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[77217,77218],"content":"<","needQuote":true,"nodes":[]},{"pos":[77305,77325],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[77402,77403]},{"pos":[77459,77466],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77559,77560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77670,77698],"content":"All(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"All(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[77805,77806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77856,77860],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[77919,77922]},{"pos":[78016,78036],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[78113,78114]},{"pos":[78170,78177],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[78238,78239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78266,78267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78853,78880],"content":"Any<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Any&lt;IPAddressInformation&gt;()","pos":[0,27],"source":"Any<IPAddressInformation>()"}]},{"pos":[79179,79204],"content":"Any<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Any<IPAddressInformation>"}]},{"pos":[79308,79309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79336,79337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79414,79442],"content":"Any(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[79549,79550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79577,79578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80171,80233],"content":"Any<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,62],"source":"Any<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[80764,80789],"content":"Any<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Any<IPAddressInformation>"}]},{"pos":[80893,80894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80944,80948],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[81006,81007],"content":"<","needQuote":true,"nodes":[]},{"pos":[81094,81114],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[81191,81192]},{"pos":[81248,81255],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[81348,81349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81459,81487],"content":"Any(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[81594,81595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81645,81649],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[81708,81711]},{"pos":[81805,81825],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[81902,81903]},{"pos":[81959,81966],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82027,82028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82055,82056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82660,82696],"content":"AsEnumerable<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;IPAddressInformation&gt;()","pos":[0,36],"source":"AsEnumerable<IPAddressInformation>()"}]},{"pos":[83031,83065],"content":"AsEnumerable<IPAddressInformation>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;IPAddressInformation&gt;","pos":[0,34],"source":"AsEnumerable<IPAddressInformation>"}]},{"pos":[83178,83179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83206,83207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83293,83330],"content":"AsEnumerable(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of IPAddressInformation)","pos":[0,37]}]},{"pos":[83446,83447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83474,83475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84103,84169],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Decimal&gt;)","pos":[0,66],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Decimal>)"}]},{"pos":[84716,84745],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[84853,84854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84904,84908],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[84966,84967],"content":"<","needQuote":true,"nodes":[]},{"pos":[85054,85074],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[85151,85152]},{"pos":[85208,85215],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[85308,85309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85423,85455],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[85566,85567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85617,85621],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[85680,85683]},{"pos":[85777,85797],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[85874,85875]},{"pos":[85931,85938],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[85999,86000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86027,86028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86744,86809],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Double&gt;)","pos":[0,65],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Double>)"}]},{"pos":[87352,87381],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[87489,87490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87540,87544],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[87602,87603],"content":"<","needQuote":true,"nodes":[]},{"pos":[87690,87710],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[87787,87788]},{"pos":[87843,87849],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[87941,87942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88055,88087],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[88198,88199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88249,88253],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[88312,88315]},{"pos":[88409,88429],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[88506,88507]},{"pos":[88562,88568],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[88628,88629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88656,88657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89368,89432],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int32&gt;)","pos":[0,64],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Int32>)"}]},{"pos":[89971,90000],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[90108,90109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90159,90163],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[90221,90222],"content":"<","needQuote":true,"nodes":[]},{"pos":[90309,90329],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[90406,90407]},{"pos":[90461,90466],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[90557,90558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90670,90702],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[90813,90814],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90864,90868],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[90927,90930]},{"pos":[91024,91044],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[91121,91122]},{"pos":[91176,91181],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91240,91241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91268,91269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91977,92041],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int64&gt;)","pos":[0,64],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Int64>)"}]},{"pos":[92580,92609],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[92717,92718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92768,92772],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[92830,92831],"content":"<","needQuote":true,"nodes":[]},{"pos":[92918,92938],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[93015,93016]},{"pos":[93070,93075],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[93166,93167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93279,93311],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[93422,93423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93473,93477],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[93536,93539]},{"pos":[93633,93653],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[93730,93731]},{"pos":[93785,93790],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[93849,93850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93877,93878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94624,94700],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,76],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[95314,95343],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[95451,95452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95502,95506],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[95564,95565],"content":"<","needQuote":true,"nodes":[]},{"pos":[95652,95672],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[95749,95750]},{"pos":[95809,95817],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[95879,95880],"content":"<","needQuote":true,"nodes":[]},{"pos":[95931,95938],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[96063,96064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96195,96227],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[96338,96339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96389,96393],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[96452,96455]},{"pos":[96549,96569],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[96646,96647]},{"pos":[96706,96714],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[96777,96780]},{"pos":[96838,96845],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[96906,96907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96934,96935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96962,96963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97753,97828],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,75],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)"}]},{"pos":[98438,98467],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[98575,98576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98626,98630],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[98688,98689],"content":"<","needQuote":true,"nodes":[]},{"pos":[98776,98796],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[98873,98874]},{"pos":[98933,98941],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[99003,99004],"content":"<","needQuote":true,"nodes":[]},{"pos":[99054,99060],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[99184,99185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99315,99347],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[99458,99459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99509,99513],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[99572,99575]},{"pos":[99669,99689],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[99766,99767]},{"pos":[99826,99834],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[99897,99900]},{"pos":[99957,99963],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[100023,100024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100051,100052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100079,100080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100865,100939],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,74],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)"}]},{"pos":[101545,101574],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[101682,101683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101733,101737],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[101795,101796],"content":"<","needQuote":true,"nodes":[]},{"pos":[101883,101903],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[101980,101981]},{"pos":[102040,102048],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[102110,102111],"content":"<","needQuote":true,"nodes":[]},{"pos":[102160,102165],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[102288,102289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102418,102450],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[102561,102562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102612,102616],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[102675,102678]},{"pos":[102772,102792],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[102869,102870]},{"pos":[102929,102937],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[103000,103003]},{"pos":[103059,103064],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103123,103124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103151,103152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103179,103180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103962,104036],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,74],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)"}]},{"pos":[104642,104671],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[104779,104780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104830,104834],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[104892,104893],"content":"<","needQuote":true,"nodes":[]},{"pos":[104980,105000],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[105077,105078]},{"pos":[105137,105145],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[105207,105208],"content":"<","needQuote":true,"nodes":[]},{"pos":[105257,105262],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[105385,105386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105515,105547],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[105658,105659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105709,105713],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[105772,105775]},{"pos":[105869,105889],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[105966,105967]},{"pos":[106026,106034],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[106097,106100]},{"pos":[106156,106161],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[106220,106221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106248,106249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106276,106277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107061,107136],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,75],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)"}]},{"pos":[107746,107775],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[107883,107884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107934,107938],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[107996,107997],"content":"<","needQuote":true,"nodes":[]},{"pos":[108084,108104],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[108181,108182]},{"pos":[108241,108249],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[108311,108312],"content":"<","needQuote":true,"nodes":[]},{"pos":[108362,108368],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[108492,108493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108623,108655],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[108766,108767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108817,108821],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[108880,108883]},{"pos":[108977,108997],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[109074,109075]},{"pos":[109134,109142],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[109205,109208]},{"pos":[109265,109271],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[109331,109332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109359,109360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109387,109388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110141,110206],"content":"Average<IPAddressInformation>(Func<IPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Single&gt;)","pos":[0,65],"source":"Average<IPAddressInformation>(Func<IPAddressInformation, Single>)"}]},{"pos":[110749,110778],"content":"Average<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Average<IPAddressInformation>"}]},{"pos":[110886,110887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110937,110941],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[110999,111000],"content":"<","needQuote":true,"nodes":[]},{"pos":[111087,111107],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[111184,111185]},{"pos":[111240,111246],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[111338,111339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111452,111484],"content":"Average(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[111595,111596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111646,111650],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[111709,111712]},{"pos":[111806,111826],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[111903,111904]},{"pos":[111959,111965],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[112025,112026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112053,112054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112578,112593],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[112797,112810],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[112872,112873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112900,112901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112979,112995],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[113060,113061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113088,113089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113676,113739],"content":"Concat<IPAddressInformation>(IEnumerable<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Concat&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;)","pos":[0,63],"source":"Concat<IPAddressInformation>(IEnumerable<IPAddressInformation>)"}]},{"pos":[114314,114342],"content":"Concat<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Concat&lt;IPAddressInformation&gt;","pos":[0,28],"source":"Concat<IPAddressInformation>"}]},{"pos":[114449,114450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114527,114538],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[114623,114624],"content":"<","needQuote":true,"nodes":[]},{"pos":[114711,114731],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[114839,114840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114965,114996],"content":"Concat(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Concat(Of IPAddressInformation)","pos":[0,31]}]},{"pos":[115106,115107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115184,115195],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[115281,115284]},{"pos":[115378,115398],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[115474,115475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115502,115503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116168,116218],"content":"Append<IPAddressInformation>(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Append&lt;IPAddressInformation&gt;(IPAddressInformation)","pos":[0,50],"source":"Append<IPAddressInformation>(IPAddressInformation)"}]},{"pos":[116654,116682],"content":"Append<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Append&lt;IPAddressInformation&gt;","pos":[0,28],"source":"Append<IPAddressInformation>"}]},{"pos":[116789,116790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116877,116897],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[116973,116974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117059,117090],"content":"Append(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Append(Of IPAddressInformation)","pos":[0,31]}]},{"pos":[117200,117201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117288,117308],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[117384,117385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117983,118034],"content":"Prepend<IPAddressInformation>(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend&lt;IPAddressInformation&gt;(IPAddressInformation)","pos":[0,51],"source":"Prepend<IPAddressInformation>(IPAddressInformation)"}]},{"pos":[118474,118503],"content":"Prepend<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Prepend&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Prepend<IPAddressInformation>"}]},{"pos":[118611,118612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118699,118719],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[118795,118796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118882,118914],"content":"Prepend(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[119025,119026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119113,119133],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[119209,119210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119813,119865],"content":"Contains<IPAddressInformation>(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains&lt;IPAddressInformation&gt;(IPAddressInformation)","pos":[0,52],"source":"Contains<IPAddressInformation>(IPAddressInformation)"}]},{"pos":[120309,120339],"content":"Contains<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;IPAddressInformation&gt;","pos":[0,30],"source":"Contains<IPAddressInformation>"}]},{"pos":[120448,120449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120536,120556],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[120632,120633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120720,120753],"content":"Contains(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of IPAddressInformation)","pos":[0,33]}]},{"pos":[120865,120866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120953,120973],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[121049,121050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121803,121896],"content":"Contains<IPAddressInformation>(IPAddressInformation, IEqualityComparer<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Contains&lt;IPAddressInformation&gt;(IPAddressInformation, IEqualityComparer&lt;IPAddressInformation&gt;)","pos":[0,93],"source":"Contains<IPAddressInformation>(IPAddressInformation, IEqualityComparer<IPAddressInformation>)"}]},{"pos":[122633,122663],"content":"Contains<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;IPAddressInformation&gt;","pos":[0,30],"source":"Contains<IPAddressInformation>"}]},{"pos":[122772,122773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122860,122880],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[122957,122958]},{"pos":[123046,123063],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[123154,123155],"content":"<","needQuote":true,"nodes":[]},{"pos":[123242,123262],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[123370,123371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123508,123541],"content":"Contains(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of IPAddressInformation)","pos":[0,33]}]},{"pos":[123653,123654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123741,123761],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[123838,123839]},{"pos":[123927,123944],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[124036,124039]},{"pos":[124133,124153],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[124229,124230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124257,124258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124937,124966],"content":"Count<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Count&lt;IPAddressInformation&gt;()","pos":[0,29],"source":"Count<IPAddressInformation>()"}]},{"pos":[125273,125300],"content":"Count<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;IPAddressInformation&gt;","pos":[0,27],"source":"Count<IPAddressInformation>"}]},{"pos":[125406,125407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125434,125435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125514,125544],"content":"Count(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[125653,125654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125681,125682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126285,126349],"content":"Count<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,64],"source":"Count<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[126888,126915],"content":"Count<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;IPAddressInformation&gt;","pos":[0,27],"source":"Count<IPAddressInformation>"}]},{"pos":[127021,127022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127072,127076],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[127134,127135],"content":"<","needQuote":true,"nodes":[]},{"pos":[127222,127242],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[127319,127320]},{"pos":[127376,127383],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[127476,127477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127589,127619],"content":"Count(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[127728,127729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127779,127783],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[127842,127845]},{"pos":[127939,127959],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[128036,128037]},{"pos":[128093,128100],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[128161,128162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128189,128190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128804,128842],"content":"DefaultIfEmpty<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;IPAddressInformation&gt;()","pos":[0,38],"source":"DefaultIfEmpty<IPAddressInformation>()"}]},{"pos":[129185,129221],"content":"DefaultIfEmpty<IPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;IPAddressInformation&gt;","pos":[0,36],"source":"DefaultIfEmpty<IPAddressInformation>"}]},{"pos":[129336,129337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129364,129365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129453,129492],"content":"DefaultIfEmpty(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of IPAddressInformation)","pos":[0,39]}]},{"pos":[129610,129611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129638,129639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130231,130289],"content":"DefaultIfEmpty<IPAddressInformation>(IPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;IPAddressInformation&gt;(IPAddressInformation)","pos":[0,58],"source":"DefaultIfEmpty<IPAddressInformation>(IPAddressInformation)"}]},{"pos":[130757,130793],"content":"DefaultIfEmpty<IPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;IPAddressInformation&gt;","pos":[0,36],"source":"DefaultIfEmpty<IPAddressInformation>"}]},{"pos":[130908,130909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130996,131016],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[131092,131093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131186,131225],"content":"DefaultIfEmpty(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of IPAddressInformation)","pos":[0,39]}]},{"pos":[131343,131344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131431,131451],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[131527,131528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132096,132128],"content":"Distinct<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Distinct&lt;IPAddressInformation&gt;()","pos":[0,32],"source":"Distinct<IPAddressInformation>()"}]},{"pos":[132447,132477],"content":"Distinct<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;IPAddressInformation&gt;","pos":[0,30],"source":"Distinct<IPAddressInformation>"}]},{"pos":[132586,132587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132614,132615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132697,132730],"content":"Distinct(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of IPAddressInformation)","pos":[0,33]}]},{"pos":[132842,132843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132870,132871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133525,133596],"content":"Distinct<IPAddressInformation>(IEqualityComparer<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Distinct&lt;IPAddressInformation&gt;(IEqualityComparer&lt;IPAddressInformation&gt;)","pos":[0,71],"source":"Distinct<IPAddressInformation>(IEqualityComparer<IPAddressInformation>)"}]},{"pos":[134203,134233],"content":"Distinct<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;IPAddressInformation&gt;","pos":[0,30],"source":"Distinct<IPAddressInformation>"}]},{"pos":[134342,134343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134426,134443],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[134534,134535],"content":"<","needQuote":true,"nodes":[]},{"pos":[134622,134642],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[134750,134751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134884,134917],"content":"Distinct(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of IPAddressInformation)","pos":[0,33]}]},{"pos":[135029,135030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135113,135130],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[135222,135225]},{"pos":[135319,135339],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[135415,135416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135443,135444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136110,136148],"content":"ElementAt<IPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;IPAddressInformation&gt;(Int32)","pos":[0,38],"source":"ElementAt<IPAddressInformation>(Int32)"}]},{"pos":[136514,136545],"content":"ElementAt<IPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAt&lt;IPAddressInformation&gt;","pos":[0,31],"source":"ElementAt<IPAddressInformation>"}]},{"pos":[136655,136656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136705,136710],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[136769,136770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136867,136901],"content":"ElementAt(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAt(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[137014,137015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137064,137069],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[137128,137129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137708,137755],"content":"ElementAtOrDefault<IPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;IPAddressInformation&gt;(Int32)","pos":[0,47],"source":"ElementAtOrDefault<IPAddressInformation>(Int32)"}]},{"pos":[138157,138197],"content":"ElementAtOrDefault<IPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;IPAddressInformation&gt;","pos":[0,40],"source":"ElementAtOrDefault<IPAddressInformation>"}]},{"pos":[138316,138317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138366,138371],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[138430,138431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138537,138580],"content":"ElementAtOrDefault(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of IPAddressInformation)","pos":[0,43]}]},{"pos":[138702,138703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138752,138757],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[138816,138817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139508,139571],"content":"Except<IPAddressInformation>(IEnumerable<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;)","pos":[0,63],"source":"Except<IPAddressInformation>(IEnumerable<IPAddressInformation>)"}]},{"pos":[140146,140174],"content":"Except<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;IPAddressInformation&gt;","pos":[0,28],"source":"Except<IPAddressInformation>"}]},{"pos":[140281,140282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140359,140370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[140455,140456],"content":"<","needQuote":true,"nodes":[]},{"pos":[140543,140563],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[140671,140672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140797,140828],"content":"Except(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of IPAddressInformation)","pos":[0,31]}]},{"pos":[140938,140939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141016,141027],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[141113,141116]},{"pos":[141210,141230],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[141306,141307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141334,141335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142227,142331],"content":"Except<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;, IEqualityComparer&lt;IPAddressInformation&gt;)","pos":[0,104],"source":"Except<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)"}]},{"pos":[143199,143227],"content":"Except<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;IPAddressInformation&gt;","pos":[0,28],"source":"Except<IPAddressInformation>"}]},{"pos":[143334,143335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143412,143423],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[143508,143509],"content":"<","needQuote":true,"nodes":[]},{"pos":[143596,143616],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[143725,143726]},{"pos":[143814,143831],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[143922,143923],"content":"<","needQuote":true,"nodes":[]},{"pos":[144010,144030],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[144138,144139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144314,144345],"content":"Except(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of IPAddressInformation)","pos":[0,31]}]},{"pos":[144455,144456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144533,144544],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[144630,144633]},{"pos":[144727,144747],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[144823,144824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[144852,144853]},{"pos":[144941,144958],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[145050,145053]},{"pos":[145147,145167],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[145243,145244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145271,145272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146014,146043],"content":"First<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"First&lt;IPAddressInformation&gt;()","pos":[0,29],"source":"First<IPAddressInformation>()"}]},{"pos":[146350,146377],"content":"First<IPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;IPAddressInformation&gt;","pos":[0,27],"source":"First<IPAddressInformation>"}]},{"pos":[146483,146484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146511,146512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146591,146621],"content":"First(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[146730,146731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146758,146759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147362,147426],"content":"First<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,64],"source":"First<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[147965,147992],"content":"First<IPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;IPAddressInformation&gt;","pos":[0,27],"source":"First<IPAddressInformation>"}]},{"pos":[148098,148099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148149,148153],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[148211,148212],"content":"<","needQuote":true,"nodes":[]},{"pos":[148299,148319],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[148396,148397]},{"pos":[148453,148460],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[148553,148554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148666,148696],"content":"First(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[148805,148806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148856,148860],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[148919,148922]},{"pos":[149016,149036],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[149113,149114]},{"pos":[149170,149177],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[149238,149239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149266,149267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149881,149919],"content":"FirstOrDefault<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;IPAddressInformation&gt;()","pos":[0,38],"source":"FirstOrDefault<IPAddressInformation>()"}]},{"pos":[150262,150298],"content":"FirstOrDefault<IPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;IPAddressInformation&gt;","pos":[0,36],"source":"FirstOrDefault<IPAddressInformation>"}]},{"pos":[150413,150414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150441,150442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150530,150569],"content":"FirstOrDefault(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of IPAddressInformation)","pos":[0,39]}]},{"pos":[150687,150688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150715,150716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151364,151437],"content":"FirstOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,73],"source":"FirstOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[152012,152048],"content":"FirstOrDefault<IPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;IPAddressInformation&gt;","pos":[0,36],"source":"FirstOrDefault<IPAddressInformation>"}]},{"pos":[152163,152164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152214,152218],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[152276,152277],"content":"<","needQuote":true,"nodes":[]},{"pos":[152364,152384],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[152461,152462]},{"pos":[152518,152525],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[152618,152619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152740,152779],"content":"FirstOrDefault(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of IPAddressInformation)","pos":[0,39]}]},{"pos":[152897,152898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152948,152952],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[153011,153014]},{"pos":[153108,153128],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[153205,153206]},{"pos":[153262,153269],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[153330,153331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153358,153359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154079,154148],"content":"GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;)","pos":[0,69],"source":"GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)"}]},{"pos":[154679,154714],"content":"GroupBy<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey&gt;","pos":[0,35],"source":"GroupBy<IPAddressInformation, TKey>"}]},{"pos":[154828,154829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154879,154883],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[154941,154942],"content":"<","needQuote":true,"nodes":[]},{"pos":[155029,155049],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[155126,155127]},{"pos":[155159,155163],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[155225,155226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155329,155367],"content":"GroupBy(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey)","pos":[0,38]}]},{"pos":[155484,155485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155535,155539],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[155598,155601]},{"pos":[155695,155715],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[155792,155793]},{"pos":[155825,155829],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[155859,155860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155887,155888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156685,156779],"content":"GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,94],"source":"GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[157495,157530],"content":"GroupBy<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey&gt;","pos":[0,35],"source":"GroupBy<IPAddressInformation, TKey>"}]},{"pos":[157644,157645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157695,157699],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[157757,157758],"content":"<","needQuote":true,"nodes":[]},{"pos":[157845,157865],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[157942,157943]},{"pos":[157975,157979],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[158042,158043]},{"pos":[158131,158148],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[158239,158240],"content":"<","needQuote":true,"nodes":[]},{"pos":[158267,158271],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[158333,158334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158487,158525],"content":"GroupBy(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey)","pos":[0,38]}]},{"pos":[158642,158643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158693,158697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[158756,158759]},{"pos":[158853,158873],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[158950,158951]},{"pos":[158983,158987],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[159017,159018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[159046,159047]},{"pos":[159135,159152],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[159244,159247]},{"pos":[159281,159285],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[159315,159316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159343,159344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160237,160354],"content":"GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;)","pos":[0,117],"source":"GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)"}]},{"pos":[161130,161175],"content":"GroupBy<IPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement&gt;","pos":[0,45],"source":"GroupBy<IPAddressInformation, TKey, TElement>"}]},{"pos":[161299,161300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161350,161354],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[161412,161413],"content":"<","needQuote":true,"nodes":[]},{"pos":[161500,161520],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[161597,161598]},{"pos":[161630,161634],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[161697,161698]},{"pos":[161753,161757],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[161815,161816],"content":"<","needQuote":true,"nodes":[]},{"pos":[161903,161923],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[162000,162001]},{"pos":[162033,162041],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[162107,162108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162232,162280],"content":"GroupBy(Of IPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey, TElement)","pos":[0,48]}]},{"pos":[162407,162408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162458,162462],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[162521,162524]},{"pos":[162618,162638],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[162715,162716]},{"pos":[162748,162752],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[162782,162783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[162811,162812]},{"pos":[162867,162871],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[162930,162933]},{"pos":[163027,163047],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[163124,163125]},{"pos":[163157,163165],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[163199,163200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163227,163228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164241,164383],"content":"GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[165344,165389],"content":"GroupBy<IPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement&gt;","pos":[0,45],"source":"GroupBy<IPAddressInformation, TKey, TElement>"}]},{"pos":[165513,165514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165564,165568],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[165626,165627],"content":"<","needQuote":true,"nodes":[]},{"pos":[165714,165734],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[165811,165812]},{"pos":[165844,165848],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[165911,165912]},{"pos":[165967,165971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[166029,166030],"content":"<","needQuote":true,"nodes":[]},{"pos":[166117,166137],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[166214,166215]},{"pos":[166247,166255],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[166322,166323]},{"pos":[166411,166428],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[166519,166520],"content":"<","needQuote":true,"nodes":[]},{"pos":[166547,166551],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[166613,166614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166788,166836],"content":"GroupBy(Of IPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey, TElement)","pos":[0,48]}]},{"pos":[166963,166964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167014,167018],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[167077,167080]},{"pos":[167174,167194],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[167271,167272]},{"pos":[167304,167308],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[167338,167339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[167367,167368]},{"pos":[167423,167427],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[167486,167489]},{"pos":[167583,167603],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[167680,167681]},{"pos":[167713,167721],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[167755,167756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[167784,167785]},{"pos":[167873,167890],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[167982,167985]},{"pos":[168019,168023],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[168053,168054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168081,168082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169185,169319],"content":"GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TResult&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;IPAddressInformation&gt;, TResult&gt;)","pos":[0,134],"source":"GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>)"}]},{"pos":[170250,170294],"content":"GroupBy<IPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TResult&gt;","pos":[0,44],"source":"GroupBy<IPAddressInformation, TKey, TResult>"}]},{"pos":[170417,170418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170468,170472],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[170530,170531],"content":"<","needQuote":true,"nodes":[]},{"pos":[170618,170638],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[170715,170716]},{"pos":[170748,170752],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[170815,170816]},{"pos":[170871,170875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[170933,170934],"content":"<","needQuote":true,"nodes":[]},{"pos":[170961,170965],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[170996,170997]},{"pos":[171079,171090],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[171175,171176],"content":"<","needQuote":true,"nodes":[]},{"pos":[171263,171283],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[171392,171393]},{"pos":[171425,171432],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[171497,171498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171666,171713],"content":"GroupBy(Of IPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey, TResult)","pos":[0,47]}]},{"pos":[171839,171840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171890,171894],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[171953,171956]},{"pos":[172050,172070],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[172147,172148]},{"pos":[172180,172184],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[172214,172215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[172243,172244]},{"pos":[172299,172303],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[172362,172365]},{"pos":[172399,172403],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[172434,172435]},{"pos":[172517,172528],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[172614,172617]},{"pos":[172711,172731],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[172807,172808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[172836,172837]},{"pos":[172869,172876],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[172909,172910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172937,172938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174122,174281],"content":"GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TResult&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;IPAddressInformation&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,159],"source":"GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[175397,175441],"content":"GroupBy<IPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TResult&gt;","pos":[0,44],"source":"GroupBy<IPAddressInformation, TKey, TResult>"}]},{"pos":[175564,175565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175615,175619],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[175677,175678],"content":"<","needQuote":true,"nodes":[]},{"pos":[175765,175785],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[175862,175863]},{"pos":[175895,175899],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[175962,175963]},{"pos":[176018,176022],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[176080,176081],"content":"<","needQuote":true,"nodes":[]},{"pos":[176108,176112],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[176143,176144]},{"pos":[176226,176237],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[176322,176323],"content":"<","needQuote":true,"nodes":[]},{"pos":[176410,176430],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[176539,176540]},{"pos":[176572,176579],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[176645,176646]},{"pos":[176734,176751],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[176842,176843],"content":"<","needQuote":true,"nodes":[]},{"pos":[176870,176874],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[176936,176937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177155,177202],"content":"GroupBy(Of IPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey, TResult)","pos":[0,47]}]},{"pos":[177328,177329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177379,177383],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[177442,177445]},{"pos":[177539,177559],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[177636,177637]},{"pos":[177669,177673],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[177703,177704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[177732,177733]},{"pos":[177788,177792],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[177851,177854]},{"pos":[177888,177892],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[177923,177924]},{"pos":[178006,178017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[178103,178106]},{"pos":[178200,178220],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[178296,178297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178325,178326]},{"pos":[178358,178365],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[178398,178399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178427,178428]},{"pos":[178516,178533],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[178625,178628]},{"pos":[178662,178666],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[178696,178697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178724,178725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179965,180135],"content":"GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,170],"source":"GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[181215,181269],"content":"GroupBy<IPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,54],"source":"GroupBy<IPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[181402,181403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181453,181457],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[181515,181516],"content":"<","needQuote":true,"nodes":[]},{"pos":[181603,181623],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[181700,181701]},{"pos":[181733,181737],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[181800,181801]},{"pos":[181856,181860],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[181918,181919],"content":"<","needQuote":true,"nodes":[]},{"pos":[182006,182026],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[182103,182104]},{"pos":[182136,182144],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[182211,182212]},{"pos":[182267,182271],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[182329,182330],"content":"<","needQuote":true,"nodes":[]},{"pos":[182357,182361],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[182392,182393]},{"pos":[182475,182486],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[182571,182572],"content":"<","needQuote":true,"nodes":[]},{"pos":[182599,182607],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[182674,182675]},{"pos":[182707,182714],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[182779,182780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182969,183026],"content":"GroupBy(Of IPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey, TElement, TResult)","pos":[0,57]}]},{"pos":[183162,183163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183213,183217],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[183276,183279]},{"pos":[183373,183393],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[183470,183471]},{"pos":[183503,183507],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[183537,183538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[183566,183567]},{"pos":[183622,183626],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[183685,183688]},{"pos":[183782,183802],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[183879,183880]},{"pos":[183912,183920],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[183954,183955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[183983,183984]},{"pos":[184039,184043],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[184102,184105]},{"pos":[184139,184143],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[184174,184175]},{"pos":[184257,184268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[184354,184357]},{"pos":[184391,184399],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[184433,184434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[184462,184463]},{"pos":[184495,184502],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[184535,184536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184563,184564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185900,186095],"content":"GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,195],"source":"GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[187360,187414],"content":"GroupBy<IPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;IPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,54],"source":"GroupBy<IPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[187547,187548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187598,187602],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[187660,187661],"content":"<","needQuote":true,"nodes":[]},{"pos":[187748,187768],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[187845,187846]},{"pos":[187878,187882],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[187945,187946]},{"pos":[188001,188005],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[188063,188064],"content":"<","needQuote":true,"nodes":[]},{"pos":[188151,188171],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[188248,188249]},{"pos":[188281,188289],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[188356,188357]},{"pos":[188412,188416],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[188474,188475],"content":"<","needQuote":true,"nodes":[]},{"pos":[188502,188506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[188537,188538]},{"pos":[188620,188631],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[188716,188717],"content":"<","needQuote":true,"nodes":[]},{"pos":[188744,188752],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[188819,188820]},{"pos":[188852,188859],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[188925,188926]},{"pos":[189014,189031],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[189122,189123],"content":"<","needQuote":true,"nodes":[]},{"pos":[189150,189154],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[189216,189217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189456,189513],"content":"GroupBy(Of IPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of IPAddressInformation, TKey, TElement, TResult)","pos":[0,57]}]},{"pos":[189649,189650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189700,189704],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[189763,189766]},{"pos":[189860,189880],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[189957,189958]},{"pos":[189990,189994],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[190024,190025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[190053,190054]},{"pos":[190109,190113],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[190172,190175]},{"pos":[190269,190289],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[190366,190367]},{"pos":[190399,190407],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[190441,190442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[190470,190471]},{"pos":[190526,190530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[190589,190592]},{"pos":[190626,190630],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[190661,190662]},{"pos":[190744,190755],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[190841,190844]},{"pos":[190878,190886],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[190920,190921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[190949,190950]},{"pos":[190982,190989],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[191022,191023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[191051,191052]},{"pos":[191140,191157],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[191249,191252]},{"pos":[191286,191290],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[191320,191321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191348,191349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192778,192965],"content":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;IPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;IPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;IPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,187],"source":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>)"}]},{"pos":[194202,194256],"content":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;IPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,54],"source":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[194389,194390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194467,194478],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[194563,194564],"content":"<","needQuote":true,"nodes":[]},{"pos":[194591,194597],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[194662,194663]},{"pos":[194718,194722],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[194780,194781],"content":"<","needQuote":true,"nodes":[]},{"pos":[194868,194888],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[194965,194966]},{"pos":[194998,195002],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[195065,195066]},{"pos":[195121,195125],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[195183,195184],"content":"<","needQuote":true,"nodes":[]},{"pos":[195211,195217],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[195250,195251]},{"pos":[195283,195287],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[195350,195351]},{"pos":[195406,195410],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[195468,195469],"content":"<","needQuote":true,"nodes":[]},{"pos":[195556,195576],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[195653,195654]},{"pos":[195736,195747],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[195832,195833],"content":"<","needQuote":true,"nodes":[]},{"pos":[195860,195866],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[195931,195932]},{"pos":[195964,195971],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[196036,196037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196272,196329],"content":"GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)","pos":[0,57]}]},{"pos":[196465,196466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196543,196554],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[196640,196643]},{"pos":[196677,196683],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[196715,196716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[196744,196745]},{"pos":[196800,196804],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[196863,196866]},{"pos":[196960,196980],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[197057,197058]},{"pos":[197090,197094],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[197124,197125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[197153,197154]},{"pos":[197209,197213],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[197272,197275]},{"pos":[197309,197315],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[197348,197349]},{"pos":[197381,197385],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[197415,197416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[197444,197445]},{"pos":[197500,197504],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[197563,197566]},{"pos":[197660,197680],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[197757,197758]},{"pos":[197840,197851],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[197937,197940]},{"pos":[197974,197980],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[198012,198013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[198041,198042]},{"pos":[198074,198081],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[198114,198115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198142,198143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199655,199867],"content":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;IPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;IPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;IPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,212],"source":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[201289,201343],"content":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;IPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,54],"source":"GroupJoin<IPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[201476,201477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201554,201565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[201650,201651],"content":"<","needQuote":true,"nodes":[]},{"pos":[201678,201684],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[201749,201750]},{"pos":[201805,201809],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[201867,201868],"content":"<","needQuote":true,"nodes":[]},{"pos":[201955,201975],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[202052,202053]},{"pos":[202085,202089],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[202152,202153]},{"pos":[202208,202212],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[202270,202271],"content":"<","needQuote":true,"nodes":[]},{"pos":[202298,202304],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[202337,202338]},{"pos":[202370,202374],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[202437,202438]},{"pos":[202493,202497],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[202555,202556],"content":"<","needQuote":true,"nodes":[]},{"pos":[202643,202663],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[202740,202741]},{"pos":[202823,202834],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[202919,202920],"content":"<","needQuote":true,"nodes":[]},{"pos":[202947,202953],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[203018,203019]},{"pos":[203051,203058],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[203124,203125]},{"pos":[203213,203230],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[203321,203322],"content":"<","needQuote":true,"nodes":[]},{"pos":[203349,203353],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[203415,203416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203701,203758],"content":"GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)","pos":[0,57]}]},{"pos":[203894,203895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203972,203983],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[204069,204072]},{"pos":[204106,204112],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[204144,204145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[204173,204174]},{"pos":[204229,204233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[204292,204295]},{"pos":[204389,204409],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[204486,204487]},{"pos":[204519,204523],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[204553,204554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[204582,204583]},{"pos":[204638,204642],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[204701,204704]},{"pos":[204738,204744],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[204777,204778]},{"pos":[204810,204814],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[204844,204845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[204873,204874]},{"pos":[204929,204933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[204992,204995]},{"pos":[205089,205109],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[205186,205187]},{"pos":[205269,205280],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[205366,205369]},{"pos":[205403,205409],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[205441,205442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[205470,205471]},{"pos":[205503,205510],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[205543,205544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[205572,205573]},{"pos":[205661,205678],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[205770,205773]},{"pos":[205807,205811],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[205841,205842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205869,205870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207094,207160],"content":"Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;)","pos":[0,66],"source":"Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>)"}]},{"pos":[207747,207778],"content":"Intersect<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;IPAddressInformation&gt;","pos":[0,31],"source":"Intersect<IPAddressInformation>"}]},{"pos":[207888,207889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207966,207977],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[208062,208063],"content":"<","needQuote":true,"nodes":[]},{"pos":[208150,208170],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[208278,208279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208407,208441],"content":"Intersect(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[208554,208555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208632,208643],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[208729,208732]},{"pos":[208826,208846],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[208922,208923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208950,208951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209858,209965],"content":"Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;, IEqualityComparer&lt;IPAddressInformation&gt;)","pos":[0,107],"source":"Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)"}]},{"pos":[210845,210876],"content":"Intersect<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;IPAddressInformation&gt;","pos":[0,31],"source":"Intersect<IPAddressInformation>"}]},{"pos":[210986,210987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211064,211075],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[211160,211161],"content":"<","needQuote":true,"nodes":[]},{"pos":[211248,211268],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[211377,211378]},{"pos":[211466,211483],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[211574,211575],"content":"<","needQuote":true,"nodes":[]},{"pos":[211662,211682],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[211790,211791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211969,212003],"content":"Intersect(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[212116,212117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212194,212205],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[212291,212294]},{"pos":[212388,212408],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[212484,212485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[212513,212514]},{"pos":[212602,212619],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[212711,212714]},{"pos":[212808,212828],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[212904,212905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212932,212933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214026,214195],"content":"Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;IPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;IPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;IPAddressInformation, TInner, TResult&gt;)","pos":[0,169],"source":"Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>)"}]},{"pos":[215273,215322],"content":"Join<IPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;IPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,49],"source":"Join<IPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[215450,215451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[215528,215539],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[215624,215625],"content":"<","needQuote":true,"nodes":[]},{"pos":[215652,215658],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[215723,215724]},{"pos":[215779,215783],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[215841,215842],"content":"<","needQuote":true,"nodes":[]},{"pos":[215929,215949],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[216026,216027]},{"pos":[216059,216063],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[216126,216127]},{"pos":[216182,216186],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[216244,216245],"content":"<","needQuote":true,"nodes":[]},{"pos":[216272,216278],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[216311,216312]},{"pos":[216344,216348],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[216411,216412]},{"pos":[216467,216471],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[216529,216530],"content":"<","needQuote":true,"nodes":[]},{"pos":[216617,216637],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[216714,216715]},{"pos":[216747,216753],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[216786,216787]},{"pos":[216819,216826],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[216891,216892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217082,217134],"content":"Join(Of IPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of IPAddressInformation, TInner, TKey, TResult)","pos":[0,52]}]},{"pos":[217265,217266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217343,217354],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[217440,217443]},{"pos":[217477,217483],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[217515,217516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[217544,217545]},{"pos":[217600,217604],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[217663,217666]},{"pos":[217760,217780],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[217857,217858]},{"pos":[217890,217894],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[217924,217925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[217953,217954]},{"pos":[218009,218013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[218072,218075]},{"pos":[218109,218115],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[218148,218149]},{"pos":[218181,218185],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[218215,218216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[218244,218245]},{"pos":[218300,218304],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[218363,218366]},{"pos":[218460,218480],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[218557,218558]},{"pos":[218590,218596],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[218629,218630]},{"pos":[218662,218669],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[218702,218703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218730,218731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220069,220263],"content":"Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;IPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;IPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;IPAddressInformation, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,194],"source":"Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[221526,221575],"content":"Join<IPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;IPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,49],"source":"Join<IPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[221703,221704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221781,221792],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[221877,221878],"content":"<","needQuote":true,"nodes":[]},{"pos":[221905,221911],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[221976,221977]},{"pos":[222032,222036],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[222094,222095],"content":"<","needQuote":true,"nodes":[]},{"pos":[222182,222202],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[222279,222280]},{"pos":[222312,222316],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[222379,222380]},{"pos":[222435,222439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[222497,222498],"content":"<","needQuote":true,"nodes":[]},{"pos":[222525,222531],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[222564,222565]},{"pos":[222597,222601],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[222664,222665]},{"pos":[222720,222724],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[222782,222783],"content":"<","needQuote":true,"nodes":[]},{"pos":[222870,222890],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[222967,222968]},{"pos":[223000,223006],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[223039,223040]},{"pos":[223072,223079],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[223145,223146]},{"pos":[223234,223251],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[223342,223343],"content":"<","needQuote":true,"nodes":[]},{"pos":[223370,223374],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[223436,223437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223677,223729],"content":"Join(Of IPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of IPAddressInformation, TInner, TKey, TResult)","pos":[0,52]}]},{"pos":[223860,223861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223938,223949],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[224035,224038]},{"pos":[224072,224078],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[224110,224111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[224139,224140]},{"pos":[224195,224199],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[224258,224261]},{"pos":[224355,224375],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[224452,224453]},{"pos":[224485,224489],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[224519,224520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[224548,224549]},{"pos":[224604,224608],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[224667,224670]},{"pos":[224704,224710],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[224743,224744]},{"pos":[224776,224780],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[224810,224811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[224839,224840]},{"pos":[224895,224899],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[224958,224961]},{"pos":[225055,225075],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[225152,225153]},{"pos":[225185,225191],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[225224,225225]},{"pos":[225257,225264],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[225297,225298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[225326,225327]},{"pos":[225415,225432],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[225524,225527]},{"pos":[225561,225565],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[225595,225596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225623,225624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226618,226646],"content":"Last<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Last&lt;IPAddressInformation&gt;()","pos":[0,28],"source":"Last<IPAddressInformation>()"}]},{"pos":[226949,226975],"content":"Last<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;IPAddressInformation&gt;","pos":[0,26],"source":"Last<IPAddressInformation>"}]},{"pos":[227080,227081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227108,227109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227187,227216],"content":"Last(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of IPAddressInformation)","pos":[0,29]}]},{"pos":[227324,227325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227352,227353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227951,228014],"content":"Last<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,63],"source":"Last<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[228549,228575],"content":"Last<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;IPAddressInformation&gt;","pos":[0,26],"source":"Last<IPAddressInformation>"}]},{"pos":[228680,228681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228731,228735],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[228793,228794],"content":"<","needQuote":true,"nodes":[]},{"pos":[228881,228901],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[228978,228979]},{"pos":[229035,229042],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[229135,229136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229247,229276],"content":"Last(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of IPAddressInformation)","pos":[0,29]}]},{"pos":[229384,229385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229435,229439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[229498,229501]},{"pos":[229595,229615],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[229692,229693]},{"pos":[229749,229756],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[229817,229818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229845,229846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230455,230492],"content":"LastOrDefault<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;IPAddressInformation&gt;()","pos":[0,37],"source":"LastOrDefault<IPAddressInformation>()"}]},{"pos":[230831,230866],"content":"LastOrDefault<IPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;IPAddressInformation&gt;","pos":[0,35],"source":"LastOrDefault<IPAddressInformation>"}]},{"pos":[230980,230981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231008,231009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231096,231134],"content":"LastOrDefault(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of IPAddressInformation)","pos":[0,38]}]},{"pos":[231251,231252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231279,231280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231923,231995],"content":"LastOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,72],"source":"LastOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[232566,232601],"content":"LastOrDefault<IPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;IPAddressInformation&gt;","pos":[0,35],"source":"LastOrDefault<IPAddressInformation>"}]},{"pos":[232715,232716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232766,232770],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[232828,232829],"content":"<","needQuote":true,"nodes":[]},{"pos":[232916,232936],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[233013,233014]},{"pos":[233070,233077],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[233170,233171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233291,233329],"content":"LastOrDefault(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of IPAddressInformation)","pos":[0,38]}]},{"pos":[233446,233447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233497,233501],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[233560,233563]},{"pos":[233657,233677],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[233754,233755]},{"pos":[233811,233818],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[233879,233880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233907,233908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234536,234569],"content":"LongCount<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"LongCount&lt;IPAddressInformation&gt;()","pos":[0,33],"source":"LongCount<IPAddressInformation>()"}]},{"pos":[234892,234923],"content":"LongCount<IPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;IPAddressInformation&gt;","pos":[0,31],"source":"LongCount<IPAddressInformation>"}]},{"pos":[235033,235034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235061,235062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235145,235179],"content":"LongCount(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[235292,235293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235320,235321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235944,236012],"content":"LongCount<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,68],"source":"LongCount<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[236567,236598],"content":"LongCount<IPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;IPAddressInformation&gt;","pos":[0,31],"source":"LongCount<IPAddressInformation>"}]},{"pos":[236708,236709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236759,236763],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[236821,236822],"content":"<","needQuote":true,"nodes":[]},{"pos":[236909,236929],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[237006,237007]},{"pos":[237063,237070],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[237163,237164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237280,237314],"content":"LongCount(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[237427,237428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237478,237482],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[237541,237544]},{"pos":[237638,237658],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[237735,237736]},{"pos":[237792,237799],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[237860,237861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237888,237889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238493,238520],"content":"Max<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;()","pos":[0,27],"source":"Max<IPAddressInformation>()"}]},{"pos":[238819,238844],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[238948,238949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238976,238977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239054,239082],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[239189,239190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239217,239218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239811,239873],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Decimal&gt;)","pos":[0,62],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Decimal>)"}]},{"pos":[240404,240429],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[240533,240534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240584,240588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[240646,240647],"content":"<","needQuote":true,"nodes":[]},{"pos":[240734,240754],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[240831,240832]},{"pos":[240888,240895],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[240988,240989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241099,241127],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[241234,241235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241285,241289],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[241348,241351]},{"pos":[241445,241465],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[241542,241543]},{"pos":[241599,241606],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[241667,241668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241695,241696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242392,242453],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Double&gt;)","pos":[0,61],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Double>)"}]},{"pos":[242980,243005],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[243109,243110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243160,243164],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[243222,243223],"content":"<","needQuote":true,"nodes":[]},{"pos":[243310,243330],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[243407,243408]},{"pos":[243463,243469],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[243561,243562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243671,243699],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[243806,243807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243857,243861],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[243920,243923]},{"pos":[244017,244037],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[244114,244115]},{"pos":[244170,244176],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[244236,244237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244264,244265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244956,245016],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int32&gt;)","pos":[0,60],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Int32>)"}]},{"pos":[245539,245564],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[245668,245669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245719,245723],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[245781,245782],"content":"<","needQuote":true,"nodes":[]},{"pos":[245869,245889],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[245966,245967]},{"pos":[246021,246026],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[246117,246118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246226,246254],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[246361,246362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246412,246416],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[246475,246478]},{"pos":[246572,246592],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[246669,246670]},{"pos":[246724,246729],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[246788,246789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246816,246817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247505,247565],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int64&gt;)","pos":[0,60],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Int64>)"}]},{"pos":[248088,248113],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[248217,248218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248268,248272],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[248330,248331],"content":"<","needQuote":true,"nodes":[]},{"pos":[248418,248438],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[248515,248516]},{"pos":[248570,248575],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[248666,248667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248775,248803],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[248910,248911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248961,248965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[249024,249027]},{"pos":[249121,249141],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[249218,249219]},{"pos":[249273,249278],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[249337,249338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249365,249366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250092,250164],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[250762,250787],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[250891,250892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250942,250946],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[251004,251005],"content":"<","needQuote":true,"nodes":[]},{"pos":[251092,251112],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[251189,251190]},{"pos":[251249,251257],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[251319,251320],"content":"<","needQuote":true,"nodes":[]},{"pos":[251371,251378],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[251503,251504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251631,251659],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[251766,251767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251817,251821],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[251880,251883]},{"pos":[251977,251997],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[252074,252075]},{"pos":[252134,252142],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[252205,252208]},{"pos":[252266,252273],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[252334,252335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252362,252363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252390,252391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253161,253232],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)"}]},{"pos":[253826,253851],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[253955,253956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254006,254010],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[254068,254069],"content":"<","needQuote":true,"nodes":[]},{"pos":[254156,254176],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[254253,254254]},{"pos":[254313,254321],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[254383,254384],"content":"<","needQuote":true,"nodes":[]},{"pos":[254434,254440],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[254564,254565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254691,254719],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[254826,254827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254877,254881],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[254940,254943]},{"pos":[255037,255057],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[255134,255135]},{"pos":[255194,255202],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[255265,255268]},{"pos":[255325,255331],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[255391,255392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255419,255420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255447,255448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256213,256283],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)"}]},{"pos":[256873,256898],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[257002,257003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257053,257057],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[257115,257116],"content":"<","needQuote":true,"nodes":[]},{"pos":[257203,257223],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[257300,257301]},{"pos":[257360,257368],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[257430,257431],"content":"<","needQuote":true,"nodes":[]},{"pos":[257480,257485],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[257608,257609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257734,257762],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[257869,257870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257920,257924],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[257983,257986]},{"pos":[258080,258100],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[258177,258178]},{"pos":[258237,258245],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[258308,258311]},{"pos":[258367,258372],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[258431,258432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258459,258460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258487,258488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259250,259320],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)"}]},{"pos":[259910,259935],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[260039,260040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260090,260094],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[260152,260153],"content":"<","needQuote":true,"nodes":[]},{"pos":[260240,260260],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[260337,260338]},{"pos":[260397,260405],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[260467,260468],"content":"<","needQuote":true,"nodes":[]},{"pos":[260517,260522],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[260645,260646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260771,260799],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[260906,260907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260957,260961],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[261020,261023]},{"pos":[261117,261137],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[261214,261215]},{"pos":[261274,261282],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[261345,261348]},{"pos":[261404,261409],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[261468,261469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261496,261497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261524,261525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262289,262360],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)"}]},{"pos":[262954,262979],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[263083,263084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263134,263138],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[263196,263197],"content":"<","needQuote":true,"nodes":[]},{"pos":[263284,263304],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[263381,263382]},{"pos":[263441,263449],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[263511,263512],"content":"<","needQuote":true,"nodes":[]},{"pos":[263562,263568],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[263692,263693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263819,263847],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[263954,263955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264005,264009],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[264068,264071]},{"pos":[264165,264185],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[264262,264263]},{"pos":[264322,264330],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[264393,264396]},{"pos":[264453,264459],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[264519,264520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264547,264548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264575,264576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265309,265370],"content":"Max<IPAddressInformation>(Func<IPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Single&gt;)","pos":[0,61],"source":"Max<IPAddressInformation>(Func<IPAddressInformation, Single>)"}]},{"pos":[265897,265922],"content":"Max<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Max<IPAddressInformation>"}]},{"pos":[266026,266027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266077,266081],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[266139,266140],"content":"<","needQuote":true,"nodes":[]},{"pos":[266227,266247],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[266324,266325]},{"pos":[266380,266386],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[266478,266479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266588,266616],"content":"Max(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[266723,266724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266774,266778],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266837,266840]},{"pos":[266934,266954],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[267031,267032]},{"pos":[267087,267093],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[267153,267154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267181,267182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267861,267932],"content":"Max<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation, TResult&gt;(Func&lt;IPAddressInformation, TResult&gt;)","pos":[0,71],"source":"Max<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)"}]},{"pos":[268465,268499],"content":"Max<IPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;IPAddressInformation, TResult&gt;","pos":[0,34],"source":"Max<IPAddressInformation, TResult>"}]},{"pos":[268612,268613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268663,268667],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[268725,268726],"content":"<","needQuote":true,"nodes":[]},{"pos":[268813,268833],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[268910,268911]},{"pos":[268943,268950],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[269015,269016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269115,269152],"content":"Max(Of IPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Max(Of IPAddressInformation, TResult)","pos":[0,37]}]},{"pos":[269268,269269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269319,269323],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[269382,269385]},{"pos":[269479,269499],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[269576,269577]},{"pos":[269609,269616],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[269649,269650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269677,269678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270271,270298],"content":"Min<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;()","pos":[0,27],"source":"Min<IPAddressInformation>()"}]},{"pos":[270597,270622],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[270726,270727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270754,270755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270832,270860],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[270967,270968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270995,270996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271589,271651],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Decimal&gt;)","pos":[0,62],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Decimal>)"}]},{"pos":[272182,272207],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[272311,272312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272362,272366],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[272424,272425],"content":"<","needQuote":true,"nodes":[]},{"pos":[272512,272532],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[272609,272610]},{"pos":[272666,272673],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[272766,272767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272877,272905],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[273012,273013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273063,273067],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[273126,273129]},{"pos":[273223,273243],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[273320,273321]},{"pos":[273377,273384],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[273445,273446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273473,273474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274170,274231],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Double&gt;)","pos":[0,61],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Double>)"}]},{"pos":[274758,274783],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[274887,274888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274938,274942],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[275000,275001],"content":"<","needQuote":true,"nodes":[]},{"pos":[275088,275108],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[275185,275186]},{"pos":[275241,275247],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[275339,275340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275449,275477],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[275584,275585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275635,275639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[275698,275701]},{"pos":[275795,275815],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[275892,275893]},{"pos":[275948,275954],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[276014,276015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276042,276043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276734,276794],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int32&gt;)","pos":[0,60],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Int32>)"}]},{"pos":[277317,277342],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[277446,277447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277497,277501],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[277559,277560],"content":"<","needQuote":true,"nodes":[]},{"pos":[277647,277667],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[277744,277745]},{"pos":[277799,277804],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[277895,277896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278004,278032],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[278139,278140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278190,278194],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[278253,278256]},{"pos":[278350,278370],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[278447,278448]},{"pos":[278502,278507],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[278566,278567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278594,278595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279283,279343],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int64&gt;)","pos":[0,60],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Int64>)"}]},{"pos":[279866,279891],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[279995,279996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280046,280050],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[280108,280109],"content":"<","needQuote":true,"nodes":[]},{"pos":[280196,280216],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[280293,280294]},{"pos":[280348,280353],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[280444,280445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280553,280581],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[280688,280689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280739,280743],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[280802,280805]},{"pos":[280899,280919],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[280996,280997]},{"pos":[281051,281056],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[281115,281116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281143,281144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281870,281942],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[282540,282565],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[282669,282670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282720,282724],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[282782,282783],"content":"<","needQuote":true,"nodes":[]},{"pos":[282870,282890],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[282967,282968]},{"pos":[283027,283035],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[283097,283098],"content":"<","needQuote":true,"nodes":[]},{"pos":[283149,283156],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[283281,283282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283409,283437],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[283544,283545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283595,283599],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[283658,283661]},{"pos":[283755,283775],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[283852,283853]},{"pos":[283912,283920],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[283983,283986]},{"pos":[284044,284051],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[284112,284113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284140,284141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284168,284169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284939,285010],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)"}]},{"pos":[285604,285629],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[285733,285734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285784,285788],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[285846,285847],"content":"<","needQuote":true,"nodes":[]},{"pos":[285934,285954],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[286031,286032]},{"pos":[286091,286099],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[286161,286162],"content":"<","needQuote":true,"nodes":[]},{"pos":[286212,286218],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[286342,286343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286469,286497],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[286604,286605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286655,286659],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[286718,286721]},{"pos":[286815,286835],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[286912,286913]},{"pos":[286972,286980],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[287043,287046]},{"pos":[287103,287109],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[287169,287170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287197,287198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287225,287226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287991,288061],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)"}]},{"pos":[288651,288676],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[288780,288781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288831,288835],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[288893,288894],"content":"<","needQuote":true,"nodes":[]},{"pos":[288981,289001],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[289078,289079]},{"pos":[289138,289146],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[289208,289209],"content":"<","needQuote":true,"nodes":[]},{"pos":[289258,289263],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[289386,289387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289512,289540],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[289647,289648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289698,289702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289761,289764]},{"pos":[289858,289878],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[289955,289956]},{"pos":[290015,290023],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[290086,290089]},{"pos":[290145,290150],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[290209,290210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290237,290238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290265,290266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291028,291098],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)"}]},{"pos":[291688,291713],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[291817,291818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291868,291872],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[291930,291931],"content":"<","needQuote":true,"nodes":[]},{"pos":[292018,292038],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[292115,292116]},{"pos":[292175,292183],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[292245,292246],"content":"<","needQuote":true,"nodes":[]},{"pos":[292295,292300],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[292423,292424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292549,292577],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[292684,292685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292735,292739],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[292798,292801]},{"pos":[292895,292915],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[292992,292993]},{"pos":[293052,293060],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[293123,293126]},{"pos":[293182,293187],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[293246,293247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293274,293275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293302,293303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294067,294138],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)"}]},{"pos":[294732,294757],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[294861,294862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294912,294916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[294974,294975],"content":"<","needQuote":true,"nodes":[]},{"pos":[295062,295082],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[295159,295160]},{"pos":[295219,295227],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[295289,295290],"content":"<","needQuote":true,"nodes":[]},{"pos":[295340,295346],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[295470,295471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295597,295625],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[295732,295733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295783,295787],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[295846,295849]},{"pos":[295943,295963],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[296040,296041]},{"pos":[296100,296108],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[296171,296174]},{"pos":[296231,296237],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[296297,296298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296325,296326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296353,296354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297087,297148],"content":"Min<IPAddressInformation>(Func<IPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Single&gt;)","pos":[0,61],"source":"Min<IPAddressInformation>(Func<IPAddressInformation, Single>)"}]},{"pos":[297675,297700],"content":"Min<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Min<IPAddressInformation>"}]},{"pos":[297804,297805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297855,297859],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[297917,297918],"content":"<","needQuote":true,"nodes":[]},{"pos":[298005,298025],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[298102,298103]},{"pos":[298158,298164],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[298256,298257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298366,298394],"content":"Min(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[298501,298502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298552,298556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[298615,298618]},{"pos":[298712,298732],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[298809,298810]},{"pos":[298865,298871],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[298931,298932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298959,298960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299639,299710],"content":"Min<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation, TResult&gt;(Func&lt;IPAddressInformation, TResult&gt;)","pos":[0,71],"source":"Min<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)"}]},{"pos":[300243,300277],"content":"Min<IPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;IPAddressInformation, TResult&gt;","pos":[0,34],"source":"Min<IPAddressInformation, TResult>"}]},{"pos":[300390,300391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300441,300445],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[300503,300504],"content":"<","needQuote":true,"nodes":[]},{"pos":[300591,300611],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[300688,300689]},{"pos":[300721,300728],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[300793,300794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300893,300930],"content":"Min(Of IPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Min(Of IPAddressInformation, TResult)","pos":[0,37]}]},{"pos":[301046,301047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301097,301101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[301160,301163]},{"pos":[301257,301277],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[301354,301355]},{"pos":[301387,301394],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[301427,301428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301455,301456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301982,301999],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[302211,302226],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[302290,302291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302318,302319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302399,302417],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[302484,302485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302512,302513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303065,303134],"content":"OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;)","pos":[0,69],"source":"OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)"}]},{"pos":[303665,303700],"content":"OrderBy<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;IPAddressInformation, TKey&gt;","pos":[0,35],"source":"OrderBy<IPAddressInformation, TKey>"}]},{"pos":[303814,303815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303865,303869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[303927,303928],"content":"<","needQuote":true,"nodes":[]},{"pos":[304015,304035],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[304112,304113]},{"pos":[304145,304149],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[304211,304212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304315,304353],"content":"OrderBy(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of IPAddressInformation, TKey)","pos":[0,38]}]},{"pos":[304470,304471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304521,304525],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[304584,304587]},{"pos":[304681,304701],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[304778,304779]},{"pos":[304811,304815],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[304845,304846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304873,304874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305655,305741],"content":"OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,86],"source":"OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[306425,306460],"content":"OrderBy<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;IPAddressInformation, TKey&gt;","pos":[0,35],"source":"OrderBy<IPAddressInformation, TKey>"}]},{"pos":[306574,306575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306625,306629],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306687,306688],"content":"<","needQuote":true,"nodes":[]},{"pos":[306775,306795],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[306872,306873]},{"pos":[306905,306909],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[306972,306973]},{"pos":[307053,307062],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[307145,307146],"content":"<","needQuote":true,"nodes":[]},{"pos":[307173,307177],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[307239,307240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307385,307423],"content":"OrderBy(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of IPAddressInformation, TKey)","pos":[0,38]}]},{"pos":[307540,307541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307591,307595],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[307654,307657]},{"pos":[307751,307771],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[307848,307849]},{"pos":[307881,307885],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[307915,307916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[307944,307945]},{"pos":[308025,308034],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[308118,308121]},{"pos":[308155,308159],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[308189,308190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308217,308218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309011,309090],"content":"OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;)","pos":[0,79],"source":"OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)"}]},{"pos":[309661,309706],"content":"OrderByDescending<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;IPAddressInformation, TKey&gt;","pos":[0,45],"source":"OrderByDescending<IPAddressInformation, TKey>"}]},{"pos":[309830,309831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309881,309885],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[309943,309944],"content":"<","needQuote":true,"nodes":[]},{"pos":[310031,310051],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[310128,310129]},{"pos":[310161,310165],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[310227,310228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310341,310389],"content":"OrderByDescending(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of IPAddressInformation, TKey)","pos":[0,48]}]},{"pos":[310516,310517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310567,310571],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[310630,310633]},{"pos":[310727,310747],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[310824,310825]},{"pos":[310857,310861],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[310891,310892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310919,310920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311751,311847],"content":"OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,96],"source":"OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[312571,312616],"content":"OrderByDescending<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;IPAddressInformation, TKey&gt;","pos":[0,45],"source":"OrderByDescending<IPAddressInformation, TKey>"}]},{"pos":[312740,312741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312791,312795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[312853,312854],"content":"<","needQuote":true,"nodes":[]},{"pos":[312941,312961],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[313038,313039]},{"pos":[313071,313075],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[313138,313139]},{"pos":[313219,313228],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[313311,313312],"content":"<","needQuote":true,"nodes":[]},{"pos":[313339,313343],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[313405,313406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313561,313609],"content":"OrderByDescending(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of IPAddressInformation, TKey)","pos":[0,48]}]},{"pos":[313736,313737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313787,313791],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[313850,313853]},{"pos":[313947,313967],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[314044,314045]},{"pos":[314077,314081],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[314111,314112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[314140,314141]},{"pos":[314221,314230],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[314314,314317]},{"pos":[314351,314355],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[314385,314386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314413,314414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315124,315155],"content":"Reverse<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Reverse&lt;IPAddressInformation&gt;()","pos":[0,31],"source":"Reverse<IPAddressInformation>()"}]},{"pos":[315470,315499],"content":"Reverse<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Reverse&lt;IPAddressInformation&gt;","pos":[0,29],"source":"Reverse<IPAddressInformation>"}]},{"pos":[315607,315608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315635,315636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315717,315749],"content":"Reverse(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Reverse(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[315860,315861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315888,315889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316484,316558],"content":"Select<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;IPAddressInformation, TResult&gt;(Func&lt;IPAddressInformation, TResult&gt;)","pos":[0,74],"source":"Select<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)"}]},{"pos":[317103,317140],"content":"Select<IPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;IPAddressInformation, TResult&gt;","pos":[0,37],"source":"Select<IPAddressInformation, TResult>"}]},{"pos":[317256,317257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317307,317311],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[317369,317370],"content":"<","needQuote":true,"nodes":[]},{"pos":[317457,317477],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[317554,317555]},{"pos":[317587,317594],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[317659,317660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317762,317802],"content":"Select(Of IPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of IPAddressInformation, TResult)","pos":[0,40]}]},{"pos":[317921,317922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317972,317976],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[318035,318038]},{"pos":[318132,318152],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[318229,318230]},{"pos":[318262,318269],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[318302,318303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318330,318331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319061,319142],"content":"Select<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;IPAddressInformation, TResult&gt;(Func&lt;IPAddressInformation, Int32, TResult&gt;)","pos":[0,81],"source":"Select<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, TResult>)"}]},{"pos":[319735,319772],"content":"Select<IPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;IPAddressInformation, TResult&gt;","pos":[0,37],"source":"Select<IPAddressInformation, TResult>"}]},{"pos":[319888,319889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319939,319943],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[320001,320002],"content":"<","needQuote":true,"nodes":[]},{"pos":[320089,320109],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[320186,320187]},{"pos":[320241,320246],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[320306,320307]},{"pos":[320339,320346],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[320411,320412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320527,320567],"content":"Select(Of IPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of IPAddressInformation, TResult)","pos":[0,40]}]},{"pos":[320686,320687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320737,320741],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[320800,320803]},{"pos":[320897,320917],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[320994,320995]},{"pos":[321049,321054],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[321114,321115]},{"pos":[321147,321154],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[321187,321188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321215,321216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322035,322126],"content":"SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TResult&gt;(Func&lt;IPAddressInformation, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,91],"source":"SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, IEnumerable<TResult>>)"}]},{"pos":[322826,322867],"content":"SelectMany<IPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TResult&gt;","pos":[0,41],"source":"SelectMany<IPAddressInformation, TResult>"}]},{"pos":[322987,322988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323038,323042],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[323100,323101],"content":"<","needQuote":true,"nodes":[]},{"pos":[323188,323208],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[323285,323286]},{"pos":[323368,323379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[323464,323465],"content":"<","needQuote":true,"nodes":[]},{"pos":[323492,323499],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[323596,323597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323743,323787],"content":"SelectMany(Of IPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of IPAddressInformation, TResult)","pos":[0,44]}]},{"pos":[323910,323911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323961,323965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[324024,324027]},{"pos":[324121,324141],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[324218,324219]},{"pos":[324301,324312],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[324398,324401]},{"pos":[324435,324442],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[324475,324476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324503,324504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324531,324532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325431,325529],"content":"SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TResult&gt;(Func&lt;IPAddressInformation, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,98],"source":"SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TResult>>)"}]},{"pos":[326277,326318],"content":"SelectMany<IPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TResult&gt;","pos":[0,41],"source":"SelectMany<IPAddressInformation, TResult>"}]},{"pos":[326438,326439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326489,326493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[326551,326552],"content":"<","needQuote":true,"nodes":[]},{"pos":[326639,326659],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[326736,326737]},{"pos":[326791,326796],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[326856,326857]},{"pos":[326939,326950],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[327035,327036],"content":"<","needQuote":true,"nodes":[]},{"pos":[327063,327070],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[327167,327168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327327,327371],"content":"SelectMany(Of IPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of IPAddressInformation, TResult)","pos":[0,44]}]},{"pos":[327494,327495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327545,327549],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[327608,327611]},{"pos":[327705,327725],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[327802,327803]},{"pos":[327857,327862],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[327922,327923]},{"pos":[328005,328016],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[328102,328105]},{"pos":[328139,328146],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[328179,328180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328207,328208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328235,328236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329253,329411],"content":"SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TCollection, TResult&gt;(Func&lt;IPAddressInformation, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;IPAddressInformation, TCollection, TResult&gt;)","pos":[0,158],"source":"SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)"}]},{"pos":[330417,330471],"content":"SelectMany<IPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TCollection, TResult&gt;","pos":[0,54],"source":"SelectMany<IPAddressInformation, TCollection, TResult>"}]},{"pos":[330604,330605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330655,330659],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[330717,330718],"content":"<","needQuote":true,"nodes":[]},{"pos":[330805,330825],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[330902,330903]},{"pos":[330985,330996],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[331081,331082],"content":"<","needQuote":true,"nodes":[]},{"pos":[331109,331120],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[331222,331223]},{"pos":[331278,331282],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[331340,331341],"content":"<","needQuote":true,"nodes":[]},{"pos":[331428,331448],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[331525,331526]},{"pos":[331558,331569],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[331607,331608]},{"pos":[331640,331647],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[331712,331713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331884,331941],"content":"SelectMany(Of IPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of IPAddressInformation, TCollection, TResult)","pos":[0,57]}]},{"pos":[332077,332078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332128,332132],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[332191,332194]},{"pos":[332288,332308],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[332385,332386]},{"pos":[332468,332479],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[332565,332568]},{"pos":[332602,332613],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[332650,332651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332678,332679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[332707,332708]},{"pos":[332763,332767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[332826,332829]},{"pos":[332923,332943],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[333020,333021]},{"pos":[333053,333064],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[333102,333103]},{"pos":[333135,333142],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[333175,333176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333203,333204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334382,334547],"content":"SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TCollection, TResult&gt;(Func&lt;IPAddressInformation, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;IPAddressInformation, TCollection, TResult&gt;)","pos":[0,165],"source":"SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)"}]},{"pos":[335601,335655],"content":"SelectMany<IPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;IPAddressInformation, TCollection, TResult&gt;","pos":[0,54],"source":"SelectMany<IPAddressInformation, TCollection, TResult>"}]},{"pos":[335788,335789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335839,335843],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[335901,335902],"content":"<","needQuote":true,"nodes":[]},{"pos":[335989,336009],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[336086,336087]},{"pos":[336141,336146],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[336206,336207]},{"pos":[336289,336300],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[336385,336386],"content":"<","needQuote":true,"nodes":[]},{"pos":[336413,336424],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[336526,336527]},{"pos":[336582,336586],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336644,336645],"content":"<","needQuote":true,"nodes":[]},{"pos":[336732,336752],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[336829,336830]},{"pos":[336862,336873],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[336911,336912]},{"pos":[336944,336951],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[337016,337017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337201,337258],"content":"SelectMany(Of IPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of IPAddressInformation, TCollection, TResult)","pos":[0,57]}]},{"pos":[337394,337395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337445,337449],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[337508,337511]},{"pos":[337605,337625],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[337702,337703]},{"pos":[337757,337762],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[337822,337823]},{"pos":[337905,337916],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[338002,338005]},{"pos":[338039,338050],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[338087,338088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338115,338116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[338144,338145]},{"pos":[338200,338204],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[338263,338266]},{"pos":[338360,338380],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[338457,338458]},{"pos":[338490,338501],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[338539,338540]},{"pos":[338572,338579],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[338612,338613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338640,338641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339669,339739],"content":"SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;)","pos":[0,70],"source":"SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>)"}]},{"pos":[340342,340377],"content":"SequenceEqual<IPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;IPAddressInformation&gt;","pos":[0,35],"source":"SequenceEqual<IPAddressInformation>"}]},{"pos":[340491,340492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340569,340580],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[340665,340666],"content":"<","needQuote":true,"nodes":[]},{"pos":[340753,340773],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[340881,340882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341014,341052],"content":"SequenceEqual(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of IPAddressInformation)","pos":[0,38]}]},{"pos":[341169,341170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341247,341258],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[341344,341347]},{"pos":[341441,341461],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[341537,341538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341565,341566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342493,342604],"content":"SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;, IEqualityComparer&lt;IPAddressInformation&gt;)","pos":[0,111],"source":"SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)"}]},{"pos":[343500,343535],"content":"SequenceEqual<IPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;IPAddressInformation&gt;","pos":[0,35],"source":"SequenceEqual<IPAddressInformation>"}]},{"pos":[343649,343650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343727,343738],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[343823,343824],"content":"<","needQuote":true,"nodes":[]},{"pos":[343911,343931],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[344040,344041]},{"pos":[344129,344146],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[344237,344238],"content":"<","needQuote":true,"nodes":[]},{"pos":[344325,344345],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[344453,344454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344636,344674],"content":"SequenceEqual(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of IPAddressInformation)","pos":[0,38]}]},{"pos":[344791,344792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344869,344880],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[344966,344969]},{"pos":[345063,345083],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[345159,345160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[345188,345189]},{"pos":[345277,345294],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[345386,345389]},{"pos":[345483,345503],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[345579,345580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345607,345608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346373,346403],"content":"Single<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"Single&lt;IPAddressInformation&gt;()","pos":[0,30],"source":"Single<IPAddressInformation>()"}]},{"pos":[346714,346742],"content":"Single<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;IPAddressInformation&gt;","pos":[0,28],"source":"Single<IPAddressInformation>"}]},{"pos":[346849,346850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346877,346878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346958,346989],"content":"Single(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of IPAddressInformation)","pos":[0,31]}]},{"pos":[347099,347100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347127,347128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347736,347801],"content":"Single<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,65],"source":"Single<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[348344,348372],"content":"Single<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;IPAddressInformation&gt;","pos":[0,28],"source":"Single<IPAddressInformation>"}]},{"pos":[348479,348480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348530,348534],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[348592,348593],"content":"<","needQuote":true,"nodes":[]},{"pos":[348680,348700],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[348777,348778]},{"pos":[348834,348841],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[348934,348935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349048,349079],"content":"Single(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of IPAddressInformation)","pos":[0,31]}]},{"pos":[349189,349190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349240,349244],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[349303,349306]},{"pos":[349400,349420],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[349497,349498]},{"pos":[349554,349561],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[349622,349623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349650,349651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350270,350309],"content":"SingleOrDefault<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;IPAddressInformation&gt;()","pos":[0,39],"source":"SingleOrDefault<IPAddressInformation>()"}]},{"pos":[350656,350693],"content":"SingleOrDefault<IPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;IPAddressInformation&gt;","pos":[0,37],"source":"SingleOrDefault<IPAddressInformation>"}]},{"pos":[350809,350810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350837,350838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350927,350967],"content":"SingleOrDefault(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of IPAddressInformation)","pos":[0,40]}]},{"pos":[351086,351087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351114,351115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351768,351842],"content":"SingleOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,74],"source":"SingleOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[352421,352458],"content":"SingleOrDefault<IPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;IPAddressInformation&gt;","pos":[0,37],"source":"SingleOrDefault<IPAddressInformation>"}]},{"pos":[352574,352575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352625,352629],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[352687,352688],"content":"<","needQuote":true,"nodes":[]},{"pos":[352775,352795],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[352872,352873]},{"pos":[352929,352936],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[353029,353030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353152,353192],"content":"SingleOrDefault(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of IPAddressInformation)","pos":[0,40]}]},{"pos":[353311,353312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353362,353366],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[353425,353428]},{"pos":[353522,353542],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[353619,353620]},{"pos":[353676,353683],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[353744,353745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353772,353773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354424,354457],"content":"Skip<IPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;IPAddressInformation&gt;(Int32)","pos":[0,33],"source":"Skip<IPAddressInformation>(Int32)"}]},{"pos":[354803,354829],"content":"Skip<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Skip&lt;IPAddressInformation&gt;","pos":[0,26],"source":"Skip<IPAddressInformation>"}]},{"pos":[354934,354935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354984,354989],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[355048,355049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355141,355170],"content":"Skip(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Skip(Of IPAddressInformation)","pos":[0,29]}]},{"pos":[355278,355279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355328,355333],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[355392,355393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356024,356092],"content":"SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,68],"source":"SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[356647,356678],"content":"SkipWhile<IPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;IPAddressInformation&gt;","pos":[0,31],"source":"SkipWhile<IPAddressInformation>"}]},{"pos":[356788,356789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356839,356843],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[356901,356902],"content":"<","needQuote":true,"nodes":[]},{"pos":[356989,357009],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[357086,357087]},{"pos":[357143,357150],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[357243,357244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357360,357394],"content":"SkipWhile(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[357507,357508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357558,357562],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[357621,357624]},{"pos":[357718,357738],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[357815,357816]},{"pos":[357872,357879],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[357940,357941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357968,357969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358723,358798],"content":"SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int32, Boolean&gt;)","pos":[0,75],"source":"SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)"}]},{"pos":[359401,359432],"content":"SkipWhile<IPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;IPAddressInformation&gt;","pos":[0,31],"source":"SkipWhile<IPAddressInformation>"}]},{"pos":[359542,359543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359593,359597],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[359655,359656],"content":"<","needQuote":true,"nodes":[]},{"pos":[359743,359763],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[359840,359841]},{"pos":[359895,359900],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[359960,359961]},{"pos":[360017,360024],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[360117,360118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360247,360281],"content":"SkipWhile(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[360394,360395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360445,360449],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[360508,360511]},{"pos":[360605,360625],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[360702,360703]},{"pos":[360757,360762],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[360822,360823]},{"pos":[360879,360886],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[360947,360948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360975,360976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361719,361781],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Decimal&gt;)","pos":[0,62],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Decimal>)"}]},{"pos":[362312,362337],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[362441,362442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362492,362496],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[362554,362555],"content":"<","needQuote":true,"nodes":[]},{"pos":[362642,362662],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[362739,362740]},{"pos":[362796,362803],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[362896,362897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363007,363035],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[363142,363143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363193,363197],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[363256,363259]},{"pos":[363353,363373],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[363450,363451]},{"pos":[363507,363514],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[363575,363576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363603,363604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364300,364361],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Double&gt;)","pos":[0,61],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Double>)"}]},{"pos":[364888,364913],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[365017,365018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365068,365072],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[365130,365131],"content":"<","needQuote":true,"nodes":[]},{"pos":[365218,365238],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[365315,365316]},{"pos":[365371,365377],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[365469,365470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365579,365607],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[365714,365715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365765,365769],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[365828,365831]},{"pos":[365925,365945],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[366022,366023]},{"pos":[366078,366084],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[366144,366145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366172,366173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366864,366924],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int32&gt;)","pos":[0,60],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Int32>)"}]},{"pos":[367447,367472],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[367576,367577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367627,367631],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[367689,367690],"content":"<","needQuote":true,"nodes":[]},{"pos":[367777,367797],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[367874,367875]},{"pos":[367929,367934],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[368025,368026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368134,368162],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[368269,368270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368320,368324],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[368383,368386]},{"pos":[368480,368500],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[368577,368578]},{"pos":[368632,368637],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[368696,368697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368724,368725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369413,369473],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int64&gt;)","pos":[0,60],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Int64>)"}]},{"pos":[369996,370021],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[370125,370126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370176,370180],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[370238,370239],"content":"<","needQuote":true,"nodes":[]},{"pos":[370326,370346],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[370423,370424]},{"pos":[370478,370483],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[370574,370575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370683,370711],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[370818,370819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370869,370873],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[370932,370935]},{"pos":[371029,371049],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[371126,371127]},{"pos":[371181,371186],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[371245,371246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371273,371274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372000,372072],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[372670,372695],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[372799,372800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372850,372854],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[372912,372913],"content":"<","needQuote":true,"nodes":[]},{"pos":[373000,373020],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[373097,373098]},{"pos":[373157,373165],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[373227,373228],"content":"<","needQuote":true,"nodes":[]},{"pos":[373279,373286],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[373411,373412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373539,373567],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[373674,373675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373725,373729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[373788,373791]},{"pos":[373885,373905],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[373982,373983]},{"pos":[374042,374050],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[374113,374116]},{"pos":[374174,374181],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[374242,374243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374270,374271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374298,374299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375069,375140],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)"}]},{"pos":[375734,375759],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[375863,375864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375914,375918],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[375976,375977],"content":"<","needQuote":true,"nodes":[]},{"pos":[376064,376084],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[376161,376162]},{"pos":[376221,376229],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[376291,376292],"content":"<","needQuote":true,"nodes":[]},{"pos":[376342,376348],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[376472,376473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376599,376627],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[376734,376735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376785,376789],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[376848,376851]},{"pos":[376945,376965],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[377042,377043]},{"pos":[377102,377110],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[377173,377176]},{"pos":[377233,377239],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[377299,377300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377327,377328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377355,377356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378121,378191],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)"}]},{"pos":[378781,378806],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[378910,378911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378961,378965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[379023,379024],"content":"<","needQuote":true,"nodes":[]},{"pos":[379111,379131],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[379208,379209]},{"pos":[379268,379276],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[379338,379339],"content":"<","needQuote":true,"nodes":[]},{"pos":[379388,379393],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[379516,379517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379642,379670],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[379777,379778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379828,379832],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[379891,379894]},{"pos":[379988,380008],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[380085,380086]},{"pos":[380145,380153],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[380216,380219]},{"pos":[380275,380280],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[380339,380340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380367,380368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380395,380396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381158,381228],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)"}]},{"pos":[381818,381843],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[381947,381948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381998,382002],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[382060,382061],"content":"<","needQuote":true,"nodes":[]},{"pos":[382148,382168],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[382245,382246]},{"pos":[382305,382313],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[382375,382376],"content":"<","needQuote":true,"nodes":[]},{"pos":[382425,382430],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[382553,382554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382679,382707],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[382814,382815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382865,382869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[382928,382931]},{"pos":[383025,383045],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[383122,383123]},{"pos":[383182,383190],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[383253,383256]},{"pos":[383312,383317],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[383376,383377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383404,383405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383432,383433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384197,384268],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)"}]},{"pos":[384862,384887],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[384991,384992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385042,385046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[385104,385105],"content":"<","needQuote":true,"nodes":[]},{"pos":[385192,385212],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[385289,385290]},{"pos":[385349,385357],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[385419,385420],"content":"<","needQuote":true,"nodes":[]},{"pos":[385470,385476],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[385600,385601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385727,385755],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[385862,385863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385913,385917],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[385976,385979]},{"pos":[386073,386093],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[386170,386171]},{"pos":[386230,386238],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[386301,386304]},{"pos":[386361,386367],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[386427,386428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386455,386456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386483,386484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387217,387278],"content":"Sum<IPAddressInformation>(Func<IPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Single&gt;)","pos":[0,61],"source":"Sum<IPAddressInformation>(Func<IPAddressInformation, Single>)"}]},{"pos":[387805,387830],"content":"Sum<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;IPAddressInformation&gt;","pos":[0,25],"source":"Sum<IPAddressInformation>"}]},{"pos":[387934,387935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387985,387989],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[388047,388048],"content":"<","needQuote":true,"nodes":[]},{"pos":[388135,388155],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[388232,388233]},{"pos":[388288,388294],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[388386,388387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388496,388524],"content":"Sum(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of IPAddressInformation)","pos":[0,28]}]},{"pos":[388631,388632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[388682,388686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[388745,388748]},{"pos":[388842,388862],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[388939,388940]},{"pos":[388995,389001],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[389061,389062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389089,389090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389702,389735],"content":"Take<IPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;IPAddressInformation&gt;(Int32)","pos":[0,33],"source":"Take<IPAddressInformation>(Int32)"}]},{"pos":[390081,390107],"content":"Take<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Take&lt;IPAddressInformation&gt;","pos":[0,26],"source":"Take<IPAddressInformation>"}]},{"pos":[390212,390213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390262,390267],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[390326,390327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390419,390448],"content":"Take(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Take(Of IPAddressInformation)","pos":[0,29]}]},{"pos":[390556,390557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390606,390611],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[390670,390671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391302,391370],"content":"TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,68],"source":"TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[391925,391956],"content":"TakeWhile<IPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;IPAddressInformation&gt;","pos":[0,31],"source":"TakeWhile<IPAddressInformation>"}]},{"pos":[392066,392067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392117,392121],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[392179,392180],"content":"<","needQuote":true,"nodes":[]},{"pos":[392267,392287],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[392364,392365]},{"pos":[392421,392428],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[392521,392522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392638,392672],"content":"TakeWhile(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[392785,392786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392836,392840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[392899,392902]},{"pos":[392996,393016],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[393093,393094]},{"pos":[393150,393157],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[393218,393219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393246,393247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394001,394076],"content":"TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int32, Boolean&gt;)","pos":[0,75],"source":"TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)"}]},{"pos":[394679,394710],"content":"TakeWhile<IPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;IPAddressInformation&gt;","pos":[0,31],"source":"TakeWhile<IPAddressInformation>"}]},{"pos":[394820,394821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[394871,394875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[394933,394934],"content":"<","needQuote":true,"nodes":[]},{"pos":[395021,395041],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[395118,395119]},{"pos":[395173,395178],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[395238,395239]},{"pos":[395295,395302],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[395395,395396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395525,395559],"content":"TakeWhile(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of IPAddressInformation)","pos":[0,34]}]},{"pos":[395672,395673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395723,395727],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[395786,395789]},{"pos":[395883,395903],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[395980,395981]},{"pos":[396035,396040],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[396100,396101]},{"pos":[396157,396164],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[396225,396226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396253,396254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396893,396924],"content":"ToArray<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToArray&lt;IPAddressInformation&gt;()","pos":[0,31],"source":"ToArray<IPAddressInformation>()"}]},{"pos":[397239,397268],"content":"ToArray<IPAddressInformation>","needQuote":true,"nodes":[{"content":"ToArray&lt;IPAddressInformation&gt;","pos":[0,29],"source":"ToArray<IPAddressInformation>"}]},{"pos":[397376,397377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397404,397405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397486,397518],"content":"ToArray(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"ToArray(Of IPAddressInformation)","pos":[0,32]}]},{"pos":[397629,397630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397657,397658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398262,398336],"content":"ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;)","pos":[0,74],"source":"ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)"}]},{"pos":[398887,398927],"content":"ToDictionary<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey&gt;","pos":[0,40],"source":"ToDictionary<IPAddressInformation, TKey>"}]},{"pos":[399046,399047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399097,399101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[399159,399160],"content":"<","needQuote":true,"nodes":[]},{"pos":[399247,399267],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[399344,399345]},{"pos":[399377,399381],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[399443,399444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399552,399595],"content":"ToDictionary(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of IPAddressInformation, TKey)","pos":[0,43]}]},{"pos":[399717,399718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399768,399772],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[399831,399834]},{"pos":[399928,399948],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[400025,400026]},{"pos":[400058,400062],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[400092,400093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400120,400121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400943,401042],"content":"ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,99],"source":"ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[401778,401818],"content":"ToDictionary<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey&gt;","pos":[0,40],"source":"ToDictionary<IPAddressInformation, TKey>"}]},{"pos":[401937,401938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401988,401992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[402050,402051],"content":"<","needQuote":true,"nodes":[]},{"pos":[402138,402158],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[402235,402236]},{"pos":[402268,402272],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[402335,402336]},{"pos":[402424,402441],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[402532,402533],"content":"<","needQuote":true,"nodes":[]},{"pos":[402560,402564],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[402626,402627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402785,402828],"content":"ToDictionary(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of IPAddressInformation, TKey)","pos":[0,43]}]},{"pos":[402950,402951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403001,403005],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[403064,403067]},{"pos":[403161,403181],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[403258,403259]},{"pos":[403291,403295],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[403325,403326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[403354,403355]},{"pos":[403443,403460],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[403552,403555]},{"pos":[403589,403593],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[403623,403624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403651,403652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404570,404692],"content":"ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey, TElement&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;)","pos":[0,122],"source":"ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)"}]},{"pos":[405488,405538],"content":"ToDictionary<IPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey, TElement&gt;","pos":[0,50],"source":"ToDictionary<IPAddressInformation, TKey, TElement>"}]},{"pos":[405667,405668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405718,405722],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[405780,405781],"content":"<","needQuote":true,"nodes":[]},{"pos":[405868,405888],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[405965,405966]},{"pos":[405998,406002],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[406065,406066]},{"pos":[406121,406125],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[406183,406184],"content":"<","needQuote":true,"nodes":[]},{"pos":[406271,406291],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[406368,406369]},{"pos":[406401,406409],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[406475,406476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406605,406658],"content":"ToDictionary(Of IPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of IPAddressInformation, TKey, TElement)","pos":[0,53]}]},{"pos":[406790,406791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406841,406845],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[406904,406907]},{"pos":[407001,407021],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[407098,407099]},{"pos":[407131,407135],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[407165,407166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[407194,407195]},{"pos":[407250,407254],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[407313,407316]},{"pos":[407410,407430],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[407507,407508]},{"pos":[407540,407548],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[407582,407583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407610,407611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408649,408796],"content":"ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey, TElement&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,147],"source":"ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[409777,409827],"content":"ToDictionary<IPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;IPAddressInformation, TKey, TElement&gt;","pos":[0,50],"source":"ToDictionary<IPAddressInformation, TKey, TElement>"}]},{"pos":[409956,409957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[410007,410011],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[410069,410070],"content":"<","needQuote":true,"nodes":[]},{"pos":[410157,410177],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[410254,410255]},{"pos":[410287,410291],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[410354,410355]},{"pos":[410410,410414],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[410472,410473],"content":"<","needQuote":true,"nodes":[]},{"pos":[410560,410580],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[410657,410658]},{"pos":[410690,410698],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[410765,410766]},{"pos":[410854,410871],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[410962,410963],"content":"<","needQuote":true,"nodes":[]},{"pos":[410990,410994],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[411056,411057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411236,411289],"content":"ToDictionary(Of IPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of IPAddressInformation, TKey, TElement)","pos":[0,53]}]},{"pos":[411421,411422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411472,411476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[411535,411538]},{"pos":[411632,411652],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[411729,411730]},{"pos":[411762,411766],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[411796,411797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[411825,411826]},{"pos":[411881,411885],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[411944,411947]},{"pos":[412041,412061],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[412138,412139]},{"pos":[412171,412179],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[412213,412214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[412242,412243]},{"pos":[412331,412348],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[412440,412443]},{"pos":[412477,412481],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[412511,412512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412539,412540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413377,413407],"content":"ToList<IPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToList&lt;IPAddressInformation&gt;()","pos":[0,30],"source":"ToList<IPAddressInformation>()"}]},{"pos":[413718,413746],"content":"ToList<IPAddressInformation>","needQuote":true,"nodes":[{"content":"ToList&lt;IPAddressInformation&gt;","pos":[0,28],"source":"ToList<IPAddressInformation>"}]},{"pos":[413853,413854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413881,413882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413962,413993],"content":"ToList(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"ToList(Of IPAddressInformation)","pos":[0,31]}]},{"pos":[414103,414104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414131,414132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414725,414795],"content":"ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;)","pos":[0,70],"source":"ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)"}]},{"pos":[415330,415366],"content":"ToLookup<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey&gt;","pos":[0,36],"source":"ToLookup<IPAddressInformation, TKey>"}]},{"pos":[415481,415482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415532,415536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[415594,415595],"content":"<","needQuote":true,"nodes":[]},{"pos":[415682,415702],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[415779,415780]},{"pos":[415812,415816],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[415878,415879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415983,416022],"content":"ToLookup(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of IPAddressInformation, TKey)","pos":[0,39]}]},{"pos":[416140,416141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416191,416195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[416254,416257]},{"pos":[416351,416371],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[416448,416449]},{"pos":[416481,416485],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[416515,416516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416543,416544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417346,417441],"content":"ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey&gt;(Func&lt;IPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[418161,418197],"content":"ToLookup<IPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey&gt;","pos":[0,36],"source":"ToLookup<IPAddressInformation, TKey>"}]},{"pos":[418312,418313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418363,418367],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[418425,418426],"content":"<","needQuote":true,"nodes":[]},{"pos":[418513,418533],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[418610,418611]},{"pos":[418643,418647],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[418710,418711]},{"pos":[418799,418816],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[418907,418908],"content":"<","needQuote":true,"nodes":[]},{"pos":[418935,418939],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[419001,419002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419156,419195],"content":"ToLookup(Of IPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of IPAddressInformation, TKey)","pos":[0,39]}]},{"pos":[419313,419314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419364,419368],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[419427,419430]},{"pos":[419524,419544],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[419621,419622]},{"pos":[419654,419658],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[419688,419689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[419717,419718]},{"pos":[419806,419823],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[419915,419918]},{"pos":[419952,419956],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[419986,419987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420014,420015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420913,421031],"content":"ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey, TElement&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;)","pos":[0,118],"source":"ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)"}]},{"pos":[421811,421857],"content":"ToLookup<IPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey, TElement&gt;","pos":[0,46],"source":"ToLookup<IPAddressInformation, TKey, TElement>"}]},{"pos":[421982,421983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422033,422037],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[422095,422096],"content":"<","needQuote":true,"nodes":[]},{"pos":[422183,422203],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[422280,422281]},{"pos":[422313,422317],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[422380,422381]},{"pos":[422436,422440],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[422498,422499],"content":"<","needQuote":true,"nodes":[]},{"pos":[422586,422606],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[422683,422684]},{"pos":[422716,422724],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[422790,422791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422916,422965],"content":"ToLookup(Of IPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of IPAddressInformation, TKey, TElement)","pos":[0,49]}]},{"pos":[423093,423094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423144,423148],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[423207,423210]},{"pos":[423304,423324],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[423401,423402]},{"pos":[423434,423438],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[423468,423469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[423497,423498]},{"pos":[423553,423557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[423616,423619]},{"pos":[423713,423733],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[423810,423811]},{"pos":[423843,423851],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[423885,423886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423913,423914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424932,425075],"content":"ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey, TElement&gt;(Func&lt;IPAddressInformation, TKey&gt;, Func&lt;IPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,143],"source":"ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[426040,426086],"content":"ToLookup<IPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;IPAddressInformation, TKey, TElement&gt;","pos":[0,46],"source":"ToLookup<IPAddressInformation, TKey, TElement>"}]},{"pos":[426211,426212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426262,426266],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[426324,426325],"content":"<","needQuote":true,"nodes":[]},{"pos":[426412,426432],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[426509,426510]},{"pos":[426542,426546],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[426609,426610]},{"pos":[426665,426669],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[426727,426728],"content":"<","needQuote":true,"nodes":[]},{"pos":[426815,426835],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[426912,426913]},{"pos":[426945,426953],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[427020,427021]},{"pos":[427109,427126],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[427217,427218],"content":"<","needQuote":true,"nodes":[]},{"pos":[427245,427249],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[427311,427312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427487,427536],"content":"ToLookup(Of IPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of IPAddressInformation, TKey, TElement)","pos":[0,49]}]},{"pos":[427664,427665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427715,427719],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[427778,427781]},{"pos":[427875,427895],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[427972,427973]},{"pos":[428005,428009],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[428039,428040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[428068,428069]},{"pos":[428124,428128],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[428187,428190]},{"pos":[428284,428304],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[428381,428382]},{"pos":[428414,428422],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[428456,428457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[428485,428486]},{"pos":[428574,428591],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[428683,428686]},{"pos":[428720,428724],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[428754,428755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428782,428783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429742,429804],"content":"Union<IPAddressInformation>(IEnumerable<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;)","pos":[0,62],"source":"Union<IPAddressInformation>(IEnumerable<IPAddressInformation>)"}]},{"pos":[430375,430402],"content":"Union<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;IPAddressInformation&gt;","pos":[0,27],"source":"Union<IPAddressInformation>"}]},{"pos":[430508,430509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430586,430597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[430682,430683],"content":"<","needQuote":true,"nodes":[]},{"pos":[430770,430790],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[430898,430899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431023,431053],"content":"Union(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[431162,431163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431240,431251],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[431337,431340]},{"pos":[431434,431454],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[431530,431531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431558,431559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432446,432549],"content":"Union<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;IPAddressInformation&gt;(IEnumerable&lt;IPAddressInformation&gt;, IEqualityComparer&lt;IPAddressInformation&gt;)","pos":[0,103],"source":"Union<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)"}]},{"pos":[433413,433440],"content":"Union<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;IPAddressInformation&gt;","pos":[0,27],"source":"Union<IPAddressInformation>"}]},{"pos":[433546,433547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433624,433635],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[433720,433721],"content":"<","needQuote":true,"nodes":[]},{"pos":[433808,433828],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[433937,433938]},{"pos":[434026,434043],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[434134,434135],"content":"<","needQuote":true,"nodes":[]},{"pos":[434222,434242],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[434350,434351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434525,434555],"content":"Union(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[434664,434665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434742,434753],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[434839,434842]},{"pos":[434936,434956],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[435032,435033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[435061,435062]},{"pos":[435150,435167],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[435259,435262]},{"pos":[435356,435376],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[435452,435453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435480,435481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436332,436396],"content":"Where<IPAddressInformation>(Func<IPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Boolean&gt;)","pos":[0,64],"source":"Where<IPAddressInformation>(Func<IPAddressInformation, Boolean>)"}]},{"pos":[436935,436962],"content":"Where<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;IPAddressInformation&gt;","pos":[0,27],"source":"Where<IPAddressInformation>"}]},{"pos":[437068,437069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437119,437123],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[437181,437182],"content":"<","needQuote":true,"nodes":[]},{"pos":[437269,437289],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[437366,437367]},{"pos":[437423,437430],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[437523,437524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437636,437666],"content":"Where(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[437775,437776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437826,437830],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[437889,437892]},{"pos":[437986,438006],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[438083,438084]},{"pos":[438140,438147],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[438208,438209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438236,438237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438971,439042],"content":"Where<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;IPAddressInformation&gt;(Func&lt;IPAddressInformation, Int32, Boolean&gt;)","pos":[0,71],"source":"Where<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)"}]},{"pos":[439629,439656],"content":"Where<IPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;IPAddressInformation&gt;","pos":[0,27],"source":"Where<IPAddressInformation>"}]},{"pos":[439762,439763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439813,439817],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[439875,439876],"content":"<","needQuote":true,"nodes":[]},{"pos":[439963,439983],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[440060,440061]},{"pos":[440115,440120],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[440180,440181]},{"pos":[440237,440244],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[440337,440338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440463,440493],"content":"Where(Of IPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of IPAddressInformation)","pos":[0,30]}]},{"pos":[440602,440603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440653,440657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[440716,440719]},{"pos":[440813,440833],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[440910,440911]},{"pos":[440965,440970],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[441030,441031]},{"pos":[441087,441094],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[441155,441156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441183,441184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442007,442118],"content":"Zip<IPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<IPAddressInformation, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;IPAddressInformation, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;IPAddressInformation, TSecond, TResult&gt;)","pos":[0,111],"source":"Zip<IPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<IPAddressInformation, TSecond, TResult>)"}]},{"pos":[442879,442922],"content":"Zip<IPAddressInformation, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;IPAddressInformation, TSecond, TResult&gt;","pos":[0,43],"source":"Zip<IPAddressInformation, TSecond, TResult>"}]},{"pos":[443044,443045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443122,443133],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[443218,443219],"content":"<","needQuote":true,"nodes":[]},{"pos":[443246,443253],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[443319,443320]},{"pos":[443375,443379],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[443437,443438],"content":"<","needQuote":true,"nodes":[]},{"pos":[443525,443545],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[443622,443623]},{"pos":[443655,443662],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[443696,443697]},{"pos":[443729,443736],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[443801,443802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443949,443995],"content":"Zip(Of IPAddressInformation, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of IPAddressInformation, TSecond, TResult)","pos":[0,46]}]},{"pos":[444120,444121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444198,444209],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[444295,444298]},{"pos":[444332,444339],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[444372,444373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[444401,444402]},{"pos":[444457,444461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[444520,444523]},{"pos":[444617,444637],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":",","pos":[444714,444715]},{"pos":[444747,444754],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[444788,444789]},{"pos":[444821,444828],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[444861,444862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444889,444890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445398,445404],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[445545,445559],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[445778,445789],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[445853,445854],"content":"<","needQuote":true,"nodes":[]},{"pos":[445881,445882],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[446002,446013],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[446078,446081]},{"pos":[446115,446116],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[446143,446144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446347,446373],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[446574,446588],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[446807,446818],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[446882,446883],"content":"<","needQuote":true,"nodes":[]},{"pos":[446910,446911],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[447031,447042],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[447107,447110]},{"pos":[447144,447145],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[447172,447173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447368,447386],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[447587,447611],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[447790,447801],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[447860,447861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447928,447939],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[448016,448017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448130,448141],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[448200,448201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448268,448279],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[448356,448357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448585,448594],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[448808,448852],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[449252,449273],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[449342,449343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449420,449431],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[449516,449517],"content":"<","needQuote":true,"nodes":[]},{"pos":[449544,449552],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[449618,449619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449748,449772],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[449844,449845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449922,449933],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[450019,450022]},{"pos":[450056,450064],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[450098,450099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450126,450127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450500,450523],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[450718,450728],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[450795,450796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450863,450874],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[450951,450952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451073,451083],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[451150,451151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451218,451229],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[451306,451307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451560,451578],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[451827,451868],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[452285,452304],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[452380,452381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452458,452469],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[452554,452555],"content":"<","needQuote":true,"nodes":[]},{"pos":[452582,452589],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[452654,452655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452792,452814],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[452893,452894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452971,452982],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[453068,453071]},{"pos":[453105,453112],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[453145,453146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453173,453174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453599,453672],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[454205,454223],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[454290,454291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454368,454379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[454464,454465],"content":"<","needQuote":true,"nodes":[]},{"pos":[454492,454499],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[454565,454566]},{"pos":[454621,454625],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[454683,454684],"content":"<","needQuote":true,"nodes":[]},{"pos":[454711,454718],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[454752,454753]},{"pos":[454785,454792],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[454826,454827]},{"pos":[454859,454866],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[454931,454932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455085,455106],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[455176,455177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455254,455265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[455351,455354]},{"pos":[455388,455395],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[455428,455429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[455457,455458]},{"pos":[455513,455517],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[455576,455579]},{"pos":[455613,455620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[455654,455655]},{"pos":[455687,455694],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[455728,455729]},{"pos":[455761,455768],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[455801,455802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455829,455830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456262,456272],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[456517,456624],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[457263,457294],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[457374,457375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457452,457463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[457548,457549],"content":"<","needQuote":true,"nodes":[]},{"pos":[457576,457583],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[457649,457650]},{"pos":[457682,457693],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[457731,457732]},{"pos":[457787,457791],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[457849,457850],"content":"<","needQuote":true,"nodes":[]},{"pos":[457877,457888],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[457926,457927]},{"pos":[457959,457966],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[458000,458001]},{"pos":[458033,458044],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[458113,458114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458271,458305],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[458388,458389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458466,458477],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[458563,458566]},{"pos":[458600,458607],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[458640,458641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[458669,458670]},{"pos":[458702,458713],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[458751,458752]},{"pos":[458807,458811],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[458870,458873]},{"pos":[458907,458918],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[458956,458957]},{"pos":[458989,458996],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[459030,459031]},{"pos":[459063,459074],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[459111,459112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459139,459140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459729,459873],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[460664,460704],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[460793,460794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460871,460882],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[460967,460968],"content":"<","needQuote":true,"nodes":[]},{"pos":[460995,461002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[461068,461069]},{"pos":[461101,461112],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[461150,461151]},{"pos":[461206,461210],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[461268,461269],"content":"<","needQuote":true,"nodes":[]},{"pos":[461296,461307],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[461345,461346]},{"pos":[461378,461385],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[461419,461420]},{"pos":[461452,461463],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[461533,461534]},{"pos":[461589,461593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[461651,461652],"content":"<","needQuote":true,"nodes":[]},{"pos":[461679,461690],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[461728,461729]},{"pos":[461761,461768],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[461833,461834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462012,462055],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[462147,462148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462225,462236],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[462322,462325]},{"pos":[462359,462366],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[462399,462400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[462428,462429]},{"pos":[462461,462472],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[462510,462511]},{"pos":[462566,462570],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[462629,462632]},{"pos":[462666,462677],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[462715,462716]},{"pos":[462748,462755],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[462789,462790]},{"pos":[462822,462833],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[462870,462871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[462899,462900]},{"pos":[462955,462959],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[463018,463021]},{"pos":[463055,463066],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[463104,463105]},{"pos":[463137,463144],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[463177,463178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463205,463206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463869,463927],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[464430,464442],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[464503,464504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464581,464592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[464677,464678],"content":"<","needQuote":true,"nodes":[]},{"pos":[464705,464712],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[464778,464779]},{"pos":[464834,464838],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[464896,464897],"content":"<","needQuote":true,"nodes":[]},{"pos":[464924,464931],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[464965,464966]},{"pos":[465022,465029],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[465122,465123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465277,465292],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[465356,465357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465434,465445],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[465531,465534]},{"pos":[465568,465575],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[465608,465609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[465637,465638]},{"pos":[465693,465697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[465756,465759]},{"pos":[465793,465800],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[465834,465835]},{"pos":[465891,465898],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[465959,465960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465987,465988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466420,466454],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[466819,466831],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[466892,466893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466970,466981],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[467066,467067],"content":"<","needQuote":true,"nodes":[]},{"pos":[467094,467101],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[467166,467167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467289,467304],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[467368,467369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467446,467457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467543,467546]},{"pos":[467580,467587],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[467620,467621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467648,467649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468030,468088],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[468591,468603],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[468664,468665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[468742,468753],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[468838,468839],"content":"<","needQuote":true,"nodes":[]},{"pos":[468866,468873],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[468939,468940]},{"pos":[468995,468999],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[469057,469058],"content":"<","needQuote":true,"nodes":[]},{"pos":[469085,469092],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[469126,469127]},{"pos":[469183,469190],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[469283,469284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469438,469453],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[469517,469518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469595,469606],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[469692,469695]},{"pos":[469729,469736],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[469769,469770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[469798,469799]},{"pos":[469854,469858],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[469917,469920]},{"pos":[469954,469961],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[469995,469996]},{"pos":[470052,470059],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[470120,470121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470148,470149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470590,470633],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[471034,471055],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[471125,471126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471203,471214],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[471299,471300],"content":"<","needQuote":true,"nodes":[]},{"pos":[471327,471334],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[471399,471400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471531,471555],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[471628,471629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471706,471717],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[471803,471806]},{"pos":[471840,471847],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[471880,471881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471908,471909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472321,472383],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[472902,472918],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[472983,472984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473061,473072],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[473157,473158],"content":"<","needQuote":true,"nodes":[]},{"pos":[473185,473192],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[473258,473259]},{"pos":[473314,473318],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[473376,473377],"content":"<","needQuote":true,"nodes":[]},{"pos":[473404,473411],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[473445,473446]},{"pos":[473502,473509],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[473602,473603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473761,473780],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[473848,473849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473926,473937],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[474023,474026]},{"pos":[474060,474067],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[474100,474101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[474129,474130]},{"pos":[474185,474189],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[474248,474251]},{"pos":[474285,474292],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[474326,474327]},{"pos":[474383,474390],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[474451,474452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474479,474480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474959,475020],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[475535,475551],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[475616,475617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475694,475705],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[475790,475791],"content":"<","needQuote":true,"nodes":[]},{"pos":[475818,475825],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[475891,475892]},{"pos":[475947,475951],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[476009,476010],"content":"<","needQuote":true,"nodes":[]},{"pos":[476037,476044],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[476078,476079]},{"pos":[476134,476140],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[476232,476233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476390,476409],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[476477,476478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476555,476566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[476652,476655]},{"pos":[476689,476696],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[476729,476730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[476758,476759]},{"pos":[476814,476818],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[476877,476880]},{"pos":[476914,476921],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[476955,476956]},{"pos":[477011,477017],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[477077,477078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477105,477106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477581,477641],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[478152,478168],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[478233,478234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478311,478322],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[478407,478408],"content":"<","needQuote":true,"nodes":[]},{"pos":[478435,478442],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[478508,478509]},{"pos":[478564,478568],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[478626,478627],"content":"<","needQuote":true,"nodes":[]},{"pos":[478654,478661],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[478695,478696]},{"pos":[478750,478755],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[478846,478847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479003,479022],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[479090,479091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479168,479179],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[479265,479268]},{"pos":[479302,479309],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[479342,479343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[479371,479372]},{"pos":[479427,479431],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[479490,479493]},{"pos":[479527,479534],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[479568,479569]},{"pos":[479623,479628],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[479687,479688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479715,479716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480188,480248],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[480759,480775],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[480840,480841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480918,480929],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[481014,481015],"content":"<","needQuote":true,"nodes":[]},{"pos":[481042,481049],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481115,481116]},{"pos":[481171,481175],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481233,481234],"content":"<","needQuote":true,"nodes":[]},{"pos":[481261,481268],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481302,481303]},{"pos":[481357,481362],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[481453,481454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481610,481629],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[481697,481698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481775,481786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[481872,481875]},{"pos":[481909,481916],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[481949,481950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[481978,481979]},{"pos":[482034,482038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[482097,482100]},{"pos":[482134,482141],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[482175,482176]},{"pos":[482230,482235],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[482294,482295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482322,482323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482814,482886],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[483472,483488],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[483553,483554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483631,483642],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[483727,483728],"content":"<","needQuote":true,"nodes":[]},{"pos":[483755,483762],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[483828,483829]},{"pos":[483884,483888],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[483946,483947],"content":"<","needQuote":true,"nodes":[]},{"pos":[483974,483981],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[484015,484016]},{"pos":[484075,484083],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[484145,484146],"content":"<","needQuote":true,"nodes":[]},{"pos":[484197,484204],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[484329,484330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484505,484524],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[484592,484593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484670,484681],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[484767,484770]},{"pos":[484804,484811],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[484844,484845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[484873,484874]},{"pos":[484929,484933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[484992,484995]},{"pos":[485029,485036],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[485070,485071]},{"pos":[485130,485138],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[485201,485204]},{"pos":[485262,485269],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[485330,485331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485358,485359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485386,485387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485923,485994],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[486576,486592],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[486657,486658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486735,486746],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[486831,486832],"content":"<","needQuote":true,"nodes":[]},{"pos":[486859,486866],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[486932,486933]},{"pos":[486988,486992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[487050,487051],"content":"<","needQuote":true,"nodes":[]},{"pos":[487078,487085],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[487119,487120]},{"pos":[487179,487187],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[487249,487250],"content":"<","needQuote":true,"nodes":[]},{"pos":[487300,487306],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[487430,487431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487605,487624],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[487692,487693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487770,487781],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[487867,487870]},{"pos":[487904,487911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[487944,487945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[487973,487974]},{"pos":[488029,488033],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[488092,488095]},{"pos":[488129,488136],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[488170,488171]},{"pos":[488230,488238],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[488301,488304]},{"pos":[488361,488367],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[488427,488428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488455,488456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488483,488484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489016,489086],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[489664,489680],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[489745,489746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489823,489834],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[489919,489920],"content":"<","needQuote":true,"nodes":[]},{"pos":[489947,489954],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[490020,490021]},{"pos":[490076,490080],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[490138,490139],"content":"<","needQuote":true,"nodes":[]},{"pos":[490166,490173],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[490207,490208]},{"pos":[490267,490275],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[490337,490338],"content":"<","needQuote":true,"nodes":[]},{"pos":[490387,490392],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[490515,490516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490689,490708],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[490776,490777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490854,490865],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[490951,490954]},{"pos":[490988,490995],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[491028,491029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[491057,491058]},{"pos":[491113,491117],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[491176,491179]},{"pos":[491213,491220],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491254,491255]},{"pos":[491314,491322],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[491385,491388]},{"pos":[491444,491449],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[491508,491509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491536,491537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491564,491565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492094,492164],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[492742,492758],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[492823,492824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492901,492912],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[492997,492998],"content":"<","needQuote":true,"nodes":[]},{"pos":[493025,493032],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[493098,493099]},{"pos":[493154,493158],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[493216,493217],"content":"<","needQuote":true,"nodes":[]},{"pos":[493244,493251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[493285,493286]},{"pos":[493345,493353],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[493415,493416],"content":"<","needQuote":true,"nodes":[]},{"pos":[493465,493470],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[493593,493594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493767,493786],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[493854,493855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493932,493943],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[494029,494032]},{"pos":[494066,494073],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[494106,494107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[494135,494136]},{"pos":[494191,494195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[494254,494257]},{"pos":[494291,494298],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[494332,494333]},{"pos":[494392,494400],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[494463,494466]},{"pos":[494522,494527],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[494586,494587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494614,494615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494642,494643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495173,495244],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[495826,495842],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[495907,495908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495985,495996],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[496081,496082],"content":"<","needQuote":true,"nodes":[]},{"pos":[496109,496116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[496182,496183]},{"pos":[496238,496242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[496300,496301],"content":"<","needQuote":true,"nodes":[]},{"pos":[496328,496335],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[496369,496370]},{"pos":[496429,496437],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[496499,496500],"content":"<","needQuote":true,"nodes":[]},{"pos":[496550,496556],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[496680,496681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496855,496874],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[496942,496943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497020,497031],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[497117,497120]},{"pos":[497154,497161],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[497194,497195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[497223,497224]},{"pos":[497279,497283],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[497342,497345]},{"pos":[497379,497386],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[497420,497421]},{"pos":[497480,497488],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[497551,497554]},{"pos":[497611,497617],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[497677,497678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497705,497706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497733,497734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498250,498311],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[498826,498842],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[498907,498908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498985,498996],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[499081,499082],"content":"<","needQuote":true,"nodes":[]},{"pos":[499109,499116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499182,499183]},{"pos":[499238,499242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[499300,499301],"content":"<","needQuote":true,"nodes":[]},{"pos":[499328,499335],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499369,499370]},{"pos":[499425,499431],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[499523,499524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499681,499700],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[499768,499769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499846,499857],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[499943,499946]},{"pos":[499980,499987],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[500020,500021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[500049,500050]},{"pos":[500105,500109],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[500168,500171]},{"pos":[500205,500212],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[500246,500247]},{"pos":[500302,500308],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[500368,500369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500396,500397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500826,500852],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[501159,501172],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[501234,501235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501302,501313],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[501390,501391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501501,501517],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[501582,501583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501650,501661],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[501738,501739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502104,502163],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[502710,502725],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[502789,502790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502867,502878],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[502963,502964],"content":"<","needQuote":true,"nodes":[]},{"pos":[502991,502998],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[503064,503065]},{"pos":[503147,503158],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[503243,503244],"content":"<","needQuote":true,"nodes":[]},{"pos":[503271,503278],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[503343,503344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503513,503531],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[503598,503599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503676,503687],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[503773,503776]},{"pos":[503810,503817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[503850,503851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[503879,503880]},{"pos":[503962,503973],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[504059,504062]},{"pos":[504096,504103],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[504136,504137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504164,504165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504621,504667],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[505075,505090],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[505154,505155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505232,505243],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[505328,505329],"content":"<","needQuote":true,"nodes":[]},{"pos":[505356,505363],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[505429,505430]},{"pos":[505462,505469],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[505502,505503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505632,505650],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[505717,505718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505795,505806],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[505892,505895]},{"pos":[505929,505936],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[505969,505970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505998,505999]},{"pos":[506031,506038],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[506071,506072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506460,506507],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[506919,506935],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[507000,507001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507078,507089],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[507174,507175],"content":"<","needQuote":true,"nodes":[]},{"pos":[507202,507209],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[507275,507276]},{"pos":[507308,507315],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[507348,507349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507479,507498],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[507566,507567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507644,507655],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[507741,507744]},{"pos":[507778,507785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[507818,507819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[507847,507848]},{"pos":[507880,507887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[507920,507921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508313,508361],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[508777,508794],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[508860,508861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508938,508949],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[509034,509035],"content":"<","needQuote":true,"nodes":[]},{"pos":[509062,509069],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[509135,509136]},{"pos":[509168,509175],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[509208,509209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509340,509360],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[509429,509430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509507,509518],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[509604,509607]},{"pos":[509641,509648],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[509681,509682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[509710,509711]},{"pos":[509743,509750],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[509783,509784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510229,510305],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[510915,510932],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[510998,510999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511076,511087],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[511172,511173],"content":"<","needQuote":true,"nodes":[]},{"pos":[511200,511207],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[511273,511274]},{"pos":[511306,511313],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[511347,511348]},{"pos":[511436,511453],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[511544,511545],"content":"<","needQuote":true,"nodes":[]},{"pos":[511572,511579],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[511644,511645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511826,511846],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[511915,511916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511993,512004],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[512090,512093]},{"pos":[512127,512134],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[512167,512168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[512196,512197]},{"pos":[512229,512236],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[512270,512271]},{"pos":[512359,512376],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[512468,512471]},{"pos":[512505,512512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[512545,512546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512573,512574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513071,513107],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[513480,513494],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[513557,513558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513635,513646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[513731,513732],"content":"<","needQuote":true,"nodes":[]},{"pos":[513759,513766],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[513831,513832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513956,513973],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[514039,514040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514117,514128],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[514214,514217]},{"pos":[514251,514258],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[514291,514292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514319,514320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514709,514769],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[515280,515294],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[515357,515358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515435,515446],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[515531,515532],"content":"<","needQuote":true,"nodes":[]},{"pos":[515559,515566],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[515632,515633]},{"pos":[515688,515692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[515750,515751],"content":"<","needQuote":true,"nodes":[]},{"pos":[515778,515785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[515819,515820]},{"pos":[515876,515883],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[515976,515977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516133,516150],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[516216,516217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516294,516305],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[516391,516394]},{"pos":[516428,516435],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[516468,516469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[516497,516498]},{"pos":[516553,516557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[516616,516619]},{"pos":[516653,516660],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[516694,516695]},{"pos":[516751,516758],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[516819,516820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516847,516848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517297,517342],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[517751,517774],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[517846,517847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517924,517935],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[518020,518021],"content":"<","needQuote":true,"nodes":[]},{"pos":[518048,518055],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[518120,518121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518254,518280],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[518355,518356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518433,518444],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[518530,518533]},{"pos":[518567,518574],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[518607,518608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518635,518636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519033,519087],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[519527,519550],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[519622,519623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519700,519711],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[519796,519797],"content":"<","needQuote":true,"nodes":[]},{"pos":[519824,519831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[519897,519898]},{"pos":[519930,519937],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[519970,519971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520108,520134],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[520209,520210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520287,520298],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[520384,520387]},{"pos":[520421,520428],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[520461,520462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[520490,520491]},{"pos":[520523,520530],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[520563,520564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520973,521012],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[521397,521414],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[521480,521481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521558,521569],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[521654,521655],"content":"<","needQuote":true,"nodes":[]},{"pos":[521682,521689],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[521754,521755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521882,521902],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[521971,521972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522049,522060],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[522146,522149]},{"pos":[522183,522190],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[522223,522224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522251,522252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522671,522738],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[523317,523334],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[523400,523401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523478,523489],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[523574,523575],"content":"<","needQuote":true,"nodes":[]},{"pos":[523602,523609],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[523675,523676]},{"pos":[523764,523781],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[523872,523873],"content":"<","needQuote":true,"nodes":[]},{"pos":[523900,523907],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[523972,523973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524150,524170],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[524239,524240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524317,524328],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[524414,524417]},{"pos":[524451,524458],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[524491,524492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[524520,524521]},{"pos":[524609,524626],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[524718,524721]},{"pos":[524755,524762],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[524795,524796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524823,524824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525316,525363],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[525800,525818],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[525885,525886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525963,525974],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[526059,526060],"content":"<","needQuote":true,"nodes":[]},{"pos":[526087,526094],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[526160,526161]},{"pos":[526215,526220],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[526279,526280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526421,526442],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[526512,526513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526590,526601],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[526687,526690]},{"pos":[526724,526731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[526764,526765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526793,526794]},{"pos":[526848,526853],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[526912,526913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527335,527391],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[527864,527891],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[527967,527968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528045,528056],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[528141,528142],"content":"<","needQuote":true,"nodes":[]},{"pos":[528169,528176],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[528242,528243]},{"pos":[528297,528302],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[528361,528362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528512,528542],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[528621,528622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528699,528710],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[528796,528799]},{"pos":[528833,528840],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[528873,528874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[528902,528903]},{"pos":[528957,528962],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[529021,529022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529490,529549],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[530096,530111],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[530175,530176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530253,530264],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[530349,530350],"content":"<","needQuote":true,"nodes":[]},{"pos":[530377,530384],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[530450,530451]},{"pos":[530533,530544],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[530629,530630],"content":"<","needQuote":true,"nodes":[]},{"pos":[530657,530664],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530729,530730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530899,530917],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[530984,530985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531062,531073],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[531159,531162]},{"pos":[531196,531203],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[531236,531237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[531265,531266]},{"pos":[531348,531359],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[531445,531448]},{"pos":[531482,531489],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[531522,531523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531550,531551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532097,532184],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[532925,532940],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[533004,533005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533082,533093],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[533178,533179],"content":"<","needQuote":true,"nodes":[]},{"pos":[533206,533213],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[533279,533280]},{"pos":[533362,533373],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[533458,533459],"content":"<","needQuote":true,"nodes":[]},{"pos":[533486,533493],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[533559,533560]},{"pos":[533648,533665],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[533756,533757],"content":"<","needQuote":true,"nodes":[]},{"pos":[533784,533791],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[533856,533857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534076,534094],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[534161,534162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534239,534250],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[534336,534339]},{"pos":[534373,534380],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[534413,534414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[534442,534443]},{"pos":[534525,534536],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[534622,534625]},{"pos":[534659,534666],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[534699,534700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[534728,534729]},{"pos":[534817,534834],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[534926,534929]},{"pos":[534963,534970],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[535003,535004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535031,535032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535592,535628],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[536001,536015],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[536078,536079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536156,536167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[536252,536253],"content":"<","needQuote":true,"nodes":[]},{"pos":[536280,536287],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[536352,536353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536477,536494],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[536560,536561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536638,536649],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[536735,536738]},{"pos":[536772,536779],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[536812,536813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536840,536841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537230,537290],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[537801,537815],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[537878,537879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537956,537967],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[538052,538053],"content":"<","needQuote":true,"nodes":[]},{"pos":[538080,538087],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[538153,538154]},{"pos":[538209,538213],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[538271,538272],"content":"<","needQuote":true,"nodes":[]},{"pos":[538299,538306],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[538340,538341]},{"pos":[538397,538404],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[538497,538498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538654,538671],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[538737,538738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538815,538826],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[538912,538915]},{"pos":[538949,538956],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[538989,538990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[539018,539019]},{"pos":[539074,539078],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[539137,539140]},{"pos":[539174,539181],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[539215,539216]},{"pos":[539272,539279],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[539340,539341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539368,539369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539818,539863],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[540272,540295],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[540367,540368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540445,540456],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[540541,540542],"content":"<","needQuote":true,"nodes":[]},{"pos":[540569,540576],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540641,540642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540775,540801],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[540876,540877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540954,540965],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[541051,541054]},{"pos":[541088,541095],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[541128,541129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541156,541157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541582,541651],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[542198,542221],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[542293,542294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542371,542382],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[542467,542468],"content":"<","needQuote":true,"nodes":[]},{"pos":[542495,542502],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542568,542569]},{"pos":[542624,542628],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[542686,542687],"content":"<","needQuote":true,"nodes":[]},{"pos":[542714,542721],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542755,542756]},{"pos":[542812,542819],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[542912,542913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543078,543104],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[543179,543180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543257,543268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[543354,543357]},{"pos":[543391,543398],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[543431,543432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[543460,543461]},{"pos":[543516,543520],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[543579,543582]},{"pos":[543616,543623],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[543657,543658]},{"pos":[543714,543721],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[543782,543783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543810,543811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544301,544366],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[544869,544891],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[544962,544963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545040,545051],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[545136,545137],"content":"<","needQuote":true,"nodes":[]},{"pos":[545164,545171],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[545237,545238]},{"pos":[545293,545297],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[545355,545356],"content":"<","needQuote":true,"nodes":[]},{"pos":[545383,545390],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[545424,545425]},{"pos":[545457,545461],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[545523,545524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545671,545696],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[545770,545771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545848,545859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[545945,545948]},{"pos":[545982,545989],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546022,546023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[546051,546052]},{"pos":[546107,546111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[546170,546173]},{"pos":[546207,546214],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[546248,546249]},{"pos":[546281,546285],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[546315,546316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546343,546344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546858,546948],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[547636,547658],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[547729,547730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547807,547818],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[547903,547904],"content":"<","needQuote":true,"nodes":[]},{"pos":[547931,547938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[548004,548005]},{"pos":[548060,548064],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[548122,548123],"content":"<","needQuote":true,"nodes":[]},{"pos":[548150,548157],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[548191,548192]},{"pos":[548224,548228],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[548291,548292]},{"pos":[548380,548397],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[548488,548489],"content":"<","needQuote":true,"nodes":[]},{"pos":[548516,548520],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[548582,548583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548780,548805],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[548879,548880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548957,548968],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[549054,549057]},{"pos":[549091,549098],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[549131,549132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[549160,549161]},{"pos":[549216,549220],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[549279,549282]},{"pos":[549316,549323],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[549357,549358]},{"pos":[549390,549394],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[549424,549425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[549453,549454]},{"pos":[549542,549559],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[549651,549654]},{"pos":[549688,549692],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[549722,549723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549750,549751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550339,550439],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[551088,551120],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[551201,551202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551279,551290],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[551375,551376],"content":"<","needQuote":true,"nodes":[]},{"pos":[551403,551410],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[551476,551477]},{"pos":[551532,551536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[551594,551595],"content":"<","needQuote":true,"nodes":[]},{"pos":[551622,551629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[551663,551664]},{"pos":[551696,551700],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[551763,551764]},{"pos":[551819,551823],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[551881,551882],"content":"<","needQuote":true,"nodes":[]},{"pos":[551909,551916],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[551950,551951]},{"pos":[551983,551991],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[552057,552058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552226,552261],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[552345,552346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552423,552434],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[552520,552523]},{"pos":[552557,552564],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[552597,552598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[552626,552627]},{"pos":[552682,552686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[552745,552748]},{"pos":[552782,552789],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[552823,552824]},{"pos":[552856,552860],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[552890,552891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[552919,552920]},{"pos":[552975,552979],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[553038,553041]},{"pos":[553075,553082],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[553116,553117]},{"pos":[553149,553157],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[553191,553192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553219,553220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553849,553974],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[554808,554840],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[554921,554922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554999,555010],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[555095,555096],"content":"<","needQuote":true,"nodes":[]},{"pos":[555123,555130],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[555196,555197]},{"pos":[555252,555256],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[555314,555315],"content":"<","needQuote":true,"nodes":[]},{"pos":[555342,555349],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[555383,555384]},{"pos":[555416,555420],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[555483,555484]},{"pos":[555539,555543],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[555601,555602],"content":"<","needQuote":true,"nodes":[]},{"pos":[555629,555636],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[555670,555671]},{"pos":[555703,555711],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[555778,555779]},{"pos":[555867,555884],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[555975,555976],"content":"<","needQuote":true,"nodes":[]},{"pos":[556003,556007],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[556069,556070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556288,556323],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[556407,556408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556485,556496],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[556582,556585]},{"pos":[556619,556626],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[556659,556660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[556688,556689]},{"pos":[556744,556748],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[556807,556810]},{"pos":[556844,556851],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[556885,556886]},{"pos":[556918,556922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[556952,556953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[556981,556982]},{"pos":[557037,557041],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[557100,557103]},{"pos":[557137,557144],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[557178,557179]},{"pos":[557211,557219],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[557253,557254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[557282,557283]},{"pos":[557371,557388],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[557480,557483]},{"pos":[557517,557521],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[557551,557552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557579,557580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558306,558423],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[559227,559258],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[559338,559339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559416,559427],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[559512,559513],"content":"<","needQuote":true,"nodes":[]},{"pos":[559540,559547],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[559613,559614]},{"pos":[559669,559673],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[559731,559732],"content":"<","needQuote":true,"nodes":[]},{"pos":[559759,559766],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[559800,559801]},{"pos":[559833,559837],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[559900,559901]},{"pos":[559956,559960],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[560018,560019],"content":"<","needQuote":true,"nodes":[]},{"pos":[560046,560050],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[560081,560082]},{"pos":[560164,560175],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[560260,560261],"content":"<","needQuote":true,"nodes":[]},{"pos":[560288,560295],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[560361,560362]},{"pos":[560394,560401],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[560466,560467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560679,560713],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[560796,560797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560874,560885],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[560971,560974]},{"pos":[561008,561015],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[561048,561049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[561077,561078]},{"pos":[561133,561137],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[561196,561199]},{"pos":[561233,561240],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[561274,561275]},{"pos":[561307,561311],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[561341,561342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[561370,561371]},{"pos":[561426,561430],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[561489,561492]},{"pos":[561526,561530],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[561561,561562]},{"pos":[561644,561655],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[561741,561744]},{"pos":[561778,561785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[561818,561819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[561847,561848]},{"pos":[561880,561887],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[561920,561921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561948,561949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562703,562845],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[563834,563865],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[563945,563946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564023,564034],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[564119,564120],"content":"<","needQuote":true,"nodes":[]},{"pos":[564147,564154],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564220,564221]},{"pos":[564276,564280],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[564338,564339],"content":"<","needQuote":true,"nodes":[]},{"pos":[564366,564373],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564407,564408]},{"pos":[564440,564444],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[564507,564508]},{"pos":[564563,564567],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[564625,564626],"content":"<","needQuote":true,"nodes":[]},{"pos":[564653,564657],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[564688,564689]},{"pos":[564771,564782],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[564867,564868],"content":"<","needQuote":true,"nodes":[]},{"pos":[564895,564902],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564968,564969]},{"pos":[565001,565008],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[565074,565075]},{"pos":[565163,565180],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[565271,565272],"content":"<","needQuote":true,"nodes":[]},{"pos":[565299,565303],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[565365,565366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565628,565662],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[565745,565746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565823,565834],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[565920,565923]},{"pos":[565957,565964],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[565997,565998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[566026,566027]},{"pos":[566082,566086],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[566145,566148]},{"pos":[566182,566189],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[566223,566224]},{"pos":[566256,566260],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[566290,566291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[566319,566320]},{"pos":[566375,566379],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[566438,566441]},{"pos":[566475,566479],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[566510,566511]},{"pos":[566593,566604],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[566690,566693]},{"pos":[566727,566734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[566767,566768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[566796,566797]},{"pos":[566829,566836],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[566869,566870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[566898,566899]},{"pos":[566987,567004],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[567096,567099]},{"pos":[567133,567137],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[567167,567168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567195,567196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568024,568177],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[569130,569171],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[569261,569262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569339,569350],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[569435,569436],"content":"<","needQuote":true,"nodes":[]},{"pos":[569463,569470],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569536,569537]},{"pos":[569592,569596],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[569654,569655],"content":"<","needQuote":true,"nodes":[]},{"pos":[569682,569689],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569723,569724]},{"pos":[569756,569760],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[569823,569824]},{"pos":[569879,569883],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[569941,569942],"content":"<","needQuote":true,"nodes":[]},{"pos":[569969,569976],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[570010,570011]},{"pos":[570043,570051],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[570118,570119]},{"pos":[570174,570178],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[570236,570237],"content":"<","needQuote":true,"nodes":[]},{"pos":[570264,570268],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[570299,570300]},{"pos":[570382,570393],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[570478,570479],"content":"<","needQuote":true,"nodes":[]},{"pos":[570506,570514],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[570581,570582]},{"pos":[570614,570621],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[570686,570687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570920,570964],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[571057,571058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571135,571146],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[571232,571235]},{"pos":[571269,571276],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[571309,571310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[571338,571339]},{"pos":[571394,571398],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[571457,571460]},{"pos":[571494,571501],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571535,571536]},{"pos":[571568,571572],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[571602,571603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[571631,571632]},{"pos":[571687,571691],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[571750,571753]},{"pos":[571787,571794],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571828,571829]},{"pos":[571861,571869],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[571903,571904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[571932,571933]},{"pos":[571988,571992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[572051,572054]},{"pos":[572088,572092],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[572123,572124]},{"pos":[572206,572217],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572303,572306]},{"pos":[572340,572348],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[572382,572383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[572411,572412]},{"pos":[572444,572451],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[572484,572485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572512,572513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573384,573562],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[574700,574741],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[574831,574832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574909,574920],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[575005,575006],"content":"<","needQuote":true,"nodes":[]},{"pos":[575033,575040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[575106,575107]},{"pos":[575162,575166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[575224,575225],"content":"<","needQuote":true,"nodes":[]},{"pos":[575252,575259],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[575293,575294]},{"pos":[575326,575330],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[575393,575394]},{"pos":[575449,575453],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[575511,575512],"content":"<","needQuote":true,"nodes":[]},{"pos":[575539,575546],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[575580,575581]},{"pos":[575613,575621],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[575688,575689]},{"pos":[575744,575748],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[575806,575807],"content":"<","needQuote":true,"nodes":[]},{"pos":[575834,575838],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[575869,575870]},{"pos":[575952,575963],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[576048,576049],"content":"<","needQuote":true,"nodes":[]},{"pos":[576076,576084],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[576151,576152]},{"pos":[576184,576191],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[576257,576258]},{"pos":[576346,576363],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[576454,576455],"content":"<","needQuote":true,"nodes":[]},{"pos":[576482,576486],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[576548,576549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576832,576876],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[576969,576970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577047,577058],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[577144,577147]},{"pos":[577181,577188],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[577221,577222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[577250,577251]},{"pos":[577306,577310],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[577369,577372]},{"pos":[577406,577413],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577447,577448]},{"pos":[577480,577484],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[577514,577515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[577543,577544]},{"pos":[577599,577603],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[577662,577665]},{"pos":[577699,577706],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577740,577741]},{"pos":[577773,577781],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[577815,577816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[577844,577845]},{"pos":[577900,577904],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[577963,577966]},{"pos":[578000,578004],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[578035,578036]},{"pos":[578118,578129],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[578215,578218]},{"pos":[578252,578260],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[578294,578295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[578323,578324]},{"pos":[578356,578363],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[578396,578397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[578425,578426]},{"pos":[578514,578531],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[578623,578626]},{"pos":[578660,578664],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[578694,578695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578722,578723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579693,579859],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[580957,580997],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[581086,581087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581164,581175],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[581260,581261],"content":"<","needQuote":true,"nodes":[]},{"pos":[581288,581294],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[581359,581360]},{"pos":[581442,581453],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[581538,581539],"content":"<","needQuote":true,"nodes":[]},{"pos":[581566,581572],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[581637,581638]},{"pos":[581693,581697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[581755,581756],"content":"<","needQuote":true,"nodes":[]},{"pos":[581783,581789],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[581822,581823]},{"pos":[581855,581859],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[581922,581923]},{"pos":[581978,581982],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[582040,582041],"content":"<","needQuote":true,"nodes":[]},{"pos":[582068,582074],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[582107,582108]},{"pos":[582140,582144],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[582207,582208]},{"pos":[582263,582267],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[582325,582326],"content":"<","needQuote":true,"nodes":[]},{"pos":[582353,582359],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[582392,582393]},{"pos":[582475,582486],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[582571,582572],"content":"<","needQuote":true,"nodes":[]},{"pos":[582599,582605],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[582670,582671]},{"pos":[582703,582710],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[582775,582776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583055,583098],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[583190,583191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583268,583279],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[583365,583368]},{"pos":[583402,583408],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[583440,583441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583469,583470]},{"pos":[583552,583563],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[583649,583652]},{"pos":[583686,583692],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[583724,583725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583753,583754]},{"pos":[583809,583813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[583872,583875]},{"pos":[583909,583915],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[583948,583949]},{"pos":[583981,583985],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[584015,584016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[584044,584045]},{"pos":[584100,584104],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[584163,584166]},{"pos":[584200,584206],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[584239,584240]},{"pos":[584272,584276],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[584306,584307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[584335,584336]},{"pos":[584391,584395],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[584454,584457]},{"pos":[584491,584497],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[584530,584531]},{"pos":[584613,584624],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[584710,584713]},{"pos":[584747,584753],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[584785,584786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[584814,584815]},{"pos":[584847,584854],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[584887,584888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584915,584916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585908,586099],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[587382,587422],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[587511,587512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587589,587600],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[587685,587686],"content":"<","needQuote":true,"nodes":[]},{"pos":[587713,587719],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[587784,587785]},{"pos":[587867,587878],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[587963,587964],"content":"<","needQuote":true,"nodes":[]},{"pos":[587991,587997],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[588062,588063]},{"pos":[588118,588122],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[588180,588181],"content":"<","needQuote":true,"nodes":[]},{"pos":[588208,588214],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[588247,588248]},{"pos":[588280,588284],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[588347,588348]},{"pos":[588403,588407],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[588465,588466],"content":"<","needQuote":true,"nodes":[]},{"pos":[588493,588499],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[588532,588533]},{"pos":[588565,588569],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[588632,588633]},{"pos":[588688,588692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[588750,588751],"content":"<","needQuote":true,"nodes":[]},{"pos":[588778,588784],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[588817,588818]},{"pos":[588900,588911],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[588996,588997],"content":"<","needQuote":true,"nodes":[]},{"pos":[589024,589030],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[589095,589096]},{"pos":[589128,589135],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[589201,589202]},{"pos":[589290,589307],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[589398,589399],"content":"<","needQuote":true,"nodes":[]},{"pos":[589426,589430],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[589492,589493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589822,589865],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[589957,589958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590035,590046],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[590132,590135]},{"pos":[590169,590175],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[590207,590208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[590236,590237]},{"pos":[590319,590330],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[590416,590419]},{"pos":[590453,590459],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[590491,590492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[590520,590521]},{"pos":[590576,590580],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[590639,590642]},{"pos":[590676,590682],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[590715,590716]},{"pos":[590748,590752],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[590782,590783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[590811,590812]},{"pos":[590867,590871],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[590930,590933]},{"pos":[590967,590973],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[591006,591007]},{"pos":[591039,591043],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[591073,591074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[591102,591103]},{"pos":[591158,591162],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[591221,591224]},{"pos":[591258,591264],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[591297,591298]},{"pos":[591380,591391],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[591477,591480]},{"pos":[591514,591520],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[591552,591553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[591581,591582]},{"pos":[591614,591621],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[591654,591655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[591683,591684]},{"pos":[591772,591789],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[591881,591884]},{"pos":[591918,591922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[591952,591953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591980,591981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592919,592981],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[593540,593558],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[593625,593626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593703,593714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[593799,593800],"content":"<","needQuote":true,"nodes":[]},{"pos":[593827,593834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[593900,593901]},{"pos":[593983,593994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[594079,594080],"content":"<","needQuote":true,"nodes":[]},{"pos":[594107,594114],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594179,594180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594352,594373],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[594443,594444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594521,594532],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[594618,594621]},{"pos":[594655,594662],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594695,594696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[594724,594725]},{"pos":[594807,594818],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[594904,594907]},{"pos":[594941,594948],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594981,594982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595009,595010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595568,595658],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[596411,596429],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[596496,596497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596574,596585],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596670,596671],"content":"<","needQuote":true,"nodes":[]},{"pos":[596698,596705],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596771,596772]},{"pos":[596854,596865],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596950,596951],"content":"<","needQuote":true,"nodes":[]},{"pos":[596978,596985],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597051,597052]},{"pos":[597140,597157],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[597248,597249],"content":"<","needQuote":true,"nodes":[]},{"pos":[597276,597283],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[597348,597349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597571,597592],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[597662,597663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597740,597751],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[597837,597840]},{"pos":[597874,597881],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[597914,597915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[597943,597944]},{"pos":[598026,598037],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[598123,598126]},{"pos":[598160,598167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[598200,598201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[598229,598230]},{"pos":[598318,598335],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[598427,598430]},{"pos":[598464,598471],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[598504,598505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598532,598533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599212,599360],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[600299,600334],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[600418,600419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[600496,600507],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[600592,600593],"content":"<","needQuote":true,"nodes":[]},{"pos":[600620,600626],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[600691,600692]},{"pos":[600774,600785],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[600870,600871],"content":"<","needQuote":true,"nodes":[]},{"pos":[600898,600904],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[600969,600970]},{"pos":[601025,601029],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[601087,601088],"content":"<","needQuote":true,"nodes":[]},{"pos":[601115,601121],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[601154,601155]},{"pos":[601187,601191],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[601254,601255]},{"pos":[601310,601314],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[601372,601373],"content":"<","needQuote":true,"nodes":[]},{"pos":[601400,601406],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[601439,601440]},{"pos":[601472,601476],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[601539,601540]},{"pos":[601595,601599],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[601657,601658],"content":"<","needQuote":true,"nodes":[]},{"pos":[601685,601691],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[601724,601725]},{"pos":[601757,601763],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[601796,601797]},{"pos":[601829,601836],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[601901,601902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602136,602174],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[602261,602262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602339,602350],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[602436,602439]},{"pos":[602473,602479],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[602511,602512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[602540,602541]},{"pos":[602623,602634],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[602720,602723]},{"pos":[602757,602763],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[602795,602796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[602824,602825]},{"pos":[602880,602884],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[602943,602946]},{"pos":[602980,602986],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[603019,603020]},{"pos":[603052,603056],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[603086,603087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[603115,603116]},{"pos":[603171,603175],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[603234,603237]},{"pos":[603271,603277],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[603310,603311]},{"pos":[603343,603347],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[603377,603378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[603406,603407]},{"pos":[603462,603466],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[603525,603528]},{"pos":[603562,603568],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[603601,603602]},{"pos":[603634,603640],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[603673,603674]},{"pos":[603706,603713],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[603746,603747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603774,603775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604638,604811],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[605935,605970],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[606054,606055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[606132,606143],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[606228,606229],"content":"<","needQuote":true,"nodes":[]},{"pos":[606256,606262],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[606327,606328]},{"pos":[606410,606421],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[606506,606507],"content":"<","needQuote":true,"nodes":[]},{"pos":[606534,606540],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[606605,606606]},{"pos":[606661,606665],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[606723,606724],"content":"<","needQuote":true,"nodes":[]},{"pos":[606751,606757],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[606790,606791]},{"pos":[606823,606827],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[606890,606891]},{"pos":[606946,606950],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[607008,607009],"content":"<","needQuote":true,"nodes":[]},{"pos":[607036,607042],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[607075,607076]},{"pos":[607108,607112],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[607175,607176]},{"pos":[607231,607235],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[607293,607294],"content":"<","needQuote":true,"nodes":[]},{"pos":[607321,607327],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[607360,607361]},{"pos":[607393,607399],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[607432,607433]},{"pos":[607465,607472],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[607538,607539]},{"pos":[607627,607644],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[607735,607736],"content":"<","needQuote":true,"nodes":[]},{"pos":[607763,607767],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[607829,607830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608114,608152],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[608239,608240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608317,608328],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[608414,608417]},{"pos":[608451,608457],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[608489,608490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[608518,608519]},{"pos":[608601,608612],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[608698,608701]},{"pos":[608735,608741],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[608773,608774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[608802,608803]},{"pos":[608858,608862],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[608921,608924]},{"pos":[608958,608964],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[608997,608998]},{"pos":[609030,609034],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[609064,609065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[609093,609094]},{"pos":[609149,609153],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[609212,609215]},{"pos":[609249,609255],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[609288,609289]},{"pos":[609321,609325],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[609355,609356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[609384,609385]},{"pos":[609440,609444],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[609503,609506]},{"pos":[609540,609546],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[609579,609580]},{"pos":[609612,609618],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[609651,609652]},{"pos":[609684,609691],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[609724,609725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[609753,609754]},{"pos":[609842,609859],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[609951,609954]},{"pos":[609988,609992],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[610022,610023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610050,610051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610856,610891],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[611260,611273],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[611335,611336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611413,611424],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[611509,611510],"content":"<","needQuote":true,"nodes":[]},{"pos":[611537,611544],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[611609,611610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611733,611749],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[611814,611815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611892,611903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[611989,611992]},{"pos":[612026,612033],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[612066,612067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612094,612095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612480,612539],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[613046,613059],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[613121,613122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613199,613210],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[613295,613296],"content":"<","needQuote":true,"nodes":[]},{"pos":[613323,613330],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[613396,613397]},{"pos":[613452,613456],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[613514,613515],"content":"<","needQuote":true,"nodes":[]},{"pos":[613542,613549],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[613583,613584]},{"pos":[613640,613647],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[613740,613741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613896,613912],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[613977,613978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614055,614066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[614152,614155]},{"pos":[614189,614196],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[614229,614230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[614258,614259]},{"pos":[614314,614318],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[614377,614380]},{"pos":[614414,614421],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[614455,614456]},{"pos":[614512,614519],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[614580,614581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614608,614609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615054,615098],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[615503,615525],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[615596,615597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615674,615685],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615770,615771],"content":"<","needQuote":true,"nodes":[]},{"pos":[615798,615805],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[615870,615871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616003,616028],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[616102,616103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616180,616191],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616277,616280]},{"pos":[616314,616321],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[616354,616355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616382,616383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616804,616872],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[617415,617437],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[617508,617509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617586,617597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[617682,617683],"content":"<","needQuote":true,"nodes":[]},{"pos":[617710,617717],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[617783,617784]},{"pos":[617839,617843],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[617901,617902],"content":"<","needQuote":true,"nodes":[]},{"pos":[617929,617936],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[617970,617971]},{"pos":[618027,618034],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[618127,618128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618292,618317],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[618391,618392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618469,618480],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[618566,618569]},{"pos":[618603,618610],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[618643,618644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618672,618673]},{"pos":[618728,618732],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[618791,618794]},{"pos":[618828,618835],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[618869,618870]},{"pos":[618926,618933],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[618994,618995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619022,619023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619491,619531],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[619920,619938],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[620005,620006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620083,620094],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620179,620180],"content":"<","needQuote":true,"nodes":[]},{"pos":[620207,620214],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[620279,620280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620408,620429],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[620499,620500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620577,620588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[620674,620677]},{"pos":[620711,620718],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[620751,620752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620779,620780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621185,621249],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[621776,621794],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[621861,621862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621939,621950],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[622035,622036],"content":"<","needQuote":true,"nodes":[]},{"pos":[622063,622070],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[622136,622137]},{"pos":[622192,622196],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[622254,622255],"content":"<","needQuote":true,"nodes":[]},{"pos":[622282,622289],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[622323,622324]},{"pos":[622380,622387],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[622480,622481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622641,622662],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[622732,622733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622810,622821],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[622907,622910]},{"pos":[622944,622951],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[622984,622985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[623013,623014]},{"pos":[623069,623073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[623132,623135]},{"pos":[623169,623176],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623210,623211]},{"pos":[623267,623274],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[623335,623336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623363,623364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623814,623848],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[624213,624225],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[624286,624287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624364,624375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[624460,624461],"content":"<","needQuote":true,"nodes":[]},{"pos":[624488,624495],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624560,624561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624683,624698],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[624762,624763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624840,624851],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624937,624940]},{"pos":[624974,624981],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[625014,625015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625042,625043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625424,625482],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[625985,625997],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[626058,626059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626136,626147],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[626232,626233],"content":"<","needQuote":true,"nodes":[]},{"pos":[626260,626267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[626333,626334]},{"pos":[626389,626393],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[626451,626452],"content":"<","needQuote":true,"nodes":[]},{"pos":[626479,626486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[626520,626521]},{"pos":[626577,626584],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[626677,626678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626832,626847],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[626911,626912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626989,627000],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[627086,627089]},{"pos":[627123,627130],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[627163,627164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[627192,627193]},{"pos":[627248,627252],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[627311,627314]},{"pos":[627348,627355],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[627389,627390]},{"pos":[627446,627453],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[627514,627515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627542,627543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628006,628063],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[628562,628574],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[628635,628636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628713,628724],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[628809,628810],"content":"<","needQuote":true,"nodes":[]},{"pos":[628837,628844],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[628910,628911]},{"pos":[628966,628970],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[629028,629029],"content":"<","needQuote":true,"nodes":[]},{"pos":[629056,629063],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[629097,629098]},{"pos":[629153,629159],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[629251,629252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629405,629420],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[629484,629485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629562,629573],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[629659,629662]},{"pos":[629696,629703],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[629736,629737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629765,629766]},{"pos":[629821,629825],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629884,629887]},{"pos":[629921,629928],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[629962,629963]},{"pos":[630018,630024],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[630084,630085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630112,630113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630572,630628],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[631123,631135],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[631196,631197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631274,631285],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[631370,631371],"content":"<","needQuote":true,"nodes":[]},{"pos":[631398,631405],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[631471,631472]},{"pos":[631527,631531],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[631589,631590],"content":"<","needQuote":true,"nodes":[]},{"pos":[631617,631624],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[631658,631659]},{"pos":[631713,631718],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[631809,631810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631962,631977],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[632041,632042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632119,632130],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632216,632219]},{"pos":[632253,632260],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632293,632294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[632322,632323]},{"pos":[632378,632382],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[632441,632444]},{"pos":[632478,632485],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[632519,632520]},{"pos":[632574,632579],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[632638,632639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632666,632667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633123,633179],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[633674,633686],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[633747,633748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633825,633836],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[633921,633922],"content":"<","needQuote":true,"nodes":[]},{"pos":[633949,633956],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634022,634023]},{"pos":[634078,634082],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[634140,634141],"content":"<","needQuote":true,"nodes":[]},{"pos":[634168,634175],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634209,634210]},{"pos":[634264,634269],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[634360,634361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634513,634528],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[634592,634593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634670,634681],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[634767,634770]},{"pos":[634804,634811],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[634844,634845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[634873,634874]},{"pos":[634929,634933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[634992,634995]},{"pos":[635029,635036],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[635070,635071]},{"pos":[635125,635130],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[635189,635190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635217,635218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635693,635761],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[636331,636343],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[636404,636405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636482,636493],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[636578,636579],"content":"<","needQuote":true,"nodes":[]},{"pos":[636606,636613],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[636679,636680]},{"pos":[636735,636739],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[636797,636798],"content":"<","needQuote":true,"nodes":[]},{"pos":[636825,636832],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[636866,636867]},{"pos":[636926,636934],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[636996,636997],"content":"<","needQuote":true,"nodes":[]},{"pos":[637048,637055],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[637180,637181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637352,637367],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[637431,637432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637509,637520],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[637606,637609]},{"pos":[637643,637650],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[637683,637684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[637712,637713]},{"pos":[637768,637772],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[637831,637834]},{"pos":[637868,637875],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[637909,637910]},{"pos":[637969,637977],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[638040,638043]},{"pos":[638101,638108],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[638169,638170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638197,638198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638225,638226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638746,638813],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[639379,639391],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[639452,639453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639530,639541],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[639626,639627],"content":"<","needQuote":true,"nodes":[]},{"pos":[639654,639661],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639727,639728]},{"pos":[639783,639787],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[639845,639846],"content":"<","needQuote":true,"nodes":[]},{"pos":[639873,639880],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639914,639915]},{"pos":[639974,639982],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[640044,640045],"content":"<","needQuote":true,"nodes":[]},{"pos":[640095,640101],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[640225,640226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640396,640411],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[640475,640476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640553,640564],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[640650,640653]},{"pos":[640687,640694],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[640727,640728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[640756,640757]},{"pos":[640812,640816],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[640875,640878]},{"pos":[640912,640919],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640953,640954]},{"pos":[641013,641021],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[641084,641087]},{"pos":[641144,641150],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[641210,641211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641238,641239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641266,641267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641783,641849],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[642411,642423],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[642484,642485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642562,642573],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[642658,642659],"content":"<","needQuote":true,"nodes":[]},{"pos":[642686,642693],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[642759,642760]},{"pos":[642815,642819],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[642877,642878],"content":"<","needQuote":true,"nodes":[]},{"pos":[642905,642912],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[642946,642947]},{"pos":[643006,643014],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[643076,643077],"content":"<","needQuote":true,"nodes":[]},{"pos":[643126,643131],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[643254,643255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643424,643439],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[643503,643504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643581,643592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[643678,643681]},{"pos":[643715,643722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[643755,643756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[643784,643785]},{"pos":[643840,643844],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[643903,643906]},{"pos":[643940,643947],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[643981,643982]},{"pos":[644041,644049],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[644112,644115]},{"pos":[644171,644176],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[644235,644236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644263,644264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644291,644292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644805,644871],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[645433,645445],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[645506,645507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645584,645595],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[645680,645681],"content":"<","needQuote":true,"nodes":[]},{"pos":[645708,645715],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645781,645782]},{"pos":[645837,645841],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[645899,645900],"content":"<","needQuote":true,"nodes":[]},{"pos":[645927,645934],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645968,645969]},{"pos":[646028,646036],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[646098,646099],"content":"<","needQuote":true,"nodes":[]},{"pos":[646148,646153],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[646276,646277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646446,646461],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[646525,646526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646603,646614],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[646700,646703]},{"pos":[646737,646744],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[646777,646778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[646806,646807]},{"pos":[646862,646866],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[646925,646928]},{"pos":[646962,646969],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[647003,647004]},{"pos":[647063,647071],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[647134,647137]},{"pos":[647193,647198],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[647257,647258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647285,647286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647313,647314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647828,647895],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[648461,648473],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[648534,648535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648612,648623],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[648708,648709],"content":"<","needQuote":true,"nodes":[]},{"pos":[648736,648743],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648809,648810]},{"pos":[648865,648869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[648927,648928],"content":"<","needQuote":true,"nodes":[]},{"pos":[648955,648962],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648996,648997]},{"pos":[649056,649064],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[649126,649127],"content":"<","needQuote":true,"nodes":[]},{"pos":[649177,649183],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[649307,649308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649478,649493],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[649557,649558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649635,649646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649732,649735]},{"pos":[649769,649776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649809,649810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[649838,649839]},{"pos":[649894,649898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[649957,649960]},{"pos":[649994,650001],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[650035,650036]},{"pos":[650095,650103],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[650166,650169]},{"pos":[650226,650232],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[650292,650293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650320,650321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650348,650349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650849,650906],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[651405,651417],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[651478,651479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651556,651567],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[651652,651653],"content":"<","needQuote":true,"nodes":[]},{"pos":[651680,651687],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651753,651754]},{"pos":[651809,651813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[651871,651872],"content":"<","needQuote":true,"nodes":[]},{"pos":[651899,651906],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651940,651941]},{"pos":[651996,652002],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[652094,652095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652248,652263],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[652327,652328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652405,652416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[652502,652505]},{"pos":[652539,652546],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[652579,652580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[652608,652609]},{"pos":[652664,652668],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[652727,652730]},{"pos":[652764,652771],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[652805,652806]},{"pos":[652861,652867],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[652927,652928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652955,652956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653406,653473],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[653978,653999],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[654069,654070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654147,654158],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[654243,654244],"content":"<","needQuote":true,"nodes":[]},{"pos":[654271,654278],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[654344,654345]},{"pos":[654400,654404],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[654462,654463],"content":"<","needQuote":true,"nodes":[]},{"pos":[654490,654497],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[654531,654532]},{"pos":[654564,654571],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[654636,654637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654780,654804],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[654877,654878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654955,654966],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[655052,655055]},{"pos":[655089,655096],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[655129,655130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[655158,655159]},{"pos":[655214,655218],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[655277,655280]},{"pos":[655314,655321],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655355,655356]},{"pos":[655388,655395],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[655428,655429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655456,655457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655896,655930],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[656295,656307],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[656368,656369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656446,656457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[656542,656543],"content":"<","needQuote":true,"nodes":[]},{"pos":[656570,656577],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[656642,656643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656765,656780],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[656844,656845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656922,656933],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[657019,657022]},{"pos":[657056,657063],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[657096,657097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657124,657125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657506,657564],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[658067,658079],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[658140,658141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658218,658229],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[658314,658315],"content":"<","needQuote":true,"nodes":[]},{"pos":[658342,658349],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658415,658416]},{"pos":[658471,658475],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[658533,658534],"content":"<","needQuote":true,"nodes":[]},{"pos":[658561,658568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658602,658603]},{"pos":[658659,658666],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[658759,658760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658914,658929],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[658993,658994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659071,659082],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[659168,659171]},{"pos":[659205,659212],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[659245,659246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[659274,659275]},{"pos":[659330,659334],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[659393,659396]},{"pos":[659430,659437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[659471,659472]},{"pos":[659528,659535],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[659596,659597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659624,659625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660088,660145],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[660644,660656],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[660717,660718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660795,660806],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[660891,660892],"content":"<","needQuote":true,"nodes":[]},{"pos":[660919,660926],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660992,660993]},{"pos":[661048,661052],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[661110,661111],"content":"<","needQuote":true,"nodes":[]},{"pos":[661138,661145],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661179,661180]},{"pos":[661235,661241],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[661333,661334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661487,661502],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[661566,661567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[661644,661655],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[661741,661744]},{"pos":[661778,661785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[661818,661819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[661847,661848]},{"pos":[661903,661907],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[661966,661969]},{"pos":[662003,662010],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[662044,662045]},{"pos":[662100,662106],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[662166,662167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662194,662195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662654,662710],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[663205,663217],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[663278,663279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[663356,663367],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[663452,663453],"content":"<","needQuote":true,"nodes":[]},{"pos":[663480,663487],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663553,663554]},{"pos":[663609,663613],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[663671,663672],"content":"<","needQuote":true,"nodes":[]},{"pos":[663699,663706],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663740,663741]},{"pos":[663795,663800],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[663891,663892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664044,664059],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[664123,664124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[664201,664212],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[664298,664301]},{"pos":[664335,664342],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664375,664376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[664404,664405]},{"pos":[664460,664464],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[664523,664526]},{"pos":[664560,664567],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[664601,664602]},{"pos":[664656,664661],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[664720,664721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664748,664749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665205,665261],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[665756,665768],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[665829,665830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665907,665918],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[666003,666004],"content":"<","needQuote":true,"nodes":[]},{"pos":[666031,666038],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666104,666105]},{"pos":[666160,666164],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[666222,666223],"content":"<","needQuote":true,"nodes":[]},{"pos":[666250,666257],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666291,666292]},{"pos":[666346,666351],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[666442,666443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666595,666610],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[666674,666675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[666752,666763],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[666849,666852]},{"pos":[666886,666893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[666926,666927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[666955,666956]},{"pos":[667011,667015],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[667074,667077]},{"pos":[667111,667118],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667152,667153]},{"pos":[667207,667212],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[667271,667272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667299,667300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667775,667843],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[668413,668425],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[668486,668487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[668564,668575],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[668660,668661],"content":"<","needQuote":true,"nodes":[]},{"pos":[668688,668695],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668761,668762]},{"pos":[668817,668821],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[668879,668880],"content":"<","needQuote":true,"nodes":[]},{"pos":[668907,668914],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668948,668949]},{"pos":[669008,669016],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[669078,669079],"content":"<","needQuote":true,"nodes":[]},{"pos":[669130,669137],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[669262,669263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669434,669449],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[669513,669514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[669591,669602],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[669688,669691]},{"pos":[669725,669732],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[669765,669766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[669794,669795]},{"pos":[669850,669854],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[669913,669916]},{"pos":[669950,669957],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669991,669992]},{"pos":[670051,670059],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[670122,670125]},{"pos":[670183,670190],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[670251,670252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670279,670280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670307,670308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670828,670895],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[671461,671473],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[671534,671535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[671612,671623],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[671708,671709],"content":"<","needQuote":true,"nodes":[]},{"pos":[671736,671743],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[671809,671810]},{"pos":[671865,671869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[671927,671928],"content":"<","needQuote":true,"nodes":[]},{"pos":[671955,671962],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[671996,671997]},{"pos":[672056,672064],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[672126,672127],"content":"<","needQuote":true,"nodes":[]},{"pos":[672177,672183],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[672307,672308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672478,672493],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[672557,672558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[672635,672646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[672732,672735]},{"pos":[672769,672776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[672809,672810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[672838,672839]},{"pos":[672894,672898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[672957,672960]},{"pos":[672994,673001],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[673035,673036]},{"pos":[673095,673103],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[673166,673169]},{"pos":[673226,673232],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[673292,673293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673320,673321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673348,673349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673865,673931],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[674493,674505],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[674566,674567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[674644,674655],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[674740,674741],"content":"<","needQuote":true,"nodes":[]},{"pos":[674768,674775],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674841,674842]},{"pos":[674897,674901],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[674959,674960],"content":"<","needQuote":true,"nodes":[]},{"pos":[674987,674994],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675028,675029]},{"pos":[675088,675096],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[675158,675159],"content":"<","needQuote":true,"nodes":[]},{"pos":[675208,675213],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[675336,675337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675506,675521],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[675585,675586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[675663,675674],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[675760,675763]},{"pos":[675797,675804],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[675837,675838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[675866,675867]},{"pos":[675922,675926],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[675985,675988]},{"pos":[676022,676029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676063,676064]},{"pos":[676123,676131],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[676194,676197]},{"pos":[676253,676258],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[676317,676318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676345,676346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676373,676374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676887,676953],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[677515,677527],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[677588,677589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[677666,677677],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[677762,677763],"content":"<","needQuote":true,"nodes":[]},{"pos":[677790,677797],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[677863,677864]},{"pos":[677919,677923],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[677981,677982],"content":"<","needQuote":true,"nodes":[]},{"pos":[678009,678016],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678050,678051]},{"pos":[678110,678118],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[678180,678181],"content":"<","needQuote":true,"nodes":[]},{"pos":[678230,678235],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[678358,678359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678528,678543],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[678607,678608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678685,678696],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[678782,678785]},{"pos":[678819,678826],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[678859,678860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[678888,678889]},{"pos":[678944,678948],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[679007,679010]},{"pos":[679044,679051],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[679085,679086]},{"pos":[679145,679153],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[679216,679219]},{"pos":[679275,679280],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[679339,679340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679367,679368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679395,679396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679910,679977],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[680543,680555],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[680616,680617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680694,680705],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[680790,680791],"content":"<","needQuote":true,"nodes":[]},{"pos":[680818,680825],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680891,680892]},{"pos":[680947,680951],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[681009,681010],"content":"<","needQuote":true,"nodes":[]},{"pos":[681037,681044],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[681078,681079]},{"pos":[681138,681146],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[681208,681209],"content":"<","needQuote":true,"nodes":[]},{"pos":[681259,681265],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[681389,681390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681560,681575],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[681639,681640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[681717,681728],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[681814,681817]},{"pos":[681851,681858],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[681891,681892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[681920,681921]},{"pos":[681976,681980],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[682039,682042]},{"pos":[682076,682083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[682117,682118]},{"pos":[682177,682185],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[682248,682251]},{"pos":[682308,682314],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[682374,682375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682402,682403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682430,682431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682931,682988],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[683487,683499],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[683560,683561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[683638,683649],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[683734,683735],"content":"<","needQuote":true,"nodes":[]},{"pos":[683762,683769],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[683835,683836]},{"pos":[683891,683895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[683953,683954],"content":"<","needQuote":true,"nodes":[]},{"pos":[683981,683988],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684022,684023]},{"pos":[684078,684084],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[684176,684177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[684330,684345],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[684409,684410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[684487,684498],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[684584,684587]},{"pos":[684621,684628],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[684661,684662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[684690,684691]},{"pos":[684746,684750],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[684809,684812]},{"pos":[684846,684853],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684887,684888]},{"pos":[684943,684949],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[685009,685010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685037,685038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685488,685555],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[686060,686081],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[686151,686152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[686229,686240],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[686325,686326],"content":"<","needQuote":true,"nodes":[]},{"pos":[686353,686360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[686426,686427]},{"pos":[686482,686486],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[686544,686545],"content":"<","needQuote":true,"nodes":[]},{"pos":[686572,686579],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[686613,686614]},{"pos":[686646,686653],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[686718,686719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686862,686886],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[686959,686960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687037,687048],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[687134,687137]},{"pos":[687171,687178],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[687211,687212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[687240,687241]},{"pos":[687296,687300],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[687359,687362]},{"pos":[687396,687403],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687437,687438]},{"pos":[687470,687477],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[687510,687511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687538,687539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687968,687996],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[688311,688326],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[688390,688391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688458,688469],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[688546,688547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688659,688677],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[688744,688745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688812,688823],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[688900,688901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[689250,689315],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[689818,689840],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[689911,689912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[689989,690000],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[690085,690086],"content":"<","needQuote":true,"nodes":[]},{"pos":[690113,690120],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690186,690187]},{"pos":[690242,690246],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[690304,690305],"content":"<","needQuote":true,"nodes":[]},{"pos":[690332,690339],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690373,690374]},{"pos":[690406,690410],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[690472,690473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690620,690645],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[690719,690720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690797,690808],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[690894,690897]},{"pos":[690931,690938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690971,690972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[691000,691001]},{"pos":[691056,691060],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[691119,691122]},{"pos":[691156,691163],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[691197,691198]},{"pos":[691230,691234],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[691264,691265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691292,691293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691799,691881],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[692537,692559],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[692630,692631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692708,692719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[692804,692805],"content":"<","needQuote":true,"nodes":[]},{"pos":[692832,692839],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692905,692906]},{"pos":[692961,692965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[693023,693024],"content":"<","needQuote":true,"nodes":[]},{"pos":[693051,693058],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693092,693093]},{"pos":[693125,693129],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[693192,693193]},{"pos":[693273,693282],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[693365,693366],"content":"<","needQuote":true,"nodes":[]},{"pos":[693393,693397],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[693459,693460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693649,693674],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[693748,693749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[693826,693837],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[693923,693926]},{"pos":[693960,693967],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[694000,694001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[694029,694030]},{"pos":[694085,694089],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[694148,694151]},{"pos":[694185,694192],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694226,694227]},{"pos":[694259,694263],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[694293,694294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[694322,694323]},{"pos":[694403,694412],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[694496,694499]},{"pos":[694533,694537],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[694567,694568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694595,694596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695149,695224],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[695767,695799],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[695880,695881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[695958,695969],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[696054,696055],"content":"<","needQuote":true,"nodes":[]},{"pos":[696082,696089],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696155,696156]},{"pos":[696211,696215],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[696273,696274],"content":"<","needQuote":true,"nodes":[]},{"pos":[696301,696308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696342,696343]},{"pos":[696375,696379],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[696441,696442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696599,696634],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[696718,696719],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[696796,696807],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[696893,696896]},{"pos":[696930,696937],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[696970,696971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[696999,697000]},{"pos":[697055,697059],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[697118,697121]},{"pos":[697155,697162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697196,697197]},{"pos":[697229,697233],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[697263,697264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697291,697292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697838,697930],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[698626,698658],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[698739,698740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[698817,698828],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[698913,698914],"content":"<","needQuote":true,"nodes":[]},{"pos":[698941,698948],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699014,699015]},{"pos":[699070,699074],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[699132,699133],"content":"<","needQuote":true,"nodes":[]},{"pos":[699160,699167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699201,699202]},{"pos":[699234,699238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[699301,699302]},{"pos":[699382,699391],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[699474,699475],"content":"<","needQuote":true,"nodes":[]},{"pos":[699502,699506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[699568,699569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699768,699803],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[699887,699888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699965,699976],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[700062,700065]},{"pos":[700099,700106],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[700139,700140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[700168,700169]},{"pos":[700224,700228],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[700287,700290]},{"pos":[700324,700331],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[700365,700366]},{"pos":[700398,700402],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[700432,700433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[700461,700462]},{"pos":[700542,700551],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[700635,700638]},{"pos":[700672,700676],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[700706,700707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700734,700735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[701287,701325],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[701706,701722],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[701787,701788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[701865,701876],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[701961,701962],"content":"<","needQuote":true,"nodes":[]},{"pos":[701989,701996],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[702061,702062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702188,702207],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[702275,702276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[702353,702364],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[702450,702453]},{"pos":[702487,702494],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[702527,702528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702555,702556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702941,703011],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[703528,703552],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[703625,703626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[703703,703714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[703799,703800],"content":"<","needQuote":true,"nodes":[]},{"pos":[703827,703834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[703900,703901]},{"pos":[703956,703960],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[704018,704019],"content":"<","needQuote":true,"nodes":[]},{"pos":[704046,704053],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704087,704088]},{"pos":[704120,704127],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[704192,704193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704339,704366],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[704442,704443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[704520,704531],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[704617,704620]},{"pos":[704654,704661],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[704694,704695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[704723,704724]},{"pos":[704779,704783],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[704842,704845]},{"pos":[704879,704886],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704920,704921]},{"pos":[704953,704960],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[704993,704994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705021,705022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705507,705584],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[706149,706173],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[706246,706247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[706324,706335],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[706420,706421],"content":"<","needQuote":true,"nodes":[]},{"pos":[706448,706455],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706521,706522]},{"pos":[706577,706581],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[706639,706640],"content":"<","needQuote":true,"nodes":[]},{"pos":[706667,706674],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706708,706709]},{"pos":[706763,706768],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[706828,706829]},{"pos":[706861,706868],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[706933,706934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[707093,707120],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[707196,707197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[707274,707285],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[707371,707374]},{"pos":[707408,707415],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[707448,707449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[707477,707478]},{"pos":[707533,707537],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[707596,707599]},{"pos":[707633,707640],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707674,707675]},{"pos":[707729,707734],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[707794,707795]},{"pos":[707827,707834],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[707867,707868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[707895,707896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708439,708526],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[709198,709226],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[709303,709304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[709381,709392],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[709477,709478],"content":"<","needQuote":true,"nodes":[]},{"pos":[709505,709512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[709578,709579]},{"pos":[709634,709638],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[709696,709697],"content":"<","needQuote":true,"nodes":[]},{"pos":[709724,709731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[709765,709766]},{"pos":[709848,709859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[709944,709945],"content":"<","needQuote":true,"nodes":[]},{"pos":[709972,709979],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[710076,710077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[710267,710298],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[710378,710379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710456,710467],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[710553,710556]},{"pos":[710590,710597],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[710630,710631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[710659,710660]},{"pos":[710715,710719],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[710778,710781]},{"pos":[710815,710822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710856,710857]},{"pos":[710939,710950],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[711036,711039]},{"pos":[711073,711080],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[711113,711114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711141,711142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711169,711170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711780,711874],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[712594,712622],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[712699,712700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[712777,712788],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[712873,712874],"content":"<","needQuote":true,"nodes":[]},{"pos":[712901,712908],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[712974,712975]},{"pos":[713030,713034],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[713092,713093],"content":"<","needQuote":true,"nodes":[]},{"pos":[713120,713127],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713161,713162]},{"pos":[713216,713221],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[713281,713282]},{"pos":[713364,713375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[713460,713461],"content":"<","needQuote":true,"nodes":[]},{"pos":[713488,713495],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[713592,713593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[713796,713827],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[713907,713908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[713985,713996],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[714082,714085]},{"pos":[714119,714126],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[714159,714160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[714188,714189]},{"pos":[714244,714248],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[714307,714310]},{"pos":[714344,714351],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714385,714386]},{"pos":[714440,714445],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[714505,714506]},{"pos":[714588,714599],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[714685,714688]},{"pos":[714722,714729],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[714762,714763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714790,714791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714818,714819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715468,715609],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[716488,716529],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[716619,716620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[716697,716708],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[716793,716794],"content":"<","needQuote":true,"nodes":[]},{"pos":[716821,716828],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[716894,716895]},{"pos":[716950,716954],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717012,717013],"content":"<","needQuote":true,"nodes":[]},{"pos":[717040,717047],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717081,717082]},{"pos":[717164,717175],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[717260,717261],"content":"<","needQuote":true,"nodes":[]},{"pos":[717288,717299],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[717401,717402]},{"pos":[717457,717461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717519,717520],"content":"<","needQuote":true,"nodes":[]},{"pos":[717547,717554],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717588,717589]},{"pos":[717621,717632],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[717670,717671]},{"pos":[717703,717710],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[717775,717776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717991,718035],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[718128,718129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[718206,718217],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[718303,718306]},{"pos":[718340,718347],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[718380,718381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[718409,718410]},{"pos":[718465,718469],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[718528,718531]},{"pos":[718565,718572],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[718606,718607]},{"pos":[718689,718700],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[718786,718789]},{"pos":[718823,718834],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[718871,718872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718899,718900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[718928,718929]},{"pos":[718984,718988],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719047,719050]},{"pos":[719084,719091],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719125,719126]},{"pos":[719158,719169],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[719207,719208]},{"pos":[719240,719247],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[719280,719281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[719308,719309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720080,720228],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[721155,721196],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[721286,721287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[721364,721375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[721460,721461],"content":"<","needQuote":true,"nodes":[]},{"pos":[721488,721495],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[721561,721562]},{"pos":[721617,721621],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[721679,721680],"content":"<","needQuote":true,"nodes":[]},{"pos":[721707,721714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[721748,721749]},{"pos":[721803,721808],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[721868,721869]},{"pos":[721951,721962],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[722047,722048],"content":"<","needQuote":true,"nodes":[]},{"pos":[722075,722086],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[722188,722189]},{"pos":[722244,722248],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[722306,722307],"content":"<","needQuote":true,"nodes":[]},{"pos":[722334,722341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[722375,722376]},{"pos":[722408,722419],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[722457,722458]},{"pos":[722490,722497],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[722562,722563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[722791,722835],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[722928,722929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723006,723017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[723103,723106]},{"pos":[723140,723147],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[723180,723181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[723209,723210]},{"pos":[723265,723269],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[723328,723331]},{"pos":[723365,723372],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723406,723407]},{"pos":[723461,723466],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[723526,723527]},{"pos":[723609,723620],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[723706,723709]},{"pos":[723743,723754],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[723791,723792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[723819,723820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[723848,723849]},{"pos":[723904,723908],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[723967,723970]},{"pos":[724004,724011],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[724045,724046]},{"pos":[724078,724089],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[724127,724128]},{"pos":[724160,724167],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[724200,724201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724228,724229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724975,725041],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[725616,725638],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[725709,725710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[725787,725798],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[725883,725884],"content":"<","needQuote":true,"nodes":[]},{"pos":[725911,725918],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[725984,725985]},{"pos":[726067,726078],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[726163,726164],"content":"<","needQuote":true,"nodes":[]},{"pos":[726191,726198],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[726263,726264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726440,726465],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[726539,726540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[726617,726628],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[726714,726717]},{"pos":[726751,726758],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[726791,726792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726820,726821]},{"pos":[726903,726914],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[727000,727003]},{"pos":[727037,727044],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[727077,727078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727105,727106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727680,727774],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[728543,728565],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[728636,728637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[728714,728725],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[728810,728811],"content":"<","needQuote":true,"nodes":[]},{"pos":[728838,728845],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[728911,728912]},{"pos":[728994,729005],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729090,729091],"content":"<","needQuote":true,"nodes":[]},{"pos":[729118,729125],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[729191,729192]},{"pos":[729280,729297],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[729388,729389],"content":"<","needQuote":true,"nodes":[]},{"pos":[729416,729423],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[729488,729489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[729715,729740],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[729814,729815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[729892,729903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[729989,729992]},{"pos":[730026,730033],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[730066,730067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[730095,730096]},{"pos":[730178,730189],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[730275,730278]},{"pos":[730312,730319],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[730352,730353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[730381,730382]},{"pos":[730470,730487],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[730579,730582]},{"pos":[730616,730623],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[730656,730657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[730684,730685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731267,731304],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[731681,731696],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[731760,731761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[731838,731849],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[731934,731935],"content":"<","needQuote":true,"nodes":[]},{"pos":[731962,731969],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[732034,732035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[732160,732178],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[732245,732246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[732323,732334],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[732420,732423]},{"pos":[732457,732464],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[732497,732498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[732525,732526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[732919,732980],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[733495,733510],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[733574,733575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[733652,733663],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[733748,733749],"content":"<","needQuote":true,"nodes":[]},{"pos":[733776,733783],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733849,733850]},{"pos":[733905,733909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[733967,733968],"content":"<","needQuote":true,"nodes":[]},{"pos":[733995,734002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[734036,734037]},{"pos":[734093,734100],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[734193,734194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734351,734369],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[734436,734437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[734514,734525],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[734611,734614]},{"pos":[734648,734655],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[734688,734689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[734717,734718]},{"pos":[734773,734777],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[734836,734839]},{"pos":[734873,734880],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[734914,734915]},{"pos":[734971,734978],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[735039,735040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[735067,735068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[735521,735567],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[735980,736004],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[736077,736078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[736155,736166],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[736251,736252],"content":"<","needQuote":true,"nodes":[]},{"pos":[736279,736286],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[736351,736352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736486,736513],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[736589,736590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[736667,736678],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[736764,736767]},{"pos":[736801,736808],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[736841,736842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736869,736870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737299,737369],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[737920,737944],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[738017,738018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[738095,738106],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[738191,738192],"content":"<","needQuote":true,"nodes":[]},{"pos":[738219,738226],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[738292,738293]},{"pos":[738348,738352],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[738410,738411],"content":"<","needQuote":true,"nodes":[]},{"pos":[738438,738445],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[738479,738480]},{"pos":[738536,738543],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[738636,738637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738803,738830],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[738906,738907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[738984,738995],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[739081,739084]},{"pos":[739118,739125],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[739158,739159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[739187,739188]},{"pos":[739243,739247],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[739306,739309]},{"pos":[739343,739350],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[739384,739385]},{"pos":[739441,739448],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[739509,739510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[739537,739538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[740020,740062],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[740479,740492],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[740554,740555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[740632,740643],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[740728,740729],"content":"<","needQuote":true,"nodes":[]},{"pos":[740756,740763],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740829,740830]},{"pos":[740884,740889],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[740948,740949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741085,741101],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[741166,741167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[741244,741255],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741341,741344]},{"pos":[741378,741385],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[741418,741419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[741447,741448]},{"pos":[741502,741507],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[741566,741567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741984,742048],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[742575,742593],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[742660,742661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[742738,742749],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[742834,742835],"content":"<","needQuote":true,"nodes":[]},{"pos":[742862,742869],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[742935,742936]},{"pos":[742991,742995],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743053,743054],"content":"<","needQuote":true,"nodes":[]},{"pos":[743081,743088],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743122,743123]},{"pos":[743179,743186],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[743279,743280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[743440,743461],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[743531,743532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[743609,743620],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[743706,743709]},{"pos":[743743,743750],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[743783,743784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[743812,743813]},{"pos":[743868,743872],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[743931,743934]},{"pos":[743968,743975],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[744009,744010]},{"pos":[744066,744073],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[744134,744135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744162,744163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744664,744735],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[745310,745328],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[745395,745396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[745473,745484],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[745569,745570],"content":"<","needQuote":true,"nodes":[]},{"pos":[745597,745604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745670,745671]},{"pos":[745726,745730],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[745788,745789],"content":"<","needQuote":true,"nodes":[]},{"pos":[745816,745823],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745857,745858]},{"pos":[745912,745917],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[745977,745978]},{"pos":[746034,746041],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[746134,746135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746308,746329],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[746399,746400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[746477,746488],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[746574,746577]},{"pos":[746611,746618],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[746651,746652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[746680,746681]},{"pos":[746736,746740],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[746799,746802]},{"pos":[746836,746843],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[746877,746878]},{"pos":[746932,746937],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[746997,746998]},{"pos":[747054,747061],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[747122,747123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747150,747151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747660,747718],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[748221,748233],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[748294,748295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[748372,748383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[748468,748469],"content":"<","needQuote":true,"nodes":[]},{"pos":[748496,748503],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748569,748570]},{"pos":[748625,748629],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[748687,748688],"content":"<","needQuote":true,"nodes":[]},{"pos":[748715,748722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748756,748757]},{"pos":[748813,748820],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[748913,748914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749068,749083],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[749147,749148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749225,749236],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[749322,749325]},{"pos":[749359,749366],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[749399,749400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[749428,749429]},{"pos":[749484,749488],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[749547,749550]},{"pos":[749584,749591],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[749625,749626]},{"pos":[749682,749689],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[749750,749751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749778,749779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750242,750299],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[750798,750810],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[750871,750872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[750949,750960],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[751045,751046],"content":"<","needQuote":true,"nodes":[]},{"pos":[751073,751080],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[751146,751147]},{"pos":[751202,751206],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[751264,751265],"content":"<","needQuote":true,"nodes":[]},{"pos":[751292,751299],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[751333,751334]},{"pos":[751389,751395],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[751487,751488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751641,751656],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[751720,751721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[751798,751809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[751895,751898]},{"pos":[751932,751939],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[751972,751973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[752001,752002]},{"pos":[752057,752061],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[752120,752123]},{"pos":[752157,752164],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[752198,752199]},{"pos":[752254,752260],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[752320,752321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752348,752349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752808,752864],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[753359,753371],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[753432,753433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753510,753521],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[753606,753607],"content":"<","needQuote":true,"nodes":[]},{"pos":[753634,753641],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[753707,753708]},{"pos":[753763,753767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[753825,753826],"content":"<","needQuote":true,"nodes":[]},{"pos":[753853,753860],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[753894,753895]},{"pos":[753949,753954],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[754045,754046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754198,754213],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[754277,754278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[754355,754366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[754452,754455]},{"pos":[754489,754496],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[754529,754530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[754558,754559]},{"pos":[754614,754618],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[754677,754680]},{"pos":[754714,754721],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[754755,754756]},{"pos":[754810,754815],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[754874,754875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754902,754903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[755359,755415],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[755910,755922],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[755983,755984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756061,756072],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[756157,756158],"content":"<","needQuote":true,"nodes":[]},{"pos":[756185,756192],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[756258,756259]},{"pos":[756314,756318],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[756376,756377],"content":"<","needQuote":true,"nodes":[]},{"pos":[756404,756411],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[756445,756446]},{"pos":[756500,756505],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[756596,756597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[756749,756764],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[756828,756829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756906,756917],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[757003,757006]},{"pos":[757040,757047],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[757080,757081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[757109,757110]},{"pos":[757165,757169],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[757228,757231]},{"pos":[757265,757272],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[757306,757307]},{"pos":[757361,757366],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[757425,757426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757453,757454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757929,757997],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[758567,758579],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[758640,758641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758718,758729],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[758814,758815],"content":"<","needQuote":true,"nodes":[]},{"pos":[758842,758849],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[758915,758916]},{"pos":[758971,758975],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[759033,759034],"content":"<","needQuote":true,"nodes":[]},{"pos":[759061,759068],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[759102,759103]},{"pos":[759162,759170],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[759232,759233],"content":"<","needQuote":true,"nodes":[]},{"pos":[759284,759291],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[759416,759417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[759588,759603],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[759667,759668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[759745,759756],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[759842,759845]},{"pos":[759879,759886],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[759919,759920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[759948,759949]},{"pos":[760004,760008],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[760067,760070]},{"pos":[760104,760111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[760145,760146]},{"pos":[760205,760213],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[760276,760279]},{"pos":[760337,760344],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[760405,760406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760433,760434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760461,760462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760982,761049],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[761615,761627],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[761688,761689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[761766,761777],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[761862,761863],"content":"<","needQuote":true,"nodes":[]},{"pos":[761890,761897],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[761963,761964]},{"pos":[762019,762023],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[762081,762082],"content":"<","needQuote":true,"nodes":[]},{"pos":[762109,762116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[762150,762151]},{"pos":[762210,762218],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[762280,762281],"content":"<","needQuote":true,"nodes":[]},{"pos":[762331,762337],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[762461,762462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762632,762647],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[762711,762712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762789,762800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[762886,762889]},{"pos":[762923,762930],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[762963,762964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[762992,762993]},{"pos":[763048,763052],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[763111,763114]},{"pos":[763148,763155],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[763189,763190]},{"pos":[763249,763257],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[763320,763323]},{"pos":[763380,763386],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[763446,763447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763474,763475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763502,763503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764019,764085],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[764647,764659],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[764720,764721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[764798,764809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[764894,764895],"content":"<","needQuote":true,"nodes":[]},{"pos":[764922,764929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[764995,764996]},{"pos":[765051,765055],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[765113,765114],"content":"<","needQuote":true,"nodes":[]},{"pos":[765141,765148],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[765182,765183]},{"pos":[765242,765250],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[765312,765313],"content":"<","needQuote":true,"nodes":[]},{"pos":[765362,765367],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[765490,765491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765660,765675],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[765739,765740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765817,765828],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[765914,765917]},{"pos":[765951,765958],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[765991,765992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[766020,766021]},{"pos":[766076,766080],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[766139,766142]},{"pos":[766176,766183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[766217,766218]},{"pos":[766277,766285],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[766348,766351]},{"pos":[766407,766412],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[766471,766472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766499,766500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766527,766528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767041,767107],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[767669,767681],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[767742,767743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[767820,767831],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[767916,767917],"content":"<","needQuote":true,"nodes":[]},{"pos":[767944,767951],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[768017,768018]},{"pos":[768073,768077],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[768135,768136],"content":"<","needQuote":true,"nodes":[]},{"pos":[768163,768170],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[768204,768205]},{"pos":[768264,768272],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[768334,768335],"content":"<","needQuote":true,"nodes":[]},{"pos":[768384,768389],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[768512,768513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768682,768697],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[768761,768762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768839,768850],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[768936,768939]},{"pos":[768973,768980],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[769013,769014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[769042,769043]},{"pos":[769098,769102],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[769161,769164]},{"pos":[769198,769205],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[769239,769240]},{"pos":[769299,769307],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[769370,769373]},{"pos":[769429,769434],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[769493,769494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769521,769522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769549,769550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770064,770131],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[770697,770709],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[770770,770771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[770848,770859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[770944,770945],"content":"<","needQuote":true,"nodes":[]},{"pos":[770972,770979],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771045,771046]},{"pos":[771101,771105],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[771163,771164],"content":"<","needQuote":true,"nodes":[]},{"pos":[771191,771198],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771232,771233]},{"pos":[771292,771300],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[771362,771363],"content":"<","needQuote":true,"nodes":[]},{"pos":[771413,771419],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[771543,771544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771714,771729],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[771793,771794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771871,771882],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[771968,771971]},{"pos":[772005,772012],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[772045,772046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[772074,772075]},{"pos":[772130,772134],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[772193,772196]},{"pos":[772230,772237],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772271,772272]},{"pos":[772331,772339],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[772402,772405]},{"pos":[772462,772468],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[772528,772529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772556,772557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772584,772585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773085,773142],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[773641,773653],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[773714,773715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[773792,773803],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[773888,773889],"content":"<","needQuote":true,"nodes":[]},{"pos":[773916,773923],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[773989,773990]},{"pos":[774045,774049],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[774107,774108],"content":"<","needQuote":true,"nodes":[]},{"pos":[774135,774142],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[774176,774177]},{"pos":[774232,774238],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[774330,774331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[774484,774499],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[774563,774564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774641,774652],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[774738,774741]},{"pos":[774775,774782],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[774815,774816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[774844,774845]},{"pos":[774900,774904],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[774963,774966]},{"pos":[775000,775007],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[775041,775042]},{"pos":[775097,775103],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[775163,775164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775191,775192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775635,775677],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[776094,776107],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[776169,776170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[776247,776258],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[776343,776344],"content":"<","needQuote":true,"nodes":[]},{"pos":[776371,776378],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776444,776445]},{"pos":[776499,776504],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[776563,776564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776700,776716],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[776781,776782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[776859,776870],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[776956,776959]},{"pos":[776993,777000],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[777033,777034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[777062,777063]},{"pos":[777117,777122],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[777181,777182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[777599,777663],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[778190,778208],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[778275,778276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[778353,778364],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[778449,778450],"content":"<","needQuote":true,"nodes":[]},{"pos":[778477,778484],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[778550,778551]},{"pos":[778606,778610],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[778668,778669],"content":"<","needQuote":true,"nodes":[]},{"pos":[778696,778703],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[778737,778738]},{"pos":[778794,778801],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[778894,778895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779055,779076],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[779146,779147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[779224,779235],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[779321,779324]},{"pos":[779358,779365],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[779398,779399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[779427,779428]},{"pos":[779483,779487],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[779546,779549]},{"pos":[779583,779590],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[779624,779625]},{"pos":[779681,779688],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[779749,779750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779777,779778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780279,780350],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[780925,780943],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[781010,781011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[781088,781099],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[781184,781185],"content":"<","needQuote":true,"nodes":[]},{"pos":[781212,781219],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781285,781286]},{"pos":[781341,781345],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[781403,781404],"content":"<","needQuote":true,"nodes":[]},{"pos":[781431,781438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781472,781473]},{"pos":[781527,781532],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[781592,781593]},{"pos":[781649,781656],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[781749,781750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781923,781944],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[782014,782015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[782092,782103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[782189,782192]},{"pos":[782226,782233],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[782266,782267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[782295,782296]},{"pos":[782351,782355],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[782414,782417]},{"pos":[782451,782458],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782492,782493]},{"pos":[782547,782552],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[782612,782613]},{"pos":[782669,782676],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[782737,782738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[782765,782766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783247,783285],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[783666,783682],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[783747,783748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[783825,783836],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[783921,783922],"content":"<","needQuote":true,"nodes":[]},{"pos":[783949,783956],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[784021,784022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[784148,784167],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[784235,784236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[784313,784324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[784410,784413]},{"pos":[784447,784454],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[784487,784488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[784515,784516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[784907,784977],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[785500,785527],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[785603,785604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[785681,785692],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[785777,785778],"content":"<","needQuote":true,"nodes":[]},{"pos":[785805,785812],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785878,785879]},{"pos":[785934,785938],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[785996,785997],"content":"<","needQuote":true,"nodes":[]},{"pos":[786024,786031],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[786065,786066]},{"pos":[786098,786102],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[786164,786165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786317,786347],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[786426,786427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[786504,786515],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[786601,786604]},{"pos":[786638,786645],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[786678,786679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[786707,786708]},{"pos":[786763,786767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[786826,786829]},{"pos":[786863,786870],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[786904,786905]},{"pos":[786937,786941],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[786971,786972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786999,787000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[787534,787629],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[788337,788364],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[788440,788441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[788518,788529],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[788614,788615],"content":"<","needQuote":true,"nodes":[]},{"pos":[788642,788649],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788715,788716]},{"pos":[788771,788775],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[788833,788834],"content":"<","needQuote":true,"nodes":[]},{"pos":[788861,788868],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788902,788903]},{"pos":[788935,788939],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[789002,789003]},{"pos":[789091,789108],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[789199,789200],"content":"<","needQuote":true,"nodes":[]},{"pos":[789227,789231],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[789293,789294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789496,789526],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[789605,789606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[789683,789694],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[789780,789783]},{"pos":[789817,789824],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[789857,789858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[789886,789887]},{"pos":[789942,789946],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[790005,790008]},{"pos":[790042,790049],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790083,790084]},{"pos":[790116,790120],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[790150,790151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[790179,790180]},{"pos":[790268,790285],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[790377,790380]},{"pos":[790414,790418],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[790448,790449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790476,790477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[791085,791190],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[791859,791896],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[791982,791983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[792060,792071],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[792156,792157],"content":"<","needQuote":true,"nodes":[]},{"pos":[792184,792191],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792257,792258]},{"pos":[792313,792317],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[792375,792376],"content":"<","needQuote":true,"nodes":[]},{"pos":[792403,792410],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792444,792445]},{"pos":[792477,792481],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[792544,792545]},{"pos":[792600,792604],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[792662,792663],"content":"<","needQuote":true,"nodes":[]},{"pos":[792690,792697],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792731,792732]},{"pos":[792764,792772],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[792838,792839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793012,793052],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[793141,793142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[793219,793230],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[793316,793319]},{"pos":[793353,793360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[793393,793394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[793422,793423]},{"pos":[793478,793482],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[793541,793544]},{"pos":[793578,793585],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[793619,793620]},{"pos":[793652,793656],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[793686,793687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[793715,793716]},{"pos":[793771,793775],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[793834,793837]},{"pos":[793871,793878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[793912,793913]},{"pos":[793945,793953],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[793987,793988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794015,794016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794665,794795],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[795649,795686],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[795772,795773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[795850,795861],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[795946,795947],"content":"<","needQuote":true,"nodes":[]},{"pos":[795974,795981],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[796047,796048]},{"pos":[796103,796107],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[796165,796166],"content":"<","needQuote":true,"nodes":[]},{"pos":[796193,796200],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[796234,796235]},{"pos":[796267,796271],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[796334,796335]},{"pos":[796390,796394],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[796452,796453],"content":"<","needQuote":true,"nodes":[]},{"pos":[796480,796487],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[796521,796522]},{"pos":[796554,796562],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[796629,796630]},{"pos":[796718,796735],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[796826,796827],"content":"<","needQuote":true,"nodes":[]},{"pos":[796854,796858],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[796920,796921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[797144,797184],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[797273,797274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[797351,797362],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[797448,797451]},{"pos":[797485,797492],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[797525,797526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[797554,797555]},{"pos":[797610,797614],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[797673,797676]},{"pos":[797710,797717],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797751,797752]},{"pos":[797784,797788],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[797818,797819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[797847,797848]},{"pos":[797903,797907],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[797966,797969]},{"pos":[798003,798010],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798044,798045]},{"pos":[798077,798085],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[798119,798120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[798148,798149]},{"pos":[798237,798254],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[798346,798349]},{"pos":[798383,798387],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[798417,798418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[798445,798446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799100,799137],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[799514,799529],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[799593,799594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[799671,799682],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[799767,799768],"content":"<","needQuote":true,"nodes":[]},{"pos":[799795,799802],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[799867,799868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799993,800011],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[800078,800079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[800156,800167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[800253,800256]},{"pos":[800290,800297],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[800330,800331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800358,800359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800743,800809],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[801316,801339],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[801411,801412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[801489,801500],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[801585,801586],"content":"<","needQuote":true,"nodes":[]},{"pos":[801613,801620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801686,801687]},{"pos":[801742,801746],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[801804,801805],"content":"<","needQuote":true,"nodes":[]},{"pos":[801832,801839],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801873,801874]},{"pos":[801906,801910],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[801972,801973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802121,802147],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[802222,802223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[802300,802311],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[802397,802400]},{"pos":[802434,802441],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[802474,802475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[802503,802504]},{"pos":[802559,802563],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[802622,802625]},{"pos":[802659,802666],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[802700,802701]},{"pos":[802733,802737],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[802767,802768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802795,802796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803314,803405],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[804097,804120],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[804192,804193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[804270,804281],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[804366,804367],"content":"<","needQuote":true,"nodes":[]},{"pos":[804394,804401],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[804467,804468]},{"pos":[804523,804527],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[804585,804586],"content":"<","needQuote":true,"nodes":[]},{"pos":[804613,804620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[804654,804655]},{"pos":[804687,804691],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[804754,804755]},{"pos":[804843,804860],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[804951,804952],"content":"<","needQuote":true,"nodes":[]},{"pos":[804979,804983],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[805045,805046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805244,805270],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[805345,805346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[805423,805434],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[805520,805523]},{"pos":[805557,805564],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[805597,805598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[805626,805627]},{"pos":[805682,805686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[805745,805748]},{"pos":[805782,805789],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805823,805824]},{"pos":[805856,805860],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[805890,805891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[805919,805920]},{"pos":[806008,806025],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[806117,806120]},{"pos":[806154,806158],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[806188,806189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806216,806217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806809,806910],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[807563,807596],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[807678,807679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[807756,807767],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[807852,807853],"content":"<","needQuote":true,"nodes":[]},{"pos":[807880,807887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807953,807954]},{"pos":[808009,808013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[808071,808072],"content":"<","needQuote":true,"nodes":[]},{"pos":[808099,808106],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808140,808141]},{"pos":[808173,808177],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[808240,808241]},{"pos":[808296,808300],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[808358,808359],"content":"<","needQuote":true,"nodes":[]},{"pos":[808386,808393],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808427,808428]},{"pos":[808460,808468],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[808534,808535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808704,808740],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[808825,808826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[808903,808914],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[809000,809003]},{"pos":[809037,809044],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[809077,809078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[809106,809107]},{"pos":[809162,809166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[809225,809228]},{"pos":[809262,809269],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[809303,809304]},{"pos":[809336,809340],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[809370,809371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[809399,809400]},{"pos":[809455,809459],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[809518,809521]},{"pos":[809555,809562],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[809596,809597]},{"pos":[809629,809637],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[809671,809672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809699,809700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810333,810459],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[811297,811330],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[811412,811413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[811490,811501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[811586,811587],"content":"<","needQuote":true,"nodes":[]},{"pos":[811614,811621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[811687,811688]},{"pos":[811743,811747],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[811805,811806],"content":"<","needQuote":true,"nodes":[]},{"pos":[811833,811840],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[811874,811875]},{"pos":[811907,811911],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[811974,811975]},{"pos":[812030,812034],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[812092,812093],"content":"<","needQuote":true,"nodes":[]},{"pos":[812120,812127],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812161,812162]},{"pos":[812194,812202],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[812269,812270]},{"pos":[812358,812375],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[812466,812467],"content":"<","needQuote":true,"nodes":[]},{"pos":[812494,812498],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[812560,812561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812780,812816],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[812901,812902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[812979,812990],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[813076,813079]},{"pos":[813113,813120],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[813153,813154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813182,813183]},{"pos":[813238,813242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[813301,813304]},{"pos":[813338,813345],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813379,813380]},{"pos":[813412,813416],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[813446,813447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813475,813476]},{"pos":[813531,813535],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[813594,813597]},{"pos":[813631,813638],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813672,813673]},{"pos":[813705,813713],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[813747,813748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813776,813777]},{"pos":[813865,813882],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[813974,813977]},{"pos":[814011,814015],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[814045,814046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814073,814074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814759,814817],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[815360,815374],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[815437,815438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[815515,815526],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[815611,815612],"content":"<","needQuote":true,"nodes":[]},{"pos":[815639,815646],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815712,815713]},{"pos":[815795,815806],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[815891,815892],"content":"<","needQuote":true,"nodes":[]},{"pos":[815919,815926],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[815991,815992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816160,816177],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[816243,816244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[816321,816332],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[816418,816421]},{"pos":[816455,816462],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[816495,816496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[816524,816525]},{"pos":[816607,816618],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[816704,816707]},{"pos":[816741,816748],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[816781,816782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816809,816810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[817352,817438],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[818175,818189],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[818252,818253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[818330,818341],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[818426,818427],"content":"<","needQuote":true,"nodes":[]},{"pos":[818454,818461],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818527,818528]},{"pos":[818610,818621],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[818706,818707],"content":"<","needQuote":true,"nodes":[]},{"pos":[818734,818741],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818807,818808]},{"pos":[818896,818913],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[819004,819005],"content":"<","needQuote":true,"nodes":[]},{"pos":[819032,819039],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[819104,819105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[819323,819340],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[819406,819407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[819484,819495],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[819581,819584]},{"pos":[819618,819625],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[819658,819659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[819687,819688]},{"pos":[819770,819781],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[819867,819870]},{"pos":[819904,819911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[819944,819945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[819973,819974]},{"pos":[820062,820079],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[820171,820174]},{"pos":[820208,820215],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[820248,820249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820276,820277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820866,820926],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[821437,821451],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[821514,821515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[821592,821603],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[821688,821689],"content":"<","needQuote":true,"nodes":[]},{"pos":[821716,821723],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[821789,821790]},{"pos":[821845,821849],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[821907,821908],"content":"<","needQuote":true,"nodes":[]},{"pos":[821935,821942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[821976,821977]},{"pos":[822033,822040],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[822133,822134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[822290,822307],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[822373,822374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[822451,822462],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[822548,822551]},{"pos":[822585,822592],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[822625,822626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[822654,822655]},{"pos":[822710,822714],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[822773,822776]},{"pos":[822810,822817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822851,822852]},{"pos":[822908,822915],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[822976,822977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823004,823005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823490,823557],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[824116,824130],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[824193,824194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[824271,824282],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[824367,824368],"content":"<","needQuote":true,"nodes":[]},{"pos":[824395,824402],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824468,824469]},{"pos":[824524,824528],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[824586,824587],"content":"<","needQuote":true,"nodes":[]},{"pos":[824614,824621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824655,824656]},{"pos":[824710,824715],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[824775,824776]},{"pos":[824832,824839],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[824932,824933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825102,825119],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[825185,825186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[825263,825274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[825360,825363]},{"pos":[825397,825404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[825437,825438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[825466,825467]},{"pos":[825522,825526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[825585,825588]},{"pos":[825622,825629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[825663,825664]},{"pos":[825718,825723],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[825783,825784]},{"pos":[825840,825847],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[825908,825909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825936,825937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826471,826575],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[827299,827328],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[827406,827407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[827484,827495],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[827580,827581],"content":"<","needQuote":true,"nodes":[]},{"pos":[827608,827614],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[827679,827680]},{"pos":[827762,827773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[827858,827859],"content":"<","needQuote":true,"nodes":[]},{"pos":[827886,827893],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[827959,827960]},{"pos":[828015,828019],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[828077,828078],"content":"<","needQuote":true,"nodes":[]},{"pos":[828105,828111],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[828144,828145]},{"pos":[828177,828184],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[828218,828219]},{"pos":[828251,828258],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[828323,828324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828515,828547],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[828628,828629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[828706,828717],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[828803,828806]},{"pos":[828840,828846],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[828878,828879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[828907,828908]},{"pos":[828990,829001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[829087,829090]},{"pos":[829124,829131],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[829164,829165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[829193,829194]},{"pos":[829249,829253],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[829312,829315]},{"pos":[829349,829355],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[829388,829389]},{"pos":[829421,829428],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[829462,829463]},{"pos":[829495,829502],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[829535,829536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829563,829564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[830066,830077],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[830431,830436],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[830956,830961],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[831119,831124],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[831677,831687],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[832234,832241],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[832410,832420],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[832840,832860],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[833353,833378],"content":"Add(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(IPAddressInformation)","pos":[0,25]}]},{"pos":[833786,833789],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[833930,833931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[834018,834038],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[834114,834115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834211,834214],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[834358,834359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[834446,834466],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[834542,834543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834964,834970],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[835182,835185],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[835256,835257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835284,835285],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[835312,835313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[835409,835412],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[835486,835487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835514,835515],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[835542,835543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[835980,835987],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[836297,836302],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[836445,836446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[836473,836474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836568,836573],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[836719,836720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[836747,836748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837081,837088],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[837300,837305],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[837378,837379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[837406,837407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837501,837506],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[837582,837583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[837610,837611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[838110,838140],"content":"Contains(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(IPAddressInformation)","pos":[0,30]}]},{"pos":[838563,838571],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[838717,838718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[838805,838825],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[838901,838902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[839003,839011],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[839160,839161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[839248,839268],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[839344,839345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[839786,839797],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[840024,840032],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[840108,840109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[840136,840137],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[840164,840165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[840266,840274],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[840353,840354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[840381,840382],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[840409,840410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[840950,840987],"content":"CopyTo(IPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(IPAddressInformation[], Int32)","pos":[0,37]}]},{"pos":[841500,841506],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[841650,841651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[841738,841758],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":"[]","pos":[841835,841837]},{"content":",","pos":[841869,841870]},{"pos":[841924,841929],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[841988,841989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842103,842109],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[842256,842257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[842344,842364],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[842440,842442],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[842471,842472]},{"pos":[842526,842531],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[842590,842591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843038,843060],"content":"IPAddressInformation[]","needQuote":true,"nodes":[{"content":"IPAddressInformation[]","pos":[0,22]}]},{"pos":[843313,843333],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"content":"[]","pos":[843410,843412]},{"pos":[843514,843534],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[843610,843612],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[843812,843830],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[844128,844134],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[844208,844209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[844236,844237],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[844265,844267]},{"content":",","pos":[844299,844300]},{"pos":[844354,844359],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[844418,844419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[844533,844539],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[844616,844617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[844644,844645],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[844672,844674],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[844703,844704]},{"pos":[844758,844763],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[844822,844823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[845318,845333],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[845667,845680],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[845831,845832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[845859,845860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[845962,845975],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[846129,846130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[846157,846158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846631,846664],"content":"IEnumerator<IPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;IPAddressInformation&gt;","pos":[0,33],"source":"IEnumerator<IPAddressInformation>"}]},{"pos":[847000,847011],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[847096,847097],"content":"<","needQuote":true,"nodes":[]},{"pos":[847184,847204],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[847373,847384],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[847470,847473]},{"pos":[847567,847587],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[847663,847664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847983,847998],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[848234,848247],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[848328,848329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848356,848357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[848459,848472],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[848556,848557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848584,848585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[848848,848862],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[849081,849092],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[849156,849157],"content":"<","needQuote":true,"nodes":[]},{"pos":[849184,849185],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[849305,849316],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[849381,849384]},{"pos":[849418,849419],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[849446,849447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849920,849948],"content":"Remove(IPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(IPAddressInformation)","pos":[0,28]}]},{"pos":[850365,850371],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[850515,850516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[850603,850623],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[850699,850700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[850799,850805],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[850952,850953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851040,851060],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[851136,851137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[851570,851579],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[851800,851806],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[851880,851881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851908,851909],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[851936,851937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852036,852042],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[852119,852120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[852147,852148],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[852175,852176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852469,852484],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[852623,852636],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[852706,852707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[852734,852735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852827,852840],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[852910,852911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[852938,852939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853155,853166],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[853348,853369],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[853563,853590],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[853809,853826],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[854001,854021],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection\n  commentId: T:System.Net.NetworkInformation.IPAddressInformationCollection\n  id: IPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)\n  - System.Net.NetworkInformation.IPAddressInformationCollection.Clear\n  - System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  - System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)\n  - System.Net.NetworkInformation.IPAddressInformationCollection.Count\n  - System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator\n  - System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly\n  - System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)\n  - System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  - System.Net.NetworkInformation.IPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IPAddressInformationCollection\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 110\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Stores a set of <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types.</p>\\n\"\n  syntax:\n    content: 'public class IPAddressInformationCollection : ICollection<IPAddressInformation>, IEnumerable<IPAddressInformation>, IEnumerable'\n    content.vb: >-\n      Public Class IPAddressInformationCollection\n          Implements ICollection(Of IPAddressInformation), IEnumerable(Of IPAddressInformation), IEnumerable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: IPAddressInformationCollection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Net.NetworkInformation.IPAddressInformation,System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.IPAddressInformation,{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.IPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.IPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.IPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.IPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.IPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TSecond},{TResult}})\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Count\n  commentId: P:System.Net.NetworkInformation.IPAddressInformationCollection.Count\n  id: Count\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 113\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  syntax:\n    content: public virtual int Count { get; }\n    content.vb: Public Overridable ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that contains the number of <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Count\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: IPAddressInformationCollection.Count\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly\n  commentId: P:System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsReadOnly\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 114\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a value that indicates whether access to this collection is read-only.</p>\\n\"\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.IsReadOnly\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: IPAddressInformationCollection.IsReadOnly\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)\n  commentId: P:System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 115\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index in the collection. </p>\\n\"\n  syntax:\n    content: public virtual IPAddressInformation this[int index] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As IPAddressInformation\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the element.</p>\\n\"\n    return:\n      type: System.Net.NetworkInformation.IPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified location.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Net.NetworkInformation.IPAddressInformationCollection.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: IPAddressInformationCollection.Item[Int32]\n  nameWithType.vb: IPAddressInformationCollection.Item(Int32)\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)\n  id: Add(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(IPAddressInformation)\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 116\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual void Add(IPAddressInformation address)\n    content.vb: Public Overridable Sub Add(address As IPAddressInformation)\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.IPAddressInformation\n      description: \"\\n<p>The object to be added to the collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Add(System.Net.NetworkInformation.IPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: IPAddressInformationCollection.Add(IPAddressInformation)\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Clear\n  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Clear\n  id: Clear\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 117\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual void Clear()\n    content.vb: Public Overridable Sub Clear\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Clear\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: IPAddressInformationCollection.Clear()\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  id: Contains(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Contains(IPAddressInformation)\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 118\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Checks whether the collection contains the specified <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual bool Contains(IPAddressInformation address)\n    content.vb: Public Overridable Function Contains(address As IPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.IPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be searched in the collection.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object exists in the collection; otherwise. <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: IPAddressInformationCollection.Contains(IPAddressInformation)\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)\n  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)\n  id: CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(IPAddressInformation[], Int32)\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 119\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Copies the collection to the specified array.</p>\\n\"\n  syntax:\n    content: public virtual void CopyTo(IPAddressInformation[] array, int offset)\n    content.vb: Public Overridable Sub CopyTo(array As IPAddressInformation(), offset As Integer)\n    parameters:\n    - id: array\n      type: System.Net.NetworkInformation.IPAddressInformation[]\n      description: \"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or- </p>\\n<p>The number of elements in this <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>offset</em> to the end of the destination <em>array</em>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The elements in this <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be cast automatically to the type of the destination <em>array</em>. </p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation(), System.Int32)\n  name.vb: CopyTo(IPAddressInformation(), Int32)\n  nameWithType: IPAddressInformationCollection.CopyTo(IPAddressInformation[], Int32)\n  nameWithType.vb: IPAddressInformationCollection.CopyTo(IPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator\n  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 120\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: public virtual IEnumerator<IPAddressInformation> GetEnumerator()\n    content.vb: Public Overridable Function GetEnumerator As IEnumerator(Of IPAddressInformation)\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.IPAddressInformation}\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.GetEnumerator\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: IPAddressInformationCollection.GetEnumerator()\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  id: Remove(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Remove(IPAddressInformation)\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 121\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual bool Remove(IPAddressInformation address)\n    content.vb: Public Overridable Function Remove(address As IPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.IPAddressInformation\n      description: \"\\n<p>The object to be removed.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: IPAddressInformationCollection.Remove(IPAddressInformation)\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Net.NetworkInformation.IPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Net.NetworkInformation.IPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 122\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.IPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: IPAddressInformationCollection.IEnumerable.GetEnumerator()\n  nameWithType.vb: IPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<IPAddressInformation>\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation)\n  name.vb: ICollection(Of IPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  nameWithType: ICollection<IPAddressInformation>\n  nameWithType.vb: ICollection(Of IPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<IPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation)\n  name.vb: IEnumerable(Of IPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}\n  nameWithType: IEnumerable<IPAddressInformation>\n  nameWithType.vb: IEnumerable(Of IPAddressInformation)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<IPAddressInformation>()\n  fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: AsQueryable(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<IPAddressInformation>\n    fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of IPAddressInformation)\n    fullName: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<IPAddressInformation>()\n  nameWithType.vb: Queryable.AsQueryable(Of IPAddressInformation)()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<IPAddressInformation>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: AsParallel(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<IPAddressInformation>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of IPAddressInformation)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<IPAddressInformation>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Net.NetworkInformation.IPAddressInformation,System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<IPAddressInformation>(Func<IPAddressInformation, IPAddressInformation, IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Net.NetworkInformation.IPAddressInformation, System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Net.NetworkInformation.IPAddressInformation, System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Aggregate(Of IPAddressInformation)(Func(Of IPAddressInformation, IPAddressInformation, IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<IPAddressInformation>(Func<IPAddressInformation, IPAddressInformation, IPAddressInformation>)\n  nameWithType.vb: Enumerable.Aggregate(Of IPAddressInformation)(Func(Of IPAddressInformation, IPAddressInformation, IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.IPAddressInformation,{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<IPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.IPAddressInformation, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.IPAddressInformation, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.IPAddressInformation, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.IPAddressInformation, TAccumulate))\n  name.vb: Aggregate(Of IPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, IPAddressInformation, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<IPAddressInformation, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.IPAddressInformation, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of IPAddressInformation, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.IPAddressInformation, TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<IPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of IPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, IPAddressInformation, TAccumulate))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.IPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<IPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.IPAddressInformation, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.IPAddressInformation, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.IPAddressInformation, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.IPAddressInformation, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of IPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, IPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<IPAddressInformation, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.IPAddressInformation, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of IPAddressInformation, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.IPAddressInformation, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<IPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, IPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of IPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, IPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: All(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<IPAddressInformation>\n    fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.All(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Any(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Any(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: Any(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: AsEnumerable(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<IPAddressInformation>\n    fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<IPAddressInformation>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Decimal))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Double))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int64))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Single))\n  name.vb: Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Average(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Concat(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Concat(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<IPAddressInformation>(IPAddressInformation)\n  fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.IPAddressInformation>(System.Net.NetworkInformation.IPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.IPAddressInformation)(System.Net.NetworkInformation.IPAddressInformation)\n  name.vb: Append(Of IPAddressInformation)(IPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<IPAddressInformation>(IPAddressInformation)\n  nameWithType.vb: Enumerable.Append(Of IPAddressInformation)(IPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<IPAddressInformation>(IPAddressInformation)\n  fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.IPAddressInformation>(System.Net.NetworkInformation.IPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.IPAddressInformation)(System.Net.NetworkInformation.IPAddressInformation)\n  name.vb: Prepend(Of IPAddressInformation)(IPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<IPAddressInformation>(IPAddressInformation)\n  nameWithType.vb: Enumerable.Prepend(Of IPAddressInformation)(IPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<IPAddressInformation>(IPAddressInformation)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.IPAddressInformation>(System.Net.NetworkInformation.IPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.IPAddressInformation)(System.Net.NetworkInformation.IPAddressInformation)\n  name.vb: Contains(Of IPAddressInformation)(IPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<IPAddressInformation>(IPAddressInformation)\n  nameWithType.vb: Enumerable.Contains(Of IPAddressInformation)(IPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<IPAddressInformation>(IPAddressInformation, IEqualityComparer<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.IPAddressInformation>(System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.IPAddressInformation)(System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Contains(Of IPAddressInformation)(IPAddressInformation, IEqualityComparer(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<IPAddressInformation>(IPAddressInformation, IEqualityComparer<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Contains(Of IPAddressInformation)(IPAddressInformation, IEqualityComparer(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Count(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Count(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: Count(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: DefaultIfEmpty(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<IPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<IPAddressInformation>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<IPAddressInformation>(IPAddressInformation)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.IPAddressInformation>(System.Net.NetworkInformation.IPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.IPAddressInformation)(System.Net.NetworkInformation.IPAddressInformation)\n  name.vb: DefaultIfEmpty(Of IPAddressInformation)(IPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<IPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<IPAddressInformation>(IPAddressInformation)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of IPAddressInformation)(IPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Distinct(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Distinct(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<IPAddressInformation>(IEqualityComparer<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Distinct(Of IPAddressInformation)(IEqualityComparer(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<IPAddressInformation>(IEqualityComparer<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Distinct(Of IPAddressInformation)(IEqualityComparer(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<IPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.IPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.IPAddressInformation)(System.Int32)\n  name.vb: ElementAt(Of IPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<IPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<IPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of IPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<IPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.IPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)(System.Int32)\n  name.vb: ElementAtOrDefault(Of IPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<IPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<IPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of IPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Except(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Except(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: First(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<IPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<IPAddressInformation>()\n  nameWithType.vb: Enumerable.First(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: First(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<IPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.First(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: FirstOrDefault(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<IPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<IPAddressInformation>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: FirstOrDefault(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<IPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey))\n  name.vb: GroupBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement))\n  name.vb: GroupBy(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<IPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of IPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<IPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of IPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation), TResult))\n  name.vb: GroupBy(Of IPAddressInformation, TKey, TResult)(Func(Of IPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of IPAddressInformation), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<IPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of IPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey, TResult)(Func(Of IPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of IPAddressInformation), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of IPAddressInformation, TKey, TResult)(Func(Of IPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of IPAddressInformation), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<IPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of IPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey, TResult>(Func<IPAddressInformation, TKey>, Func<TKey, IEnumerable<IPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey, TResult)(Func(Of IPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of IPAddressInformation), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of IPAddressInformation, TKey, TElement, TResult)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<IPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of IPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey, TElement, TResult)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of IPAddressInformation, TKey, TElement, TResult)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<IPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of IPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<IPAddressInformation, TKey, TElement, TResult>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of IPAddressInformation, TKey, TElement, TResult)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<IPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, IEnumerable(Of TInner), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<IPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Intersect(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Intersect(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TResult))\n  name.vb: Join(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<IPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of IPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, TInner, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<IPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of IPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.IPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<IPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IPAddressInformation, TKey>, Func<TInner, TKey>, Func<IPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of IPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of IPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Last(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Last(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: Last(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: LastOrDefault(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<IPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<IPAddressInformation>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: LastOrDefault(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<IPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: LongCount(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<IPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<IPAddressInformation>()\n  nameWithType.vb: Enumerable.LongCount(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: LongCount(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<IPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Max(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Decimal))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Double))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int64))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Single))\n  name.vb: Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TResult))\n  name.vb: Max(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<IPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.IPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of IPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.IPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Max(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Min(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Decimal))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Double))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int64))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Single))\n  name.vb: Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TResult))\n  name.vb: Min(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<IPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.IPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of IPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.IPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Min(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, TResult))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey))\n  name.vb: OrderBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey))\n  name.vb: OrderByDescending(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Reverse(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Reverse(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.IPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.IPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TResult))\n  name.vb: Select(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<IPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.IPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of IPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.IPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<IPAddressInformation, TResult>(Func<IPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Select(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.IPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.IPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32, TResult))\n  name.vb: Select(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<IPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.IPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of IPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.IPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, Int32, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<IPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of IPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<IPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of IPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<IPAddressInformation, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of IPAddressInformation, TResult)(Func(Of IPAddressInformation, Int32, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of IPAddressInformation, TCollection, TResult)(Func(Of IPAddressInformation, IEnumerable(Of TCollection)), Func(Of IPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<IPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of IPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of IPAddressInformation, TCollection, TResult)(Func(Of IPAddressInformation, IEnumerable(Of TCollection)), Func(Of IPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of IPAddressInformation, TCollection, TResult)(Func(Of IPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of IPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<IPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of IPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.IPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<IPAddressInformation, TCollection, TResult>(Func<IPAddressInformation, Int32, IEnumerable<TCollection>>, Func<IPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of IPAddressInformation, TCollection, TResult)(Func(Of IPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of IPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: SequenceEqual(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<IPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: SequenceEqual(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<IPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: Single(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<IPAddressInformation>()\n  nameWithType.vb: Enumerable.Single(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: Single(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: SingleOrDefault(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<IPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<IPAddressInformation>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: SingleOrDefault(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<IPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<IPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.IPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.IPAddressInformation)(System.Int32)\n  name.vb: Skip(Of IPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<IPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of IPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: SkipWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<IPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<IPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Decimal))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Double))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int64))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Single))\n  name.vb: Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<IPAddressInformation>(Func<IPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Sum(Of IPAddressInformation)(Func(Of IPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<IPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.IPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.IPAddressInformation)(System.Int32)\n  name.vb: Take(Of IPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<IPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Take(Of IPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: TakeWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<IPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<IPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: ToArray(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<IPAddressInformation>\n    fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<IPAddressInformation>()\n  nameWithType.vb: Enumerable.ToArray(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey))\n  name.vb: ToDictionary(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement))\n  name.vb: ToDictionary(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<IPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of IPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<IPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of IPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<IPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.IPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.IPAddressInformation)()\n  name.vb: ToList(Of IPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<IPAddressInformation>\n    fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<IPAddressInformation>()\n  nameWithType.vb: Enumerable.ToList(Of IPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey))\n  name.vb: ToLookup(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<IPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of IPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<IPAddressInformation, TKey>(Func<IPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of IPAddressInformation, TKey)(Func(Of IPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement))\n  name.vb: ToLookup(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<IPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of IPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.IPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.IPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<IPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.IPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of IPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.IPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<IPAddressInformation, TKey, TElement>(Func<IPAddressInformation, TKey>, Func<IPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of IPAddressInformation, TKey, TElement)(Func(Of IPAddressInformation, TKey), Func(Of IPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Union(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<IPAddressInformation>(IEnumerable<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.IPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.IPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.IPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.IPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.IPAddressInformation))\n  name.vb: Union(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<IPAddressInformation>(IEnumerable<IPAddressInformation>, IEqualityComparer<IPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of IPAddressInformation)(IEnumerable(Of IPAddressInformation), IEqualityComparer(Of IPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Boolean))\n  name.vb: Where(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<IPAddressInformation>(Func<IPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of IPAddressInformation)(Func(Of IPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.IPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.IPAddressInformation>(System.Func<System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.IPAddressInformation)(System.Func(Of System.Net.NetworkInformation.IPAddressInformation, System.Int32, System.Boolean))\n  name.vb: Where(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<IPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.IPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of IPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.IPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<IPAddressInformation>(Func<IPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of IPAddressInformation)(Func(Of IPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.IPAddressInformation,{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<IPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<IPAddressInformation, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.IPAddressInformation, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Net.NetworkInformation.IPAddressInformation, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.IPAddressInformation, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Net.NetworkInformation.IPAddressInformation, TSecond, TResult))\n  name.vb: Zip(Of IPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of IPAddressInformation, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<IPAddressInformation, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.IPAddressInformation, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of IPAddressInformation, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.IPAddressInformation, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<IPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<IPAddressInformation, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of IPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of IPAddressInformation, TSecond, TResult))\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection`1\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Count\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Count\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Count\n  nameWithType: ICollection<IPAddressInformation>.Count\n  nameWithType.vb: ICollection(Of IPAddressInformation).Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.IsReadOnly\n  nameWithType: ICollection<IPAddressInformation>.IsReadOnly\n  nameWithType.vb: ICollection(Of IPAddressInformation).IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n- uid: System.Net.NetworkInformation.IPAddressInformation\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPAddressInformation\n  fullName: System.Net.NetworkInformation.IPAddressInformation\n  commentId: T:System.Net.NetworkInformation.IPAddressInformation\n  nameWithType: IPAddressInformation\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Add(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(IPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Add(System.Net.NetworkInformation.IPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Add(System.Net.NetworkInformation.IPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Add(System.Net.NetworkInformation.IPAddressInformation)\n  nameWithType: ICollection<IPAddressInformation>.Add(IPAddressInformation)\n  nameWithType.vb: ICollection(Of IPAddressInformation).Add(IPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Clear\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Clear\n  nameWithType: ICollection<IPAddressInformation>.Clear()\n  nameWithType.vb: ICollection(Of IPAddressInformation).Clear()\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(IPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Contains(System.Net.NetworkInformation.IPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Contains(System.Net.NetworkInformation.IPAddressInformation)\n  nameWithType: ICollection<IPAddressInformation>.Contains(IPAddressInformation)\n  nameWithType.vb: ICollection(Of IPAddressInformation).Contains(IPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(IPAddressInformation[], Int32)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.CopyTo(System.Net.NetworkInformation.IPAddressInformation[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).CopyTo(System.Net.NetworkInformation.IPAddressInformation(), System.Int32)\n  name.vb: CopyTo(IPAddressInformation(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)\n  nameWithType: ICollection<IPAddressInformation>.CopyTo(IPAddressInformation[], Int32)\n  nameWithType.vb: ICollection(Of IPAddressInformation).CopyTo(IPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.IPAddressInformation[]\n  name: IPAddressInformation[]\n  fullName: System.Net.NetworkInformation.IPAddressInformation[]\n  fullname.vb: System.Net.NetworkInformation.IPAddressInformation()\n  name.vb: IPAddressInformation()\n  spec.csharp:\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: ()\n    fullName: ()\n  nameWithType: IPAddressInformation[]\n  nameWithType.vb: IPAddressInformation()\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.IPAddressInformation>.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.IPAddressInformation).GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.IPAddressInformation}.GetEnumerator\n  nameWithType: IEnumerable<IPAddressInformation>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of IPAddressInformation).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.IPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<IPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.IPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Net.NetworkInformation.IPAddressInformation)\n  name.vb: IEnumerator(Of IPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.IPAddressInformation}\n  nameWithType: IEnumerator<IPAddressInformation>\n  nameWithType.vb: IEnumerator(Of IPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator`1\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(IPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Remove(System.Net.NetworkInformation.IPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.IPAddressInformation>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.IPAddressInformation).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.IPAddressInformation\n    name: IPAddressInformation\n    fullName: System.Net.NetworkInformation.IPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.IPAddressInformation}.Remove(System.Net.NetworkInformation.IPAddressInformation)\n  nameWithType: ICollection<IPAddressInformation>.Remove(IPAddressInformation)\n  nameWithType.vb: ICollection(Of IPAddressInformation).Remove(IPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}