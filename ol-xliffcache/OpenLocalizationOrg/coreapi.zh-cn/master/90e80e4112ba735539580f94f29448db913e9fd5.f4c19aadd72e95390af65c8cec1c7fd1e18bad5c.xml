{"nodes":[{"pos":[1106,1118],"content":"IConvertible","needQuote":true,"nodes":[{"content":"IConvertible","pos":[0,12]}]},{"pos":[2313,2326],"content":"GetTypeCode()","needQuote":true,"nodes":[{"content":"GetTypeCode()","pos":[0,13]}]},{"pos":[3421,3447],"content":"ToBoolean(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToBoolean(IFormatProvider)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;A Boolean value equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[4432,4500],"source":"\\n<p>A Boolean value equivalent to the value of this instance.</p>\\n"},{"pos":[4784,4807],"content":"ToByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToByte(IFormatProvider)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;An 8-bit unsigned integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[5783,5861],"source":"\\n<p>An 8-bit unsigned integer equivalent to the value of this instance.</p>\\n"},{"pos":[6142,6165],"content":"ToChar(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToChar(IFormatProvider)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;A Unicode character equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[7136,7208],"source":"\\n<p>A Unicode character equivalent to the value of this instance.</p>\\n"},{"pos":[7501,7528],"content":"ToDateTime(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDateTime(IFormatProvider)","pos":[0,27]}]},{"pos":[9014,9040],"content":"ToDecimal(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDecimal(IFormatProvider)","pos":[0,26]}]},{"pos":[10522,10547],"content":"ToDouble(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDouble(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;A double-precision floating-point number equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[11553,11646],"source":"\\n<p>A double-precision floating-point number equivalent to the value of this instance.</p>\\n"},{"pos":[11932,11956],"content":"ToInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt16(IFormatProvider)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;An 16-bit signed integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[12938,13015],"source":"\\n<p>An 16-bit signed integer equivalent to the value of this instance.</p>\\n"},{"pos":[13300,13324],"content":"ToInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt32(IFormatProvider)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;An 32-bit signed integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[14306,14383],"source":"\\n<p>An 32-bit signed integer equivalent to the value of this instance.</p>\\n"},{"pos":[14668,14692],"content":"ToInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt64(IFormatProvider)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;An 64-bit signed integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[15672,15749],"source":"\\n<p>An 64-bit signed integer equivalent to the value of this instance.</p>\\n"},{"pos":[16034,16058],"content":"ToSByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSByte(IFormatProvider)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;An 8-bit signed integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[17039,17115],"source":"\\n<p>An 8-bit signed integer equivalent to the value of this instance.</p>\\n"},{"pos":[17403,17428],"content":"ToSingle(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSingle(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;A single-precision floating-point number equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[18433,18526],"source":"\\n<p>A single-precision floating-point number equivalent to the value of this instance.</p>\\n"},{"pos":[18815,18840],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[20337,20366],"content":"ToType(Type, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToType(Type, IFormatProvider)","pos":[0,29]}]},{"pos":[22251,22276],"content":"ToUInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt16(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An 16-bit unsigned integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[23267,23346],"source":"\\n<p>An 16-bit unsigned integer equivalent to the value of this instance.</p>\\n"},{"pos":[23635,23660],"content":"ToUInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt32(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An 32-bit unsigned integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[24651,24730],"source":"\\n<p>An 32-bit unsigned integer equivalent to the value of this instance.</p>\\n"},{"pos":[25019,25044],"content":"ToUInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt64(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An 64-bit unsigned integer equivalent to the value of this instance.&lt;/p&gt;\\n","pos":[26033,26112],"source":"\\n<p>An 64-bit unsigned integer equivalent to the value of this instance.</p>\\n"},{"pos":[26223,26229],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26362,26370],"content":"TypeCode","needQuote":true,"nodes":[{"content":"TypeCode","pos":[0,8]}]},{"pos":[26530,26545],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[26718,26725],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26871,26875],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[27012,27016],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[27157,27165],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[27317,27324],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[27472,27478],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[27622,27627],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[27768,27773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27914,27919],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[28060,28065],"content":"SByte","needQuote":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[28207,28213],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[28358,28364],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28507,28511],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[28650,28656],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28801,28807],"content":"UInt16","needQuote":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[28952,28958],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[29103,29109],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]}],"content":"items:\n- uid: System.IConvertible\n  commentId: T:System.IConvertible\n  id: IConvertible\n  parent: System\n  children:\n  - System.IConvertible.GetTypeCode\n  - System.IConvertible.ToBoolean(System.IFormatProvider)\n  - System.IConvertible.ToByte(System.IFormatProvider)\n  - System.IConvertible.ToChar(System.IFormatProvider)\n  - System.IConvertible.ToDateTime(System.IFormatProvider)\n  - System.IConvertible.ToDecimal(System.IFormatProvider)\n  - System.IConvertible.ToDouble(System.IFormatProvider)\n  - System.IConvertible.ToInt16(System.IFormatProvider)\n  - System.IConvertible.ToInt32(System.IFormatProvider)\n  - System.IConvertible.ToInt64(System.IFormatProvider)\n  - System.IConvertible.ToSByte(System.IFormatProvider)\n  - System.IConvertible.ToSingle(System.IFormatProvider)\n  - System.IConvertible.ToString(System.IFormatProvider)\n  - System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  - System.IConvertible.ToUInt16(System.IFormatProvider)\n  - System.IConvertible.ToUInt32(System.IFormatProvider)\n  - System.IConvertible.ToUInt64(System.IFormatProvider)\n  langs:\n  - csharp\n  - vb\n  name: IConvertible\n  fullName: System.IConvertible\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IConvertible\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Defines methods that convert the value of the implementing reference or value type to a common language runtime type that has an equivalent value.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      [ComVisible(true)]\n\n      public interface IConvertible\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      <ComVisible(True)>\n\n      Public Interface IConvertible\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IConvertible\n- uid: System.IConvertible.GetTypeCode\n  commentId: M:System.IConvertible.GetTypeCode\n  id: GetTypeCode\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: GetTypeCode()\n  fullName: System.IConvertible.GetTypeCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetTypeCode\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 38\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the <xref href=\\\"System.TypeCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this instance.</p>\\n\"\n  syntax:\n    content: TypeCode GetTypeCode()\n    content.vb: Function GetTypeCode As TypeCode\n    return:\n      type: System.TypeCode\n      description: \"\\n<p>The enumerated constant that is the <xref href=\\\"System.TypeCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the class or value type that implements this interface.</p>\\n\"\n  nameWithType: IConvertible.GetTypeCode()\n- uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToBoolean(System.IFormatProvider)\n  id: ToBoolean(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToBoolean(IFormatProvider)\n  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToBoolean\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent Boolean value using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: bool ToBoolean(IFormatProvider provider)\n    content.vb: Function ToBoolean(provider As IFormatProvider) As Boolean\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A Boolean value equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToBoolean(IFormatProvider)\n- uid: System.IConvertible.ToByte(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToByte(System.IFormatProvider)\n  id: ToByte(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToByte(IFormatProvider)\n  fullName: System.IConvertible.ToByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToByte\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 8-bit unsigned integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: byte ToByte(IFormatProvider provider)\n    content.vb: Function ToByte(provider As IFormatProvider) As Byte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>An 8-bit unsigned integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToByte(IFormatProvider)\n- uid: System.IConvertible.ToChar(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToChar(System.IFormatProvider)\n  id: ToChar(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToChar(IFormatProvider)\n  fullName: System.IConvertible.ToChar(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToChar\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 49\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent Unicode character using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: char ToChar(IFormatProvider provider)\n    content.vb: Function ToChar(provider As IFormatProvider) As Char\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>A Unicode character equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToChar(IFormatProvider)\n- uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToDateTime(System.IFormatProvider)\n  id: ToDateTime(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToDateTime(IFormatProvider)\n  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToDateTime\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 61\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: DateTime ToDateTime(IFormatProvider provider)\n    content.vb: Function ToDateTime(provider As IFormatProvider) As Date\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToDateTime(IFormatProvider)\n- uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToDecimal(System.IFormatProvider)\n  id: ToDecimal(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToDecimal(IFormatProvider)\n  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToDecimal\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 60\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> number using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: decimal ToDecimal(IFormatProvider provider)\n    content.vb: Function ToDecimal(provider As IFormatProvider) As Decimal\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>A <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> number equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToDecimal(IFormatProvider)\n- uid: System.IConvertible.ToDouble(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToDouble(System.IFormatProvider)\n  id: ToDouble(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToDouble(IFormatProvider)\n  fullName: System.IConvertible.ToDouble(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToDouble\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 59\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent double-precision floating-point number using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: double ToDouble(IFormatProvider provider)\n    content.vb: Function ToDouble(provider As IFormatProvider) As Double\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>A double-precision floating-point number equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToDouble(IFormatProvider)\n- uid: System.IConvertible.ToInt16(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToInt16(System.IFormatProvider)\n  id: ToInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToInt16(IFormatProvider)\n  fullName: System.IConvertible.ToInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToInt16\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 16-bit signed integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: short ToInt16(IFormatProvider provider)\n    content.vb: Function ToInt16(provider As IFormatProvider) As Short\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>An 16-bit signed integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToInt16(IFormatProvider)\n- uid: System.IConvertible.ToInt32(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToInt32(System.IFormatProvider)\n  id: ToInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToInt32(IFormatProvider)\n  fullName: System.IConvertible.ToInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToInt32\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 54\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 32-bit signed integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: int ToInt32(IFormatProvider provider)\n    content.vb: Function ToInt32(provider As IFormatProvider) As Integer\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An 32-bit signed integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToInt32(IFormatProvider)\n- uid: System.IConvertible.ToInt64(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToInt64(System.IFormatProvider)\n  id: ToInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToInt64(IFormatProvider)\n  fullName: System.IConvertible.ToInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToInt64\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 64-bit signed integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: long ToInt64(IFormatProvider provider)\n    content.vb: Function ToInt64(provider As IFormatProvider) As Long\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>An 64-bit signed integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToInt64(IFormatProvider)\n- uid: System.IConvertible.ToSByte(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToSByte(System.IFormatProvider)\n  id: ToSByte(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToSByte(IFormatProvider)\n  fullName: System.IConvertible.ToSByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToSByte\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 8-bit signed integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: sbyte ToSByte(IFormatProvider provider)\n    content.vb: Function ToSByte(provider As IFormatProvider) As SByte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.SByte\n      description: \"\\n<p>An 8-bit signed integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToSByte(IFormatProvider)\n- uid: System.IConvertible.ToSingle(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToSingle(System.IFormatProvider)\n  id: ToSingle(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToSingle(IFormatProvider)\n  fullName: System.IConvertible.ToSingle(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToSingle\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 58\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent single-precision floating-point number using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: float ToSingle(IFormatProvider provider)\n    content.vb: Function ToSingle(provider As IFormatProvider) As Single\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>A single-precision floating-point number equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToSingle(IFormatProvider)\n- uid: System.IConvertible.ToString(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToString(IFormatProvider)\n  fullName: System.IConvertible.ToString(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 62\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: string ToString(IFormatProvider provider)\n    content.vb: Function ToString(provider As IFormatProvider) As String\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToString(IFormatProvider)\n- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  id: ToType(System.Type,System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToType(Type, IFormatProvider)\n  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToType\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 63\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the specified <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that has an equivalent value, using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: object ToType(Type conversionType, IFormatProvider provider)\n    content.vb: Function ToType(conversionType As Type, provider As IFormatProvider) As Object\n    parameters:\n    - id: conversionType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to which the value of this instance is converted. </p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance of type <em>conversionType</em> whose value is equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToType(Type, IFormatProvider)\n- uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt16(System.IFormatProvider)\n  id: ToUInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToUInt16(IFormatProvider)\n  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToUInt16\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 53\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 16-bit unsigned integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: ushort ToUInt16(IFormatProvider provider)\n    content.vb: Function ToUInt16(provider As IFormatProvider) As UShort\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.UInt16\n      description: \"\\n<p>An 16-bit unsigned integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToUInt16(IFormatProvider)\n- uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt32(System.IFormatProvider)\n  id: ToUInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToUInt32(IFormatProvider)\n  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToUInt32\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 55\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 32-bit unsigned integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: uint ToUInt32(IFormatProvider provider)\n    content.vb: Function ToUInt32(provider As IFormatProvider) As UInteger\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.UInt32\n      description: \"\\n<p>An 32-bit unsigned integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToUInt32(IFormatProvider)\n- uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt64(System.IFormatProvider)\n  id: ToUInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  langs:\n  - csharp\n  - vb\n  name: ToUInt64(IFormatProvider)\n  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IConvertible.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToUInt64\n    path: src/mscorlib/src/System/IConvertible.cs\n    startLine: 57\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of this instance to an equivalent 64-bit unsigned integer using the specified culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: ulong ToUInt64(IFormatProvider provider)\n    content.vb: Function ToUInt64(provider As IFormatProvider) As ULong\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface implementation that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>An 64-bit unsigned integer equivalent to the value of this instance.</p>\\n\"\n  nameWithType: IConvertible.ToUInt64(IFormatProvider)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  fullName: System.TypeCode\n  nameWithType: TypeCode\n  commentId: T:System.TypeCode\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  fullName: System.SByte\n  nameWithType: SByte\n  commentId: T:System.SByte\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  fullName: System.UInt16\n  nameWithType: UInt16\n  commentId: T:System.UInt16\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  nameWithType: UInt64\n  commentId: T:System.UInt64\n"}