{"nodes":[{"pos":[391,408],"content":"ObsoleteAttribute","needQuote":true,"nodes":[{"content":"ObsoleteAttribute","pos":[0,17]}]},{"pos":[2474,2483],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[2840,2859],"content":"ObsoleteAttribute()","needQuote":true,"nodes":[{"content":"ObsoleteAttribute()","pos":[0,19]}]},{"pos":[3807,3832],"content":"ObsoleteAttribute(String)","needQuote":true,"nodes":[{"content":"ObsoleteAttribute(String)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The text string that describes alternative workarounds.","pos":[4593,4653],"source":"\\n<p>The text string that describes alternative workarounds."},{"content":"&lt;/p&gt;\\n","pos":[4654,4660],"source":" </p>\\n"},{"pos":[5038,5072],"content":"ObsoleteAttribute(String, Boolean)","needQuote":true,"nodes":[{"content":"ObsoleteAttribute(String, Boolean)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The text string that describes alternative workarounds.","pos":[5958,6018],"source":"\\n<p>The text string that describes alternative workarounds."},{"content":"&lt;/p&gt;\\n","pos":[6019,6025],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the obsolete element usage generates a compiler error; &lt;strong&gt;false&lt;/strong&gt; if it generates a compiler warning.","pos":[6090,6235],"source":"\\n<p>\\n<strong>true</strong> if the obsolete element usage generates a compiler error; <strong>false</strong> if it generates a compiler warning."},{"content":"&lt;/p&gt;\\n","pos":[6236,6242],"source":" </p>\\n"},{"pos":[6543,6550],"content":"IsError","needQuote":true,"nodes":[{"content":"IsError","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the obsolete element usage is considered an error; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[7234,7351],"source":"\\n<p>\\n<strong>true</strong> if the obsolete element usage is considered an error; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7352,7396],"source":" The default is <strong>false</strong>.</p>\\n"},{"pos":[7691,7698],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The workaround text string.&lt;/p&gt;\\n","pos":[8357,8395],"source":"\\n<p>The workaround text string.</p>\\n"},{"pos":[8572,8578],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[8709,8715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8863,8872],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[9060,9074],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9199,9205],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9254,9255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9305,9311],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9371,9372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9458,9464],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9513,9514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9564,9570],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9630,9631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9834,9847],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9954,9965],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10019,10020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10047,10048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10124,10135],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10189,10190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10217,10218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10400,10410],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10505,10513],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10582,10583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10610,10611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10681,10689],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10758,10759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10786,10787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10984,11006],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11154,11160],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11227,11228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11278,11284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11345,11346]},{"pos":[11401,11407],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11467,11468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11565,11571],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11638,11639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11689,11695],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11756,11757]},{"pos":[11812,11818],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11878,11879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12124,12155],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12321,12336],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12412,12413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12463,12469],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12530,12531]},{"pos":[12586,12592],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12652,12653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12759,12774],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12850,12851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12901,12907],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12968,12969]},{"pos":[13024,13030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13090,13091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13317,13326],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13419,13426],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13494,13495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13522,13523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13592,13599],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13667,13668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13695,13696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13871,13888],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13997,14012],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14088,14089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14116,14117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14194,14209],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14285,14286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14313,14314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14483,14489],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14635,14642],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.ObsoleteAttribute\n  commentId: T:System.ObsoleteAttribute\n  id: ObsoleteAttribute\n  parent: System\n  children:\n  - System.ObsoleteAttribute.#ctor\n  - System.ObsoleteAttribute.#ctor(System.String)\n  - System.ObsoleteAttribute.#ctor(System.String,System.Boolean)\n  - System.ObsoleteAttribute.IsError\n  - System.ObsoleteAttribute.Message\n  langs:\n  - csharp\n  - vb\n  name: ObsoleteAttribute\n  fullName: System.ObsoleteAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/ObsoleteAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ObsoleteAttribute\n    path: src/mscorlib/src/System/ObsoleteAttribute.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Marks the program elements that are no longer in use. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Delegate, Inherited = false)]\n\n      [ComVisible(true)]\n\n      public sealed class ObsoleteAttribute : Attribute, _Attribute\n    content.vb: >-\n      <Serializable>\n\n      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Struct Or AttributeTargets.Enum Or AttributeTargets.Constructor Or AttributeTargets.Method Or AttributeTargets.Property Or AttributeTargets.Field Or AttributeTargets.Event Or AttributeTargets.Interface Or AttributeTargets.Delegate, Inherited:=False)>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class ObsoleteAttribute\n          Inherits Attribute\n          Implements _Attribute\n  seealso:\n  - type: System.Attribute\n    commentId: T:System.Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 6140\n    namedArguments:\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ObsoleteAttribute\n- uid: System.ObsoleteAttribute.#ctor\n  commentId: M:System.ObsoleteAttribute.#ctor\n  id: '#ctor'\n  parent: System.ObsoleteAttribute\n  langs:\n  - csharp\n  - vb\n  name: ObsoleteAttribute()\n  fullName: System.ObsoleteAttribute.ObsoleteAttribute()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ObsoleteAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ObsoleteAttribute.cs\n    startLine: 32\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ObsoleteAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with default properties.</p>\\n\"\n  syntax:\n    content: public ObsoleteAttribute()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ObsoleteAttribute.ObsoleteAttribute()\n- uid: System.ObsoleteAttribute.#ctor(System.String)\n  commentId: M:System.ObsoleteAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ObsoleteAttribute\n  langs:\n  - csharp\n  - vb\n  name: ObsoleteAttribute(String)\n  fullName: System.ObsoleteAttribute.ObsoleteAttribute(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ObsoleteAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ObsoleteAttribute.cs\n    startLine: 38\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ObsoleteAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified workaround message.</p>\\n\"\n  syntax:\n    content: public ObsoleteAttribute(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The text string that describes alternative workarounds. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ObsoleteAttribute.ObsoleteAttribute(String)\n- uid: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)\n  commentId: M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.ObsoleteAttribute\n  langs:\n  - csharp\n  - vb\n  name: ObsoleteAttribute(String, Boolean)\n  fullName: System.ObsoleteAttribute.ObsoleteAttribute(System.String, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ObsoleteAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ObsoleteAttribute.cs\n    startLine: 44\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ObsoleteAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a workaround message and a Boolean value indicating whether the obsolete element usage is considered an error.</p>\\n\"\n  syntax:\n    content: public ObsoleteAttribute(string message, bool error)\n    content.vb: Public Sub New(message As String, error As Boolean)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The text string that describes alternative workarounds. </p>\\n\"\n    - id: error\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the obsolete element usage generates a compiler error; <strong>false</strong> if it generates a compiler warning. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ObsoleteAttribute.ObsoleteAttribute(String, Boolean)\n- uid: System.ObsoleteAttribute.IsError\n  commentId: P:System.ObsoleteAttribute.IsError\n  id: IsError\n  parent: System.ObsoleteAttribute\n  langs:\n  - csharp\n  - vb\n  name: IsError\n  fullName: System.ObsoleteAttribute.IsError\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/ObsoleteAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsError\n    path: src/mscorlib/src/System/ObsoleteAttribute.cs\n    startLine: 54\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a Boolean value indicating whether the compiler will treat usage of the obsolete program element as an error.</p>\\n\"\n  syntax:\n    content: public bool IsError { get; }\n    content.vb: Public ReadOnly Property IsError As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the obsolete element usage is considered an error; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ObsoleteAttribute.IsError\n- uid: System.ObsoleteAttribute.Message\n  commentId: P:System.ObsoleteAttribute.Message\n  id: Message\n  parent: System.ObsoleteAttribute\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.ObsoleteAttribute.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/ObsoleteAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/ObsoleteAttribute.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the workaround message, including a description of the alternative program elements.</p>\\n\"\n  syntax:\n    content: public string Message { get; }\n    content.vb: Public ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The workaround text string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ObsoleteAttribute.Message\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n"}