{"nodes":[{"pos":[818,837],"content":"BaseNumberConverter","needQuote":true,"nodes":[{"content":"BaseNumberConverter","pos":[0,19]}]},{"pos":[5583,5604],"content":"BaseNumberConverter()","needQuote":true,"nodes":[{"content":"BaseNumberConverter()","pos":[0,21]}]},{"pos":[6898,6942],"content":"CanConvertFrom(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext, Type)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this converter can perform the operation; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8408,8522],"source":"\\n<p>\\n<strong>true</strong> if this converter can perform the operation; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9225,9267],"content":"CanConvertTo(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext, Type)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this converter can perform the operation; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10585,10699],"source":"\\n<p>\\n<strong>true</strong> if this converter can perform the operation; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11500,11556],"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The object to convert.","pos":[13068,13095],"source":"\\n<p>The object to convert."},{"content":"&lt;/p&gt;\\n","pos":[13096,13102],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is not a valid value for the target type.&lt;/p&gt;\\n","pos":[13536,13605],"source":"\\n<p>\\n<em>value</em> is not a valid value for the target type.</p>\\n"},{"content":"\\n&lt;p&gt;The conversion cannot be performed.","pos":[13710,13750],"source":"\\n<p>The conversion cannot be performed."},{"content":"&lt;/p&gt;\\n","pos":[13751,13757],"source":" </p>\\n"},{"pos":[14481,14541],"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The object to convert.","pos":[16095,16122],"source":"\\n<p>The object to convert."},{"content":"&lt;/p&gt;\\n","pos":[16123,16129],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type to convert the object to.","pos":[16201,16240],"source":"\\n<p>The type to convert the object to."},{"content":"&lt;/p&gt;\\n","pos":[16241,16247],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;destinationType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[16715,16778],"source":"\\n<p>\\n<em>destinationType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The conversion cannot be performed.","pos":[16883,16923],"source":"\\n<p>The conversion cannot be performed."},{"content":"&lt;/p&gt;\\n","pos":[16924,16930],"source":" </p>\\n"},{"pos":[17183,17204],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[17380,17386],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17568,17581],"content":"TypeConverter","needQuote":true,"nodes":[{"content":"TypeConverter","pos":[0,13]}]},{"pos":[17855,17875],"content":"CanConvertFrom(Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(Type)","pos":[0,20]}]},{"pos":[18050,18064],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[18140,18141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18189,18193],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18251,18252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18363,18377],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[18453,18454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18502,18506],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18564,18565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18854,18872],"content":"CanConvertTo(Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(Type)","pos":[0,18]}]},{"pos":[19043,19055],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[19129,19130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19178,19182],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[19240,19241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19350,19362],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[19436,19437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19485,19489],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[19547,19548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19834,19853],"content":"ConvertFrom(Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(Object)","pos":[0,19]}]},{"pos":[20026,20037],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[20110,20111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20161,20167],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20227,20228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20338,20349],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[20422,20423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20473,20479],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20539,20540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20888,20946],"content":"ConvertFromInvariantString(ITypeDescriptorContext, String)","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString(ITypeDescriptorContext, String)","pos":[0,58]}]},{"pos":[21240,21266],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[21354,21355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21436,21458],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[21529,21530]},{"pos":[21585,21591],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21651,21652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21822,21848],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[21936,21937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22018,22040],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[22111,22112]},{"pos":[22167,22173],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22233,22234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22636,22670],"content":"ConvertFromInvariantString(String)","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString(String)","pos":[0,34]}]},{"pos":[22873,22899],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[22987,22988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23038,23044],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23104,23105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23230,23256],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[23344,23345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23395,23401],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23461,23462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23864,23926],"content":"ConvertFromString(ITypeDescriptorContext, CultureInfo, String)","needQuote":true,"nodes":[{"content":"ConvertFromString(ITypeDescriptorContext, CultureInfo, String)","pos":[0,62]}]},{"pos":[24269,24286],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[24365,24366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24447,24469],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[24540,24541]},{"pos":[24615,24626],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[24706,24707]},{"pos":[24762,24768],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24828,24829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25023,25040],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[25119,25120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25201,25223],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[25294,25295]},{"pos":[25369,25380],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[25460,25461]},{"pos":[25516,25522],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25582,25583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26049,26098],"content":"ConvertFromString(ITypeDescriptorContext, String)","needQuote":true,"nodes":[{"content":"ConvertFromString(ITypeDescriptorContext, String)","pos":[0,49]}]},{"pos":[26374,26391],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[26470,26471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26552,26574],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[26645,26646]},{"pos":[26701,26707],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26767,26768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26929,26946],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[27025,27026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27107,27129],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[27200,27201]},{"pos":[27256,27262],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27322,27323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27698,27723],"content":"ConvertFromString(String)","needQuote":true,"nodes":[{"content":"ConvertFromString(String)","pos":[0,25]}]},{"pos":[27908,27925],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[28004,28005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28055,28061],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28121,28122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28238,28255],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[28334,28335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28385,28391],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28451,28452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28762,28785],"content":"ConvertTo(Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(Object, Type)","pos":[0,23]}]},{"pos":[28979,28988],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[29059,29060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29110,29116],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29177,29178]},{"pos":[29231,29235],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[29293,29294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29414,29423],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[29494,29495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29545,29551],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29612,29613]},{"pos":[29666,29670],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[29728,29729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30089,30145],"content":"ConvertToInvariantString(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"ConvertToInvariantString(ITypeDescriptorContext, Object)","pos":[0,56]}]},{"pos":[30435,30459],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[30545,30546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30627,30649],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[30720,30721]},{"pos":[30776,30782],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30842,30843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31011,31035],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[31121,31122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31203,31225],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[31296,31297]},{"pos":[31352,31358],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31418,31419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31815,31847],"content":"ConvertToInvariantString(Object)","needQuote":true,"nodes":[{"content":"ConvertToInvariantString(Object)","pos":[0,32]}]},{"pos":[32046,32070],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[32156,32157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32207,32213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32273,32274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32397,32421],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[32507,32508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32558,32564],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32624,32625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33021,33081],"content":"ConvertToString(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertToString(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,60]}]},{"pos":[33420,33435],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[33512,33513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33594,33616],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[33687,33688]},{"pos":[33762,33773],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[33853,33854]},{"pos":[33909,33915],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33975,33976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34168,34183],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[34260,34261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34342,34364],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[34435,34436]},{"pos":[34510,34521],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[34601,34602]},{"pos":[34657,34663],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34723,34724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35184,35231],"content":"ConvertToString(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"ConvertToString(ITypeDescriptorContext, Object)","pos":[0,47]}]},{"pos":[35503,35518],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[35595,35596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35677,35699],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[35770,35771]},{"pos":[35826,35832],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35892,35893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36052,36067],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[36144,36145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36226,36248],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[36319,36320]},{"pos":[36375,36381],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36441,36442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36811,36834],"content":"ConvertToString(Object)","needQuote":true,"nodes":[{"content":"ConvertToString(Object)","pos":[0,23]}]},{"pos":[37015,37030],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[37107,37108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37158,37164],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37224,37225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37339,37354],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[37431,37432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37482,37488],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37548,37549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37865,37892],"content":"CreateInstance(IDictionary)","needQuote":true,"nodes":[{"content":"CreateInstance(IDictionary)","pos":[0,27]}]},{"pos":[38105,38119],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[38195,38196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38263,38274],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[38351,38352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38482,38496],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[38572,38573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38640,38651],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[38728,38729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39110,39161],"content":"CreateInstance(ITypeDescriptorContext, IDictionary)","needQuote":true,"nodes":[{"content":"CreateInstance(ITypeDescriptorContext, IDictionary)","pos":[0,51]}]},{"pos":[39465,39479],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[39555,39556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39637,39659],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[39730,39731]},{"pos":[39803,39814],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[39891,39892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40067,40081],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[40157,40158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40239,40261],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[40332,40333]},{"pos":[40405,40416],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[40493,40494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40891,40922],"content":"GetConvertFromException(Object)","needQuote":true,"nodes":[{"content":"GetConvertFromException(Object)","pos":[0,31]}]},{"pos":[41119,41142],"content":"GetConvertFromException","needQuote":true,"nodes":[{"content":"GetConvertFromException","pos":[0,23]}]},{"pos":[41227,41228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41278,41284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41344,41345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41467,41490],"content":"GetConvertFromException","needQuote":true,"nodes":[{"content":"GetConvertFromException","pos":[0,23]}]},{"pos":[41575,41576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41626,41632],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41692,41693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42027,42062],"content":"GetConvertToException(Object, Type)","needQuote":true,"nodes":[{"content":"GetConvertToException(Object, Type)","pos":[0,35]}]},{"pos":[42280,42301],"content":"GetConvertToException","needQuote":true,"nodes":[{"content":"GetConvertToException","pos":[0,21]}]},{"pos":[42384,42385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42435,42441],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42502,42503]},{"pos":[42556,42560],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[42618,42619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42751,42772],"content":"GetConvertToException","needQuote":true,"nodes":[{"content":"GetConvertToException","pos":[0,21]}]},{"pos":[42855,42856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42906,42912],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42973,42974]},{"pos":[43027,43031],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43089,43090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43417,43445],"content":"GetCreateInstanceSupported()","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported()","pos":[0,28]}]},{"pos":[43620,43646],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[43734,43735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43762,43763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43873,43899],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[43987,43988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44015,44016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44360,44410],"content":"GetCreateInstanceSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[44675,44701],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[44789,44790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44871,44893],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[44963,44964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45120,45146],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[45234,45235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45316,45338],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[45408,45409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45821,45866],"content":"GetProperties(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"GetProperties(ITypeDescriptorContext, Object)","pos":[0,45]}]},{"pos":[46134,46147],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[46222,46223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46304,46326],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[46397,46398]},{"pos":[46453,46459],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46519,46520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46677,46690],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[46765,46766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46847,46869],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[46940,46941]},{"pos":[46996,47002],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47062,47063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47490,47548],"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","pos":[0,58]}]},{"pos":[48071,48084],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[48159,48160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48241,48263],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[48334,48335]},{"pos":[48390,48396],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48457,48458]},{"pos":[48516,48525],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[48589,48591]},{"pos":[48622,48623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48799,48812],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[48887,48888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48969,48991],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[49062,49063]},{"pos":[49118,49124],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[49185,49186]},{"pos":[49244,49253],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[49316,49318],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[49346,49347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49834,49855],"content":"GetProperties(Object)","needQuote":true,"nodes":[{"content":"GetProperties(Object)","pos":[0,21]}]},{"pos":[50032,50045],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[50120,50121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50171,50177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50237,50238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50350,50363],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[50438,50439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50489,50495],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50555,50556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50845,50869],"content":"GetPropertiesSupported()","needQuote":true,"nodes":[{"content":"GetPropertiesSupported()","pos":[0,24]}]},{"pos":[51036,51058],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[51142,51143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51170,51171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51277,51299],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[51383,51384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51411,51412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51744,51790],"content":"GetPropertiesSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetPropertiesSupported(ITypeDescriptorContext)","pos":[0,46]}]},{"pos":[52047,52069],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[52153,52154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52235,52257],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[52327,52328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52480,52502],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[52586,52587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52668,52690],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[52760,52761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53110,53129],"content":"GetStandardValues()","needQuote":true,"nodes":[{"content":"GetStandardValues()","pos":[0,19]}]},{"pos":[53286,53303],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[53382,53383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53410,53411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53512,53529],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[53608,53609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53636,53637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53954,53995],"content":"GetStandardValues(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValues(ITypeDescriptorContext)","pos":[0,41]}]},{"pos":[54242,54259],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[54338,54339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54420,54442],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[54512,54513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54660,54677],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[54756,54757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54838,54860],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[54930,54931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55279,55307],"content":"GetStandardValuesExclusive()","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive()","pos":[0,28]}]},{"pos":[55482,55508],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[55596,55597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55624,55625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55735,55761],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[55849,55850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55877,55878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56222,56272],"content":"GetStandardValuesExclusive(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[56537,56563],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[56651,56652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56733,56755],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[56825,56826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56982,57008],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[57096,57097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57178,57200],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[57270,57271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57637,57665],"content":"GetStandardValuesSupported()","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported()","pos":[0,28]}]},{"pos":[57840,57866],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[57954,57955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57982,57983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58093,58119],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[58207,58208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58235,58236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58580,58630],"content":"GetStandardValuesSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[58895,58921],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[59009,59010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59091,59113],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[59183,59184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59340,59366],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[59454,59455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59536,59558],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[59628,59629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60035,60074],"content":"IsValid(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"IsValid(ITypeDescriptorContext, Object)","pos":[0,39]}]},{"pos":[60330,60337],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[60406,60407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60488,60510],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[60581,60582]},{"pos":[60637,60643],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60703,60704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60855,60862],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[60931,60932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61013,61035],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[61106,61107]},{"pos":[61162,61168],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61228,61229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61574,61589],"content":"IsValid(Object)","needQuote":true,"nodes":[{"content":"IsValid(Object)","pos":[0,15]}]},{"pos":[61754,61761],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[61830,61831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61881,61887],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61947,61948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62054,62061],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[62130,62131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62181,62187],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62247,62248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62584,62638],"content":"SortProperties(PropertyDescriptorCollection, String[])","needQuote":true,"nodes":[{"content":"SortProperties(PropertyDescriptorCollection, String[])","pos":[0,54]}]},{"pos":[63125,63139],"content":"SortProperties","needQuote":true,"nodes":[{"content":"SortProperties","pos":[0,14]}]},{"pos":[63215,63216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63303,63331],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"content":",","pos":[63408,63409]},{"pos":[63464,63470],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[63531,63533]},{"pos":[63564,63565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63731,63745],"content":"SortProperties","needQuote":true,"nodes":[{"content":"SortProperties","pos":[0,14]}]},{"pos":[63821,63822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63909,63937],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"content":",","pos":[64014,64015]},{"pos":[64070,64076],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64136,64138],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[64166,64167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64572,64582],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[64677,64685],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64754,64755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64782,64783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64853,64861],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64930,64931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64958,64959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65142,65156],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[65275,65281],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65348,65349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65399,65405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65465,65466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65549,65555],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65622,65623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65673,65679],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65739,65740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65954,65976],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[66124,66130],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66197,66198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66248,66254],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66315,66316]},{"pos":[66371,66377],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66437,66438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66535,66541],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66608,66609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66659,66665],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66726,66727]},{"pos":[66782,66788],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66848,66849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67094,67125],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[67291,67306],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67382,67383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67433,67439],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67500,67501]},{"pos":[67556,67562],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67622,67623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67729,67744],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67820,67821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67871,67877],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67938,67939]},{"pos":[67994,68000],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68060,68061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68291,68304],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[68405,68416],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[68488,68489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68516,68517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68590,68601],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[68673,68674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68701,68702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68877,68886],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[68979,68986],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[69054,69055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69082,69083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69152,69159],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[69227,69228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69255,69256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69431,69448],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[69557,69572],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[69648,69649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69676,69677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69754,69769],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[69845,69846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69873,69874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70019,70025],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[70279,70323],"content":"CanConvertFrom(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext, Type)","pos":[0,44]}]},{"pos":[70589,70603],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[70679,70680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70761,70783],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[70854,70855]},{"pos":[70908,70912],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[70970,70971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71127,71141],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[71217,71218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71299,71321],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[71392,71393]},{"pos":[71446,71450],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[71508,71509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71837,71859],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[72080,72084],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[72224,72231],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72500,72542],"content":"CanConvertTo(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext, Type)","pos":[0,42]}]},{"pos":[72804,72816],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[72890,72891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72972,72994],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[73065,73066]},{"pos":[73119,73123],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[73181,73182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73336,73348],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[73422,73423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73504,73526],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[73597,73598]},{"pos":[73651,73655],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[73713,73714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74147,74203],"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,56]}]},{"pos":[74534,74545],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[74618,74619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74700,74722],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[74793,74794]},{"pos":[74868,74879],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[74959,74960]},{"pos":[75015,75021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75081,75082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75270,75281],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[75354,75355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75436,75458],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[75529,75530]},{"pos":[75604,75615],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[75695,75696]},{"pos":[75751,75757],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75817,75818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76177,76188],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[76366,76386],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[76724,76784],"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","pos":[0,60]}]},{"pos":[77136,77145],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[77216,77217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77298,77320],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[77391,77392]},{"pos":[77466,77477],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[77557,77558]},{"pos":[77613,77619],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[77680,77681]},{"pos":[77734,77738],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[77796,77797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77995,78004],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[78075,78076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78157,78179],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[78250,78251]},{"pos":[78325,78336],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[78416,78417]},{"pos":[78472,78478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78539,78540]},{"pos":[78593,78597],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78655,78656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78999,79008],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[79177,79198],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[79386,79407],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.ComponentModel.BaseNumberConverter\n  commentId: T:System.ComponentModel.BaseNumberConverter\n  id: BaseNumberConverter\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.BaseNumberConverter.#ctor\n  - System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  - vb\n  name: BaseNumberConverter\n  fullName: System.ComponentModel.BaseNumberConverter\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseNumberConverter\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides a base type converter for nonfloating-point numerical types.</p>\\n\"\n  syntax:\n    content: 'public abstract class BaseNumberConverter : TypeConverter'\n    content.vb: >-\n      Public MustInherit Class BaseNumberConverter\n          Inherits TypeConverter\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: BaseNumberConverter\n- uid: System.ComponentModel.BaseNumberConverter.#ctor\n  commentId: M:System.ComponentModel.BaseNumberConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.BaseNumberConverter\n  langs:\n  - csharp\n  - vb\n  name: BaseNumberConverter()\n  fullName: System.ComponentModel.BaseNumberConverter.BaseNumberConverter()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs\n    startLine: 47\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.BaseNumberConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected BaseNumberConverter()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: BaseNumberConverter.BaseNumberConverter()\n- uid: System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.BaseNumberConverter\n  langs:\n  - csharp\n  - vb\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanConvertFrom\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n    startLine: 65\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Determines if this converter can convert an object in the given source type to the native type of the converter.</p>\\n\"\n  syntax:\n    content: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)\n    content.vb: Public Overrides Function CanConvertFrom(context As ITypeDescriptorContext, sourceType As Type) As Boolean\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.ITypeDescriptorContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides a format context. </p>\\n\"\n    - id: sourceType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the type from which you want to convert. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this converter can perform the operation; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: BaseNumberConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.BaseNumberConverter\n  langs:\n  - csharp\n  - vb\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanConvertTo\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n    startLine: 136\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a value indicating whether this converter can convert an object to the given destination type using the context.</p>\\n\"\n  syntax:\n    content: public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)\n    content.vb: Public Overrides Function CanConvertTo(context As ITypeDescriptorContext, destinationType As Type) As Boolean\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.ITypeDescriptorContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides a format context. </p>\\n\"\n    - id: destinationType\n      type: System.Type\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this converter can perform the operation; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: BaseNumberConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.BaseNumberConverter\n  langs:\n  - csharp\n  - vb\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConvertFrom\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n    startLine: 73\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Converts the given object to the converter's native type.</p>\\n\"\n  syntax:\n    content: public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)\n    content.vb: Public Overrides Function ConvertFrom(context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.ITypeDescriptorContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides a format context. </p>\\n\"\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>A <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the culture to represent the number. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to convert. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the converted value.</p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"\\n<p>\\n<em>value</em> is not a valid value for the target type.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The conversion cannot be performed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: BaseNumberConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.BaseNumberConverter\n  langs:\n  - csharp\n  - vb\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConvertTo\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/BaseNumberConverter.cs\n    startLine: 112\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Converts the specified object to another type.</p>\\n\"\n  syntax:\n    content: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)\n    content.vb: Public Overrides Function ConvertTo(context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.ITypeDescriptorContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides a format context. </p>\\n\"\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>A <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the culture to represent the number. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to convert. </p>\\n\"\n    - id: destinationType\n      type: System.Type\n      description: \"\\n<p>The type to convert the object to. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the converted value.</p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>destinationType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The conversion cannot be performed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: BaseNumberConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n  nameWithType: TypeConverter\n  commentId: T:System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertFrom(Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertTo(Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFrom(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromInvariantString(String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertTo(Object, Type)\n  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToInvariantString(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CreateInstance(IDictionary)\n  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetConvertFromException(Object)\n  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    name: GetConvertFromException\n    fullName: System.ComponentModel.TypeConverter.GetConvertFromException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    name: GetConvertFromException\n    fullName: System.ComponentModel.TypeConverter.GetConvertFromException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetConvertToException(Object, Type)\n  fullName: System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    name: GetConvertToException\n    fullName: System.ComponentModel.TypeConverter.GetConvertToException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    name: GetConvertToException\n    fullName: System.ComponentModel.TypeConverter.GetConvertToException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])\n  fullname.vb: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute())\n  name.vb: GetProperties(ITypeDescriptorContext, Object, Attribute())\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType.vb: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute())\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(Object)\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.Object)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValues()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValues()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: IsValid(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: IsValid(Object)\n  fullName: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.IsValid(Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  fullName: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])\n  fullname.vb: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String())\n  name.vb: SortProperties(PropertyDescriptorCollection, String())\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n    name: SortProperties\n    fullName: System.ComponentModel.TypeConverter.SortProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptorCollection\n    name: PropertyDescriptorCollection\n    fullName: System.ComponentModel.PropertyDescriptorCollection\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n    name: SortProperties\n    fullName: System.ComponentModel.TypeConverter.SortProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptorCollection\n    name: PropertyDescriptorCollection\n    fullName: System.ComponentModel.PropertyDescriptorCollection\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType.vb: TypeConverter.SortProperties(PropertyDescriptorCollection, String())\n  commentId: M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  commentId: T:System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  fullName: System.Globalization.CultureInfo\n  nameWithType: CultureInfo\n  commentId: T:System.Globalization.CultureInfo\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}