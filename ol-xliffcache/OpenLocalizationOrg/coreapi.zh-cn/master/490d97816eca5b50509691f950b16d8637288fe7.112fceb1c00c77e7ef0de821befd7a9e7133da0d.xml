{"nodes":[{"pos":[669,681],"content":"CmsRecipient","needQuote":true,"nodes":[{"content":"CmsRecipient","pos":[0,12]}]},{"pos":[2525,2578],"content":"CmsRecipient(SubjectIdentifierType, X509Certificate2)","needQuote":true,"nodes":[{"content":"CmsRecipient(SubjectIdentifierType, X509Certificate2)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.","pos":[4697,4786],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument."},{"content":"&lt;/p&gt;\\n","pos":[4787,4793],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[4944,5004],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"pos":[5845,5875],"content":"CmsRecipient(X509Certificate2)","needQuote":true,"nodes":[{"content":"CmsRecipient(X509Certificate2)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.&lt;/p&gt;\\n","pos":[7416,7511],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n"},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[7662,7722],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"pos":[8476,8487],"content":"Certificate","needQuote":true,"nodes":[{"content":"Certificate","pos":[0,11]}]},{"pos":[10316,10339],"content":"RecipientIdentifierType","needQuote":true,"nodes":[{"content":"RecipientIdentifierType","pos":[0,23]}]},{"pos":[12025,12058],"content":"System.Security.Cryptography.Pkcs","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.Pkcs","pos":[0,33]}]},{"pos":[12270,12276],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12436,12446],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12541,12549],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12618,12619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12646,12647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12717,12725],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12794,12795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12822,12823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13006,13020],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13139,13145],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13212,13213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13263,13269],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13329,13330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13413,13419],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13486,13487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13537,13543],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13603,13604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13818,13840],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13988,13994],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14061,14062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14112,14118],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14179,14180]},{"pos":[14235,14241],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14301,14302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14399,14405],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14472,14473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14523,14529],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14590,14591]},{"pos":[14646,14652],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14712,14713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14958,14989],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15155,15170],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15246,15247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15297,15303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15364,15365]},{"pos":[15420,15426],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15486,15487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15593,15608],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15684,15685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15735,15741],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15802,15803]},{"pos":[15858,15864],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15924,15925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16155,16168],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16269,16280],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16352,16353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16380,16381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16454,16465],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16537,16538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16565,16566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16741,16750],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[16843,16850],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16918,16919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16946,16947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17016,17023],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17091,17092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17119,17120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17295,17312],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17421,17436],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17512,17513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17540,17541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17618,17633],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17709,17710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17737,17738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17883,17889],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18089,18110],"content":"SubjectIdentifierType","needQuote":true,"nodes":[{"content":"SubjectIdentifierType","pos":[0,21]}]},{"pos":[18442,18458],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"pos":[18726,18771],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[19017,19038],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[19249,19271],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]}],"content":"items:\n- uid: System.Security.Cryptography.Pkcs.CmsRecipient\n  commentId: T:System.Security.Cryptography.Pkcs.CmsRecipient\n  id: CmsRecipient\n  parent: System.Security.Cryptography.Pkcs\n  children:\n  - System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.Pkcs.CmsRecipient.Certificate\n  - System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType\n  langs:\n  - csharp\n  - vb\n  name: CmsRecipient\n  fullName: System.Security.Cryptography.Pkcs.CmsRecipient\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CmsRecipient\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 51\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class defines the recipient of a CMS/PKCS #7 message.</p>\\n\"\n  syntax:\n    content: public sealed class CmsRecipient\n    content.vb: Public NotInheritable Class CmsRecipient\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: CmsRecipient\n- uid: System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.Security.Cryptography.Pkcs.CmsRecipient\n  langs:\n  - csharp\n  - vb\n  name: CmsRecipient(SubjectIdentifierType, X509Certificate2)\n  fullName: System.Security.Cryptography.Pkcs.CmsRecipient.CmsRecipient(System.Security.Cryptography.Pkcs.SubjectIdentifierType, System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 53\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor constructs an instance of the <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified recipient identifier type and recipient certificate.</p>\\n\"\n  syntax:\n    content: public CmsRecipient(SubjectIdentifierType recipientIdentifierType, X509Certificate2 certificate)\n    content.vb: Public Sub New(recipientIdentifierType As SubjectIdentifierType, certificate As X509Certificate2)\n    parameters:\n    - id: recipientIdentifierType\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType\n      description: \"\\n<p>A member of the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration that specifies the type of the identifier of the recipient.</p>\\n\"\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the recipient certificate.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n    commentId: M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CmsRecipient.CmsRecipient(SubjectIdentifierType, X509Certificate2)\n- uid: System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.Security.Cryptography.Pkcs.CmsRecipient\n  langs:\n  - csharp\n  - vb\n  name: CmsRecipient(X509Certificate2)\n  fullName: System.Security.Cryptography.Pkcs.CmsRecipient.CmsRecipient(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 54\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor constructs an instance of the <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified recipient certificate.</p>\\n\"\n  syntax:\n    content: public CmsRecipient(X509Certificate2 certificate)\n    content.vb: Public Sub New(certificate As X509Certificate2)\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the recipient certificate.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)\n    commentId: M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CmsRecipient.CmsRecipient(X509Certificate2)\n- uid: System.Security.Cryptography.Pkcs.CmsRecipient.Certificate\n  commentId: P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate\n  id: Certificate\n  parent: System.Security.Cryptography.Pkcs.CmsRecipient\n  langs:\n  - csharp\n  - vb\n  name: Certificate\n  fullName: System.Security.Cryptography.Pkcs.CmsRecipient.Certificate\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Certificate\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 55\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient.Certificate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the certificate associated with the recipient.</p>\\n\"\n  syntax:\n    content: >-\n      public X509Certificate2 Certificate\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Certificate As X509Certificate2\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that holds the certificate associated with the recipient.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType\n    commentId: P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CmsRecipient.Certificate\n- uid: System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType\n  commentId: P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType\n  id: RecipientIdentifierType\n  parent: System.Security.Cryptography.Pkcs.CmsRecipient\n  langs:\n  - csharp\n  - vb\n  name: RecipientIdentifierType\n  fullName: System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecipientIdentifierType\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 56\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the type of the identifier of the recipient.</p>\\n\"\n  syntax:\n    content: >-\n      public SubjectIdentifierType RecipientIdentifierType\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property RecipientIdentifierType As SubjectIdentifierType\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType\n      description: \"\\n<p>A member of the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration that specifies the type of the identifier of the recipient.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.CmsRecipient.Certificate\n    commentId: P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CmsRecipient.RecipientIdentifierType\nreferences:\n- uid: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: System.Security.Cryptography.Pkcs\n  fullName: System.Security.Cryptography.Pkcs\n  commentId: N:System.Security.Cryptography.Pkcs\n  nameWithType: System.Security.Cryptography.Pkcs\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SubjectIdentifierType\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifierType\n  nameWithType: SubjectIdentifierType\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2\n  nameWithType: X509Certificate2\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n"}