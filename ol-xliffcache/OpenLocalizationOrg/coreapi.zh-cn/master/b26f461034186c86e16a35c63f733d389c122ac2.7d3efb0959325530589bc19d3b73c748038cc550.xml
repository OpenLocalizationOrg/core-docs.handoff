{"nodes":[{"pos":[446,459],"content":"BooleanSwitch","needQuote":true,"nodes":[{"content":"BooleanSwitch","pos":[0,13]}]},{"pos":[2437,2466],"content":"BooleanSwitch(String, String)","needQuote":true,"nodes":[{"content":"BooleanSwitch(String, String)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The name to display on a user interface.","pos":[3404,3449],"source":"\\n<p>The name to display on a user interface."},{"content":"&lt;/p&gt;\\n","pos":[3450,3456],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The description of the switch.","pos":[3526,3561],"source":"\\n<p>The description of the switch."},{"content":"&lt;/p&gt;\\n","pos":[3562,3568],"source":" </p>\\n"},{"pos":[4346,4383],"content":"BooleanSwitch(String, String, String)","needQuote":true,"nodes":[{"content":"BooleanSwitch(String, String, String)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The name to display on the user interface.","pos":[5417,5464],"source":"\\n<p>The name to display on the user interface."},{"content":"&lt;/p&gt;\\n","pos":[5465,5471],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The description of the switch.","pos":[5541,5576],"source":"\\n<p>The description of the switch."},{"content":"&lt;/p&gt;\\n","pos":[5577,5583],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The default value of the switch.&lt;/p&gt;\\n","pos":[5660,5703],"source":"\\n<p>The default value of the switch.</p>\\n"},{"pos":[6027,6034],"content":"Enabled","needQuote":true,"nodes":[{"content":"Enabled","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the switch is enabled; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[6769,6858],"source":"\\n<p>\\n<strong>true</strong> if the switch is enabled; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6859,6903],"source":" The default is <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the correct permission.&lt;/p&gt;\\n","pos":[7032,7091],"source":"\\n<p>The caller does not have the correct permission.</p>\\n"},{"pos":[7887,7903],"content":"OnValueChanged()","needQuote":true,"nodes":[{"content":"OnValueChanged()","pos":[0,16]}]},{"pos":[8944,8962],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[9129,9135],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9304,9310],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[9522,9533],"content":"Description","needQuote":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[9781,9792],"content":"DisplayName","needQuote":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[10042,10055],"content":"SwitchSetting","needQuote":true,"nodes":[{"content":"SwitchSetting","pos":[0,13]}]},{"pos":[10303,10308],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[10549,10573],"content":"OnSwitchSettingChanged()","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged()","pos":[0,24]}]},{"pos":[10720,10742],"content":"OnSwitchSettingChanged","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged","pos":[0,22]}]},{"pos":[10816,10817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10844,10845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10941,10963],"content":"OnSwitchSettingChanged","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged","pos":[0,22]}]},{"pos":[11037,11038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11065,11066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11276,11286],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11381,11389],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11458,11459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11486,11487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11557,11565],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11634,11635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11662,11663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11846,11860],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11979,11985],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12052,12053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12103,12109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12169,12170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12253,12259],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12326,12327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12377,12383],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12443,12444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12658,12680],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12828,12834],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12901,12902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12952,12958],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13019,13020]},{"pos":[13075,13081],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13141,13142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13239,13245],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13312,13313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13363,13369],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13430,13431]},{"pos":[13486,13492],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13552,13553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13798,13829],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13995,14010],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14086,14087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14137,14143],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14204,14205]},{"pos":[14260,14266],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14326,14327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14433,14448],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14524,14525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14575,14581],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14642,14643]},{"pos":[14698,14704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14764,14765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14995,15008],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15109,15120],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15192,15193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15220,15221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15294,15305],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15377,15378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15405,15406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15581,15590],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15683,15690],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15758,15759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15786,15787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15856,15863],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15931,15932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15959,15960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16135,16152],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16261,16276],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16352,16353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16380,16381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16458,16473],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16549,16550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16577,16578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16723,16729],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16860,16866],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[17012,17019],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17213,17229],"content":"OnValueChanged()","needQuote":true,"nodes":[{"content":"OnValueChanged()","pos":[0,16]}]},{"pos":[17360,17374],"content":"OnValueChanged","needQuote":true,"nodes":[{"content":"OnValueChanged","pos":[0,14]}]},{"pos":[17440,17441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17468,17469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17557,17571],"content":"OnValueChanged","needQuote":true,"nodes":[{"content":"OnValueChanged","pos":[0,14]}]},{"pos":[17637,17638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17665,17666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17848,17865],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]}],"content":"items:\n- uid: System.Diagnostics.BooleanSwitch\n  commentId: T:System.Diagnostics.BooleanSwitch\n  id: BooleanSwitch\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)\n  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)\n  - System.Diagnostics.BooleanSwitch.Enabled\n  - System.Diagnostics.BooleanSwitch.OnValueChanged\n  langs:\n  - csharp\n  - vb\n  name: BooleanSwitch\n  fullName: System.Diagnostics.BooleanSwitch\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BooleanSwitch\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n    startLine: 13\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Provides a simple on/off switch that controls debugging and tracing output.</p>\\n\"\n  syntax:\n    content: 'public class BooleanSwitch : Switch'\n    content.vb: >-\n      Public Class BooleanSwitch\n          Inherits Switch\n  seealso:\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  inheritance:\n  - System.Object\n  - System.Diagnostics.Switch\n  inheritedMembers:\n  - System.Diagnostics.Switch.Description\n  - System.Diagnostics.Switch.DisplayName\n  - System.Diagnostics.Switch.SwitchSetting\n  - System.Diagnostics.Switch.Value\n  - System.Diagnostics.Switch.OnSwitchSettingChanged\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: BooleanSwitch\n- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)\n  commentId: M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  - vb\n  name: BooleanSwitch(String, String)\n  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n    startLine: 19\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.BooleanSwitch\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified display name and description.</p>\\n\"\n  syntax:\n    content: public BooleanSwitch(string displayName, string description)\n    content.vb: Public Sub New(displayName As String, description As String)\n    parameters:\n    - id: displayName\n      type: System.String\n      description: \"\\n<p>The name to display on a user interface. </p>\\n\"\n    - id: description\n      type: System.String\n      description: \"\\n<p>The description of the switch. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BooleanSwitch.BooleanSwitch(String, String)\n- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  - vb\n  name: BooleanSwitch(String, String, String)\n  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n    startLine: 24\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.BooleanSwitch\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified display name, description, and default switch value. </p>\\n\"\n  syntax:\n    content: public BooleanSwitch(string displayName, string description, string defaultSwitchValue)\n    content.vb: Public Sub New(displayName As String, description As String, defaultSwitchValue As String)\n    parameters:\n    - id: displayName\n      type: System.String\n      description: \"\\n<p>The name to display on the user interface. </p>\\n\"\n    - id: description\n      type: System.String\n      description: \"\\n<p>The description of the switch. </p>\\n\"\n    - id: defaultSwitchValue\n      type: System.String\n      description: \"\\n<p>The default value of the switch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BooleanSwitch.BooleanSwitch(String, String, String)\n- uid: System.Diagnostics.BooleanSwitch.Enabled\n  commentId: P:System.Diagnostics.BooleanSwitch.Enabled\n  id: Enabled\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  - vb\n  name: Enabled\n  fullName: System.Diagnostics.BooleanSwitch.Enabled\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Enabled\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n    startLine: 32\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets a value indicating whether the switch is enabled or disabled.</p>\\n\"\n  syntax:\n    content: public bool Enabled { get; set; }\n    content.vb: Public Property Enabled As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the switch is enabled; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the correct permission.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: BooleanSwitch.Enabled\n- uid: System.Diagnostics.BooleanSwitch.OnValueChanged\n  commentId: M:System.Diagnostics.BooleanSwitch.OnValueChanged\n  id: OnValueChanged\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  - vb\n  name: OnValueChanged()\n  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnValueChanged\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs\n    startLine: 44\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Determines whether the new value of the <xref href=\\\"System.Diagnostics.Switch.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property can be parsed as a Boolean value.</p>\\n\"\n  syntax:\n    content: protected override void OnValueChanged()\n    content.vb: Protected Overrides Sub OnValueChanged\n  overridden: System.Diagnostics.Switch.OnValueChanged\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: BooleanSwitch.OnValueChanged()\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Diagnostics.Switch\n  parent: System.Diagnostics\n  isExternal: false\n  name: Switch\n  fullName: System.Diagnostics.Switch\n  nameWithType: Switch\n  commentId: T:System.Diagnostics.Switch\n- uid: System.Diagnostics.Switch.Description\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: Description\n  fullName: System.Diagnostics.Switch.Description\n  nameWithType: Switch.Description\n  commentId: P:System.Diagnostics.Switch.Description\n- uid: System.Diagnostics.Switch.DisplayName\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: DisplayName\n  fullName: System.Diagnostics.Switch.DisplayName\n  nameWithType: Switch.DisplayName\n  commentId: P:System.Diagnostics.Switch.DisplayName\n- uid: System.Diagnostics.Switch.SwitchSetting\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: SwitchSetting\n  fullName: System.Diagnostics.Switch.SwitchSetting\n  nameWithType: Switch.SwitchSetting\n  commentId: P:System.Diagnostics.Switch.SwitchSetting\n- uid: System.Diagnostics.Switch.Value\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: Value\n  fullName: System.Diagnostics.Switch.Value\n  nameWithType: Switch.Value\n  commentId: P:System.Diagnostics.Switch.Value\n- uid: System.Diagnostics.Switch.OnSwitchSettingChanged\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: OnSwitchSettingChanged()\n  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()\n  spec.csharp:\n  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged\n    name: OnSwitchSettingChanged\n    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged\n    name: OnSwitchSettingChanged\n    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Switch.OnSwitchSettingChanged()\n  commentId: M:System.Diagnostics.Switch.OnSwitchSettingChanged\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Diagnostics.Switch.OnValueChanged\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: OnValueChanged()\n  fullName: System.Diagnostics.Switch.OnValueChanged()\n  spec.csharp:\n  - uid: System.Diagnostics.Switch.OnValueChanged\n    name: OnValueChanged\n    fullName: System.Diagnostics.Switch.OnValueChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.Switch.OnValueChanged\n    name: OnValueChanged\n    fullName: System.Diagnostics.Switch.OnValueChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Switch.OnValueChanged()\n  commentId: M:System.Diagnostics.Switch.OnValueChanged\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n"}