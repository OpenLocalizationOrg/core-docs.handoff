{"nodes":[{"pos":[404,417],"content":"WeakReference","needQuote":true,"nodes":[{"content":"WeakReference","pos":[0,13]}]},{"pos":[1987,2008],"content":"WeakReference(Object)","needQuote":true,"nodes":[{"content":"WeakReference(Object)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The object to track or &lt;strong&gt;null&lt;/strong&gt;.","pos":[2740,2790],"source":"\\n<p>The object to track or <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[2791,2797],"source":" </p>\\n"},{"pos":[3221,3251],"content":"WeakReference(Object, Boolean)","needQuote":true,"nodes":[{"content":"WeakReference(Object, Boolean)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;An object to track.","pos":[4099,4123],"source":"\\n<p>An object to track."},{"content":"&lt;/p&gt;\\n","pos":[4124,4130],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Indicates when to stop tracking the object.","pos":[4207,4255],"source":"\\n<p>Indicates when to stop tracking the object."},{"content":"If &lt;strong&gt;true&lt;/strong&gt;, the object is tracked after finalization; if &lt;strong&gt;false&lt;/strong&gt;, the object is only tracked until finalization.","pos":[4256,4397],"source":" If <strong>true</strong>, the object is tracked after finalization; if <strong>false</strong>, the object is only tracked until finalization."},{"content":"&lt;/p&gt;\\n","pos":[4398,4404],"source":" </p>\\n"},{"pos":[4915,4922],"content":"IsAlive","needQuote":true,"nodes":[{"content":"IsAlive","pos":[0,7]}]},{"pos":[6302,6308],"content":"Target","needQuote":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The reference to the target object is invalid.","pos":[7550,7601],"source":"\\n<p>The reference to the target object is invalid."},{"content":"This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.&lt;/p&gt;\\n","pos":[7602,7759],"source":" This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</p>\\n"},{"pos":[8203,8220],"content":"TrackResurrection","needQuote":true,"nodes":[{"content":"TrackResurrection","pos":[0,17]}]},{"pos":[9666,9676],"content":"Finalize()","needQuote":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[10590,10596],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10727,10733],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10893,10903],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10998,11006],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11075,11076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11103,11104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11174,11182],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11251,11252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11279,11280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11463,11477],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11596,11602],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11669,11670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11720,11726],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11786,11787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11870,11876],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11943,11944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11994,12000],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12060,12061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12275,12297],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12445,12451],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12518,12519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12569,12575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12636,12637]},{"pos":[12692,12698],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12758,12759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12856,12862],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12929,12930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12980,12986],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13047,13048]},{"pos":[13103,13109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13169,13170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13415,13446],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13612,13627],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13703,13704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13754,13760],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13821,13822]},{"pos":[13877,13883],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13943,13944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14050,14065],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14141,14142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14192,14198],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14259,14260]},{"pos":[14315,14321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14381,14382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14612,14625],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14726,14737],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14809,14810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14837,14838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14911,14922],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14994,14995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15022,15023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15198,15207],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15300,15307],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15375,15376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15403,15404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15473,15480],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15548,15549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15576,15577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15752,15769],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15878,15893],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15969,15970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15997,15998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16075,16090],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16166,16167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16194,16195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16365,16372],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16539,16564],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.WeakReference\n  commentId: T:System.WeakReference\n  id: WeakReference\n  parent: System\n  children:\n  - System.WeakReference.#ctor(System.Object)\n  - System.WeakReference.#ctor(System.Object,System.Boolean)\n  - System.WeakReference.Finalize\n  - System.WeakReference.IsAlive\n  - System.WeakReference.Target\n  - System.WeakReference.TrackResurrection\n  langs:\n  - csharp\n  - vb\n  name: WeakReference\n  fullName: System.WeakReference\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/WeakReference.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WeakReference\n    path: src/mscorlib/src/System/WeakReference.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class WeakReference : ISerializable\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class WeakReference\n          Implements ISerializable\n  seealso:\n  - type: System.GC\n    commentId: T:System.GC\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: WeakReference\n- uid: System.WeakReference.#ctor(System.Object)\n  commentId: M:System.WeakReference.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.WeakReference\n  langs:\n  - csharp\n  - vb\n  name: WeakReference(Object)\n  fullName: System.WeakReference.WeakReference(System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/WeakReference.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/WeakReference.cs\n    startLine: 42\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, referencing the specified object.</p>\\n\"\n  syntax:\n    content: public WeakReference(object target)\n    content.vb: Public Sub New(target As Object)\n    parameters:\n    - id: target\n      type: System.Object\n      description: \"\\n<p>The object to track or <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Object\n    commentId: T:System.Object\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: WeakReference.WeakReference(Object)\n- uid: System.WeakReference.#ctor(System.Object,System.Boolean)\n  commentId: M:System.WeakReference.#ctor(System.Object,System.Boolean)\n  id: '#ctor(System.Object,System.Boolean)'\n  parent: System.WeakReference\n  langs:\n  - csharp\n  - vb\n  name: WeakReference(Object, Boolean)\n  fullName: System.WeakReference.WeakReference(System.Object, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/WeakReference.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/WeakReference.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, referencing the specified object and using the specified resurrection tracking.</p>\\n\"\n  syntax:\n    content: public WeakReference(object target, bool trackResurrection)\n    content.vb: Public Sub New(target As Object, trackResurrection As Boolean)\n    parameters:\n    - id: target\n      type: System.Object\n      description: \"\\n<p>An object to track. </p>\\n\"\n    - id: trackResurrection\n      type: System.Boolean\n      description: \"\\n<p>Indicates when to stop tracking the object. If <strong>true</strong>, the object is tracked after finalization; if <strong>false</strong>, the object is only tracked until finalization. </p>\\n\"\n  seealso:\n  - type: System.Object\n    commentId: T:System.Object\n  - type: System.Boolean\n    commentId: T:System.Boolean\n  - type: System.Runtime.InteropServices.GCHandle\n    commentId: T:System.Runtime.InteropServices.GCHandle\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: WeakReference.WeakReference(Object, Boolean)\n- uid: System.WeakReference.IsAlive\n  commentId: P:System.WeakReference.IsAlive\n  id: IsAlive\n  parent: System.WeakReference\n  langs:\n  - csharp\n  - vb\n  name: IsAlive\n  fullName: System.WeakReference.IsAlive\n  type: Property\n  source:\n    path: System.Private.CoreLib\n    isExternal: true\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets an indication whether the object referenced by the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has been garbage collected.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual bool IsAlive\n\n      {\n          [MethodImpl(MethodImplOptions.InternalCall)]\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property IsAlive As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object referenced by the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has not been garbage collected and is still accessible; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.GC\n    commentId: T:System.GC\n  - type: System.Object\n    commentId: T:System.Object\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: WeakReference.IsAlive\n- uid: System.WeakReference.Target\n  commentId: P:System.WeakReference.Target\n  id: Target\n  parent: System.WeakReference\n  langs:\n  - csharp\n  - vb\n  name: Target\n  fullName: System.WeakReference.Target\n  type: Property\n  source:\n    path: System.Private.CoreLib\n    isExternal: true\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets or sets the object (the target) referenced by the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual object Target\n\n      {\n          [MethodImpl(MethodImplOptions.InternalCall)]\n          [SecuritySafeCritical]\n          get;\n          [MethodImpl(MethodImplOptions.InternalCall)]\n          [SecuritySafeCritical]\n          set;\n      }\n    content.vb: Public Overridable Property Target As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>\\n<strong>null</strong> if the object referenced by the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has been garbage collected; otherwise, a reference to the object referenced by the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The reference to the target object is invalid. This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</p>\\n\"\n  seealso:\n  - type: System.Object\n    commentId: T:System.Object\n  - type: System.GC\n    commentId: T:System.GC\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: WeakReference.Target\n- uid: System.WeakReference.TrackResurrection\n  commentId: P:System.WeakReference.TrackResurrection\n  id: TrackResurrection\n  parent: System.WeakReference\n  langs:\n  - csharp\n  - vb\n  name: TrackResurrection\n  fullName: System.WeakReference.TrackResurrection\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/WeakReference.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TrackResurrection\n    path: src/mscorlib/src/System/WeakReference.cs\n    startLine: 76\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets an indication whether the object referenced by the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is tracked after it is finalized.</p>\\n\"\n  syntax:\n    content: public virtual bool TrackResurrection { get; }\n    content.vb: Public Overridable ReadOnly Property TrackResurrection As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object refers to is tracked after finalization; or <strong>false</strong> if the object is only tracked until finalization.</p>\\n\"\n  seealso:\n  - type: System.GC\n    commentId: T:System.GC\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: WeakReference.TrackResurrection\n- uid: System.WeakReference.Finalize\n  commentId: M:System.WeakReference.Finalize\n  id: Finalize\n  parent: System.WeakReference\n  langs:\n  - csharp\n  - vb\n  name: Finalize()\n  fullName: System.WeakReference.Finalize()\n  type: Method\n  source:\n    path: System.Private.CoreLib\n    isExternal: true\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Discards the reference to the target represented by the current <xref href=\\\"System.WeakReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: >-\n      [MethodImpl(MethodImplOptions.InternalCall)]\n\n      [SecuritySafeCritical]\n\n      protected void Finalize()\n    content.vb: >-\n      <MethodImpl(MethodImplOptions.InternalCall)>\n\n      <SecuritySafeCritical>\n\n      Protected Sub Finalize\n  seealso:\n  - type: System.GC\n    commentId: T:System.GC\n  - type: System.Object.Finalize\n    commentId: M:System.Object.Finalize\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: WeakReference.Finalize()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}