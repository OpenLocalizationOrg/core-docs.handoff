{"nodes":[{"pos":[1473,1510],"content":"GatewayIPAddressInformationCollection","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformationCollection","pos":[0,37]}]},{"pos":[34594,34633],"content":"GatewayIPAddressInformationCollection()","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformationCollection()","pos":[0,39]}]},{"pos":[35906,35911],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[37649,37659],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[38468,38516],"source":"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n"},{"pos":[39151,39162],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The index of interest.&lt;/p&gt;\\n","pos":[40126,40159],"source":"\\n<p>The index of interest.</p>\\n"},{"pos":[41271,41303],"content":"Add(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(GatewayIPAddressInformation)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The object to be added to the collection.&lt;/p&gt;\\n","pos":[42313,42365],"source":"\\n<p>The object to be added to the collection.</p>\\n"},{"pos":[43014,43021],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[44534,44571],"content":"Contains(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[46981,47025],"content":"CopyTo(GatewayIPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(GatewayIPAddressInformation[], Int32)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;A one-dimensional array that receives a copy of the collection.&lt;/p&gt;\\n","pos":[48128,48202],"source":"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which the copy begins.&lt;/p&gt;\\n","pos":[48266,48341],"source":"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[48460,48507],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[48508,48514],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is less than zero.","pos":[48631,48671],"source":"\\n<p>\\n<em>count</em> is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[48672,48678],"source":" </p>\\n"},{"pos":[50452,50467],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[52478,52513],"content":"Remove(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(GatewayIPAddressInformation)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The object to be removed.&lt;/p&gt;\\n","pos":[53551,53587],"source":"\\n<p>The object to be removed.</p>\\n"},{"pos":[54550,54577],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[56191,56220],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[56420,56426],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56710,56750],"content":"ICollection<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"ICollection&lt;GatewayIPAddressInformation&gt;","pos":[0,40],"source":"ICollection<GatewayIPAddressInformation>"}]},{"pos":[57107,57118],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[57203,57204],"content":"<","needQuote":true,"nodes":[]},{"pos":[57298,57325],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[57501,57512],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[57598,57601]},{"pos":[57702,57729],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[57812,57813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58268,58308],"content":"IEnumerable<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;GatewayIPAddressInformation&gt;","pos":[0,40],"source":"IEnumerable<GatewayIPAddressInformation>"}]},{"pos":[58665,58676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[58761,58762],"content":"<","needQuote":true,"nodes":[]},{"pos":[58856,58883],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[59059,59070],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[59156,59159]},{"pos":[59260,59287],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[59370,59371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59716,59727],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[59926,59936],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[60031,60039],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[60108,60109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60136,60137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60207,60215],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[60284,60285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60312,60313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60496,60510],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[60629,60635],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[60702,60703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60753,60759],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60819,60820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60903,60909],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[60976,60977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61027,61033],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61093,61094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61308,61330],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[61478,61484],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61551,61552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61602,61608],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[61669,61670]},{"pos":[61725,61731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61791,61792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61889,61895],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61962,61963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62013,62019],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[62080,62081]},{"pos":[62136,62142],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62202,62203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62448,62479],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[62645,62660],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[62736,62737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62787,62793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[62854,62855]},{"pos":[62910,62916],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62976,62977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63083,63098],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[63174,63175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63225,63231],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63292,63293]},{"pos":[63348,63354],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63414,63415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63645,63658],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[63759,63770],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[63842,63843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63870,63871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63944,63955],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64027,64028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64055,64056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64231,64240],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[64333,64340],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[64408,64409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64436,64437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64506,64513],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[64581,64582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64609,64610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64785,64802],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[64911,64926],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[65002,65003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65030,65031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65108,65123],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[65199,65200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65227,65228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65523,65536],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[65653,65664],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[65723,65724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65751,65752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65833,65844],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[65903,65904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65931,65932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66348,66390],"content":"AsQueryable<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;GatewayIPAddressInformation&gt;()","pos":[0,42],"source":"AsQueryable<GatewayIPAddressInformation>()"}]},{"pos":[66739,66779],"content":"AsQueryable<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;GatewayIPAddressInformation&gt;","pos":[0,40],"source":"AsQueryable<GatewayIPAddressInformation>"}]},{"pos":[66897,66898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66925,66926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67010,67053],"content":"AsQueryable(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsQueryable(Of GatewayIPAddressInformation)","pos":[0,43]}]},{"pos":[67174,67175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67202,67203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67678,67690],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[67823,67833],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[67900,67901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67928,67929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68018,68028],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[68095,68096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68123,68124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68581,68622],"content":"AsParallel<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;GatewayIPAddressInformation&gt;()","pos":[0,41],"source":"AsParallel<GatewayIPAddressInformation>()"}]},{"pos":[68994,69033],"content":"AsParallel<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsParallel&lt;GatewayIPAddressInformation&gt;","pos":[0,39],"source":"AsParallel<GatewayIPAddressInformation>"}]},{"pos":[69159,69160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69187,69188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69280,69322],"content":"AsParallel(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsParallel(Of GatewayIPAddressInformation)","pos":[0,42]}]},{"pos":[69451,69452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69479,69480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70252,70383],"content":"Aggregate<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation&gt;)","pos":[0,131],"source":"Aggregate<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation>)"}]},{"pos":[71226,71264],"content":"Aggregate<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Aggregate&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"Aggregate<GatewayIPAddressInformation>"}]},{"pos":[71381,71382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71432,71436],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[71494,71495],"content":"<","needQuote":true,"nodes":[]},{"pos":[71589,71616],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[71700,71701]},{"pos":[71800,71827],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[71911,71912]},{"pos":[72011,72038],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[72153,72154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72263,72304],"content":"Aggregate(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Aggregate(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[72424,72425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72475,72479],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[72538,72541]},{"pos":[72642,72669],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[72753,72754]},{"pos":[72853,72880],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[72964,72965]},{"pos":[73064,73091],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[73174,73175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73202,73203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74088,74213],"content":"Aggregate<GatewayIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;GatewayIPAddressInformation, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, GatewayIPAddressInformation, TAccumulate&gt;)","pos":[0,125],"source":"Aggregate<GatewayIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>)"}]},{"pos":[74922,74973],"content":"Aggregate<GatewayIPAddressInformation, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;GatewayIPAddressInformation, TAccumulate&gt;","pos":[0,51],"source":"Aggregate<GatewayIPAddressInformation, TAccumulate>"}]},{"pos":[75103,75104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75131,75142],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[75180,75181]},{"pos":[75236,75240],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[75298,75299],"content":"<","needQuote":true,"nodes":[]},{"pos":[75326,75337],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[75375,75376]},{"pos":[75475,75502],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[75586,75587]},{"pos":[75619,75630],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[75699,75700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75813,75867],"content":"Aggregate(Of GatewayIPAddressInformation, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of GatewayIPAddressInformation, TAccumulate)","pos":[0,54]}]},{"pos":[76000,76001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76028,76039],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[76077,76078]},{"pos":[76133,76137],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[76196,76199]},{"pos":[76233,76244],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[76282,76283]},{"pos":[76382,76409],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[76493,76494]},{"pos":[76526,76537],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[76574,76575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76602,76603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77538,77700],"content":"Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;GatewayIPAddressInformation, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, GatewayIPAddressInformation, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,162],"source":"Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[78561,78621],"content":"Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;GatewayIPAddressInformation, TAccumulate, TResult&gt;","pos":[0,60],"source":"Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>"}]},{"pos":[78760,78761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78788,78799],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[78837,78838]},{"pos":[78893,78897],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[78955,78956],"content":"<","needQuote":true,"nodes":[]},{"pos":[78983,78994],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[79032,79033]},{"pos":[79132,79159],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[79243,79244]},{"pos":[79276,79287],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[79357,79358]},{"pos":[79413,79417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[79475,79476],"content":"<","needQuote":true,"nodes":[]},{"pos":[79503,79514],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[79552,79553]},{"pos":[79585,79592],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[79657,79658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79792,79855],"content":"Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)","pos":[0,63]}]},{"pos":[79997,79998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80025,80036],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80074,80075]},{"pos":[80130,80134],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[80193,80196]},{"pos":[80230,80241],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80279,80280]},{"pos":[80379,80406],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[80490,80491]},{"pos":[80523,80534],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[80571,80572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[80600,80601]},{"pos":[80656,80660],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[80719,80722]},{"pos":[80756,80767],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80805,80806]},{"pos":[80838,80845],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[80878,80879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80906,80907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81846,81922],"content":"All<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,76],"source":"All<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[82495,82527],"content":"All<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"All&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"All<GatewayIPAddressInformation>"}]},{"pos":[82638,82639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82689,82693],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[82751,82752],"content":"<","needQuote":true,"nodes":[]},{"pos":[82846,82873],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[82957,82958]},{"pos":[83014,83021],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83114,83115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83225,83260],"content":"All(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"All(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[83374,83375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83425,83429],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[83488,83491]},{"pos":[83592,83619],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[83703,83704]},{"pos":[83760,83767],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83828,83829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83856,83857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84478,84512],"content":"Any<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Any&lt;GatewayIPAddressInformation&gt;()","pos":[0,34],"source":"Any<GatewayIPAddressInformation>()"}]},{"pos":[84832,84864],"content":"Any<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Any<GatewayIPAddressInformation>"}]},{"pos":[84975,84976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85003,85004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85081,85116],"content":"Any(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[85230,85231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85258,85259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85880,85956],"content":"Any<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,76],"source":"Any<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[86529,86561],"content":"Any<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Any<GatewayIPAddressInformation>"}]},{"pos":[86672,86673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86723,86727],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[86785,86786],"content":"<","needQuote":true,"nodes":[]},{"pos":[86880,86907],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[86991,86992]},{"pos":[87048,87055],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[87148,87149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87259,87294],"content":"Any(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[87408,87409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87459,87463],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[87522,87525]},{"pos":[87626,87653],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[87737,87738]},{"pos":[87794,87801],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[87862,87863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87890,87891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88530,88573],"content":"AsEnumerable<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;GatewayIPAddressInformation&gt;()","pos":[0,43],"source":"AsEnumerable<GatewayIPAddressInformation>()"}]},{"pos":[88929,88970],"content":"AsEnumerable<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;GatewayIPAddressInformation&gt;","pos":[0,41],"source":"AsEnumerable<GatewayIPAddressInformation>"}]},{"pos":[89090,89091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89118,89119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89205,89249],"content":"AsEnumerable(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of GatewayIPAddressInformation)","pos":[0,44]}]},{"pos":[89372,89373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89400,89401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90057,90137],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Decimal&gt;)","pos":[0,80],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)"}]},{"pos":[90726,90762],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[90877,90878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90928,90932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[90990,90991],"content":"<","needQuote":true,"nodes":[]},{"pos":[91085,91112],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[91196,91197]},{"pos":[91253,91260],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[91353,91354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91468,91507],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[91625,91626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91676,91680],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[91739,91742]},{"pos":[91843,91870],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[91954,91955]},{"pos":[92011,92018],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[92079,92080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92107,92108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92866,92945],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Double&gt;)","pos":[0,79],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)"}]},{"pos":[93530,93566],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[93681,93682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93732,93736],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[93794,93795],"content":"<","needQuote":true,"nodes":[]},{"pos":[93889,93916],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[94000,94001]},{"pos":[94056,94062],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[94154,94155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94268,94307],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[94425,94426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94476,94480],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[94539,94542]},{"pos":[94643,94670],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[94754,94755]},{"pos":[94810,94816],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[94876,94877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94904,94905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95658,95736],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int32&gt;)","pos":[0,78],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)"}]},{"pos":[96317,96353],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[96468,96469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96519,96523],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[96581,96582],"content":"<","needQuote":true,"nodes":[]},{"pos":[96676,96703],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[96787,96788]},{"pos":[96842,96847],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[96938,96939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97051,97090],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[97208,97209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97259,97263],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[97322,97325]},{"pos":[97426,97453],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[97537,97538]},{"pos":[97592,97597],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[97656,97657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97684,97685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98435,98513],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int64&gt;)","pos":[0,78],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)"}]},{"pos":[99094,99130],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[99245,99246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99296,99300],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[99358,99359],"content":"<","needQuote":true,"nodes":[]},{"pos":[99453,99480],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[99564,99565]},{"pos":[99619,99624],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[99715,99716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99828,99867],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[99985,99986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100036,100040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[100099,100102]},{"pos":[100203,100230],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[100314,100315]},{"pos":[100369,100374],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[100433,100434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100461,100462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101250,101340],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,90],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[101996,102032],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[102147,102148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102198,102202],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[102260,102261],"content":"<","needQuote":true,"nodes":[]},{"pos":[102355,102382],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[102466,102467]},{"pos":[102526,102534],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[102596,102597],"content":"<","needQuote":true,"nodes":[]},{"pos":[102648,102655],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[102780,102781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102912,102951],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[103069,103070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103120,103124],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[103183,103186]},{"pos":[103287,103314],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[103398,103399]},{"pos":[103458,103466],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[103529,103532]},{"pos":[103590,103597],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[103658,103659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103686,103687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103714,103715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104547,104636],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,89],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)"}]},{"pos":[105288,105324],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[105439,105440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105490,105494],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[105552,105553],"content":"<","needQuote":true,"nodes":[]},{"pos":[105647,105674],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[105758,105759]},{"pos":[105818,105826],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[105888,105889],"content":"<","needQuote":true,"nodes":[]},{"pos":[105939,105945],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[106069,106070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106200,106239],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[106357,106358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106408,106412],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[106471,106474]},{"pos":[106575,106602],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[106686,106687]},{"pos":[106746,106754],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[106817,106820]},{"pos":[106877,106883],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[106943,106944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106971,106972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106999,107000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107827,107915],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,88],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[108563,108599],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[108714,108715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108765,108769],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[108827,108828],"content":"<","needQuote":true,"nodes":[]},{"pos":[108922,108949],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[109033,109034]},{"pos":[109093,109101],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[109163,109164],"content":"<","needQuote":true,"nodes":[]},{"pos":[109213,109218],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109341,109342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109471,109510],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[109628,109629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109679,109683],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[109742,109745]},{"pos":[109846,109873],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[109957,109958]},{"pos":[110017,110025],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[110088,110091]},{"pos":[110147,110152],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[110211,110212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110239,110240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110267,110268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111092,111180],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,88],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[111828,111864],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[111979,111980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112030,112034],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[112092,112093],"content":"<","needQuote":true,"nodes":[]},{"pos":[112187,112214],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[112298,112299]},{"pos":[112358,112366],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[112428,112429],"content":"<","needQuote":true,"nodes":[]},{"pos":[112478,112483],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[112606,112607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112736,112775],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[112893,112894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112944,112948],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[113007,113010]},{"pos":[113111,113138],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[113222,113223]},{"pos":[113282,113290],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[113353,113356]},{"pos":[113412,113417],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[113476,113477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113504,113505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113532,113533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114359,114448],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,89],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)"}]},{"pos":[115100,115136],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[115251,115252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115302,115306],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[115364,115365],"content":"<","needQuote":true,"nodes":[]},{"pos":[115459,115486],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[115570,115571]},{"pos":[115630,115638],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[115700,115701],"content":"<","needQuote":true,"nodes":[]},{"pos":[115751,115757],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[115881,115882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116012,116051],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[116169,116170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116220,116224],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[116283,116286]},{"pos":[116387,116414],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[116498,116499]},{"pos":[116558,116566],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[116629,116632]},{"pos":[116689,116695],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[116755,116756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116783,116784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116811,116812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117607,117686],"content":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Single&gt;)","pos":[0,79],"source":"Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)"}]},{"pos":[118271,118307],"content":"Average<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Average<GatewayIPAddressInformation>"}]},{"pos":[118422,118423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118473,118477],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[118535,118536],"content":"<","needQuote":true,"nodes":[]},{"pos":[118630,118657],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[118741,118742]},{"pos":[118797,118803],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[118895,118896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119009,119048],"content":"Average(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[119166,119167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119217,119221],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[119280,119283]},{"pos":[119384,119411],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[119495,119496]},{"pos":[119551,119557],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[119617,119618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119645,119646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120198,120213],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[120417,120430],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[120492,120493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120520,120521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120599,120615],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[120680,120681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120708,120709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121310,121387],"content":"Concat<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Concat&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;)","pos":[0,77],"source":"Concat<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)"}]},{"pos":[122004,122039],"content":"Concat<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Concat&lt;GatewayIPAddressInformation&gt;","pos":[0,35],"source":"Concat<GatewayIPAddressInformation>"}]},{"pos":[122153,122154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122231,122242],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[122327,122328],"content":"<","needQuote":true,"nodes":[]},{"pos":[122422,122449],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[122564,122565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122690,122728],"content":"Concat(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Concat(Of GatewayIPAddressInformation)","pos":[0,38]}]},{"pos":[122845,122846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122923,122934],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[123020,123023]},{"pos":[123124,123151],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[123234,123235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123262,123263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123970,124034],"content":"Append<GatewayIPAddressInformation>(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Append&lt;GatewayIPAddressInformation&gt;(GatewayIPAddressInformation)","pos":[0,64],"source":"Append<GatewayIPAddressInformation>(GatewayIPAddressInformation)"}]},{"pos":[124512,124547],"content":"Append<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Append&lt;GatewayIPAddressInformation&gt;","pos":[0,35],"source":"Append<GatewayIPAddressInformation>"}]},{"pos":[124661,124662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124756,124783],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[124866,124867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124952,124990],"content":"Append(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Append(Of GatewayIPAddressInformation)","pos":[0,38]}]},{"pos":[125107,125108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125202,125229],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[125312,125313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125953,126018],"content":"Prepend<GatewayIPAddressInformation>(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend&lt;GatewayIPAddressInformation&gt;(GatewayIPAddressInformation)","pos":[0,65],"source":"Prepend<GatewayIPAddressInformation>(GatewayIPAddressInformation)"}]},{"pos":[126500,126536],"content":"Prepend<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Prepend&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Prepend<GatewayIPAddressInformation>"}]},{"pos":[126651,126652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126746,126773],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[126856,126857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126943,126982],"content":"Prepend(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[127100,127101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127195,127222],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[127305,127306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127951,128017],"content":"Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains&lt;GatewayIPAddressInformation&gt;(GatewayIPAddressInformation)","pos":[0,66],"source":"Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation)"}]},{"pos":[128503,128540],"content":"Contains<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;GatewayIPAddressInformation&gt;","pos":[0,37],"source":"Contains<GatewayIPAddressInformation>"}]},{"pos":[128656,128657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128751,128778],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[128861,128862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128949,128989],"content":"Contains(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of GatewayIPAddressInformation)","pos":[0,40]}]},{"pos":[129108,129109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129203,129230],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[129313,129314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130116,130230],"content":"Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation, IEqualityComparer<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Contains&lt;GatewayIPAddressInformation&gt;(GatewayIPAddressInformation, IEqualityComparer&lt;GatewayIPAddressInformation&gt;)","pos":[0,114],"source":"Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation, IEqualityComparer<GatewayIPAddressInformation>)"}]},{"pos":[131030,131067],"content":"Contains<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;GatewayIPAddressInformation&gt;","pos":[0,37],"source":"Contains<GatewayIPAddressInformation>"}]},{"pos":[131183,131184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131278,131305],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[131389,131390]},{"pos":[131478,131495],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[131586,131587],"content":"<","needQuote":true,"nodes":[]},{"pos":[131681,131708],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[131823,131824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131961,132001],"content":"Contains(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of GatewayIPAddressInformation)","pos":[0,40]}]},{"pos":[132120,132121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132215,132242],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[132326,132327]},{"pos":[132415,132432],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[132524,132527]},{"pos":[132628,132655],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[132738,132739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132766,132767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133495,133531],"content":"Count<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Count&lt;GatewayIPAddressInformation&gt;()","pos":[0,36],"source":"Count<GatewayIPAddressInformation>()"}]},{"pos":[133859,133893],"content":"Count<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"Count<GatewayIPAddressInformation>"}]},{"pos":[134006,134007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134034,134035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134114,134151],"content":"Count(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[134267,134268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134295,134296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134927,135005],"content":"Count<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,78],"source":"Count<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[135586,135620],"content":"Count<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"Count<GatewayIPAddressInformation>"}]},{"pos":[135733,135734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135784,135788],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[135846,135847],"content":"<","needQuote":true,"nodes":[]},{"pos":[135941,135968],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[136052,136053]},{"pos":[136109,136116],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136209,136210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136322,136359],"content":"Count(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[136475,136476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136526,136530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[136589,136592]},{"pos":[136693,136720],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[136804,136805]},{"pos":[136861,136868],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136929,136930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136957,136958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137607,137652],"content":"DefaultIfEmpty<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;GatewayIPAddressInformation&gt;()","pos":[0,45],"source":"DefaultIfEmpty<GatewayIPAddressInformation>()"}]},{"pos":[138016,138059],"content":"DefaultIfEmpty<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;GatewayIPAddressInformation&gt;","pos":[0,43],"source":"DefaultIfEmpty<GatewayIPAddressInformation>"}]},{"pos":[138181,138182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138209,138210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138298,138344],"content":"DefaultIfEmpty(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of GatewayIPAddressInformation)","pos":[0,46]}]},{"pos":[138469,138470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138497,138498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139118,139190],"content":"DefaultIfEmpty<GatewayIPAddressInformation>(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;GatewayIPAddressInformation&gt;(GatewayIPAddressInformation)","pos":[0,72],"source":"DefaultIfEmpty<GatewayIPAddressInformation>(GatewayIPAddressInformation)"}]},{"pos":[139700,139743],"content":"DefaultIfEmpty<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;GatewayIPAddressInformation&gt;","pos":[0,43],"source":"DefaultIfEmpty<GatewayIPAddressInformation>"}]},{"pos":[139865,139866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139960,139987],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[140070,140071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140164,140210],"content":"DefaultIfEmpty(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of GatewayIPAddressInformation)","pos":[0,46]}]},{"pos":[140335,140336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140430,140457],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[140540,140541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141144,141183],"content":"Distinct<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Distinct&lt;GatewayIPAddressInformation&gt;()","pos":[0,39],"source":"Distinct<GatewayIPAddressInformation>()"}]},{"pos":[141523,141560],"content":"Distinct<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;GatewayIPAddressInformation&gt;","pos":[0,37],"source":"Distinct<GatewayIPAddressInformation>"}]},{"pos":[141676,141677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141704,141705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141787,141827],"content":"Distinct(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of GatewayIPAddressInformation)","pos":[0,40]}]},{"pos":[141946,141947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141974,141975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142657,142742],"content":"Distinct<GatewayIPAddressInformation>(IEqualityComparer<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Distinct&lt;GatewayIPAddressInformation&gt;(IEqualityComparer&lt;GatewayIPAddressInformation&gt;)","pos":[0,85],"source":"Distinct<GatewayIPAddressInformation>(IEqualityComparer<GatewayIPAddressInformation>)"}]},{"pos":[143391,143428],"content":"Distinct<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;GatewayIPAddressInformation&gt;","pos":[0,37],"source":"Distinct<GatewayIPAddressInformation>"}]},{"pos":[143544,143545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143628,143645],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[143736,143737],"content":"<","needQuote":true,"nodes":[]},{"pos":[143831,143858],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[143973,143974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144107,144147],"content":"Distinct(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of GatewayIPAddressInformation)","pos":[0,40]}]},{"pos":[144266,144267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144350,144367],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[144459,144462]},{"pos":[144563,144590],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[144673,144674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144701,144702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145403,145448],"content":"ElementAt<GatewayIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;GatewayIPAddressInformation&gt;(Int32)","pos":[0,45],"source":"ElementAt<GatewayIPAddressInformation>(Int32)"}]},{"pos":[145835,145873],"content":"ElementAt<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAt&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"ElementAt<GatewayIPAddressInformation>"}]},{"pos":[145990,145991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146040,146045],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[146104,146105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146202,146243],"content":"ElementAt(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAt(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[146363,146364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146413,146418],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[146477,146478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147078,147132],"content":"ElementAtOrDefault<GatewayIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;GatewayIPAddressInformation&gt;(Int32)","pos":[0,54],"source":"ElementAtOrDefault<GatewayIPAddressInformation>(Int32)"}]},{"pos":[147555,147602],"content":"ElementAtOrDefault<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;GatewayIPAddressInformation&gt;","pos":[0,47],"source":"ElementAtOrDefault<GatewayIPAddressInformation>"}]},{"pos":[147728,147729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147778,147783],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[147842,147843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147949,147999],"content":"ElementAtOrDefault(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of GatewayIPAddressInformation)","pos":[0,50]}]},{"pos":[148128,148129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148178,148183],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[148242,148243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148962,149039],"content":"Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;)","pos":[0,77],"source":"Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)"}]},{"pos":[149656,149691],"content":"Except<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;GatewayIPAddressInformation&gt;","pos":[0,35],"source":"Except<GatewayIPAddressInformation>"}]},{"pos":[149805,149806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149883,149894],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[149979,149980],"content":"<","needQuote":true,"nodes":[]},{"pos":[150074,150101],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[150216,150217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150342,150380],"content":"Except(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of GatewayIPAddressInformation)","pos":[0,38]}]},{"pos":[150497,150498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150575,150586],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[150672,150675]},{"pos":[150776,150803],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[150886,150887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150914,150915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151856,151981],"content":"Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;, IEqualityComparer&lt;GatewayIPAddressInformation&gt;)","pos":[0,125],"source":"Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)"}]},{"pos":[152912,152947],"content":"Except<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;GatewayIPAddressInformation&gt;","pos":[0,35],"source":"Except<GatewayIPAddressInformation>"}]},{"pos":[153061,153062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153139,153150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[153235,153236],"content":"<","needQuote":true,"nodes":[]},{"pos":[153330,153357],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[153473,153474]},{"pos":[153562,153579],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[153670,153671],"content":"<","needQuote":true,"nodes":[]},{"pos":[153765,153792],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[153907,153908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154083,154121],"content":"Except(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of GatewayIPAddressInformation)","pos":[0,38]}]},{"pos":[154238,154239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154316,154327],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[154413,154416]},{"pos":[154517,154544],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[154627,154628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[154656,154657]},{"pos":[154745,154762],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[154854,154857]},{"pos":[154958,154985],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[155068,155069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155096,155097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155888,155924],"content":"First<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"First&lt;GatewayIPAddressInformation&gt;()","pos":[0,36],"source":"First<GatewayIPAddressInformation>()"}]},{"pos":[156252,156286],"content":"First<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"First<GatewayIPAddressInformation>"}]},{"pos":[156399,156400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156427,156428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156507,156544],"content":"First(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[156660,156661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156688,156689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157320,157398],"content":"First<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,78],"source":"First<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[157979,158013],"content":"First<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"First<GatewayIPAddressInformation>"}]},{"pos":[158126,158127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158177,158181],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[158239,158240],"content":"<","needQuote":true,"nodes":[]},{"pos":[158334,158361],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[158445,158446]},{"pos":[158502,158509],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[158602,158603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158715,158752],"content":"First(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[158868,158869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158919,158923],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[158982,158985]},{"pos":[159086,159113],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[159197,159198]},{"pos":[159254,159261],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[159322,159323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159350,159351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160000,160045],"content":"FirstOrDefault<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;GatewayIPAddressInformation&gt;()","pos":[0,45],"source":"FirstOrDefault<GatewayIPAddressInformation>()"}]},{"pos":[160409,160452],"content":"FirstOrDefault<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;GatewayIPAddressInformation&gt;","pos":[0,43],"source":"FirstOrDefault<GatewayIPAddressInformation>"}]},{"pos":[160574,160575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160602,160603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160691,160737],"content":"FirstOrDefault(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of GatewayIPAddressInformation)","pos":[0,46]}]},{"pos":[160862,160863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160890,160891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161567,161654],"content":"FirstOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,87],"source":"FirstOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[162271,162314],"content":"FirstOrDefault<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;GatewayIPAddressInformation&gt;","pos":[0,43],"source":"FirstOrDefault<GatewayIPAddressInformation>"}]},{"pos":[162436,162437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162487,162491],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[162549,162550],"content":"<","needQuote":true,"nodes":[]},{"pos":[162644,162671],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[162755,162756]},{"pos":[162812,162819],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[162912,162913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163034,163080],"content":"FirstOrDefault(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of GatewayIPAddressInformation)","pos":[0,46]}]},{"pos":[163205,163206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163256,163260],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[163319,163322]},{"pos":[163423,163450],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[163534,163535]},{"pos":[163591,163598],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[163659,163660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163687,163688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164450,164533],"content":"GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;)","pos":[0,83],"source":"GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)"}]},{"pos":[165106,165148],"content":"GroupBy<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,42],"source":"GroupBy<GatewayIPAddressInformation, TKey>"}]},{"pos":[165269,165270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165320,165324],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[165382,165383],"content":"<","needQuote":true,"nodes":[]},{"pos":[165477,165504],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[165588,165589]},{"pos":[165621,165625],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[165687,165688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165791,165836],"content":"GroupBy(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[165960,165961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166011,166015],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[166074,166077]},{"pos":[166178,166205],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[166289,166290]},{"pos":[166322,166326],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[166356,166357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166384,166385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167224,167332],"content":"GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,108],"source":"GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[168090,168132],"content":"GroupBy<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,42],"source":"GroupBy<GatewayIPAddressInformation, TKey>"}]},{"pos":[168253,168254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168304,168308],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[168366,168367],"content":"<","needQuote":true,"nodes":[]},{"pos":[168461,168488],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[168572,168573]},{"pos":[168605,168609],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[168672,168673]},{"pos":[168761,168778],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[168869,168870],"content":"<","needQuote":true,"nodes":[]},{"pos":[168897,168901],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[168963,168964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169117,169162],"content":"GroupBy(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[169286,169287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169337,169341],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[169400,169403]},{"pos":[169504,169531],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[169615,169616]},{"pos":[169648,169652],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[169682,169683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[169711,169712]},{"pos":[169800,169817],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[169909,169912]},{"pos":[169946,169950],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[169980,169981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170008,170009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170951,171089],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;)","pos":[0,138],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)"}]},{"pos":[171928,171980],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement&gt;","pos":[0,52],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement>"}]},{"pos":[172111,172112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172162,172166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[172224,172225],"content":"<","needQuote":true,"nodes":[]},{"pos":[172319,172346],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[172430,172431]},{"pos":[172463,172467],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[172530,172531]},{"pos":[172586,172590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[172648,172649],"content":"<","needQuote":true,"nodes":[]},{"pos":[172743,172770],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[172854,172855]},{"pos":[172887,172895],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[172961,172962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173086,173141],"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement)","pos":[0,55]}]},{"pos":[173275,173276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173326,173330],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[173389,173392]},{"pos":[173493,173520],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[173604,173605]},{"pos":[173637,173641],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[173671,173672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[173700,173701]},{"pos":[173756,173760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[173819,173822]},{"pos":[173923,173950],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[174034,174035]},{"pos":[174067,174075],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[174109,174110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174137,174138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175214,175377],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,163],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[176401,176453],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement&gt;","pos":[0,52],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement>"}]},{"pos":[176584,176585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176635,176639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[176697,176698],"content":"<","needQuote":true,"nodes":[]},{"pos":[176792,176819],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[176903,176904]},{"pos":[176936,176940],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[177003,177004]},{"pos":[177059,177063],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[177121,177122],"content":"<","needQuote":true,"nodes":[]},{"pos":[177216,177243],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[177327,177328]},{"pos":[177360,177368],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[177435,177436]},{"pos":[177524,177541],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[177632,177633],"content":"<","needQuote":true,"nodes":[]},{"pos":[177660,177664],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[177726,177727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177901,177956],"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement)","pos":[0,55]}]},{"pos":[178090,178091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178141,178145],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[178204,178207]},{"pos":[178308,178335],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[178419,178420]},{"pos":[178452,178456],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[178486,178487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178515,178516]},{"pos":[178571,178575],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[178634,178637]},{"pos":[178738,178765],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[178849,178850]},{"pos":[178882,178890],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[178924,178925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178953,178954]},{"pos":[179042,179059],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[179151,179154]},{"pos":[179188,179192],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[179222,179223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179250,179251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180417,180572],"content":"GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TResult&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;GatewayIPAddressInformation&gt;, TResult&gt;)","pos":[0,155],"source":"GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>)"}]},{"pos":[181566,181617],"content":"GroupBy<GatewayIPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TResult&gt;","pos":[0,51],"source":"GroupBy<GatewayIPAddressInformation, TKey, TResult>"}]},{"pos":[181747,181748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181798,181802],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[181860,181861],"content":"<","needQuote":true,"nodes":[]},{"pos":[181955,181982],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[182066,182067]},{"pos":[182099,182103],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[182166,182167]},{"pos":[182222,182226],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[182284,182285],"content":"<","needQuote":true,"nodes":[]},{"pos":[182312,182316],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[182347,182348]},{"pos":[182430,182441],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[182526,182527],"content":"<","needQuote":true,"nodes":[]},{"pos":[182621,182648],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[182764,182765]},{"pos":[182797,182804],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[182869,182870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183038,183092],"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TResult)","pos":[0,54]}]},{"pos":[183225,183226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183276,183280],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[183339,183342]},{"pos":[183443,183470],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[183554,183555]},{"pos":[183587,183591],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[183621,183622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[183650,183651]},{"pos":[183706,183710],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[183769,183772]},{"pos":[183806,183810],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[183841,183842]},{"pos":[183924,183935],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[184021,184024]},{"pos":[184125,184152],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[184235,184236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[184264,184265]},{"pos":[184297,184304],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[184337,184338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184365,184366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185613,185793],"content":"GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TResult&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;GatewayIPAddressInformation&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,180],"source":"GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[186972,187023],"content":"GroupBy<GatewayIPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TResult&gt;","pos":[0,51],"source":"GroupBy<GatewayIPAddressInformation, TKey, TResult>"}]},{"pos":[187153,187154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187204,187208],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[187266,187267],"content":"<","needQuote":true,"nodes":[]},{"pos":[187361,187388],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[187472,187473]},{"pos":[187505,187509],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[187572,187573]},{"pos":[187628,187632],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[187690,187691],"content":"<","needQuote":true,"nodes":[]},{"pos":[187718,187722],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[187753,187754]},{"pos":[187836,187847],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[187932,187933],"content":"<","needQuote":true,"nodes":[]},{"pos":[188027,188054],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[188170,188171]},{"pos":[188203,188210],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[188276,188277]},{"pos":[188365,188382],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[188473,188474],"content":"<","needQuote":true,"nodes":[]},{"pos":[188501,188505],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[188567,188568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188786,188840],"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TResult)","pos":[0,54]}]},{"pos":[188973,188974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189024,189028],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[189087,189090]},{"pos":[189191,189218],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[189302,189303]},{"pos":[189335,189339],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[189369,189370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[189398,189399]},{"pos":[189454,189458],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[189517,189520]},{"pos":[189554,189558],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[189589,189590]},{"pos":[189672,189683],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[189769,189772]},{"pos":[189873,189900],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[189983,189984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[190012,190013]},{"pos":[190045,190052],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[190085,190086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[190114,190115]},{"pos":[190203,190220],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[190312,190315]},{"pos":[190349,190353],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[190383,190384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190411,190412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191715,191906],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,191],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[193049,193110],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,61],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[193250,193251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193301,193305],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[193363,193364],"content":"<","needQuote":true,"nodes":[]},{"pos":[193458,193485],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[193569,193570]},{"pos":[193602,193606],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[193669,193670]},{"pos":[193725,193729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[193787,193788],"content":"<","needQuote":true,"nodes":[]},{"pos":[193882,193909],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[193993,193994]},{"pos":[194026,194034],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[194101,194102]},{"pos":[194157,194161],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[194219,194220],"content":"<","needQuote":true,"nodes":[]},{"pos":[194247,194251],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[194282,194283]},{"pos":[194365,194376],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[194461,194462],"content":"<","needQuote":true,"nodes":[]},{"pos":[194489,194497],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[194564,194565]},{"pos":[194597,194604],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[194669,194670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194859,194923],"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)","pos":[0,64]}]},{"pos":[195066,195067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195117,195121],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[195180,195183]},{"pos":[195284,195311],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[195395,195396]},{"pos":[195428,195432],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[195462,195463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[195491,195492]},{"pos":[195547,195551],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[195610,195613]},{"pos":[195714,195741],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[195825,195826]},{"pos":[195858,195866],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[195900,195901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[195929,195930]},{"pos":[195985,195989],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[196048,196051]},{"pos":[196085,196089],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[196120,196121]},{"pos":[196203,196214],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[196300,196303]},{"pos":[196337,196345],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[196379,196380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[196408,196409]},{"pos":[196441,196448],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[196481,196482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196509,196510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197909,198125],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,216],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[199453,199514],"content":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;GatewayIPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,61],"source":"GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[199654,199655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199705,199709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[199767,199768],"content":"<","needQuote":true,"nodes":[]},{"pos":[199862,199889],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[199973,199974]},{"pos":[200006,200010],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[200073,200074]},{"pos":[200129,200133],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[200191,200192],"content":"<","needQuote":true,"nodes":[]},{"pos":[200286,200313],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[200397,200398]},{"pos":[200430,200438],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[200505,200506]},{"pos":[200561,200565],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[200623,200624],"content":"<","needQuote":true,"nodes":[]},{"pos":[200651,200655],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[200686,200687]},{"pos":[200769,200780],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[200865,200866],"content":"<","needQuote":true,"nodes":[]},{"pos":[200893,200901],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[200968,200969]},{"pos":[201001,201008],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[201074,201075]},{"pos":[201163,201180],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[201271,201272],"content":"<","needQuote":true,"nodes":[]},{"pos":[201299,201303],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[201365,201366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201605,201669],"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)","pos":[0,64]}]},{"pos":[201812,201813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201863,201867],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[201926,201929]},{"pos":[202030,202057],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[202141,202142]},{"pos":[202174,202178],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[202208,202209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202237,202238]},{"pos":[202293,202297],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202356,202359]},{"pos":[202460,202487],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[202571,202572]},{"pos":[202604,202612],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[202646,202647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202675,202676]},{"pos":[202731,202735],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202794,202797]},{"pos":[202831,202835],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[202866,202867]},{"pos":[202949,202960],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[203046,203049]},{"pos":[203083,203091],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[203125,203126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[203154,203155]},{"pos":[203187,203194],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[203227,203228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[203256,203257]},{"pos":[203345,203362],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[203454,203457]},{"pos":[203491,203495],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[203525,203526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203553,203554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205046,205254],"content":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;GatewayIPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,208],"source":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>)"}]},{"pos":[206554,206615],"content":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,61],"source":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[206755,206756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206833,206844],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[206929,206930],"content":"<","needQuote":true,"nodes":[]},{"pos":[206957,206963],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[207028,207029]},{"pos":[207084,207088],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207146,207147],"content":"<","needQuote":true,"nodes":[]},{"pos":[207241,207268],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[207352,207353]},{"pos":[207385,207389],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[207452,207453]},{"pos":[207508,207512],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207570,207571],"content":"<","needQuote":true,"nodes":[]},{"pos":[207598,207604],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[207637,207638]},{"pos":[207670,207674],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[207737,207738]},{"pos":[207793,207797],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207855,207856],"content":"<","needQuote":true,"nodes":[]},{"pos":[207950,207977],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[208061,208062]},{"pos":[208144,208155],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[208240,208241],"content":"<","needQuote":true,"nodes":[]},{"pos":[208268,208274],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[208339,208340]},{"pos":[208372,208379],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[208444,208445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208680,208744],"content":"GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)","pos":[0,64]}]},{"pos":[208887,208888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208965,208976],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[209062,209065]},{"pos":[209099,209105],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[209137,209138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[209166,209167]},{"pos":[209222,209226],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[209285,209288]},{"pos":[209389,209416],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[209500,209501]},{"pos":[209533,209537],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[209567,209568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[209596,209597]},{"pos":[209652,209656],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[209715,209718]},{"pos":[209752,209758],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[209791,209792]},{"pos":[209824,209828],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[209858,209859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[209887,209888]},{"pos":[209943,209947],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[210006,210009]},{"pos":[210110,210137],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[210221,210222]},{"pos":[210304,210315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[210401,210404]},{"pos":[210438,210444],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[210476,210477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[210505,210506]},{"pos":[210538,210545],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[210578,210579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210606,210607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212182,212415],"content":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;GatewayIPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,233],"source":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[213900,213961],"content":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,61],"source":"GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[214101,214102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214179,214190],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[214275,214276],"content":"<","needQuote":true,"nodes":[]},{"pos":[214303,214309],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[214374,214375]},{"pos":[214430,214434],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[214492,214493],"content":"<","needQuote":true,"nodes":[]},{"pos":[214587,214614],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[214698,214699]},{"pos":[214731,214735],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[214798,214799]},{"pos":[214854,214858],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[214916,214917],"content":"<","needQuote":true,"nodes":[]},{"pos":[214944,214950],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[214983,214984]},{"pos":[215016,215020],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[215083,215084]},{"pos":[215139,215143],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[215201,215202],"content":"<","needQuote":true,"nodes":[]},{"pos":[215296,215323],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[215407,215408]},{"pos":[215490,215501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[215586,215587],"content":"<","needQuote":true,"nodes":[]},{"pos":[215614,215620],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[215685,215686]},{"pos":[215718,215725],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[215791,215792]},{"pos":[215880,215897],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[215988,215989],"content":"<","needQuote":true,"nodes":[]},{"pos":[216016,216020],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[216082,216083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216368,216432],"content":"GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)","pos":[0,64]}]},{"pos":[216575,216576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216653,216664],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[216750,216753]},{"pos":[216787,216793],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[216825,216826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[216854,216855]},{"pos":[216910,216914],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[216973,216976]},{"pos":[217077,217104],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[217188,217189]},{"pos":[217221,217225],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[217255,217256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[217284,217285]},{"pos":[217340,217344],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[217403,217406]},{"pos":[217440,217446],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[217479,217480]},{"pos":[217512,217516],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[217546,217547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[217575,217576]},{"pos":[217631,217635],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[217694,217697]},{"pos":[217798,217825],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[217909,217910]},{"pos":[217992,218003],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[218089,218092]},{"pos":[218126,218132],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[218164,218165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[218193,218194]},{"pos":[218226,218233],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[218266,218267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[218295,218296]},{"pos":[218384,218401],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[218493,218496]},{"pos":[218530,218534],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[218564,218565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218592,218593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219873,219953],"content":"Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;)","pos":[0,80],"source":"Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)"}]},{"pos":[220582,220620],"content":"Intersect<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"Intersect<GatewayIPAddressInformation>"}]},{"pos":[220737,220738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220815,220826],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[220911,220912],"content":"<","needQuote":true,"nodes":[]},{"pos":[221006,221033],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[221148,221149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221277,221318],"content":"Intersect(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[221438,221439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221516,221527],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[221613,221616]},{"pos":[221717,221744],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[221827,221828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221855,221856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222812,222940],"content":"Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;, IEqualityComparer&lt;GatewayIPAddressInformation&gt;)","pos":[0,128],"source":"Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)"}]},{"pos":[223883,223921],"content":"Intersect<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"Intersect<GatewayIPAddressInformation>"}]},{"pos":[224038,224039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224116,224127],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[224212,224213],"content":"<","needQuote":true,"nodes":[]},{"pos":[224307,224334],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[224450,224451]},{"pos":[224539,224556],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[224647,224648],"content":"<","needQuote":true,"nodes":[]},{"pos":[224742,224769],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[224884,224885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225063,225104],"content":"Intersect(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[225224,225225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225302,225313],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[225399,225402]},{"pos":[225503,225530],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[225613,225614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[225642,225643]},{"pos":[225731,225748],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[225840,225843]},{"pos":[225944,225971],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[226054,226055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226082,226083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227239,227429],"content":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;GatewayIPAddressInformation, TInner, TResult&gt;)","pos":[0,190],"source":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>)"}]},{"pos":[228570,228626],"content":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,56],"source":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[228761,228762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228839,228850],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[228935,228936],"content":"<","needQuote":true,"nodes":[]},{"pos":[228963,228969],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[229034,229035]},{"pos":[229090,229094],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229152,229153],"content":"<","needQuote":true,"nodes":[]},{"pos":[229247,229274],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[229358,229359]},{"pos":[229391,229395],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[229458,229459]},{"pos":[229514,229518],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229576,229577],"content":"<","needQuote":true,"nodes":[]},{"pos":[229604,229610],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[229643,229644]},{"pos":[229676,229680],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[229743,229744]},{"pos":[229799,229803],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229861,229862],"content":"<","needQuote":true,"nodes":[]},{"pos":[229956,229983],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[230067,230068]},{"pos":[230100,230106],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[230139,230140]},{"pos":[230172,230179],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[230244,230245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230435,230494],"content":"Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)","pos":[0,59]}]},{"pos":[230632,230633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230710,230721],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[230807,230810]},{"pos":[230844,230850],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[230882,230883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[230911,230912]},{"pos":[230967,230971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[231030,231033]},{"pos":[231134,231161],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[231245,231246]},{"pos":[231278,231282],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[231312,231313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[231341,231342]},{"pos":[231397,231401],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[231460,231463]},{"pos":[231497,231503],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[231536,231537]},{"pos":[231569,231573],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[231603,231604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[231632,231633]},{"pos":[231688,231692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[231751,231754]},{"pos":[231855,231882],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[231966,231967]},{"pos":[231999,232005],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[232038,232039]},{"pos":[232071,232078],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[232111,232112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232139,232140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233541,233756],"content":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;GatewayIPAddressInformation, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,215],"source":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[235082,235138],"content":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;GatewayIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,56],"source":"Join<GatewayIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[235273,235274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235351,235362],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[235447,235448],"content":"<","needQuote":true,"nodes":[]},{"pos":[235475,235481],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[235546,235547]},{"pos":[235602,235606],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[235664,235665],"content":"<","needQuote":true,"nodes":[]},{"pos":[235759,235786],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[235870,235871]},{"pos":[235903,235907],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[235970,235971]},{"pos":[236026,236030],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[236088,236089],"content":"<","needQuote":true,"nodes":[]},{"pos":[236116,236122],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[236155,236156]},{"pos":[236188,236192],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[236255,236256]},{"pos":[236311,236315],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[236373,236374],"content":"<","needQuote":true,"nodes":[]},{"pos":[236468,236495],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[236579,236580]},{"pos":[236612,236618],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[236651,236652]},{"pos":[236684,236691],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[236757,236758]},{"pos":[236846,236863],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[236954,236955],"content":"<","needQuote":true,"nodes":[]},{"pos":[236982,236986],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[237048,237049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237289,237348],"content":"Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)","pos":[0,59]}]},{"pos":[237486,237487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237564,237575],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[237661,237664]},{"pos":[237698,237704],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[237736,237737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[237765,237766]},{"pos":[237821,237825],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[237884,237887]},{"pos":[237988,238015],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[238099,238100]},{"pos":[238132,238136],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[238166,238167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[238195,238196]},{"pos":[238251,238255],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[238314,238317]},{"pos":[238351,238357],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[238390,238391]},{"pos":[238423,238427],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[238457,238458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[238486,238487]},{"pos":[238542,238546],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[238605,238608]},{"pos":[238709,238736],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[238820,238821]},{"pos":[238853,238859],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[238892,238893]},{"pos":[238925,238932],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[238965,238966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[238994,238995]},{"pos":[239083,239100],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[239192,239195]},{"pos":[239229,239233],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[239263,239264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239291,239292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240335,240370],"content":"Last<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Last&lt;GatewayIPAddressInformation&gt;()","pos":[0,35],"source":"Last<GatewayIPAddressInformation>()"}]},{"pos":[240694,240727],"content":"Last<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;GatewayIPAddressInformation&gt;","pos":[0,33],"source":"Last<GatewayIPAddressInformation>"}]},{"pos":[240839,240840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240867,240868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240946,240982],"content":"Last(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of GatewayIPAddressInformation)","pos":[0,36]}]},{"pos":[241097,241098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241125,241126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241752,241829],"content":"Last<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,77],"source":"Last<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[242406,242439],"content":"Last<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;GatewayIPAddressInformation&gt;","pos":[0,33],"source":"Last<GatewayIPAddressInformation>"}]},{"pos":[242551,242552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242602,242606],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[242664,242665],"content":"<","needQuote":true,"nodes":[]},{"pos":[242759,242786],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[242870,242871]},{"pos":[242927,242934],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[243027,243028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243139,243175],"content":"Last(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of GatewayIPAddressInformation)","pos":[0,36]}]},{"pos":[243290,243291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243341,243345],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[243404,243407]},{"pos":[243508,243535],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[243619,243620]},{"pos":[243676,243683],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[243744,243745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243772,243773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244417,244461],"content":"LastOrDefault<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;GatewayIPAddressInformation&gt;()","pos":[0,44],"source":"LastOrDefault<GatewayIPAddressInformation>()"}]},{"pos":[244821,244863],"content":"LastOrDefault<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;GatewayIPAddressInformation&gt;","pos":[0,42],"source":"LastOrDefault<GatewayIPAddressInformation>"}]},{"pos":[244984,244985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245012,245013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245100,245145],"content":"LastOrDefault(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of GatewayIPAddressInformation)","pos":[0,45]}]},{"pos":[245269,245270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245297,245298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245969,246055],"content":"LastOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,86],"source":"LastOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[246668,246710],"content":"LastOrDefault<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;GatewayIPAddressInformation&gt;","pos":[0,42],"source":"LastOrDefault<GatewayIPAddressInformation>"}]},{"pos":[246831,246832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246882,246886],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[246944,246945],"content":"<","needQuote":true,"nodes":[]},{"pos":[247039,247066],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[247150,247151]},{"pos":[247207,247214],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[247307,247308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247428,247473],"content":"LastOrDefault(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of GatewayIPAddressInformation)","pos":[0,45]}]},{"pos":[247597,247598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247648,247652],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[247711,247714]},{"pos":[247815,247842],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[247926,247927]},{"pos":[247983,247990],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[248051,248052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248079,248080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248743,248783],"content":"LongCount<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"LongCount&lt;GatewayIPAddressInformation&gt;()","pos":[0,40],"source":"LongCount<GatewayIPAddressInformation>()"}]},{"pos":[249127,249165],"content":"LongCount<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"LongCount<GatewayIPAddressInformation>"}]},{"pos":[249282,249283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249310,249311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249394,249435],"content":"LongCount(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[249555,249556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249583,249584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250235,250317],"content":"LongCount<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"LongCount<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[250914,250952],"content":"LongCount<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"LongCount<GatewayIPAddressInformation>"}]},{"pos":[251069,251070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251120,251124],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[251182,251183],"content":"<","needQuote":true,"nodes":[]},{"pos":[251277,251304],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[251388,251389]},{"pos":[251445,251452],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[251545,251546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251662,251703],"content":"LongCount(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[251823,251824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251874,251878],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[251937,251940]},{"pos":[252041,252068],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[252152,252153]},{"pos":[252209,252216],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[252277,252278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252305,252306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252945,252979],"content":"Max<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;()","pos":[0,34],"source":"Max<GatewayIPAddressInformation>()"}]},{"pos":[253299,253331],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[253442,253443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253470,253471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253548,253583],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[253697,253698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253725,253726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254347,254423],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Decimal&gt;)","pos":[0,76],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)"}]},{"pos":[254996,255028],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[255139,255140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255190,255194],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[255252,255253],"content":"<","needQuote":true,"nodes":[]},{"pos":[255347,255374],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[255458,255459]},{"pos":[255515,255522],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[255615,255616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255726,255761],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[255875,255876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255926,255930],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[255989,255992]},{"pos":[256093,256120],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[256204,256205]},{"pos":[256261,256268],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[256329,256330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256357,256358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257096,257171],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Double&gt;)","pos":[0,75],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)"}]},{"pos":[257740,257772],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[257883,257884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257934,257938],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[257996,257997],"content":"<","needQuote":true,"nodes":[]},{"pos":[258091,258118],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[258202,258203]},{"pos":[258258,258264],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[258356,258357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258466,258501],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[258615,258616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258666,258670],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[258729,258732]},{"pos":[258833,258860],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[258944,258945]},{"pos":[259000,259006],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[259066,259067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259094,259095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259828,259902],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int32&gt;)","pos":[0,74],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)"}]},{"pos":[260467,260499],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[260610,260611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260661,260665],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[260723,260724],"content":"<","needQuote":true,"nodes":[]},{"pos":[260818,260845],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[260929,260930]},{"pos":[260984,260989],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[261080,261081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261189,261224],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[261338,261339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261389,261393],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[261452,261455]},{"pos":[261556,261583],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[261667,261668]},{"pos":[261722,261727],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[261786,261787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261814,261815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262545,262619],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int64&gt;)","pos":[0,74],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)"}]},{"pos":[263184,263216],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[263327,263328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263378,263382],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[263440,263441],"content":"<","needQuote":true,"nodes":[]},{"pos":[263535,263562],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[263646,263647]},{"pos":[263701,263706],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[263797,263798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263906,263941],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[264055,264056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264106,264110],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[264169,264172]},{"pos":[264273,264300],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[264384,264385]},{"pos":[264439,264444],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[264503,264504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264531,264532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265300,265386],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,86],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[266026,266058],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[266169,266170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266220,266224],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[266282,266283],"content":"<","needQuote":true,"nodes":[]},{"pos":[266377,266404],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[266488,266489]},{"pos":[266548,266556],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[266618,266619],"content":"<","needQuote":true,"nodes":[]},{"pos":[266670,266677],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[266802,266803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266930,266965],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[267079,267080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267130,267134],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[267193,267196]},{"pos":[267297,267324],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[267408,267409]},{"pos":[267468,267476],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[267539,267542]},{"pos":[267600,267607],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[267668,267669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267696,267697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267724,267725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268537,268622],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,85],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)"}]},{"pos":[269258,269290],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[269401,269402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269452,269456],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[269514,269515],"content":"<","needQuote":true,"nodes":[]},{"pos":[269609,269636],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[269720,269721]},{"pos":[269780,269788],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[269850,269851],"content":"<","needQuote":true,"nodes":[]},{"pos":[269901,269907],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[270031,270032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270158,270193],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[270307,270308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270358,270362],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[270421,270424]},{"pos":[270525,270552],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[270636,270637]},{"pos":[270696,270704],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[270767,270770]},{"pos":[270827,270833],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[270893,270894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270921,270922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270949,270950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271757,271841],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,84],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[272473,272505],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[272616,272617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272667,272671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[272729,272730],"content":"<","needQuote":true,"nodes":[]},{"pos":[272824,272851],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[272935,272936]},{"pos":[272995,273003],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[273065,273066],"content":"<","needQuote":true,"nodes":[]},{"pos":[273115,273120],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[273243,273244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273369,273404],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[273518,273519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273569,273573],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[273632,273635]},{"pos":[273736,273763],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[273847,273848]},{"pos":[273907,273915],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[273978,273981]},{"pos":[274037,274042],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[274101,274102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274129,274130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274157,274158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274962,275046],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,84],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[275678,275710],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[275821,275822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275872,275876],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[275934,275935],"content":"<","needQuote":true,"nodes":[]},{"pos":[276029,276056],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[276140,276141]},{"pos":[276200,276208],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[276270,276271],"content":"<","needQuote":true,"nodes":[]},{"pos":[276320,276325],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[276448,276449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276574,276609],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[276723,276724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276774,276778],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[276837,276840]},{"pos":[276941,276968],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[277052,277053]},{"pos":[277112,277120],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[277183,277186]},{"pos":[277242,277247],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[277306,277307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277334,277335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277362,277363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278169,278254],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,85],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)"}]},{"pos":[278890,278922],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[279033,279034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279084,279088],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[279146,279147],"content":"<","needQuote":true,"nodes":[]},{"pos":[279241,279268],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[279352,279353]},{"pos":[279412,279420],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[279482,279483],"content":"<","needQuote":true,"nodes":[]},{"pos":[279533,279539],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[279663,279664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279790,279825],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[279939,279940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279990,279994],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[280053,280056]},{"pos":[280157,280184],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[280268,280269]},{"pos":[280328,280336],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[280399,280402]},{"pos":[280459,280465],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[280525,280526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280553,280554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280581,280582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281357,281432],"content":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Single&gt;)","pos":[0,75],"source":"Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)"}]},{"pos":[282001,282033],"content":"Max<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Max<GatewayIPAddressInformation>"}]},{"pos":[282144,282145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282195,282199],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[282257,282258],"content":"<","needQuote":true,"nodes":[]},{"pos":[282352,282379],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[282463,282464]},{"pos":[282519,282525],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[282617,282618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282727,282762],"content":"Max(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[282876,282877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282927,282931],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[282990,282993]},{"pos":[283094,283121],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[283205,283206]},{"pos":[283261,283267],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[283327,283328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283355,283356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284077,284162],"content":"Max<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation, TResult&gt;(Func&lt;GatewayIPAddressInformation, TResult&gt;)","pos":[0,85],"source":"Max<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)"}]},{"pos":[284737,284778],"content":"Max<GatewayIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;GatewayIPAddressInformation, TResult&gt;","pos":[0,41],"source":"Max<GatewayIPAddressInformation, TResult>"}]},{"pos":[284898,284899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284949,284953],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[285011,285012],"content":"<","needQuote":true,"nodes":[]},{"pos":[285106,285133],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[285217,285218]},{"pos":[285250,285257],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[285322,285323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285422,285466],"content":"Max(Of GatewayIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Max(Of GatewayIPAddressInformation, TResult)","pos":[0,44]}]},{"pos":[285589,285590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285640,285644],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[285703,285706]},{"pos":[285807,285834],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[285918,285919]},{"pos":[285951,285958],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[285991,285992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286019,286020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286648,286682],"content":"Min<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;()","pos":[0,34],"source":"Min<GatewayIPAddressInformation>()"}]},{"pos":[287002,287034],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[287145,287146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287173,287174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287251,287286],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[287400,287401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287428,287429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288050,288126],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Decimal&gt;)","pos":[0,76],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)"}]},{"pos":[288699,288731],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[288842,288843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288893,288897],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[288955,288956],"content":"<","needQuote":true,"nodes":[]},{"pos":[289050,289077],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[289161,289162]},{"pos":[289218,289225],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[289318,289319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289429,289464],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[289578,289579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289629,289633],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289692,289695]},{"pos":[289796,289823],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[289907,289908]},{"pos":[289964,289971],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[290032,290033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290060,290061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290799,290874],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Double&gt;)","pos":[0,75],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)"}]},{"pos":[291443,291475],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[291586,291587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291637,291641],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[291699,291700],"content":"<","needQuote":true,"nodes":[]},{"pos":[291794,291821],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[291905,291906]},{"pos":[291961,291967],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[292059,292060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292169,292204],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[292318,292319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292369,292373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[292432,292435]},{"pos":[292536,292563],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[292647,292648]},{"pos":[292703,292709],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[292769,292770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292797,292798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293531,293605],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int32&gt;)","pos":[0,74],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)"}]},{"pos":[294170,294202],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[294313,294314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294364,294368],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[294426,294427],"content":"<","needQuote":true,"nodes":[]},{"pos":[294521,294548],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[294632,294633]},{"pos":[294687,294692],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[294783,294784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294892,294927],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[295041,295042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295092,295096],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[295155,295158]},{"pos":[295259,295286],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[295370,295371]},{"pos":[295425,295430],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[295489,295490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295517,295518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296248,296322],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int64&gt;)","pos":[0,74],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)"}]},{"pos":[296887,296919],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[297030,297031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297081,297085],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[297143,297144],"content":"<","needQuote":true,"nodes":[]},{"pos":[297238,297265],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[297349,297350]},{"pos":[297404,297409],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[297500,297501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297609,297644],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[297758,297759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297809,297813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[297872,297875]},{"pos":[297976,298003],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[298087,298088]},{"pos":[298142,298147],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[298206,298207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298234,298235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299003,299089],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,86],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[299729,299761],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[299872,299873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299923,299927],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[299985,299986],"content":"<","needQuote":true,"nodes":[]},{"pos":[300080,300107],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[300191,300192]},{"pos":[300251,300259],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[300321,300322],"content":"<","needQuote":true,"nodes":[]},{"pos":[300373,300380],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[300505,300506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300633,300668],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[300782,300783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300833,300837],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[300896,300899]},{"pos":[301000,301027],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[301111,301112]},{"pos":[301171,301179],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[301242,301245]},{"pos":[301303,301310],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[301371,301372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301399,301400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301427,301428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302240,302325],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,85],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)"}]},{"pos":[302961,302993],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[303104,303105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303155,303159],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[303217,303218],"content":"<","needQuote":true,"nodes":[]},{"pos":[303312,303339],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[303423,303424]},{"pos":[303483,303491],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[303553,303554],"content":"<","needQuote":true,"nodes":[]},{"pos":[303604,303610],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[303734,303735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303861,303896],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[304010,304011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304061,304065],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[304124,304127]},{"pos":[304228,304255],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[304339,304340]},{"pos":[304399,304407],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[304470,304473]},{"pos":[304530,304536],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[304596,304597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304624,304625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304652,304653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305460,305544],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,84],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[306176,306208],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[306319,306320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306370,306374],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306432,306433],"content":"<","needQuote":true,"nodes":[]},{"pos":[306527,306554],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[306638,306639]},{"pos":[306698,306706],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[306768,306769],"content":"<","needQuote":true,"nodes":[]},{"pos":[306818,306823],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[306946,306947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307072,307107],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[307221,307222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307272,307276],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[307335,307338]},{"pos":[307439,307466],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[307550,307551]},{"pos":[307610,307618],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[307681,307684]},{"pos":[307740,307745],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[307804,307805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307832,307833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307860,307861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308665,308749],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,84],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[309381,309413],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[309524,309525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309575,309579],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[309637,309638],"content":"<","needQuote":true,"nodes":[]},{"pos":[309732,309759],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[309843,309844]},{"pos":[309903,309911],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[309973,309974],"content":"<","needQuote":true,"nodes":[]},{"pos":[310023,310028],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[310151,310152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310277,310312],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[310426,310427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310477,310481],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[310540,310543]},{"pos":[310644,310671],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[310755,310756]},{"pos":[310815,310823],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[310886,310889]},{"pos":[310945,310950],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[311009,311010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311037,311038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311065,311066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311872,311957],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,85],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)"}]},{"pos":[312593,312625],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[312736,312737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312787,312791],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[312849,312850],"content":"<","needQuote":true,"nodes":[]},{"pos":[312944,312971],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[313055,313056]},{"pos":[313115,313123],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[313185,313186],"content":"<","needQuote":true,"nodes":[]},{"pos":[313236,313242],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[313366,313367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313493,313528],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[313642,313643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313693,313697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[313756,313759]},{"pos":[313860,313887],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[313971,313972]},{"pos":[314031,314039],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[314102,314105]},{"pos":[314162,314168],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[314228,314229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314256,314257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314284,314285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315060,315135],"content":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Single&gt;)","pos":[0,75],"source":"Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)"}]},{"pos":[315704,315736],"content":"Min<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Min<GatewayIPAddressInformation>"}]},{"pos":[315847,315848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315898,315902],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[315960,315961],"content":"<","needQuote":true,"nodes":[]},{"pos":[316055,316082],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[316166,316167]},{"pos":[316222,316228],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[316320,316321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316430,316465],"content":"Min(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[316579,316580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316630,316634],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[316693,316696]},{"pos":[316797,316824],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[316908,316909]},{"pos":[316964,316970],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[317030,317031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317058,317059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317780,317865],"content":"Min<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation, TResult&gt;(Func&lt;GatewayIPAddressInformation, TResult&gt;)","pos":[0,85],"source":"Min<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)"}]},{"pos":[318440,318481],"content":"Min<GatewayIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;GatewayIPAddressInformation, TResult&gt;","pos":[0,41],"source":"Min<GatewayIPAddressInformation, TResult>"}]},{"pos":[318601,318602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318652,318656],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[318714,318715],"content":"<","needQuote":true,"nodes":[]},{"pos":[318809,318836],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[318920,318921]},{"pos":[318953,318960],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[319025,319026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319125,319169],"content":"Min(Of GatewayIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Min(Of GatewayIPAddressInformation, TResult)","pos":[0,44]}]},{"pos":[319292,319293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319343,319347],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[319406,319409]},{"pos":[319510,319537],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[319621,319622]},{"pos":[319654,319661],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[319694,319695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319722,319723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320277,320294],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[320506,320521],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[320585,320586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320613,320614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320694,320712],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[320779,320780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320807,320808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321374,321457],"content":"OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;)","pos":[0,83],"source":"OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)"}]},{"pos":[322030,322072],"content":"OrderBy<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,42],"source":"OrderBy<GatewayIPAddressInformation, TKey>"}]},{"pos":[322193,322194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322244,322248],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322306,322307],"content":"<","needQuote":true,"nodes":[]},{"pos":[322401,322428],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[322512,322513]},{"pos":[322545,322549],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[322611,322612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322715,322760],"content":"OrderBy(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of GatewayIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[322884,322885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322935,322939],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[322998,323001]},{"pos":[323102,323129],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[323213,323214]},{"pos":[323246,323250],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[323280,323281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323308,323309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324132,324232],"content":"OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,100],"source":"OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[324958,325000],"content":"OrderBy<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,42],"source":"OrderBy<GatewayIPAddressInformation, TKey>"}]},{"pos":[325121,325122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325172,325176],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[325234,325235],"content":"<","needQuote":true,"nodes":[]},{"pos":[325329,325356],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[325440,325441]},{"pos":[325473,325477],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[325540,325541]},{"pos":[325621,325630],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[325713,325714],"content":"<","needQuote":true,"nodes":[]},{"pos":[325741,325745],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[325807,325808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325953,325998],"content":"OrderBy(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of GatewayIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[326122,326123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326173,326177],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[326236,326239]},{"pos":[326340,326367],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[326451,326452]},{"pos":[326484,326488],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[326518,326519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326547,326548]},{"pos":[326628,326637],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[326721,326724]},{"pos":[326758,326762],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[326792,326793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326820,326821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327656,327749],"content":"OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;)","pos":[0,93],"source":"OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)"}]},{"pos":[328362,328414],"content":"OrderByDescending<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,52],"source":"OrderByDescending<GatewayIPAddressInformation, TKey>"}]},{"pos":[328545,328546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328596,328600],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[328658,328659],"content":"<","needQuote":true,"nodes":[]},{"pos":[328753,328780],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[328864,328865]},{"pos":[328897,328901],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[328963,328964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329077,329132],"content":"OrderByDescending(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of GatewayIPAddressInformation, TKey)","pos":[0,55]}]},{"pos":[329266,329267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329317,329321],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[329380,329383]},{"pos":[329484,329511],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[329595,329596]},{"pos":[329628,329632],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[329662,329663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329690,329691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330564,330674],"content":"OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,110],"source":"OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[331440,331492],"content":"OrderByDescending<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,52],"source":"OrderByDescending<GatewayIPAddressInformation, TKey>"}]},{"pos":[331623,331624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331674,331678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[331736,331737],"content":"<","needQuote":true,"nodes":[]},{"pos":[331831,331858],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[331942,331943]},{"pos":[331975,331979],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[332042,332043]},{"pos":[332123,332132],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[332215,332216],"content":"<","needQuote":true,"nodes":[]},{"pos":[332243,332247],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[332309,332310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332465,332520],"content":"OrderByDescending(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of GatewayIPAddressInformation, TKey)","pos":[0,55]}]},{"pos":[332654,332655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332705,332709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[332768,332771]},{"pos":[332872,332899],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[332983,332984]},{"pos":[333016,333020],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[333050,333051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[333079,333080]},{"pos":[333160,333169],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[333253,333256]},{"pos":[333290,333294],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[333324,333325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333352,333353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334098,334136],"content":"Reverse<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Reverse&lt;GatewayIPAddressInformation&gt;()","pos":[0,38],"source":"Reverse<GatewayIPAddressInformation>()"}]},{"pos":[334472,334508],"content":"Reverse<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Reverse&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"Reverse<GatewayIPAddressInformation>"}]},{"pos":[334623,334624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334651,334652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334733,334772],"content":"Reverse(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Reverse(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[334890,334891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334918,334919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335542,335630],"content":"Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;GatewayIPAddressInformation, TResult&gt;(Func&lt;GatewayIPAddressInformation, TResult&gt;)","pos":[0,88],"source":"Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)"}]},{"pos":[336217,336261],"content":"Select<GatewayIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;GatewayIPAddressInformation, TResult&gt;","pos":[0,44],"source":"Select<GatewayIPAddressInformation, TResult>"}]},{"pos":[336384,336385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336435,336439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336497,336498],"content":"<","needQuote":true,"nodes":[]},{"pos":[336592,336619],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[336703,336704]},{"pos":[336736,336743],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[336808,336809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336911,336958],"content":"Select(Of GatewayIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of GatewayIPAddressInformation, TResult)","pos":[0,47]}]},{"pos":[337084,337085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337135,337139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[337198,337201]},{"pos":[337302,337329],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[337413,337414]},{"pos":[337446,337453],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[337486,337487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337514,337515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338287,338382],"content":"Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;GatewayIPAddressInformation, TResult&gt;(Func&lt;GatewayIPAddressInformation, Int32, TResult&gt;)","pos":[0,95],"source":"Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, TResult>)"}]},{"pos":[339017,339061],"content":"Select<GatewayIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;GatewayIPAddressInformation, TResult&gt;","pos":[0,44],"source":"Select<GatewayIPAddressInformation, TResult>"}]},{"pos":[339184,339185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339235,339239],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[339297,339298],"content":"<","needQuote":true,"nodes":[]},{"pos":[339392,339419],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[339503,339504]},{"pos":[339558,339563],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[339623,339624]},{"pos":[339656,339663],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[339728,339729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339844,339891],"content":"Select(Of GatewayIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of GatewayIPAddressInformation, TResult)","pos":[0,47]}]},{"pos":[340017,340018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340068,340072],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[340131,340134]},{"pos":[340235,340262],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[340346,340347]},{"pos":[340401,340406],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[340466,340467]},{"pos":[340499,340506],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[340539,340540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340567,340568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341429,341534],"content":"SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TResult&gt;(Func&lt;GatewayIPAddressInformation, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,105],"source":"SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TResult>>)"}]},{"pos":[342276,342324],"content":"SelectMany<GatewayIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TResult&gt;","pos":[0,48],"source":"SelectMany<GatewayIPAddressInformation, TResult>"}]},{"pos":[342451,342452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342502,342506],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[342564,342565],"content":"<","needQuote":true,"nodes":[]},{"pos":[342659,342686],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[342770,342771]},{"pos":[342853,342864],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[342949,342950],"content":"<","needQuote":true,"nodes":[]},{"pos":[342977,342984],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[343081,343082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343228,343279],"content":"SelectMany(Of GatewayIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of GatewayIPAddressInformation, TResult)","pos":[0,51]}]},{"pos":[343409,343410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343460,343464],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[343523,343526]},{"pos":[343627,343654],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[343738,343739]},{"pos":[343821,343832],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[343918,343921]},{"pos":[343955,343962],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[343995,343996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344023,344024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344051,344052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344993,345105],"content":"SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TResult&gt;(Func&lt;GatewayIPAddressInformation, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,112],"source":"SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TResult>>)"}]},{"pos":[345895,345943],"content":"SelectMany<GatewayIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TResult&gt;","pos":[0,48],"source":"SelectMany<GatewayIPAddressInformation, TResult>"}]},{"pos":[346070,346071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346121,346125],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[346183,346184],"content":"<","needQuote":true,"nodes":[]},{"pos":[346278,346305],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[346389,346390]},{"pos":[346444,346449],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[346509,346510]},{"pos":[346592,346603],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[346688,346689],"content":"<","needQuote":true,"nodes":[]},{"pos":[346716,346723],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[346820,346821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346980,347031],"content":"SelectMany(Of GatewayIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of GatewayIPAddressInformation, TResult)","pos":[0,51]}]},{"pos":[347161,347162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347212,347216],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[347275,347278]},{"pos":[347379,347406],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[347490,347491]},{"pos":[347545,347550],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[347610,347611]},{"pos":[347693,347704],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[347790,347793]},{"pos":[347827,347834],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[347867,347868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347895,347896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347923,347924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348990,349169],"content":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TCollection, TResult&gt;(Func&lt;GatewayIPAddressInformation, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;GatewayIPAddressInformation, TCollection, TResult&gt;)","pos":[0,179],"source":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)"}]},{"pos":[350238,350299],"content":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TCollection, TResult&gt;","pos":[0,61],"source":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>"}]},{"pos":[350439,350440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350490,350494],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[350552,350553],"content":"<","needQuote":true,"nodes":[]},{"pos":[350647,350674],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[350758,350759]},{"pos":[350841,350852],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[350937,350938],"content":"<","needQuote":true,"nodes":[]},{"pos":[350965,350976],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[351078,351079]},{"pos":[351134,351138],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[351196,351197],"content":"<","needQuote":true,"nodes":[]},{"pos":[351291,351318],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[351402,351403]},{"pos":[351435,351446],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[351484,351485]},{"pos":[351517,351524],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[351589,351590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351761,351825],"content":"SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)","pos":[0,64]}]},{"pos":[351968,351969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352019,352023],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[352082,352085]},{"pos":[352186,352213],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[352297,352298]},{"pos":[352380,352391],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[352477,352480]},{"pos":[352514,352525],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[352562,352563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352590,352591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[352619,352620]},{"pos":[352675,352679],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[352738,352741]},{"pos":[352842,352869],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[352953,352954]},{"pos":[352986,352997],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[353035,353036]},{"pos":[353068,353075],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[353108,353109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353136,353137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354378,354564],"content":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TCollection, TResult&gt;(Func&lt;GatewayIPAddressInformation, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;GatewayIPAddressInformation, TCollection, TResult&gt;)","pos":[0,186],"source":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)"}]},{"pos":[355681,355742],"content":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;GatewayIPAddressInformation, TCollection, TResult&gt;","pos":[0,61],"source":"SelectMany<GatewayIPAddressInformation, TCollection, TResult>"}]},{"pos":[355882,355883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355933,355937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[355995,355996],"content":"<","needQuote":true,"nodes":[]},{"pos":[356090,356117],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[356201,356202]},{"pos":[356256,356261],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[356321,356322]},{"pos":[356404,356415],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[356500,356501],"content":"<","needQuote":true,"nodes":[]},{"pos":[356528,356539],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[356641,356642]},{"pos":[356697,356701],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[356759,356760],"content":"<","needQuote":true,"nodes":[]},{"pos":[356854,356881],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[356965,356966]},{"pos":[356998,357009],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[357047,357048]},{"pos":[357080,357087],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[357152,357153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357337,357401],"content":"SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)","pos":[0,64]}]},{"pos":[357544,357545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357595,357599],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[357658,357661]},{"pos":[357762,357789],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[357873,357874]},{"pos":[357928,357933],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[357993,357994]},{"pos":[358076,358087],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[358173,358176]},{"pos":[358210,358221],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[358258,358259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358286,358287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[358315,358316]},{"pos":[358371,358375],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[358434,358437]},{"pos":[358538,358565],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[358649,358650]},{"pos":[358682,358693],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[358731,358732]},{"pos":[358764,358771],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[358804,358805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358832,358833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359917,360001],"content":"SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;)","pos":[0,84],"source":"SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)"}]},{"pos":[360646,360688],"content":"SequenceEqual<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;GatewayIPAddressInformation&gt;","pos":[0,42],"source":"SequenceEqual<GatewayIPAddressInformation>"}]},{"pos":[360809,360810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360887,360898],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[360983,360984],"content":"<","needQuote":true,"nodes":[]},{"pos":[361078,361105],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[361220,361221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361353,361398],"content":"SequenceEqual(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of GatewayIPAddressInformation)","pos":[0,45]}]},{"pos":[361522,361523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361600,361611],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[361697,361700]},{"pos":[361801,361828],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[361911,361912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361939,361940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362916,363048],"content":"SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;, IEqualityComparer&lt;GatewayIPAddressInformation&gt;)","pos":[0,132],"source":"SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)"}]},{"pos":[364007,364049],"content":"SequenceEqual<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;GatewayIPAddressInformation&gt;","pos":[0,42],"source":"SequenceEqual<GatewayIPAddressInformation>"}]},{"pos":[364170,364171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364248,364259],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[364344,364345],"content":"<","needQuote":true,"nodes":[]},{"pos":[364439,364466],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[364582,364583]},{"pos":[364671,364688],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[364779,364780],"content":"<","needQuote":true,"nodes":[]},{"pos":[364874,364901],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[365016,365017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365199,365244],"content":"SequenceEqual(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of GatewayIPAddressInformation)","pos":[0,45]}]},{"pos":[365368,365369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365446,365457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[365543,365546]},{"pos":[365647,365674],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[365757,365758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[365786,365787]},{"pos":[365875,365892],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[365984,365987]},{"pos":[366088,366115],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[366198,366199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366226,366227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367041,367078],"content":"Single<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Single&lt;GatewayIPAddressInformation&gt;()","pos":[0,37],"source":"Single<GatewayIPAddressInformation>()"}]},{"pos":[367410,367445],"content":"Single<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;GatewayIPAddressInformation&gt;","pos":[0,35],"source":"Single<GatewayIPAddressInformation>"}]},{"pos":[367559,367560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367587,367588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367668,367706],"content":"Single(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of GatewayIPAddressInformation)","pos":[0,38]}]},{"pos":[367823,367824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367851,367852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368488,368567],"content":"Single<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,79],"source":"Single<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[369152,369187],"content":"Single<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;GatewayIPAddressInformation&gt;","pos":[0,35],"source":"Single<GatewayIPAddressInformation>"}]},{"pos":[369301,369302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369352,369356],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[369414,369415],"content":"<","needQuote":true,"nodes":[]},{"pos":[369509,369536],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[369620,369621]},{"pos":[369677,369684],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[369777,369778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369891,369929],"content":"Single(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of GatewayIPAddressInformation)","pos":[0,38]}]},{"pos":[370046,370047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370097,370101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[370160,370163]},{"pos":[370264,370291],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[370375,370376]},{"pos":[370432,370439],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[370500,370501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370528,370529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371183,371229],"content":"SingleOrDefault<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;GatewayIPAddressInformation&gt;()","pos":[0,46],"source":"SingleOrDefault<GatewayIPAddressInformation>()"}]},{"pos":[371597,371641],"content":"SingleOrDefault<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;GatewayIPAddressInformation&gt;","pos":[0,44],"source":"SingleOrDefault<GatewayIPAddressInformation>"}]},{"pos":[371764,371765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371792,371793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371882,371929],"content":"SingleOrDefault(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of GatewayIPAddressInformation)","pos":[0,47]}]},{"pos":[372055,372056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372083,372084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372765,372853],"content":"SingleOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,88],"source":"SingleOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[373474,373518],"content":"SingleOrDefault<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;GatewayIPAddressInformation&gt;","pos":[0,44],"source":"SingleOrDefault<GatewayIPAddressInformation>"}]},{"pos":[373641,373642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373692,373696],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[373754,373755],"content":"<","needQuote":true,"nodes":[]},{"pos":[373849,373876],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[373960,373961]},{"pos":[374017,374024],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[374117,374118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374240,374287],"content":"SingleOrDefault(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of GatewayIPAddressInformation)","pos":[0,47]}]},{"pos":[374413,374414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374464,374468],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[374527,374530]},{"pos":[374631,374658],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[374742,374743]},{"pos":[374799,374806],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[374867,374868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374895,374896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375582,375622],"content":"Skip<GatewayIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;GatewayIPAddressInformation&gt;(Int32)","pos":[0,40],"source":"Skip<GatewayIPAddressInformation>(Int32)"}]},{"pos":[375989,376022],"content":"Skip<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Skip&lt;GatewayIPAddressInformation&gt;","pos":[0,33],"source":"Skip<GatewayIPAddressInformation>"}]},{"pos":[376134,376135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376184,376189],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[376248,376249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376341,376377],"content":"Skip(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Skip(Of GatewayIPAddressInformation)","pos":[0,36]}]},{"pos":[376492,376493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376542,376547],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[376606,376607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377266,377348],"content":"SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[377945,377983],"content":"SkipWhile<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"SkipWhile<GatewayIPAddressInformation>"}]},{"pos":[378100,378101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378151,378155],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[378213,378214],"content":"<","needQuote":true,"nodes":[]},{"pos":[378308,378335],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[378419,378420]},{"pos":[378476,378483],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[378576,378577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378693,378734],"content":"SkipWhile(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[378854,378855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378905,378909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[378968,378971]},{"pos":[379072,379099],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[379183,379184]},{"pos":[379240,379247],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[379308,379309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379336,379337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380133,380222],"content":"SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int32, Boolean&gt;)","pos":[0,89],"source":"SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)"}]},{"pos":[380867,380905],"content":"SkipWhile<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"SkipWhile<GatewayIPAddressInformation>"}]},{"pos":[381022,381023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381073,381077],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[381135,381136],"content":"<","needQuote":true,"nodes":[]},{"pos":[381230,381257],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[381341,381342]},{"pos":[381396,381401],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[381461,381462]},{"pos":[381518,381525],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[381618,381619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381748,381789],"content":"SkipWhile(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[381909,381910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381960,381964],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[382023,382026]},{"pos":[382127,382154],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[382238,382239]},{"pos":[382293,382298],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[382358,382359]},{"pos":[382415,382422],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[382483,382484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382511,382512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383297,383373],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Decimal&gt;)","pos":[0,76],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)"}]},{"pos":[383946,383978],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[384089,384090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384140,384144],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[384202,384203],"content":"<","needQuote":true,"nodes":[]},{"pos":[384297,384324],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[384408,384409]},{"pos":[384465,384472],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[384565,384566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384676,384711],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[384825,384826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384876,384880],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[384939,384942]},{"pos":[385043,385070],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[385154,385155]},{"pos":[385211,385218],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[385279,385280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385307,385308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386046,386121],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Double&gt;)","pos":[0,75],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)"}]},{"pos":[386690,386722],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[386833,386834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386884,386888],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[386946,386947],"content":"<","needQuote":true,"nodes":[]},{"pos":[387041,387068],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[387152,387153]},{"pos":[387208,387214],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[387306,387307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387416,387451],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[387565,387566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387616,387620],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[387679,387682]},{"pos":[387783,387810],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[387894,387895]},{"pos":[387950,387956],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[388016,388017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388044,388045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388778,388852],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int32&gt;)","pos":[0,74],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)"}]},{"pos":[389417,389449],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[389560,389561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389611,389615],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[389673,389674],"content":"<","needQuote":true,"nodes":[]},{"pos":[389768,389795],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[389879,389880]},{"pos":[389934,389939],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[390030,390031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390139,390174],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[390288,390289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390339,390343],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[390402,390405]},{"pos":[390506,390533],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[390617,390618]},{"pos":[390672,390677],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[390736,390737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390764,390765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391495,391569],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int64&gt;)","pos":[0,74],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)"}]},{"pos":[392134,392166],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[392277,392278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392328,392332],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[392390,392391],"content":"<","needQuote":true,"nodes":[]},{"pos":[392485,392512],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[392596,392597]},{"pos":[392651,392656],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[392747,392748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392856,392891],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[393005,393006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393056,393060],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[393119,393122]},{"pos":[393223,393250],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[393334,393335]},{"pos":[393389,393394],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[393453,393454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393481,393482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394250,394336],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,86],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[394976,395008],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[395119,395120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395170,395174],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[395232,395233],"content":"<","needQuote":true,"nodes":[]},{"pos":[395327,395354],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[395438,395439]},{"pos":[395498,395506],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[395568,395569],"content":"<","needQuote":true,"nodes":[]},{"pos":[395620,395627],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[395752,395753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395880,395915],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[396029,396030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396080,396084],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[396143,396146]},{"pos":[396247,396274],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[396358,396359]},{"pos":[396418,396426],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[396489,396492]},{"pos":[396550,396557],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[396618,396619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396646,396647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396674,396675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397487,397572],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,85],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)"}]},{"pos":[398208,398240],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[398351,398352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398402,398406],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[398464,398465],"content":"<","needQuote":true,"nodes":[]},{"pos":[398559,398586],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[398670,398671]},{"pos":[398730,398738],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[398800,398801],"content":"<","needQuote":true,"nodes":[]},{"pos":[398851,398857],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[398981,398982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399108,399143],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[399257,399258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399308,399312],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[399371,399374]},{"pos":[399475,399502],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[399586,399587]},{"pos":[399646,399654],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[399717,399720]},{"pos":[399777,399783],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[399843,399844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399871,399872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399899,399900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400707,400791],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,84],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[401423,401455],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[401566,401567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401617,401621],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[401679,401680],"content":"<","needQuote":true,"nodes":[]},{"pos":[401774,401801],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[401885,401886]},{"pos":[401945,401953],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[402015,402016],"content":"<","needQuote":true,"nodes":[]},{"pos":[402065,402070],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[402193,402194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402319,402354],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[402468,402469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402519,402523],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[402582,402585]},{"pos":[402686,402713],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[402797,402798]},{"pos":[402857,402865],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[402928,402931]},{"pos":[402987,402992],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[403051,403052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403079,403080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403107,403108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403912,403996],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,84],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[404628,404660],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[404771,404772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404822,404826],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[404884,404885],"content":"<","needQuote":true,"nodes":[]},{"pos":[404979,405006],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[405090,405091]},{"pos":[405150,405158],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[405220,405221],"content":"<","needQuote":true,"nodes":[]},{"pos":[405270,405275],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[405398,405399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405524,405559],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[405673,405674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405724,405728],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[405787,405790]},{"pos":[405891,405918],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[406002,406003]},{"pos":[406062,406070],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[406133,406136]},{"pos":[406192,406197],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[406256,406257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406284,406285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406312,406313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407119,407204],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,85],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)"}]},{"pos":[407840,407872],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[407983,407984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408034,408038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[408096,408097],"content":"<","needQuote":true,"nodes":[]},{"pos":[408191,408218],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[408302,408303]},{"pos":[408362,408370],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[408432,408433],"content":"<","needQuote":true,"nodes":[]},{"pos":[408483,408489],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[408613,408614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408740,408775],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[408889,408890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408940,408944],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[409003,409006]},{"pos":[409107,409134],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[409218,409219]},{"pos":[409278,409286],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[409349,409352]},{"pos":[409409,409415],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[409475,409476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409503,409504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409531,409532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410307,410382],"content":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Single&gt;)","pos":[0,75],"source":"Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)"}]},{"pos":[410951,410983],"content":"Sum<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;GatewayIPAddressInformation&gt;","pos":[0,32],"source":"Sum<GatewayIPAddressInformation>"}]},{"pos":[411094,411095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411145,411149],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[411207,411208],"content":"<","needQuote":true,"nodes":[]},{"pos":[411302,411329],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[411413,411414]},{"pos":[411469,411475],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[411567,411568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411677,411712],"content":"Sum(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[411826,411827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411877,411881],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[411940,411943]},{"pos":[412044,412071],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[412155,412156]},{"pos":[412211,412217],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[412277,412278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412305,412306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412953,412993],"content":"Take<GatewayIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;GatewayIPAddressInformation&gt;(Int32)","pos":[0,40],"source":"Take<GatewayIPAddressInformation>(Int32)"}]},{"pos":[413360,413393],"content":"Take<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Take&lt;GatewayIPAddressInformation&gt;","pos":[0,33],"source":"Take<GatewayIPAddressInformation>"}]},{"pos":[413505,413506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413555,413560],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[413619,413620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413712,413748],"content":"Take(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Take(Of GatewayIPAddressInformation)","pos":[0,36]}]},{"pos":[413863,413864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413913,413918],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[413977,413978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414637,414719],"content":"TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[415316,415354],"content":"TakeWhile<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"TakeWhile<GatewayIPAddressInformation>"}]},{"pos":[415471,415472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415522,415526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[415584,415585],"content":"<","needQuote":true,"nodes":[]},{"pos":[415679,415706],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[415790,415791]},{"pos":[415847,415854],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[415947,415948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416064,416105],"content":"TakeWhile(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[416225,416226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416276,416280],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[416339,416342]},{"pos":[416443,416470],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[416554,416555]},{"pos":[416611,416618],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[416679,416680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416707,416708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417504,417593],"content":"TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int32, Boolean&gt;)","pos":[0,89],"source":"TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)"}]},{"pos":[418238,418276],"content":"TakeWhile<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;GatewayIPAddressInformation&gt;","pos":[0,38],"source":"TakeWhile<GatewayIPAddressInformation>"}]},{"pos":[418393,418394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418444,418448],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[418506,418507],"content":"<","needQuote":true,"nodes":[]},{"pos":[418601,418628],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[418712,418713]},{"pos":[418767,418772],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[418832,418833]},{"pos":[418889,418896],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[418989,418990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419119,419160],"content":"TakeWhile(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of GatewayIPAddressInformation)","pos":[0,41]}]},{"pos":[419280,419281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419331,419335],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[419394,419397]},{"pos":[419498,419525],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[419609,419610]},{"pos":[419664,419669],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[419729,419730]},{"pos":[419786,419793],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[419854,419855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419882,419883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420557,420595],"content":"ToArray<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToArray&lt;GatewayIPAddressInformation&gt;()","pos":[0,38],"source":"ToArray<GatewayIPAddressInformation>()"}]},{"pos":[420931,420967],"content":"ToArray<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"ToArray&lt;GatewayIPAddressInformation&gt;","pos":[0,36],"source":"ToArray<GatewayIPAddressInformation>"}]},{"pos":[421082,421083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421110,421111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421192,421231],"content":"ToArray(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"ToArray(Of GatewayIPAddressInformation)","pos":[0,39]}]},{"pos":[421349,421350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421377,421378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422010,422098],"content":"ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;)","pos":[0,88],"source":"ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)"}]},{"pos":[422691,422738],"content":"ToDictionary<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,47],"source":"ToDictionary<GatewayIPAddressInformation, TKey>"}]},{"pos":[422864,422865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422915,422919],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[422977,422978],"content":"<","needQuote":true,"nodes":[]},{"pos":[423072,423099],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[423183,423184]},{"pos":[423216,423220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[423282,423283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423391,423441],"content":"ToDictionary(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of GatewayIPAddressInformation, TKey)","pos":[0,50]}]},{"pos":[423570,423571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423621,423625],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[423684,423687]},{"pos":[423788,423815],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[423899,423900]},{"pos":[423932,423936],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[423966,423967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423994,423995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424859,424972],"content":"ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,113],"source":"ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[425750,425797],"content":"ToDictionary<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,47],"source":"ToDictionary<GatewayIPAddressInformation, TKey>"}]},{"pos":[425923,425924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425974,425978],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[426036,426037],"content":"<","needQuote":true,"nodes":[]},{"pos":[426131,426158],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[426242,426243]},{"pos":[426275,426279],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[426342,426343]},{"pos":[426431,426448],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[426539,426540],"content":"<","needQuote":true,"nodes":[]},{"pos":[426567,426571],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[426633,426634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426792,426842],"content":"ToDictionary(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of GatewayIPAddressInformation, TKey)","pos":[0,50]}]},{"pos":[426971,426972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427022,427026],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[427085,427088]},{"pos":[427189,427216],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[427300,427301]},{"pos":[427333,427337],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[427367,427368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[427396,427397]},{"pos":[427485,427502],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[427594,427597]},{"pos":[427631,427635],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[427665,427666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427693,427694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428661,428804],"content":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey, TElement&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;)","pos":[0,143],"source":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)"}]},{"pos":[429663,429720],"content":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey, TElement&gt;","pos":[0,57],"source":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>"}]},{"pos":[429856,429857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429907,429911],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[429969,429970],"content":"<","needQuote":true,"nodes":[]},{"pos":[430064,430091],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[430175,430176]},{"pos":[430208,430212],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[430275,430276]},{"pos":[430331,430335],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[430393,430394],"content":"<","needQuote":true,"nodes":[]},{"pos":[430488,430515],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[430599,430600]},{"pos":[430632,430640],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[430706,430707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430836,430896],"content":"ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)","pos":[0,60]}]},{"pos":[431035,431036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431086,431090],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[431149,431152]},{"pos":[431253,431280],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[431364,431365]},{"pos":[431397,431401],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[431431,431432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[431460,431461]},{"pos":[431516,431520],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[431579,431582]},{"pos":[431683,431710],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[431794,431795]},{"pos":[431827,431835],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[431869,431870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431897,431898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432999,433167],"content":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey, TElement&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,168],"source":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[434211,434268],"content":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;GatewayIPAddressInformation, TKey, TElement&gt;","pos":[0,57],"source":"ToDictionary<GatewayIPAddressInformation, TKey, TElement>"}]},{"pos":[434404,434405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434455,434459],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[434517,434518],"content":"<","needQuote":true,"nodes":[]},{"pos":[434612,434639],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[434723,434724]},{"pos":[434756,434760],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[434823,434824]},{"pos":[434879,434883],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[434941,434942],"content":"<","needQuote":true,"nodes":[]},{"pos":[435036,435063],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[435147,435148]},{"pos":[435180,435188],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[435255,435256]},{"pos":[435344,435361],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[435452,435453],"content":"<","needQuote":true,"nodes":[]},{"pos":[435480,435484],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[435546,435547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435726,435786],"content":"ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)","pos":[0,60]}]},{"pos":[435925,435926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435976,435980],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[436039,436042]},{"pos":[436143,436170],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[436254,436255]},{"pos":[436287,436291],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[436321,436322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[436350,436351]},{"pos":[436406,436410],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[436469,436472]},{"pos":[436573,436600],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[436684,436685]},{"pos":[436717,436725],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[436759,436760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[436788,436789]},{"pos":[436877,436894],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[436986,436989]},{"pos":[437023,437027],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[437057,437058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437085,437086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437972,438009],"content":"ToList<GatewayIPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToList&lt;GatewayIPAddressInformation&gt;()","pos":[0,37],"source":"ToList<GatewayIPAddressInformation>()"}]},{"pos":[438341,438376],"content":"ToList<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"ToList&lt;GatewayIPAddressInformation&gt;","pos":[0,35],"source":"ToList<GatewayIPAddressInformation>"}]},{"pos":[438490,438491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438518,438519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438599,438637],"content":"ToList(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"ToList(Of GatewayIPAddressInformation)","pos":[0,38]}]},{"pos":[438754,438755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438782,438783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439404,439488],"content":"ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;)","pos":[0,84],"source":"ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)"}]},{"pos":[440065,440108],"content":"ToLookup<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,43],"source":"ToLookup<GatewayIPAddressInformation, TKey>"}]},{"pos":[440230,440231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440281,440285],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[440343,440344],"content":"<","needQuote":true,"nodes":[]},{"pos":[440438,440465],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[440549,440550]},{"pos":[440582,440586],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[440648,440649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440753,440799],"content":"ToLookup(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of GatewayIPAddressInformation, TKey)","pos":[0,46]}]},{"pos":[440924,440925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440975,440979],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[441038,441041]},{"pos":[441142,441169],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[441253,441254]},{"pos":[441286,441290],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[441320,441321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441348,441349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442193,442302],"content":"ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,109],"source":"ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[443064,443107],"content":"ToLookup<GatewayIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey&gt;","pos":[0,43],"source":"ToLookup<GatewayIPAddressInformation, TKey>"}]},{"pos":[443229,443230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443280,443284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[443342,443343],"content":"<","needQuote":true,"nodes":[]},{"pos":[443437,443464],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[443548,443549]},{"pos":[443581,443585],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[443648,443649]},{"pos":[443737,443754],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[443845,443846],"content":"<","needQuote":true,"nodes":[]},{"pos":[443873,443877],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[443939,443940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444094,444140],"content":"ToLookup(Of GatewayIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of GatewayIPAddressInformation, TKey)","pos":[0,46]}]},{"pos":[444265,444266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444316,444320],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[444379,444382]},{"pos":[444483,444510],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[444594,444595]},{"pos":[444627,444631],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[444661,444662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[444690,444691]},{"pos":[444779,444796],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[444888,444891]},{"pos":[444925,444929],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[444959,444960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444987,444988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445935,446074],"content":"ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey, TElement&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;)","pos":[0,139],"source":"ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)"}]},{"pos":[446917,446970],"content":"ToLookup<GatewayIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey, TElement&gt;","pos":[0,53],"source":"ToLookup<GatewayIPAddressInformation, TKey, TElement>"}]},{"pos":[447102,447103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447153,447157],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[447215,447216],"content":"<","needQuote":true,"nodes":[]},{"pos":[447310,447337],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[447421,447422]},{"pos":[447454,447458],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[447521,447522]},{"pos":[447577,447581],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[447639,447640],"content":"<","needQuote":true,"nodes":[]},{"pos":[447734,447761],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[447845,447846]},{"pos":[447878,447886],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[447952,447953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448078,448134],"content":"ToLookup(Of GatewayIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of GatewayIPAddressInformation, TKey, TElement)","pos":[0,56]}]},{"pos":[448269,448270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448320,448324],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[448383,448386]},{"pos":[448487,448514],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[448598,448599]},{"pos":[448631,448635],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[448665,448666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[448694,448695]},{"pos":[448750,448754],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[448813,448816]},{"pos":[448917,448944],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[449028,449029]},{"pos":[449061,449069],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[449103,449104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449131,449132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450213,450377],"content":"ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey, TElement&gt;(Func&lt;GatewayIPAddressInformation, TKey&gt;, Func&lt;GatewayIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,164],"source":"ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[451405,451458],"content":"ToLookup<GatewayIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;GatewayIPAddressInformation, TKey, TElement&gt;","pos":[0,53],"source":"ToLookup<GatewayIPAddressInformation, TKey, TElement>"}]},{"pos":[451590,451591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451641,451645],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[451703,451704],"content":"<","needQuote":true,"nodes":[]},{"pos":[451798,451825],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[451909,451910]},{"pos":[451942,451946],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[452009,452010]},{"pos":[452065,452069],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[452127,452128],"content":"<","needQuote":true,"nodes":[]},{"pos":[452222,452249],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[452333,452334]},{"pos":[452366,452374],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[452441,452442]},{"pos":[452530,452547],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[452638,452639],"content":"<","needQuote":true,"nodes":[]},{"pos":[452666,452670],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[452732,452733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452908,452964],"content":"ToLookup(Of GatewayIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of GatewayIPAddressInformation, TKey, TElement)","pos":[0,56]}]},{"pos":[453099,453100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453150,453154],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[453213,453216]},{"pos":[453317,453344],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[453428,453429]},{"pos":[453461,453465],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[453495,453496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[453524,453525]},{"pos":[453580,453584],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[453643,453646]},{"pos":[453747,453774],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[453858,453859]},{"pos":[453891,453899],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[453933,453934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[453962,453963]},{"pos":[454051,454068],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[454160,454163]},{"pos":[454197,454201],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[454231,454232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454259,454260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455275,455351],"content":"Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;)","pos":[0,76],"source":"Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)"}]},{"pos":[455964,455998],"content":"Union<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"Union<GatewayIPAddressInformation>"}]},{"pos":[456111,456112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456189,456200],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[456285,456286],"content":"<","needQuote":true,"nodes":[]},{"pos":[456380,456407],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[456522,456523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456647,456684],"content":"Union(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[456800,456801],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456878,456889],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[456975,456978]},{"pos":[457079,457106],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[457189,457190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457217,457218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458154,458278],"content":"Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;GatewayIPAddressInformation&gt;(IEnumerable&lt;GatewayIPAddressInformation&gt;, IEqualityComparer&lt;GatewayIPAddressInformation&gt;)","pos":[0,124],"source":"Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)"}]},{"pos":[459205,459239],"content":"Union<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"Union<GatewayIPAddressInformation>"}]},{"pos":[459352,459353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459430,459441],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[459526,459527],"content":"<","needQuote":true,"nodes":[]},{"pos":[459621,459648],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[459764,459765]},{"pos":[459853,459870],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[459961,459962],"content":"<","needQuote":true,"nodes":[]},{"pos":[460056,460083],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[460198,460199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460373,460410],"content":"Union(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[460526,460527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460604,460615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[460701,460704]},{"pos":[460805,460832],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[460915,460916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[460944,460945]},{"pos":[461033,461050],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[461142,461145]},{"pos":[461246,461273],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[461356,461357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461384,461385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462292,462370],"content":"Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Boolean&gt;)","pos":[0,78],"source":"Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)"}]},{"pos":[462951,462985],"content":"Where<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"Where<GatewayIPAddressInformation>"}]},{"pos":[463098,463099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463149,463153],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[463211,463212],"content":"<","needQuote":true,"nodes":[]},{"pos":[463306,463333],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[463417,463418]},{"pos":[463474,463481],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[463574,463575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463687,463724],"content":"Where(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[463840,463841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463891,463895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[463954,463957]},{"pos":[464058,464085],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[464169,464170]},{"pos":[464226,464233],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[464294,464295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464322,464323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465099,465184],"content":"Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;GatewayIPAddressInformation&gt;(Func&lt;GatewayIPAddressInformation, Int32, Boolean&gt;)","pos":[0,85],"source":"Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)"}]},{"pos":[465813,465847],"content":"Where<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;GatewayIPAddressInformation&gt;","pos":[0,34],"source":"Where<GatewayIPAddressInformation>"}]},{"pos":[465960,465961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466011,466015],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[466073,466074],"content":"<","needQuote":true,"nodes":[]},{"pos":[466168,466195],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[466279,466280]},{"pos":[466334,466339],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[466399,466400]},{"pos":[466456,466463],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[466556,466557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466682,466719],"content":"Where(Of GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[466835,466836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466886,466890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[466949,466952]},{"pos":[467053,467080],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[467164,467165]},{"pos":[467219,467224],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[467284,467285]},{"pos":[467341,467348],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[467409,467410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467437,467438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468303,468428],"content":"Zip<GatewayIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<GatewayIPAddressInformation, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;GatewayIPAddressInformation, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;GatewayIPAddressInformation, TSecond, TResult&gt;)","pos":[0,125],"source":"Zip<GatewayIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<GatewayIPAddressInformation, TSecond, TResult>)"}]},{"pos":[469231,469281],"content":"Zip<GatewayIPAddressInformation, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;GatewayIPAddressInformation, TSecond, TResult&gt;","pos":[0,50],"source":"Zip<GatewayIPAddressInformation, TSecond, TResult>"}]},{"pos":[469410,469411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469488,469499],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[469584,469585],"content":"<","needQuote":true,"nodes":[]},{"pos":[469612,469619],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[469685,469686]},{"pos":[469741,469745],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[469803,469804],"content":"<","needQuote":true,"nodes":[]},{"pos":[469898,469925],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[470009,470010]},{"pos":[470042,470049],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[470083,470084]},{"pos":[470116,470123],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[470188,470189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470336,470389],"content":"Zip(Of GatewayIPAddressInformation, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of GatewayIPAddressInformation, TSecond, TResult)","pos":[0,53]}]},{"pos":[470521,470522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470599,470610],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[470696,470699]},{"pos":[470733,470740],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[470773,470774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[470802,470803]},{"pos":[470858,470862],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[470921,470924]},{"pos":[471025,471052],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[471136,471137]},{"pos":[471169,471176],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[471210,471211]},{"pos":[471243,471250],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[471283,471284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471311,471312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471848,471854],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[471995,472009],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[472228,472239],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[472303,472304],"content":"<","needQuote":true,"nodes":[]},{"pos":[472331,472332],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[472452,472463],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[472528,472531]},{"pos":[472565,472566],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[472593,472594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472797,472823],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[473024,473038],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[473257,473268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[473332,473333],"content":"<","needQuote":true,"nodes":[]},{"pos":[473360,473361],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[473481,473492],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[473557,473560]},{"pos":[473594,473595],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[473622,473623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473818,473836],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[474037,474061],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[474240,474251],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[474310,474311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474378,474389],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[474466,474467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474580,474591],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[474650,474651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474718,474729],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[474806,474807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475035,475044],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[475258,475302],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[475702,475723],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[475792,475793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475870,475881],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[475966,475967],"content":"<","needQuote":true,"nodes":[]},{"pos":[475994,476002],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[476068,476069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476198,476222],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[476294,476295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476372,476383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[476469,476472]},{"pos":[476506,476514],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[476548,476549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476576,476577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476950,476973],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[477168,477178],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[477245,477246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477313,477324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[477401,477402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477523,477533],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[477600,477601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477668,477679],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[477756,477757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478010,478028],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[478277,478318],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[478735,478754],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[478830,478831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478908,478919],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[479004,479005],"content":"<","needQuote":true,"nodes":[]},{"pos":[479032,479039],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[479104,479105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479242,479264],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[479343,479344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479421,479432],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[479518,479521]},{"pos":[479555,479562],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[479595,479596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479623,479624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480049,480122],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[480655,480673],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[480740,480741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480818,480829],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[480914,480915],"content":"<","needQuote":true,"nodes":[]},{"pos":[480942,480949],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481015,481016]},{"pos":[481071,481075],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481133,481134],"content":"<","needQuote":true,"nodes":[]},{"pos":[481161,481168],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481202,481203]},{"pos":[481235,481242],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481276,481277]},{"pos":[481309,481316],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[481381,481382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481535,481556],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[481626,481627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481704,481715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[481801,481804]},{"pos":[481838,481845],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[481878,481879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[481907,481908]},{"pos":[481963,481967],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[482026,482029]},{"pos":[482063,482070],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[482104,482105]},{"pos":[482137,482144],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[482178,482179]},{"pos":[482211,482218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[482251,482252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482279,482280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482712,482722],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[482967,483074],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[483713,483744],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[483824,483825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483902,483913],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[483998,483999],"content":"<","needQuote":true,"nodes":[]},{"pos":[484026,484033],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[484099,484100]},{"pos":[484132,484143],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[484181,484182]},{"pos":[484237,484241],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[484299,484300],"content":"<","needQuote":true,"nodes":[]},{"pos":[484327,484338],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[484376,484377]},{"pos":[484409,484416],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[484450,484451]},{"pos":[484483,484494],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[484563,484564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484721,484755],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[484838,484839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484916,484927],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[485013,485016]},{"pos":[485050,485057],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[485090,485091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[485119,485120]},{"pos":[485152,485163],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[485201,485202]},{"pos":[485257,485261],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[485320,485323]},{"pos":[485357,485368],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[485406,485407]},{"pos":[485439,485446],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[485480,485481]},{"pos":[485513,485524],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[485561,485562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485589,485590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486179,486323],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[487114,487154],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[487243,487244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487321,487332],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[487417,487418],"content":"<","needQuote":true,"nodes":[]},{"pos":[487445,487452],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[487518,487519]},{"pos":[487551,487562],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[487600,487601]},{"pos":[487656,487660],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[487718,487719],"content":"<","needQuote":true,"nodes":[]},{"pos":[487746,487757],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[487795,487796]},{"pos":[487828,487835],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[487869,487870]},{"pos":[487902,487913],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[487983,487984]},{"pos":[488039,488043],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[488101,488102],"content":"<","needQuote":true,"nodes":[]},{"pos":[488129,488140],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[488178,488179]},{"pos":[488211,488218],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[488283,488284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488462,488505],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[488597,488598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488675,488686],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[488772,488775]},{"pos":[488809,488816],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[488849,488850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[488878,488879]},{"pos":[488911,488922],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[488960,488961]},{"pos":[489016,489020],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489079,489082]},{"pos":[489116,489127],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[489165,489166]},{"pos":[489198,489205],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[489239,489240]},{"pos":[489272,489283],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[489320,489321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[489349,489350]},{"pos":[489405,489409],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489468,489471]},{"pos":[489505,489516],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[489554,489555]},{"pos":[489587,489594],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[489627,489628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489655,489656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490319,490377],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[490880,490892],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[490953,490954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491031,491042],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[491127,491128],"content":"<","needQuote":true,"nodes":[]},{"pos":[491155,491162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491228,491229]},{"pos":[491284,491288],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[491346,491347],"content":"<","needQuote":true,"nodes":[]},{"pos":[491374,491381],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491415,491416]},{"pos":[491472,491479],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[491572,491573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491727,491742],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[491806,491807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491884,491895],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[491981,491984]},{"pos":[492018,492025],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[492058,492059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[492087,492088]},{"pos":[492143,492147],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[492206,492209]},{"pos":[492243,492250],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[492284,492285]},{"pos":[492341,492348],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[492409,492410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492437,492438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492870,492904],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[493269,493281],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[493342,493343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493420,493431],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[493516,493517],"content":"<","needQuote":true,"nodes":[]},{"pos":[493544,493551],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[493616,493617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493739,493754],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[493818,493819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493896,493907],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[493993,493996]},{"pos":[494030,494037],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[494070,494071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494098,494099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494480,494538],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[495041,495053],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[495114,495115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495192,495203],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[495288,495289],"content":"<","needQuote":true,"nodes":[]},{"pos":[495316,495323],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[495389,495390]},{"pos":[495445,495449],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[495507,495508],"content":"<","needQuote":true,"nodes":[]},{"pos":[495535,495542],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[495576,495577]},{"pos":[495633,495640],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[495733,495734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495888,495903],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[495967,495968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496045,496056],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[496142,496145]},{"pos":[496179,496186],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[496219,496220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496248,496249]},{"pos":[496304,496308],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[496367,496370]},{"pos":[496404,496411],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[496445,496446]},{"pos":[496502,496509],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[496570,496571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496598,496599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497040,497083],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[497484,497505],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[497575,497576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497653,497664],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[497749,497750],"content":"<","needQuote":true,"nodes":[]},{"pos":[497777,497784],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[497849,497850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497981,498005],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[498078,498079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498156,498167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[498253,498256]},{"pos":[498290,498297],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[498330,498331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498358,498359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498771,498833],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[499352,499368],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[499433,499434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499511,499522],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[499607,499608],"content":"<","needQuote":true,"nodes":[]},{"pos":[499635,499642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499708,499709]},{"pos":[499764,499768],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[499826,499827],"content":"<","needQuote":true,"nodes":[]},{"pos":[499854,499861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499895,499896]},{"pos":[499952,499959],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[500052,500053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500211,500230],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[500298,500299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500376,500387],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[500473,500476]},{"pos":[500510,500517],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[500550,500551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[500579,500580]},{"pos":[500635,500639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[500698,500701]},{"pos":[500735,500742],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[500776,500777]},{"pos":[500833,500840],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[500901,500902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500929,500930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501409,501470],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[501985,502001],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[502066,502067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502144,502155],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[502240,502241],"content":"<","needQuote":true,"nodes":[]},{"pos":[502268,502275],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502341,502342]},{"pos":[502397,502401],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[502459,502460],"content":"<","needQuote":true,"nodes":[]},{"pos":[502487,502494],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502528,502529]},{"pos":[502584,502590],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[502682,502683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502840,502859],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[502927,502928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503005,503016],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[503102,503105]},{"pos":[503139,503146],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[503179,503180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[503208,503209]},{"pos":[503264,503268],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[503327,503330]},{"pos":[503364,503371],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[503405,503406]},{"pos":[503461,503467],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[503527,503528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503555,503556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504031,504091],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[504602,504618],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[504683,504684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504761,504772],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[504857,504858],"content":"<","needQuote":true,"nodes":[]},{"pos":[504885,504892],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[504958,504959]},{"pos":[505014,505018],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[505076,505077],"content":"<","needQuote":true,"nodes":[]},{"pos":[505104,505111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[505145,505146]},{"pos":[505200,505205],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[505296,505297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505453,505472],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[505540,505541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505618,505629],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[505715,505718]},{"pos":[505752,505759],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[505792,505793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505821,505822]},{"pos":[505877,505881],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[505940,505943]},{"pos":[505977,505984],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[506018,506019]},{"pos":[506073,506078],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[506137,506138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506165,506166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506638,506698],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[507209,507225],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[507290,507291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507368,507379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[507464,507465],"content":"<","needQuote":true,"nodes":[]},{"pos":[507492,507499],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[507565,507566]},{"pos":[507621,507625],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[507683,507684],"content":"<","needQuote":true,"nodes":[]},{"pos":[507711,507718],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[507752,507753]},{"pos":[507807,507812],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[507903,507904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508060,508079],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[508147,508148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508225,508236],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[508322,508325]},{"pos":[508359,508366],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[508399,508400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[508428,508429]},{"pos":[508484,508488],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[508547,508550]},{"pos":[508584,508591],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[508625,508626]},{"pos":[508680,508685],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[508744,508745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508772,508773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509264,509336],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[509922,509938],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[510003,510004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510081,510092],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[510177,510178],"content":"<","needQuote":true,"nodes":[]},{"pos":[510205,510212],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[510278,510279]},{"pos":[510334,510338],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[510396,510397],"content":"<","needQuote":true,"nodes":[]},{"pos":[510424,510431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[510465,510466]},{"pos":[510525,510533],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[510595,510596],"content":"<","needQuote":true,"nodes":[]},{"pos":[510647,510654],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[510779,510780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510955,510974],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[511042,511043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511120,511131],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[511217,511220]},{"pos":[511254,511261],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[511294,511295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[511323,511324]},{"pos":[511379,511383],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[511442,511445]},{"pos":[511479,511486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[511520,511521]},{"pos":[511580,511588],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[511651,511654]},{"pos":[511712,511719],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[511780,511781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511808,511809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511836,511837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512373,512444],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[513026,513042],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[513107,513108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513185,513196],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[513281,513282],"content":"<","needQuote":true,"nodes":[]},{"pos":[513309,513316],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[513382,513383]},{"pos":[513438,513442],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[513500,513501],"content":"<","needQuote":true,"nodes":[]},{"pos":[513528,513535],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[513569,513570]},{"pos":[513629,513637],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[513699,513700],"content":"<","needQuote":true,"nodes":[]},{"pos":[513750,513756],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[513880,513881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514055,514074],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[514142,514143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514220,514231],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[514317,514320]},{"pos":[514354,514361],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[514394,514395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[514423,514424]},{"pos":[514479,514483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[514542,514545]},{"pos":[514579,514586],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[514620,514621]},{"pos":[514680,514688],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[514751,514754]},{"pos":[514811,514817],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[514877,514878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514905,514906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514933,514934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515466,515536],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[516114,516130],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[516195,516196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516273,516284],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[516369,516370],"content":"<","needQuote":true,"nodes":[]},{"pos":[516397,516404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[516470,516471]},{"pos":[516526,516530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[516588,516589],"content":"<","needQuote":true,"nodes":[]},{"pos":[516616,516623],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[516657,516658]},{"pos":[516717,516725],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[516787,516788],"content":"<","needQuote":true,"nodes":[]},{"pos":[516837,516842],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[516965,516966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517139,517158],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[517226,517227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517304,517315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[517401,517404]},{"pos":[517438,517445],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[517478,517479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[517507,517508]},{"pos":[517563,517567],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[517626,517629]},{"pos":[517663,517670],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[517704,517705]},{"pos":[517764,517772],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[517835,517838]},{"pos":[517894,517899],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[517958,517959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517986,517987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518014,518015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518544,518614],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[519192,519208],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[519273,519274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519351,519362],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[519447,519448],"content":"<","needQuote":true,"nodes":[]},{"pos":[519475,519482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[519548,519549]},{"pos":[519604,519608],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[519666,519667],"content":"<","needQuote":true,"nodes":[]},{"pos":[519694,519701],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[519735,519736]},{"pos":[519795,519803],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[519865,519866],"content":"<","needQuote":true,"nodes":[]},{"pos":[519915,519920],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[520043,520044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520217,520236],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[520304,520305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520382,520393],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[520479,520482]},{"pos":[520516,520523],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[520556,520557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[520585,520586]},{"pos":[520641,520645],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[520704,520707]},{"pos":[520741,520748],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[520782,520783]},{"pos":[520842,520850],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[520913,520916]},{"pos":[520972,520977],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[521036,521037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521064,521065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521092,521093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521623,521694],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[522276,522292],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[522357,522358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522435,522446],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[522531,522532],"content":"<","needQuote":true,"nodes":[]},{"pos":[522559,522566],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[522632,522633]},{"pos":[522688,522692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[522750,522751],"content":"<","needQuote":true,"nodes":[]},{"pos":[522778,522785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[522819,522820]},{"pos":[522879,522887],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[522949,522950],"content":"<","needQuote":true,"nodes":[]},{"pos":[523000,523006],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[523130,523131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523305,523324],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[523392,523393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523470,523481],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[523567,523570]},{"pos":[523604,523611],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[523644,523645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[523673,523674]},{"pos":[523729,523733],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[523792,523795]},{"pos":[523829,523836],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[523870,523871]},{"pos":[523930,523938],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[524001,524004]},{"pos":[524061,524067],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[524127,524128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524155,524156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524183,524184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524700,524761],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[525276,525292],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[525357,525358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525435,525446],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[525531,525532],"content":"<","needQuote":true,"nodes":[]},{"pos":[525559,525566],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[525632,525633]},{"pos":[525688,525692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[525750,525751],"content":"<","needQuote":true,"nodes":[]},{"pos":[525778,525785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[525819,525820]},{"pos":[525875,525881],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[525973,525974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526131,526150],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[526218,526219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526296,526307],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[526393,526396]},{"pos":[526430,526437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[526470,526471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526499,526500]},{"pos":[526555,526559],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[526618,526621]},{"pos":[526655,526662],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[526696,526697]},{"pos":[526752,526758],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[526818,526819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526846,526847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527276,527302],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[527609,527622],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[527684,527685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527752,527763],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[527840,527841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527951,527967],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[528032,528033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528100,528111],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[528188,528189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528554,528613],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[529160,529175],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[529239,529240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529317,529328],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[529413,529414],"content":"<","needQuote":true,"nodes":[]},{"pos":[529441,529448],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[529514,529515]},{"pos":[529597,529608],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[529693,529694],"content":"<","needQuote":true,"nodes":[]},{"pos":[529721,529728],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[529793,529794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529963,529981],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[530048,530049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530126,530137],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530223,530226]},{"pos":[530260,530267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530300,530301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[530329,530330]},{"pos":[530412,530423],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530509,530512]},{"pos":[530546,530553],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530586,530587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530614,530615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531071,531117],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[531525,531540],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[531604,531605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531682,531693],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[531778,531779],"content":"<","needQuote":true,"nodes":[]},{"pos":[531806,531813],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[531879,531880]},{"pos":[531912,531919],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[531952,531953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532082,532100],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[532167,532168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532245,532256],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[532342,532345]},{"pos":[532379,532386],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[532419,532420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[532448,532449]},{"pos":[532481,532488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[532521,532522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532910,532957],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[533369,533385],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[533450,533451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533528,533539],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[533624,533625],"content":"<","needQuote":true,"nodes":[]},{"pos":[533652,533659],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[533725,533726]},{"pos":[533758,533765],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[533798,533799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533929,533948],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[534016,534017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534094,534105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[534191,534194]},{"pos":[534228,534235],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[534268,534269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[534297,534298]},{"pos":[534330,534337],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[534370,534371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534763,534811],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[535227,535244],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[535310,535311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535388,535399],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[535484,535485],"content":"<","needQuote":true,"nodes":[]},{"pos":[535512,535519],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[535585,535586]},{"pos":[535618,535625],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[535658,535659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535790,535810],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[535879,535880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535957,535968],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[536054,536057]},{"pos":[536091,536098],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[536131,536132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[536160,536161]},{"pos":[536193,536200],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[536233,536234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536679,536755],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[537365,537382],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[537448,537449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537526,537537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[537622,537623],"content":"<","needQuote":true,"nodes":[]},{"pos":[537650,537657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[537723,537724]},{"pos":[537756,537763],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[537797,537798]},{"pos":[537886,537903],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[537994,537995],"content":"<","needQuote":true,"nodes":[]},{"pos":[538022,538029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[538094,538095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538276,538296],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[538365,538366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538443,538454],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[538540,538543]},{"pos":[538577,538584],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[538617,538618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[538646,538647]},{"pos":[538679,538686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[538720,538721]},{"pos":[538809,538826],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[538918,538921]},{"pos":[538955,538962],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[538995,538996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539023,539024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539521,539557],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[539930,539944],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[540007,540008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540085,540096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[540181,540182],"content":"<","needQuote":true,"nodes":[]},{"pos":[540209,540216],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540281,540282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540406,540423],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[540489,540490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540567,540578],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[540664,540667]},{"pos":[540701,540708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540741,540742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540769,540770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541159,541219],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[541730,541744],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[541807,541808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541885,541896],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[541981,541982],"content":"<","needQuote":true,"nodes":[]},{"pos":[542009,542016],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542082,542083]},{"pos":[542138,542142],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[542200,542201],"content":"<","needQuote":true,"nodes":[]},{"pos":[542228,542235],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542269,542270]},{"pos":[542326,542333],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[542426,542427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542583,542600],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[542666,542667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542744,542755],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[542841,542844]},{"pos":[542878,542885],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[542918,542919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[542947,542948]},{"pos":[543003,543007],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[543066,543069]},{"pos":[543103,543110],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[543144,543145]},{"pos":[543201,543208],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[543269,543270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543297,543298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543747,543792],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[544201,544224],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[544296,544297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544374,544385],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[544470,544471],"content":"<","needQuote":true,"nodes":[]},{"pos":[544498,544505],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[544570,544571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544704,544730],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[544805,544806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544883,544894],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[544980,544983]},{"pos":[545017,545024],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[545057,545058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545085,545086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545483,545537],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[545977,546000],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[546072,546073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546150,546161],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[546246,546247],"content":"<","needQuote":true,"nodes":[]},{"pos":[546274,546281],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[546347,546348]},{"pos":[546380,546387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546420,546421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546558,546584],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[546659,546660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546737,546748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[546834,546837]},{"pos":[546871,546878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546911,546912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[546940,546941]},{"pos":[546973,546980],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[547013,547014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547423,547462],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[547847,547864],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[547930,547931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548008,548019],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[548104,548105],"content":"<","needQuote":true,"nodes":[]},{"pos":[548132,548139],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[548204,548205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548332,548352],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[548421,548422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548499,548510],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[548596,548599]},{"pos":[548633,548640],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[548673,548674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548701,548702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549121,549188],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[549767,549784],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[549850,549851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549928,549939],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[550024,550025],"content":"<","needQuote":true,"nodes":[]},{"pos":[550052,550059],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[550125,550126]},{"pos":[550214,550231],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[550322,550323],"content":"<","needQuote":true,"nodes":[]},{"pos":[550350,550357],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[550422,550423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550600,550620],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[550689,550690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550767,550778],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[550864,550867]},{"pos":[550901,550908],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[550941,550942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[550970,550971]},{"pos":[551059,551076],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[551168,551171]},{"pos":[551205,551212],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[551245,551246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551273,551274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551766,551813],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[552250,552268],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[552335,552336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552413,552424],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[552509,552510],"content":"<","needQuote":true,"nodes":[]},{"pos":[552537,552544],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[552610,552611]},{"pos":[552665,552670],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[552729,552730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552871,552892],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[552962,552963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553040,553051],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[553137,553140]},{"pos":[553174,553181],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[553214,553215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[553243,553244]},{"pos":[553298,553303],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[553362,553363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553785,553841],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[554314,554341],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[554417,554418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554495,554506],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[554591,554592],"content":"<","needQuote":true,"nodes":[]},{"pos":[554619,554626],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[554692,554693]},{"pos":[554747,554752],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[554811,554812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554962,554992],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[555071,555072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555149,555160],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[555246,555249]},{"pos":[555283,555290],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[555323,555324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[555352,555353]},{"pos":[555407,555412],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[555471,555472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555940,555999],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[556546,556561],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[556625,556626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556703,556714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[556799,556800],"content":"<","needQuote":true,"nodes":[]},{"pos":[556827,556834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[556900,556901]},{"pos":[556983,556994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[557079,557080],"content":"<","needQuote":true,"nodes":[]},{"pos":[557107,557114],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[557179,557180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557349,557367],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[557434,557435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557512,557523],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[557609,557612]},{"pos":[557646,557653],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[557686,557687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[557715,557716]},{"pos":[557798,557809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[557895,557898]},{"pos":[557932,557939],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[557972,557973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558000,558001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558547,558634],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[559375,559390],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[559454,559455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559532,559543],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[559628,559629],"content":"<","needQuote":true,"nodes":[]},{"pos":[559656,559663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[559729,559730]},{"pos":[559812,559823],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[559908,559909],"content":"<","needQuote":true,"nodes":[]},{"pos":[559936,559943],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[560009,560010]},{"pos":[560098,560115],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[560206,560207],"content":"<","needQuote":true,"nodes":[]},{"pos":[560234,560241],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[560306,560307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560526,560544],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[560611,560612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560689,560700],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[560786,560789]},{"pos":[560823,560830],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[560863,560864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[560892,560893]},{"pos":[560975,560986],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[561072,561075]},{"pos":[561109,561116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[561149,561150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[561178,561179]},{"pos":[561267,561284],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[561376,561379]},{"pos":[561413,561420],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[561453,561454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561481,561482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562042,562078],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[562451,562465],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[562528,562529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562606,562617],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[562702,562703],"content":"<","needQuote":true,"nodes":[]},{"pos":[562730,562737],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[562802,562803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562927,562944],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[563010,563011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563088,563099],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[563185,563188]},{"pos":[563222,563229],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[563262,563263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563290,563291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563680,563740],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[564251,564265],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[564328,564329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564406,564417],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[564502,564503],"content":"<","needQuote":true,"nodes":[]},{"pos":[564530,564537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564603,564604]},{"pos":[564659,564663],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[564721,564722],"content":"<","needQuote":true,"nodes":[]},{"pos":[564749,564756],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564790,564791]},{"pos":[564847,564854],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[564947,564948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565104,565121],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[565187,565188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565265,565276],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[565362,565365]},{"pos":[565399,565406],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[565439,565440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[565468,565469]},{"pos":[565524,565528],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[565587,565590]},{"pos":[565624,565631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[565665,565666]},{"pos":[565722,565729],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[565790,565791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565818,565819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566268,566313],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[566722,566745],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[566817,566818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566895,566906],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[566991,566992],"content":"<","needQuote":true,"nodes":[]},{"pos":[567019,567026],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[567091,567092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567225,567251],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[567326,567327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567404,567415],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[567501,567504]},{"pos":[567538,567545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[567578,567579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567606,567607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568032,568101],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[568648,568671],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[568743,568744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568821,568832],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[568917,568918],"content":"<","needQuote":true,"nodes":[]},{"pos":[568945,568952],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569018,569019]},{"pos":[569074,569078],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[569136,569137],"content":"<","needQuote":true,"nodes":[]},{"pos":[569164,569171],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569205,569206]},{"pos":[569262,569269],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[569362,569363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569528,569554],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[569629,569630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569707,569718],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[569804,569807]},{"pos":[569841,569848],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[569881,569882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[569910,569911]},{"pos":[569966,569970],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[570029,570032]},{"pos":[570066,570073],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[570107,570108]},{"pos":[570164,570171],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[570232,570233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570260,570261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570751,570816],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[571319,571341],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[571412,571413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571490,571501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[571586,571587],"content":"<","needQuote":true,"nodes":[]},{"pos":[571614,571621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571687,571688]},{"pos":[571743,571747],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[571805,571806],"content":"<","needQuote":true,"nodes":[]},{"pos":[571833,571840],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571874,571875]},{"pos":[571907,571911],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[571973,571974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572121,572146],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[572220,572221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572298,572309],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572395,572398]},{"pos":[572432,572439],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[572472,572473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[572501,572502]},{"pos":[572557,572561],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[572620,572623]},{"pos":[572657,572664],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[572698,572699]},{"pos":[572731,572735],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[572765,572766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572793,572794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573308,573398],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[574086,574108],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[574179,574180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574257,574268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[574353,574354],"content":"<","needQuote":true,"nodes":[]},{"pos":[574381,574388],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[574454,574455]},{"pos":[574510,574514],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[574572,574573],"content":"<","needQuote":true,"nodes":[]},{"pos":[574600,574607],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[574641,574642]},{"pos":[574674,574678],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[574741,574742]},{"pos":[574830,574847],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[574938,574939],"content":"<","needQuote":true,"nodes":[]},{"pos":[574966,574970],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[575032,575033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575230,575255],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[575329,575330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575407,575418],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[575504,575507]},{"pos":[575541,575548],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[575581,575582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[575610,575611]},{"pos":[575666,575670],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[575729,575732]},{"pos":[575766,575773],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[575807,575808]},{"pos":[575840,575844],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[575874,575875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[575903,575904]},{"pos":[575992,576009],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[576101,576104]},{"pos":[576138,576142],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[576172,576173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576200,576201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576789,576889],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[577538,577570],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[577651,577652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577729,577740],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[577825,577826],"content":"<","needQuote":true,"nodes":[]},{"pos":[577853,577860],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577926,577927]},{"pos":[577982,577986],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[578044,578045],"content":"<","needQuote":true,"nodes":[]},{"pos":[578072,578079],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578113,578114]},{"pos":[578146,578150],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[578213,578214]},{"pos":[578269,578273],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[578331,578332],"content":"<","needQuote":true,"nodes":[]},{"pos":[578359,578366],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578400,578401]},{"pos":[578433,578441],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[578507,578508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578676,578711],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[578795,578796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578873,578884],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[578970,578973]},{"pos":[579007,579014],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[579047,579048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[579076,579077]},{"pos":[579132,579136],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[579195,579198]},{"pos":[579232,579239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[579273,579274]},{"pos":[579306,579310],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[579340,579341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[579369,579370]},{"pos":[579425,579429],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[579488,579491]},{"pos":[579525,579532],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[579566,579567]},{"pos":[579599,579607],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[579641,579642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579669,579670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580299,580424],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[581258,581290],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[581371,581372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581449,581460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[581545,581546],"content":"<","needQuote":true,"nodes":[]},{"pos":[581573,581580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581646,581647]},{"pos":[581702,581706],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[581764,581765],"content":"<","needQuote":true,"nodes":[]},{"pos":[581792,581799],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581833,581834]},{"pos":[581866,581870],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[581933,581934]},{"pos":[581989,581993],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[582051,582052],"content":"<","needQuote":true,"nodes":[]},{"pos":[582079,582086],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[582120,582121]},{"pos":[582153,582161],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[582228,582229]},{"pos":[582317,582334],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[582425,582426],"content":"<","needQuote":true,"nodes":[]},{"pos":[582453,582457],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[582519,582520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582738,582773],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[582857,582858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582935,582946],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[583032,583035]},{"pos":[583069,583076],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[583109,583110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583138,583139]},{"pos":[583194,583198],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[583257,583260]},{"pos":[583294,583301],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583335,583336]},{"pos":[583368,583372],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[583402,583403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583431,583432]},{"pos":[583487,583491],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[583550,583553]},{"pos":[583587,583594],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583628,583629]},{"pos":[583661,583669],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[583703,583704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583732,583733]},{"pos":[583821,583838],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[583930,583933]},{"pos":[583967,583971],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[584001,584002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584029,584030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584756,584873],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[585677,585708],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[585788,585789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585866,585877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[585962,585963],"content":"<","needQuote":true,"nodes":[]},{"pos":[585990,585997],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586063,586064]},{"pos":[586119,586123],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[586181,586182],"content":"<","needQuote":true,"nodes":[]},{"pos":[586209,586216],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586250,586251]},{"pos":[586283,586287],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[586350,586351]},{"pos":[586406,586410],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[586468,586469],"content":"<","needQuote":true,"nodes":[]},{"pos":[586496,586500],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[586531,586532]},{"pos":[586614,586625],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[586710,586711],"content":"<","needQuote":true,"nodes":[]},{"pos":[586738,586745],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586811,586812]},{"pos":[586844,586851],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[586916,586917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587129,587163],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[587246,587247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587324,587335],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[587421,587424]},{"pos":[587458,587465],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[587498,587499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[587527,587528]},{"pos":[587583,587587],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[587646,587649]},{"pos":[587683,587690],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[587724,587725]},{"pos":[587757,587761],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[587791,587792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[587820,587821]},{"pos":[587876,587880],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[587939,587942]},{"pos":[587976,587980],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[588011,588012]},{"pos":[588094,588105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[588191,588194]},{"pos":[588228,588235],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[588268,588269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[588297,588298]},{"pos":[588330,588337],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[588370,588371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588398,588399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589153,589295],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[590284,590315],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[590395,590396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590473,590484],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[590569,590570],"content":"<","needQuote":true,"nodes":[]},{"pos":[590597,590604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590670,590671]},{"pos":[590726,590730],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[590788,590789],"content":"<","needQuote":true,"nodes":[]},{"pos":[590816,590823],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590857,590858]},{"pos":[590890,590894],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[590957,590958]},{"pos":[591013,591017],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[591075,591076],"content":"<","needQuote":true,"nodes":[]},{"pos":[591103,591107],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[591138,591139]},{"pos":[591221,591232],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[591317,591318],"content":"<","needQuote":true,"nodes":[]},{"pos":[591345,591352],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[591418,591419]},{"pos":[591451,591458],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[591524,591525]},{"pos":[591613,591630],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[591721,591722],"content":"<","needQuote":true,"nodes":[]},{"pos":[591749,591753],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[591815,591816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592078,592112],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[592195,592196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592273,592284],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[592370,592373]},{"pos":[592407,592414],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[592447,592448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[592476,592477]},{"pos":[592532,592536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[592595,592598]},{"pos":[592632,592639],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[592673,592674]},{"pos":[592706,592710],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[592740,592741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[592769,592770]},{"pos":[592825,592829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[592888,592891]},{"pos":[592925,592929],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[592960,592961]},{"pos":[593043,593054],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[593140,593143]},{"pos":[593177,593184],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[593217,593218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[593246,593247]},{"pos":[593279,593286],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[593319,593320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[593348,593349]},{"pos":[593437,593454],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[593546,593549]},{"pos":[593583,593587],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[593617,593618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593645,593646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594474,594627],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[595580,595621],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[595711,595712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[595789,595800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[595885,595886],"content":"<","needQuote":true,"nodes":[]},{"pos":[595913,595920],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[595986,595987]},{"pos":[596042,596046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596104,596105],"content":"<","needQuote":true,"nodes":[]},{"pos":[596132,596139],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596173,596174]},{"pos":[596206,596210],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[596273,596274]},{"pos":[596329,596333],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596391,596392],"content":"<","needQuote":true,"nodes":[]},{"pos":[596419,596426],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596460,596461]},{"pos":[596493,596501],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[596568,596569]},{"pos":[596624,596628],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596686,596687],"content":"<","needQuote":true,"nodes":[]},{"pos":[596714,596718],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[596749,596750]},{"pos":[596832,596843],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596928,596929],"content":"<","needQuote":true,"nodes":[]},{"pos":[596956,596964],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[597031,597032]},{"pos":[597064,597071],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[597136,597137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597370,597414],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[597507,597508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597585,597596],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[597682,597685]},{"pos":[597719,597726],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[597759,597760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[597788,597789]},{"pos":[597844,597848],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[597907,597910]},{"pos":[597944,597951],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597985,597986]},{"pos":[598018,598022],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[598052,598053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[598081,598082]},{"pos":[598137,598141],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[598200,598203]},{"pos":[598237,598244],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598278,598279]},{"pos":[598311,598319],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[598353,598354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[598382,598383]},{"pos":[598438,598442],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[598501,598504]},{"pos":[598538,598542],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[598573,598574]},{"pos":[598656,598667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[598753,598756]},{"pos":[598790,598798],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[598832,598833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[598861,598862]},{"pos":[598894,598901],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[598934,598935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598962,598963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599834,600012],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[601150,601191],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[601281,601282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[601359,601370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[601455,601456],"content":"<","needQuote":true,"nodes":[]},{"pos":[601483,601490],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[601556,601557]},{"pos":[601612,601616],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[601674,601675],"content":"<","needQuote":true,"nodes":[]},{"pos":[601702,601709],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[601743,601744]},{"pos":[601776,601780],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[601843,601844]},{"pos":[601899,601903],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[601961,601962],"content":"<","needQuote":true,"nodes":[]},{"pos":[601989,601996],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[602030,602031]},{"pos":[602063,602071],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[602138,602139]},{"pos":[602194,602198],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[602256,602257],"content":"<","needQuote":true,"nodes":[]},{"pos":[602284,602288],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[602319,602320]},{"pos":[602402,602413],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[602498,602499],"content":"<","needQuote":true,"nodes":[]},{"pos":[602526,602534],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[602601,602602]},{"pos":[602634,602641],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[602707,602708]},{"pos":[602796,602813],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[602904,602905],"content":"<","needQuote":true,"nodes":[]},{"pos":[602932,602936],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[602998,602999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603282,603326],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[603419,603420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603497,603508],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[603594,603597]},{"pos":[603631,603638],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[603671,603672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[603700,603701]},{"pos":[603756,603760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[603819,603822]},{"pos":[603856,603863],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603897,603898]},{"pos":[603930,603934],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[603964,603965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[603993,603994]},{"pos":[604049,604053],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[604112,604115]},{"pos":[604149,604156],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[604190,604191]},{"pos":[604223,604231],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[604265,604266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604294,604295]},{"pos":[604350,604354],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[604413,604416]},{"pos":[604450,604454],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[604485,604486]},{"pos":[604568,604579],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[604665,604668]},{"pos":[604702,604710],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[604744,604745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604773,604774]},{"pos":[604806,604813],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[604846,604847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604875,604876]},{"pos":[604964,604981],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[605073,605076]},{"pos":[605110,605114],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[605144,605145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605172,605173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606143,606309],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[607407,607447],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[607536,607537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607614,607625],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[607710,607711],"content":"<","needQuote":true,"nodes":[]},{"pos":[607738,607744],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[607809,607810]},{"pos":[607892,607903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[607988,607989],"content":"<","needQuote":true,"nodes":[]},{"pos":[608016,608022],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[608087,608088]},{"pos":[608143,608147],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608205,608206],"content":"<","needQuote":true,"nodes":[]},{"pos":[608233,608239],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[608272,608273]},{"pos":[608305,608309],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[608372,608373]},{"pos":[608428,608432],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608490,608491],"content":"<","needQuote":true,"nodes":[]},{"pos":[608518,608524],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[608557,608558]},{"pos":[608590,608594],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[608657,608658]},{"pos":[608713,608717],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608775,608776],"content":"<","needQuote":true,"nodes":[]},{"pos":[608803,608809],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[608842,608843]},{"pos":[608925,608936],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609021,609022],"content":"<","needQuote":true,"nodes":[]},{"pos":[609049,609055],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[609120,609121]},{"pos":[609153,609160],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[609225,609226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609505,609548],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[609640,609641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609718,609729],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[609815,609818]},{"pos":[609852,609858],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[609890,609891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[609919,609920]},{"pos":[610002,610013],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[610099,610102]},{"pos":[610136,610142],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[610174,610175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610203,610204]},{"pos":[610259,610263],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610322,610325]},{"pos":[610359,610365],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[610398,610399]},{"pos":[610431,610435],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[610465,610466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610494,610495]},{"pos":[610550,610554],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610613,610616]},{"pos":[610650,610656],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[610689,610690]},{"pos":[610722,610726],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[610756,610757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610785,610786]},{"pos":[610841,610845],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610904,610907]},{"pos":[610941,610947],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[610980,610981]},{"pos":[611063,611074],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[611160,611163]},{"pos":[611197,611203],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[611235,611236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[611264,611265]},{"pos":[611297,611304],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[611337,611338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611365,611366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612358,612549],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[613832,613872],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[613961,613962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614039,614050],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614135,614136],"content":"<","needQuote":true,"nodes":[]},{"pos":[614163,614169],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[614234,614235]},{"pos":[614317,614328],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614413,614414],"content":"<","needQuote":true,"nodes":[]},{"pos":[614441,614447],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[614512,614513]},{"pos":[614568,614572],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[614630,614631],"content":"<","needQuote":true,"nodes":[]},{"pos":[614658,614664],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[614697,614698]},{"pos":[614730,614734],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[614797,614798]},{"pos":[614853,614857],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[614915,614916],"content":"<","needQuote":true,"nodes":[]},{"pos":[614943,614949],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[614982,614983]},{"pos":[615015,615019],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[615082,615083]},{"pos":[615138,615142],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[615200,615201],"content":"<","needQuote":true,"nodes":[]},{"pos":[615228,615234],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[615267,615268]},{"pos":[615350,615361],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615446,615447],"content":"<","needQuote":true,"nodes":[]},{"pos":[615474,615480],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[615545,615546]},{"pos":[615578,615585],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[615651,615652]},{"pos":[615740,615757],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[615848,615849],"content":"<","needQuote":true,"nodes":[]},{"pos":[615876,615880],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[615942,615943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616272,616315],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[616407,616408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616485,616496],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616582,616585]},{"pos":[616619,616625],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[616657,616658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[616686,616687]},{"pos":[616769,616780],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616866,616869]},{"pos":[616903,616909],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[616941,616942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[616970,616971]},{"pos":[617026,617030],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617089,617092]},{"pos":[617126,617132],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[617165,617166]},{"pos":[617198,617202],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[617232,617233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617261,617262]},{"pos":[617317,617321],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617380,617383]},{"pos":[617417,617423],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[617456,617457]},{"pos":[617489,617493],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[617523,617524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617552,617553]},{"pos":[617608,617612],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617671,617674]},{"pos":[617708,617714],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[617747,617748]},{"pos":[617830,617841],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[617927,617930]},{"pos":[617964,617970],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[618002,618003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618031,618032]},{"pos":[618064,618071],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[618104,618105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618133,618134]},{"pos":[618222,618239],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[618331,618334]},{"pos":[618368,618372],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[618402,618403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618430,618431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619369,619431],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[619990,620008],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[620075,620076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620153,620164],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620249,620250],"content":"<","needQuote":true,"nodes":[]},{"pos":[620277,620284],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620350,620351]},{"pos":[620433,620444],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620529,620530],"content":"<","needQuote":true,"nodes":[]},{"pos":[620557,620564],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[620629,620630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620802,620823],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[620893,620894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620971,620982],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[621068,621071]},{"pos":[621105,621112],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[621145,621146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[621174,621175]},{"pos":[621257,621268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[621354,621357]},{"pos":[621391,621398],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[621431,621432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621459,621460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622018,622108],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[622861,622879],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[622946,622947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623024,623035],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623120,623121],"content":"<","needQuote":true,"nodes":[]},{"pos":[623148,623155],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623221,623222]},{"pos":[623304,623315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623400,623401],"content":"<","needQuote":true,"nodes":[]},{"pos":[623428,623435],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623501,623502]},{"pos":[623590,623607],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[623698,623699],"content":"<","needQuote":true,"nodes":[]},{"pos":[623726,623733],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[623798,623799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624021,624042],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[624112,624113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624190,624201],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624287,624290]},{"pos":[624324,624331],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624364,624365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624393,624394]},{"pos":[624476,624487],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624573,624576]},{"pos":[624610,624617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624650,624651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624679,624680]},{"pos":[624768,624785],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[624877,624880]},{"pos":[624914,624921],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624954,624955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624982,624983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625662,625810],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[626749,626784],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[626868,626869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626946,626957],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627042,627043],"content":"<","needQuote":true,"nodes":[]},{"pos":[627070,627076],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[627141,627142]},{"pos":[627224,627235],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627320,627321],"content":"<","needQuote":true,"nodes":[]},{"pos":[627348,627354],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[627419,627420]},{"pos":[627475,627479],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[627537,627538],"content":"<","needQuote":true,"nodes":[]},{"pos":[627565,627571],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[627604,627605]},{"pos":[627637,627641],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[627704,627705]},{"pos":[627760,627764],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[627822,627823],"content":"<","needQuote":true,"nodes":[]},{"pos":[627850,627856],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[627889,627890]},{"pos":[627922,627926],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[627989,627990]},{"pos":[628045,628049],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[628107,628108],"content":"<","needQuote":true,"nodes":[]},{"pos":[628135,628141],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[628174,628175]},{"pos":[628207,628213],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[628246,628247]},{"pos":[628279,628286],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[628351,628352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628586,628624],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[628711,628712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628789,628800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[628886,628889]},{"pos":[628923,628929],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[628961,628962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[628990,628991]},{"pos":[629073,629084],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[629170,629173]},{"pos":[629207,629213],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[629245,629246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629274,629275]},{"pos":[629330,629334],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629393,629396]},{"pos":[629430,629436],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[629469,629470]},{"pos":[629502,629506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[629536,629537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629565,629566]},{"pos":[629621,629625],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629684,629687]},{"pos":[629721,629727],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[629760,629761]},{"pos":[629793,629797],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[629827,629828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629856,629857]},{"pos":[629912,629916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629975,629978]},{"pos":[630012,630018],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[630051,630052]},{"pos":[630084,630090],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[630123,630124]},{"pos":[630156,630163],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[630196,630197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630224,630225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631088,631261],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[632385,632420],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[632504,632505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632582,632593],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[632678,632679],"content":"<","needQuote":true,"nodes":[]},{"pos":[632706,632712],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[632777,632778]},{"pos":[632860,632871],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[632956,632957],"content":"<","needQuote":true,"nodes":[]},{"pos":[632984,632990],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[633055,633056]},{"pos":[633111,633115],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[633173,633174],"content":"<","needQuote":true,"nodes":[]},{"pos":[633201,633207],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[633240,633241]},{"pos":[633273,633277],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[633340,633341]},{"pos":[633396,633400],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[633458,633459],"content":"<","needQuote":true,"nodes":[]},{"pos":[633486,633492],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[633525,633526]},{"pos":[633558,633562],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[633625,633626]},{"pos":[633681,633685],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[633743,633744],"content":"<","needQuote":true,"nodes":[]},{"pos":[633771,633777],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[633810,633811]},{"pos":[633843,633849],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[633882,633883]},{"pos":[633915,633922],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[633988,633989]},{"pos":[634077,634094],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[634185,634186],"content":"<","needQuote":true,"nodes":[]},{"pos":[634213,634217],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[634279,634280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634564,634602],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[634689,634690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634767,634778],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[634864,634867]},{"pos":[634901,634907],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[634939,634940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[634968,634969]},{"pos":[635051,635062],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[635148,635151]},{"pos":[635185,635191],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[635223,635224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635252,635253]},{"pos":[635308,635312],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[635371,635374]},{"pos":[635408,635414],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[635447,635448]},{"pos":[635480,635484],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[635514,635515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635543,635544]},{"pos":[635599,635603],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[635662,635665]},{"pos":[635699,635705],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[635738,635739]},{"pos":[635771,635775],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[635805,635806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635834,635835]},{"pos":[635890,635894],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[635953,635956]},{"pos":[635990,635996],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[636029,636030]},{"pos":[636062,636068],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[636101,636102]},{"pos":[636134,636141],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[636174,636175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636203,636204]},{"pos":[636292,636309],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[636401,636404]},{"pos":[636438,636442],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[636472,636473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636500,636501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637306,637341],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[637710,637723],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[637785,637786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637863,637874],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[637959,637960],"content":"<","needQuote":true,"nodes":[]},{"pos":[637987,637994],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[638059,638060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638183,638199],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[638264,638265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638342,638353],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[638439,638442]},{"pos":[638476,638483],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[638516,638517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638544,638545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638930,638989],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[639496,639509],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[639571,639572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639649,639660],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[639745,639746],"content":"<","needQuote":true,"nodes":[]},{"pos":[639773,639780],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639846,639847]},{"pos":[639902,639906],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[639964,639965],"content":"<","needQuote":true,"nodes":[]},{"pos":[639992,639999],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640033,640034]},{"pos":[640090,640097],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[640190,640191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640346,640362],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[640427,640428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640505,640516],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[640602,640605]},{"pos":[640639,640646],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[640679,640680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[640708,640709]},{"pos":[640764,640768],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[640827,640830]},{"pos":[640864,640871],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640905,640906]},{"pos":[640962,640969],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[641030,641031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641058,641059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641504,641548],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[641953,641975],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[642046,642047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642124,642135],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[642220,642221],"content":"<","needQuote":true,"nodes":[]},{"pos":[642248,642255],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642320,642321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642453,642478],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[642552,642553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642630,642641],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[642727,642730]},{"pos":[642764,642771],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642804,642805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642832,642833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643254,643322],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[643865,643887],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[643958,643959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644036,644047],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[644132,644133],"content":"<","needQuote":true,"nodes":[]},{"pos":[644160,644167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[644233,644234]},{"pos":[644289,644293],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[644351,644352],"content":"<","needQuote":true,"nodes":[]},{"pos":[644379,644386],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[644420,644421]},{"pos":[644477,644484],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[644577,644578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644742,644767],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[644841,644842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644919,644930],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[645016,645019]},{"pos":[645053,645060],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645093,645094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[645122,645123]},{"pos":[645178,645182],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[645241,645244]},{"pos":[645278,645285],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645319,645320]},{"pos":[645376,645383],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[645444,645445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645472,645473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645941,645981],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[646370,646388],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[646455,646456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646533,646544],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[646629,646630],"content":"<","needQuote":true,"nodes":[]},{"pos":[646657,646664],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[646729,646730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646858,646879],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[646949,646950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647027,647038],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[647124,647127]},{"pos":[647161,647168],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647201,647202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647229,647230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647635,647699],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[648226,648244],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[648311,648312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648389,648400],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[648485,648486],"content":"<","needQuote":true,"nodes":[]},{"pos":[648513,648520],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648586,648587]},{"pos":[648642,648646],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[648704,648705],"content":"<","needQuote":true,"nodes":[]},{"pos":[648732,648739],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648773,648774]},{"pos":[648830,648837],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[648930,648931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649091,649112],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[649182,649183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649260,649271],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649357,649360]},{"pos":[649394,649401],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649434,649435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[649463,649464]},{"pos":[649519,649523],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[649582,649585]},{"pos":[649619,649626],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[649660,649661]},{"pos":[649717,649724],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[649785,649786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649813,649814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650264,650298],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[650663,650675],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[650736,650737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650814,650825],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[650910,650911],"content":"<","needQuote":true,"nodes":[]},{"pos":[650938,650945],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651010,651011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651133,651148],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[651212,651213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651290,651301],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[651387,651390]},{"pos":[651424,651431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651464,651465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651492,651493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651874,651932],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[652435,652447],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[652508,652509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652586,652597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[652682,652683],"content":"<","needQuote":true,"nodes":[]},{"pos":[652710,652717],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[652783,652784]},{"pos":[652839,652843],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[652901,652902],"content":"<","needQuote":true,"nodes":[]},{"pos":[652929,652936],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[652970,652971]},{"pos":[653027,653034],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[653127,653128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653282,653297],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[653361,653362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653439,653450],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[653536,653539]},{"pos":[653573,653580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[653613,653614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[653642,653643]},{"pos":[653698,653702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[653761,653764]},{"pos":[653798,653805],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[653839,653840]},{"pos":[653896,653903],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[653964,653965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653992,653993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654456,654513],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[655012,655024],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[655085,655086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655163,655174],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[655259,655260],"content":"<","needQuote":true,"nodes":[]},{"pos":[655287,655294],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655360,655361]},{"pos":[655416,655420],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[655478,655479],"content":"<","needQuote":true,"nodes":[]},{"pos":[655506,655513],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655547,655548]},{"pos":[655603,655609],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[655701,655702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655855,655870],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[655934,655935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656012,656023],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[656109,656112]},{"pos":[656146,656153],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[656186,656187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[656215,656216]},{"pos":[656271,656275],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[656334,656337]},{"pos":[656371,656378],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[656412,656413]},{"pos":[656468,656474],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[656534,656535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656562,656563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657022,657078],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[657573,657585],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[657646,657647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657724,657735],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[657820,657821],"content":"<","needQuote":true,"nodes":[]},{"pos":[657848,657855],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657921,657922]},{"pos":[657977,657981],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[658039,658040],"content":"<","needQuote":true,"nodes":[]},{"pos":[658067,658074],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658108,658109]},{"pos":[658163,658168],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[658259,658260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658412,658427],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[658491,658492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658569,658580],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[658666,658669]},{"pos":[658703,658710],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[658743,658744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[658772,658773]},{"pos":[658828,658832],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[658891,658894]},{"pos":[658928,658935],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658969,658970]},{"pos":[659024,659029],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[659088,659089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659116,659117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659573,659629],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[660124,660136],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[660197,660198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660275,660286],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[660371,660372],"content":"<","needQuote":true,"nodes":[]},{"pos":[660399,660406],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660472,660473]},{"pos":[660528,660532],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[660590,660591],"content":"<","needQuote":true,"nodes":[]},{"pos":[660618,660625],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660659,660660]},{"pos":[660714,660719],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[660810,660811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660963,660978],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[661042,661043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[661120,661131],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[661217,661220]},{"pos":[661254,661261],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[661294,661295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[661323,661324]},{"pos":[661379,661383],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[661442,661445]},{"pos":[661479,661486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661520,661521]},{"pos":[661575,661580],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[661639,661640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661667,661668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662143,662211],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[662781,662793],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[662854,662855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662932,662943],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[663028,663029],"content":"<","needQuote":true,"nodes":[]},{"pos":[663056,663063],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663129,663130]},{"pos":[663185,663189],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[663247,663248],"content":"<","needQuote":true,"nodes":[]},{"pos":[663275,663282],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663316,663317]},{"pos":[663376,663384],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[663446,663447],"content":"<","needQuote":true,"nodes":[]},{"pos":[663498,663505],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[663630,663631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663802,663817],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[663881,663882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[663959,663970],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[664056,664059]},{"pos":[664093,664100],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664133,664134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[664162,664163]},{"pos":[664218,664222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[664281,664284]},{"pos":[664318,664325],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[664359,664360]},{"pos":[664419,664427],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[664490,664493]},{"pos":[664551,664558],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[664619,664620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664647,664648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664675,664676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665196,665263],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[665829,665841],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[665902,665903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665980,665991],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[666076,666077],"content":"<","needQuote":true,"nodes":[]},{"pos":[666104,666111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666177,666178]},{"pos":[666233,666237],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[666295,666296],"content":"<","needQuote":true,"nodes":[]},{"pos":[666323,666330],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666364,666365]},{"pos":[666424,666432],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[666494,666495],"content":"<","needQuote":true,"nodes":[]},{"pos":[666545,666551],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[666675,666676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666846,666861],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[666925,666926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667003,667014],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[667100,667103]},{"pos":[667137,667144],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[667177,667178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[667206,667207]},{"pos":[667262,667266],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[667325,667328]},{"pos":[667362,667369],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667403,667404]},{"pos":[667463,667471],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[667534,667537]},{"pos":[667594,667600],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[667660,667661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667688,667689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667716,667717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668233,668299],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[668861,668873],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[668934,668935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[669012,669023],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[669108,669109],"content":"<","needQuote":true,"nodes":[]},{"pos":[669136,669143],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669209,669210]},{"pos":[669265,669269],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[669327,669328],"content":"<","needQuote":true,"nodes":[]},{"pos":[669355,669362],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669396,669397]},{"pos":[669456,669464],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[669526,669527],"content":"<","needQuote":true,"nodes":[]},{"pos":[669576,669581],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[669704,669705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669874,669889],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[669953,669954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670031,670042],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[670128,670131]},{"pos":[670165,670172],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[670205,670206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[670234,670235]},{"pos":[670290,670294],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[670353,670356]},{"pos":[670390,670397],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670431,670432]},{"pos":[670491,670499],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[670562,670565]},{"pos":[670621,670626],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[670685,670686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670713,670714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670741,670742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671255,671321],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[671883,671895],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[671956,671957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[672034,672045],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[672130,672131],"content":"<","needQuote":true,"nodes":[]},{"pos":[672158,672165],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672231,672232]},{"pos":[672287,672291],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[672349,672350],"content":"<","needQuote":true,"nodes":[]},{"pos":[672377,672384],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672418,672419]},{"pos":[672478,672486],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[672548,672549],"content":"<","needQuote":true,"nodes":[]},{"pos":[672598,672603],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[672726,672727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672896,672911],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[672975,672976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[673053,673064],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[673150,673153]},{"pos":[673187,673194],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[673227,673228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[673256,673257]},{"pos":[673312,673316],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[673375,673378]},{"pos":[673412,673419],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[673453,673454]},{"pos":[673513,673521],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[673584,673587]},{"pos":[673643,673648],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[673707,673708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673735,673736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673763,673764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674278,674345],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[674911,674923],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[674984,674985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[675062,675073],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[675158,675159],"content":"<","needQuote":true,"nodes":[]},{"pos":[675186,675193],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675259,675260]},{"pos":[675315,675319],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[675377,675378],"content":"<","needQuote":true,"nodes":[]},{"pos":[675405,675412],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675446,675447]},{"pos":[675506,675514],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[675576,675577],"content":"<","needQuote":true,"nodes":[]},{"pos":[675627,675633],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[675757,675758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675928,675943],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[676007,676008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[676085,676096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[676182,676185]},{"pos":[676219,676226],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[676259,676260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[676288,676289]},{"pos":[676344,676348],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[676407,676410]},{"pos":[676444,676451],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676485,676486]},{"pos":[676545,676553],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[676616,676619]},{"pos":[676676,676682],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[676742,676743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676770,676771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676798,676799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677299,677356],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[677855,677867],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[677928,677929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678006,678017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[678102,678103],"content":"<","needQuote":true,"nodes":[]},{"pos":[678130,678137],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678203,678204]},{"pos":[678259,678263],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[678321,678322],"content":"<","needQuote":true,"nodes":[]},{"pos":[678349,678356],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678390,678391]},{"pos":[678446,678452],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[678544,678545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678698,678713],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[678777,678778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678855,678866],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[678952,678955]},{"pos":[678989,678996],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[679029,679030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[679058,679059]},{"pos":[679114,679118],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[679177,679180]},{"pos":[679214,679221],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[679255,679256]},{"pos":[679311,679317],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[679377,679378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679405,679406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679856,679923],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[680428,680449],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[680519,680520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680597,680608],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[680693,680694],"content":"<","needQuote":true,"nodes":[]},{"pos":[680721,680728],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680794,680795]},{"pos":[680850,680854],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[680912,680913],"content":"<","needQuote":true,"nodes":[]},{"pos":[680940,680947],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680981,680982]},{"pos":[681014,681021],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[681086,681087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681230,681254],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[681327,681328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[681405,681416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[681502,681505]},{"pos":[681539,681546],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[681579,681580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[681608,681609]},{"pos":[681664,681668],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[681727,681730]},{"pos":[681764,681771],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[681805,681806]},{"pos":[681838,681845],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[681878,681879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681906,681907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682346,682380],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[682745,682757],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[682818,682819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682896,682907],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[682992,682993],"content":"<","needQuote":true,"nodes":[]},{"pos":[683020,683027],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683092,683093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683215,683230],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[683294,683295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[683372,683383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[683469,683472]},{"pos":[683506,683513],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683546,683547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683574,683575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683956,684014],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[684517,684529],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[684590,684591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[684668,684679],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[684764,684765],"content":"<","needQuote":true,"nodes":[]},{"pos":[684792,684799],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684865,684866]},{"pos":[684921,684925],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[684983,684984],"content":"<","needQuote":true,"nodes":[]},{"pos":[685011,685018],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685052,685053]},{"pos":[685109,685116],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[685209,685210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685364,685379],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[685443,685444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[685521,685532],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[685618,685621]},{"pos":[685655,685662],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[685695,685696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[685724,685725]},{"pos":[685780,685784],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[685843,685846]},{"pos":[685880,685887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685921,685922]},{"pos":[685978,685985],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[686046,686047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686074,686075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686538,686595],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[687094,687106],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[687167,687168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687245,687256],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[687341,687342],"content":"<","needQuote":true,"nodes":[]},{"pos":[687369,687376],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687442,687443]},{"pos":[687498,687502],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[687560,687561],"content":"<","needQuote":true,"nodes":[]},{"pos":[687588,687595],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687629,687630]},{"pos":[687685,687691],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[687783,687784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687937,687952],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[688016,688017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688094,688105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[688191,688194]},{"pos":[688228,688235],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[688268,688269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[688297,688298]},{"pos":[688353,688357],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[688416,688419]},{"pos":[688453,688460],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[688494,688495]},{"pos":[688550,688556],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[688616,688617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688644,688645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[689104,689160],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[689655,689667],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[689728,689729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[689806,689817],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[689902,689903],"content":"<","needQuote":true,"nodes":[]},{"pos":[689930,689937],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690003,690004]},{"pos":[690059,690063],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[690121,690122],"content":"<","needQuote":true,"nodes":[]},{"pos":[690149,690156],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690190,690191]},{"pos":[690245,690250],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[690341,690342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690494,690509],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[690573,690574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690651,690662],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[690748,690751]},{"pos":[690785,690792],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690825,690826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[690854,690855]},{"pos":[690910,690914],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[690973,690976]},{"pos":[691010,691017],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[691051,691052]},{"pos":[691106,691111],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[691170,691171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691198,691199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691655,691711],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[692206,692218],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[692279,692280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692357,692368],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[692453,692454],"content":"<","needQuote":true,"nodes":[]},{"pos":[692481,692488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692554,692555]},{"pos":[692610,692614],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[692672,692673],"content":"<","needQuote":true,"nodes":[]},{"pos":[692700,692707],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692741,692742]},{"pos":[692796,692801],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[692892,692893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693045,693060],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[693124,693125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[693202,693213],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[693299,693302]},{"pos":[693336,693343],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[693376,693377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[693405,693406]},{"pos":[693461,693465],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[693524,693527]},{"pos":[693561,693568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693602,693603]},{"pos":[693657,693662],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[693721,693722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693749,693750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694225,694293],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[694863,694875],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[694936,694937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[695014,695025],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[695110,695111],"content":"<","needQuote":true,"nodes":[]},{"pos":[695138,695145],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695211,695212]},{"pos":[695267,695271],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[695329,695330],"content":"<","needQuote":true,"nodes":[]},{"pos":[695357,695364],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695398,695399]},{"pos":[695458,695466],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[695528,695529],"content":"<","needQuote":true,"nodes":[]},{"pos":[695580,695587],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[695712,695713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695884,695899],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[695963,695964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[696041,696052],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[696138,696141]},{"pos":[696175,696182],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[696215,696216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[696244,696245]},{"pos":[696300,696304],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[696363,696366]},{"pos":[696400,696407],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696441,696442]},{"pos":[696501,696509],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[696572,696575]},{"pos":[696633,696640],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[696701,696702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696729,696730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696757,696758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697278,697345],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[697911,697923],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[697984,697985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[698062,698073],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[698158,698159],"content":"<","needQuote":true,"nodes":[]},{"pos":[698186,698193],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698259,698260]},{"pos":[698315,698319],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[698377,698378],"content":"<","needQuote":true,"nodes":[]},{"pos":[698405,698412],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698446,698447]},{"pos":[698506,698514],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[698576,698577],"content":"<","needQuote":true,"nodes":[]},{"pos":[698627,698633],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[698757,698758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698928,698943],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[699007,699008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699085,699096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[699182,699185]},{"pos":[699219,699226],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[699259,699260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[699288,699289]},{"pos":[699344,699348],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[699407,699410]},{"pos":[699444,699451],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699485,699486]},{"pos":[699545,699553],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[699616,699619]},{"pos":[699676,699682],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[699742,699743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699770,699771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699798,699799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700315,700381],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[700943,700955],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[701016,701017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[701094,701105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[701190,701191],"content":"<","needQuote":true,"nodes":[]},{"pos":[701218,701225],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701291,701292]},{"pos":[701347,701351],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[701409,701410],"content":"<","needQuote":true,"nodes":[]},{"pos":[701437,701444],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701478,701479]},{"pos":[701538,701546],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[701608,701609],"content":"<","needQuote":true,"nodes":[]},{"pos":[701658,701663],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[701786,701787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[701956,701971],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[702035,702036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[702113,702124],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[702210,702213]},{"pos":[702247,702254],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[702287,702288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[702316,702317]},{"pos":[702372,702376],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[702435,702438]},{"pos":[702472,702479],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702513,702514]},{"pos":[702573,702581],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[702644,702647]},{"pos":[702703,702708],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[702767,702768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702795,702796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702823,702824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703337,703403],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[703965,703977],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[704038,704039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[704116,704127],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[704212,704213],"content":"<","needQuote":true,"nodes":[]},{"pos":[704240,704247],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704313,704314]},{"pos":[704369,704373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[704431,704432],"content":"<","needQuote":true,"nodes":[]},{"pos":[704459,704466],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704500,704501]},{"pos":[704560,704568],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[704630,704631],"content":"<","needQuote":true,"nodes":[]},{"pos":[704680,704685],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[704808,704809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704978,704993],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[705057,705058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[705135,705146],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[705232,705235]},{"pos":[705269,705276],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[705309,705310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[705338,705339]},{"pos":[705394,705398],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[705457,705460]},{"pos":[705494,705501],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[705535,705536]},{"pos":[705595,705603],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[705666,705669]},{"pos":[705725,705730],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[705789,705790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705817,705818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705845,705846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706360,706427],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[706993,707005],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[707066,707067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[707144,707155],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[707240,707241],"content":"<","needQuote":true,"nodes":[]},{"pos":[707268,707275],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707341,707342]},{"pos":[707397,707401],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[707459,707460],"content":"<","needQuote":true,"nodes":[]},{"pos":[707487,707494],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707528,707529]},{"pos":[707588,707596],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[707658,707659],"content":"<","needQuote":true,"nodes":[]},{"pos":[707709,707715],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[707839,707840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708010,708025],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[708089,708090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[708167,708178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[708264,708267]},{"pos":[708301,708308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[708341,708342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708370,708371]},{"pos":[708426,708430],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[708489,708492]},{"pos":[708526,708533],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[708567,708568]},{"pos":[708627,708635],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[708698,708701]},{"pos":[708758,708764],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[708824,708825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708852,708853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708880,708881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[709381,709438],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[709937,709949],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[710010,710011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710088,710099],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[710184,710185],"content":"<","needQuote":true,"nodes":[]},{"pos":[710212,710219],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710285,710286]},{"pos":[710341,710345],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[710403,710404],"content":"<","needQuote":true,"nodes":[]},{"pos":[710431,710438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710472,710473]},{"pos":[710528,710534],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[710626,710627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[710780,710795],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[710859,710860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710937,710948],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[711034,711037]},{"pos":[711071,711078],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[711111,711112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711140,711141]},{"pos":[711196,711200],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[711259,711262]},{"pos":[711296,711303],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711337,711338]},{"pos":[711393,711399],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[711459,711460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711487,711488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711938,712005],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[712510,712531],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[712601,712602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[712679,712690],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[712775,712776],"content":"<","needQuote":true,"nodes":[]},{"pos":[712803,712810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[712876,712877]},{"pos":[712932,712936],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[712994,712995],"content":"<","needQuote":true,"nodes":[]},{"pos":[713022,713029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713063,713064]},{"pos":[713096,713103],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[713168,713169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[713312,713336],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[713409,713410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[713487,713498],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[713584,713587]},{"pos":[713621,713628],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[713661,713662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713690,713691]},{"pos":[713746,713750],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[713809,713812]},{"pos":[713846,713853],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713887,713888]},{"pos":[713920,713927],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[713960,713961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[713988,713989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714418,714446],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[714761,714776],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[714840,714841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[714908,714919],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[714996,714997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715109,715127],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[715194,715195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[715262,715273],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[715350,715351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715700,715765],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[716268,716290],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[716361,716362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[716439,716450],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[716535,716536],"content":"<","needQuote":true,"nodes":[]},{"pos":[716563,716570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[716636,716637]},{"pos":[716692,716696],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[716754,716755],"content":"<","needQuote":true,"nodes":[]},{"pos":[716782,716789],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[716823,716824]},{"pos":[716856,716860],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[716922,716923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717070,717095],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[717169,717170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[717247,717258],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[717344,717347]},{"pos":[717381,717388],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[717421,717422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[717450,717451]},{"pos":[717506,717510],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[717569,717572]},{"pos":[717606,717613],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717647,717648]},{"pos":[717680,717684],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[717714,717715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717742,717743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718249,718331],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[718987,719009],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[719080,719081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[719158,719169],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[719254,719255],"content":"<","needQuote":true,"nodes":[]},{"pos":[719282,719289],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719355,719356]},{"pos":[719411,719415],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[719473,719474],"content":"<","needQuote":true,"nodes":[]},{"pos":[719501,719508],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719542,719543]},{"pos":[719575,719579],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[719642,719643]},{"pos":[719723,719732],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[719815,719816],"content":"<","needQuote":true,"nodes":[]},{"pos":[719843,719847],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[719909,719910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720099,720124],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[720198,720199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[720276,720287],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[720373,720376]},{"pos":[720410,720417],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[720450,720451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720479,720480]},{"pos":[720535,720539],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[720598,720601]},{"pos":[720635,720642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[720676,720677]},{"pos":[720709,720713],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[720743,720744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720772,720773]},{"pos":[720853,720862],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[720946,720949]},{"pos":[720983,720987],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[721017,721018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721045,721046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721599,721674],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[722217,722249],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[722330,722331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[722408,722419],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[722504,722505],"content":"<","needQuote":true,"nodes":[]},{"pos":[722532,722539],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[722605,722606]},{"pos":[722661,722665],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[722723,722724],"content":"<","needQuote":true,"nodes":[]},{"pos":[722751,722758],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[722792,722793]},{"pos":[722825,722829],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[722891,722892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[723049,723084],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[723168,723169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723246,723257],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[723343,723346]},{"pos":[723380,723387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[723420,723421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[723449,723450]},{"pos":[723505,723509],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[723568,723571]},{"pos":[723605,723612],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723646,723647]},{"pos":[723679,723683],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[723713,723714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[723741,723742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724288,724380],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[725076,725108],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[725189,725190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[725267,725278],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[725363,725364],"content":"<","needQuote":true,"nodes":[]},{"pos":[725391,725398],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[725464,725465]},{"pos":[725520,725524],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[725582,725583],"content":"<","needQuote":true,"nodes":[]},{"pos":[725610,725617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[725651,725652]},{"pos":[725684,725688],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[725751,725752]},{"pos":[725832,725841],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[725924,725925],"content":"<","needQuote":true,"nodes":[]},{"pos":[725952,725956],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726018,726019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726218,726253],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[726337,726338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[726415,726426],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[726512,726515]},{"pos":[726549,726556],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[726589,726590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726618,726619]},{"pos":[726674,726678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[726737,726740]},{"pos":[726774,726781],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[726815,726816]},{"pos":[726848,726852],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726882,726883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726911,726912]},{"pos":[726992,727001],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[727085,727088]},{"pos":[727122,727126],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[727156,727157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727184,727185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727737,727775],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[728156,728172],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[728237,728238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[728315,728326],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[728411,728412],"content":"<","needQuote":true,"nodes":[]},{"pos":[728439,728446],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[728511,728512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[728638,728657],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[728725,728726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[728803,728814],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[728900,728903]},{"pos":[728937,728944],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[728977,728978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[729005,729006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[729391,729461],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[729978,730002],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[730075,730076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[730153,730164],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[730249,730250],"content":"<","needQuote":true,"nodes":[]},{"pos":[730277,730284],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730350,730351]},{"pos":[730406,730410],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[730468,730469],"content":"<","needQuote":true,"nodes":[]},{"pos":[730496,730503],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730537,730538]},{"pos":[730570,730577],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[730642,730643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[730789,730816],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[730892,730893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[730970,730981],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[731067,731070]},{"pos":[731104,731111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[731144,731145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731173,731174]},{"pos":[731229,731233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[731292,731295]},{"pos":[731329,731336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[731370,731371]},{"pos":[731403,731410],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[731443,731444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731471,731472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731957,732034],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[732599,732623],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[732696,732697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[732774,732785],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[732870,732871],"content":"<","needQuote":true,"nodes":[]},{"pos":[732898,732905],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[732971,732972]},{"pos":[733027,733031],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[733089,733090],"content":"<","needQuote":true,"nodes":[]},{"pos":[733117,733124],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733158,733159]},{"pos":[733213,733218],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[733278,733279]},{"pos":[733311,733318],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[733383,733384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[733543,733570],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[733646,733647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[733724,733735],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[733821,733824]},{"pos":[733858,733865],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[733898,733899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[733927,733928]},{"pos":[733983,733987],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[734046,734049]},{"pos":[734083,734090],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[734124,734125]},{"pos":[734179,734184],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[734244,734245]},{"pos":[734277,734284],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[734317,734318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734345,734346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734889,734976],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[735648,735676],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[735753,735754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[735831,735842],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[735927,735928],"content":"<","needQuote":true,"nodes":[]},{"pos":[735955,735962],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736028,736029]},{"pos":[736084,736088],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[736146,736147],"content":"<","needQuote":true,"nodes":[]},{"pos":[736174,736181],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736215,736216]},{"pos":[736298,736309],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[736394,736395],"content":"<","needQuote":true,"nodes":[]},{"pos":[736422,736429],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[736526,736527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736717,736748],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[736828,736829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[736906,736917],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[737003,737006]},{"pos":[737040,737047],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[737080,737081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[737109,737110]},{"pos":[737165,737169],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[737228,737231]},{"pos":[737265,737272],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[737306,737307]},{"pos":[737389,737400],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[737486,737489]},{"pos":[737523,737530],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[737563,737564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737591,737592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737619,737620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738230,738324],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[739044,739072],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[739149,739150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739227,739238],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[739323,739324],"content":"<","needQuote":true,"nodes":[]},{"pos":[739351,739358],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[739424,739425]},{"pos":[739480,739484],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[739542,739543],"content":"<","needQuote":true,"nodes":[]},{"pos":[739570,739577],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[739611,739612]},{"pos":[739666,739671],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[739731,739732]},{"pos":[739814,739825],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[739910,739911],"content":"<","needQuote":true,"nodes":[]},{"pos":[739938,739945],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[740042,740043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[740246,740277],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[740357,740358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[740435,740446],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[740532,740535]},{"pos":[740569,740576],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[740609,740610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[740638,740639]},{"pos":[740694,740698],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[740757,740760]},{"pos":[740794,740801],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740835,740836]},{"pos":[740890,740895],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[740955,740956]},{"pos":[741038,741049],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741135,741138]},{"pos":[741172,741179],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[741212,741213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741240,741241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741268,741269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741918,742059],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[742938,742979],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[743069,743070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[743147,743158],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743243,743244],"content":"<","needQuote":true,"nodes":[]},{"pos":[743271,743278],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743344,743345]},{"pos":[743400,743404],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743462,743463],"content":"<","needQuote":true,"nodes":[]},{"pos":[743490,743497],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743531,743532]},{"pos":[743614,743625],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743710,743711],"content":"<","needQuote":true,"nodes":[]},{"pos":[743738,743749],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[743851,743852]},{"pos":[743907,743911],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743969,743970],"content":"<","needQuote":true,"nodes":[]},{"pos":[743997,744004],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[744038,744039]},{"pos":[744071,744082],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[744120,744121]},{"pos":[744153,744160],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[744225,744226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744441,744485],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[744578,744579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[744656,744667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[744753,744756]},{"pos":[744790,744797],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[744830,744831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[744859,744860]},{"pos":[744915,744919],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[744978,744981]},{"pos":[745015,745022],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745056,745057]},{"pos":[745139,745150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[745236,745239]},{"pos":[745273,745284],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[745321,745322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745349,745350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[745378,745379]},{"pos":[745434,745438],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[745497,745500]},{"pos":[745534,745541],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745575,745576]},{"pos":[745608,745619],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[745657,745658]},{"pos":[745690,745697],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[745730,745731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745758,745759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746530,746678],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[747605,747646],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[747736,747737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[747814,747825],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[747910,747911],"content":"<","needQuote":true,"nodes":[]},{"pos":[747938,747945],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748011,748012]},{"pos":[748067,748071],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[748129,748130],"content":"<","needQuote":true,"nodes":[]},{"pos":[748157,748164],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748198,748199]},{"pos":[748253,748258],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[748318,748319]},{"pos":[748401,748412],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[748497,748498],"content":"<","needQuote":true,"nodes":[]},{"pos":[748525,748536],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[748638,748639]},{"pos":[748694,748698],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[748756,748757],"content":"<","needQuote":true,"nodes":[]},{"pos":[748784,748791],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748825,748826]},{"pos":[748858,748869],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[748907,748908]},{"pos":[748940,748947],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[749012,749013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749241,749285],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[749378,749379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749456,749467],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[749553,749556]},{"pos":[749590,749597],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[749630,749631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[749659,749660]},{"pos":[749715,749719],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[749778,749781]},{"pos":[749815,749822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[749856,749857]},{"pos":[749911,749916],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[749976,749977]},{"pos":[750059,750070],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[750156,750159]},{"pos":[750193,750204],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[750241,750242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750269,750270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750298,750299]},{"pos":[750354,750358],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[750417,750420]},{"pos":[750454,750461],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[750495,750496]},{"pos":[750528,750539],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[750577,750578]},{"pos":[750610,750617],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[750650,750651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750678,750679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751425,751491],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[752066,752088],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[752159,752160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[752237,752248],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[752333,752334],"content":"<","needQuote":true,"nodes":[]},{"pos":[752361,752368],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[752434,752435]},{"pos":[752517,752528],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[752613,752614],"content":"<","needQuote":true,"nodes":[]},{"pos":[752641,752648],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[752713,752714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752890,752915],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[752989,752990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753067,753078],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[753164,753167]},{"pos":[753201,753208],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[753241,753242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[753270,753271]},{"pos":[753353,753364],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[753450,753453]},{"pos":[753487,753494],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[753527,753528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753555,753556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754130,754224],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[754993,755015],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[755086,755087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[755164,755175],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755260,755261],"content":"<","needQuote":true,"nodes":[]},{"pos":[755288,755295],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755361,755362]},{"pos":[755444,755455],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755540,755541],"content":"<","needQuote":true,"nodes":[]},{"pos":[755568,755575],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755641,755642]},{"pos":[755730,755747],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[755838,755839],"content":"<","needQuote":true,"nodes":[]},{"pos":[755866,755873],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[755938,755939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[756165,756190],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[756264,756265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756342,756353],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756439,756442]},{"pos":[756476,756483],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756516,756517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756545,756546]},{"pos":[756628,756639],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756725,756728]},{"pos":[756762,756769],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756802,756803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756831,756832]},{"pos":[756920,756937],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[757029,757032]},{"pos":[757066,757073],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[757106,757107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757134,757135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757717,757754],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[758131,758146],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[758210,758211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758288,758299],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[758384,758385],"content":"<","needQuote":true,"nodes":[]},{"pos":[758412,758419],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[758484,758485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758610,758628],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[758695,758696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758773,758784],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[758870,758873]},{"pos":[758907,758914],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[758947,758948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758975,758976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[759369,759430],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[759945,759960],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[760024,760025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760102,760113],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[760198,760199],"content":"<","needQuote":true,"nodes":[]},{"pos":[760226,760233],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[760299,760300]},{"pos":[760355,760359],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[760417,760418],"content":"<","needQuote":true,"nodes":[]},{"pos":[760445,760452],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[760486,760487]},{"pos":[760543,760550],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[760643,760644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760801,760819],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[760886,760887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760964,760975],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[761061,761064]},{"pos":[761098,761105],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[761138,761139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[761167,761168]},{"pos":[761223,761227],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[761286,761289]},{"pos":[761323,761330],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[761364,761365]},{"pos":[761421,761428],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[761489,761490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761517,761518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761971,762017],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[762430,762454],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[762527,762528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762605,762616],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[762701,762702],"content":"<","needQuote":true,"nodes":[]},{"pos":[762729,762736],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[762801,762802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762936,762963],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[763039,763040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[763117,763128],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[763214,763217]},{"pos":[763251,763258],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[763291,763292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763319,763320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763749,763819],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[764370,764394],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[764467,764468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[764545,764556],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[764641,764642],"content":"<","needQuote":true,"nodes":[]},{"pos":[764669,764676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[764742,764743]},{"pos":[764798,764802],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[764860,764861],"content":"<","needQuote":true,"nodes":[]},{"pos":[764888,764895],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[764929,764930]},{"pos":[764986,764993],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[765086,765087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765253,765280],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[765356,765357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765434,765445],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[765531,765534]},{"pos":[765568,765575],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[765608,765609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[765637,765638]},{"pos":[765693,765697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[765756,765759]},{"pos":[765793,765800],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[765834,765835]},{"pos":[765891,765898],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[765959,765960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765987,765988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766470,766512],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[766929,766942],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[767004,767005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[767082,767093],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[767178,767179],"content":"<","needQuote":true,"nodes":[]},{"pos":[767206,767213],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[767279,767280]},{"pos":[767334,767339],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[767398,767399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767535,767551],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[767616,767617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[767694,767705],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[767791,767794]},{"pos":[767828,767835],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[767868,767869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[767897,767898]},{"pos":[767952,767957],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[768016,768017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768434,768498],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[769025,769043],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[769110,769111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[769188,769199],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[769284,769285],"content":"<","needQuote":true,"nodes":[]},{"pos":[769312,769319],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[769385,769386]},{"pos":[769441,769445],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[769503,769504],"content":"<","needQuote":true,"nodes":[]},{"pos":[769531,769538],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[769572,769573]},{"pos":[769629,769636],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[769729,769730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769890,769911],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[769981,769982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[770059,770070],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[770156,770159]},{"pos":[770193,770200],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[770233,770234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[770262,770263]},{"pos":[770318,770322],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[770381,770384]},{"pos":[770418,770425],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[770459,770460]},{"pos":[770516,770523],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[770584,770585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770612,770613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771114,771185],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[771760,771778],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[771845,771846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771923,771934],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[772019,772020],"content":"<","needQuote":true,"nodes":[]},{"pos":[772047,772054],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772120,772121]},{"pos":[772176,772180],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[772238,772239],"content":"<","needQuote":true,"nodes":[]},{"pos":[772266,772273],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772307,772308]},{"pos":[772362,772367],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[772427,772428]},{"pos":[772484,772491],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[772584,772585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772758,772779],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[772849,772850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[772927,772938],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[773024,773027]},{"pos":[773061,773068],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[773101,773102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[773130,773131]},{"pos":[773186,773190],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[773249,773252]},{"pos":[773286,773293],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[773327,773328]},{"pos":[773382,773387],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[773447,773448]},{"pos":[773504,773511],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[773572,773573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773600,773601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[774110,774168],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[774671,774683],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[774744,774745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774822,774833],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[774918,774919],"content":"<","needQuote":true,"nodes":[]},{"pos":[774946,774953],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[775019,775020]},{"pos":[775075,775079],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[775137,775138],"content":"<","needQuote":true,"nodes":[]},{"pos":[775165,775172],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[775206,775207]},{"pos":[775263,775270],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[775363,775364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775518,775533],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[775597,775598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[775675,775686],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[775772,775775]},{"pos":[775809,775816],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[775849,775850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[775878,775879]},{"pos":[775934,775938],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[775997,776000]},{"pos":[776034,776041],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776075,776076]},{"pos":[776132,776139],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[776200,776201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776228,776229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776692,776749],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[777248,777260],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[777321,777322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[777399,777410],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[777495,777496],"content":"<","needQuote":true,"nodes":[]},{"pos":[777523,777530],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777596,777597]},{"pos":[777652,777656],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[777714,777715],"content":"<","needQuote":true,"nodes":[]},{"pos":[777742,777749],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777783,777784]},{"pos":[777839,777845],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[777937,777938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778091,778106],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[778170,778171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[778248,778259],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[778345,778348]},{"pos":[778382,778389],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[778422,778423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[778451,778452]},{"pos":[778507,778511],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[778570,778573]},{"pos":[778607,778614],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[778648,778649]},{"pos":[778704,778710],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[778770,778771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778798,778799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779258,779314],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[779809,779821],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[779882,779883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[779960,779971],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[780056,780057],"content":"<","needQuote":true,"nodes":[]},{"pos":[780084,780091],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[780157,780158]},{"pos":[780213,780217],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[780275,780276],"content":"<","needQuote":true,"nodes":[]},{"pos":[780303,780310],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[780344,780345]},{"pos":[780399,780404],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[780495,780496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780648,780663],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[780727,780728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[780805,780816],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[780902,780905]},{"pos":[780939,780946],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[780979,780980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[781008,781009]},{"pos":[781064,781068],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[781127,781130]},{"pos":[781164,781171],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781205,781206]},{"pos":[781260,781265],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[781324,781325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781352,781353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781809,781865],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[782360,782372],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[782433,782434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[782511,782522],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[782607,782608],"content":"<","needQuote":true,"nodes":[]},{"pos":[782635,782642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782708,782709]},{"pos":[782764,782768],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[782826,782827],"content":"<","needQuote":true,"nodes":[]},{"pos":[782854,782861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782895,782896]},{"pos":[782950,782955],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[783046,783047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783199,783214],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[783278,783279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[783356,783367],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[783453,783456]},{"pos":[783490,783497],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[783530,783531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[783559,783560]},{"pos":[783615,783619],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[783678,783681]},{"pos":[783715,783722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[783756,783757]},{"pos":[783811,783816],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[783875,783876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783903,783904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[784379,784447],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[785017,785029],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[785090,785091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[785168,785179],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[785264,785265],"content":"<","needQuote":true,"nodes":[]},{"pos":[785292,785299],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785365,785366]},{"pos":[785421,785425],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[785483,785484],"content":"<","needQuote":true,"nodes":[]},{"pos":[785511,785518],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785552,785553]},{"pos":[785612,785620],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[785682,785683],"content":"<","needQuote":true,"nodes":[]},{"pos":[785734,785741],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[785866,785867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786038,786053],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[786117,786118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[786195,786206],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[786292,786295]},{"pos":[786329,786336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[786369,786370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[786398,786399]},{"pos":[786454,786458],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[786517,786520]},{"pos":[786554,786561],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[786595,786596]},{"pos":[786655,786663],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[786726,786729]},{"pos":[786787,786794],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[786855,786856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786883,786884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786911,786912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[787432,787499],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[788065,788077],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[788138,788139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[788216,788227],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[788312,788313],"content":"<","needQuote":true,"nodes":[]},{"pos":[788340,788347],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788413,788414]},{"pos":[788469,788473],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[788531,788532],"content":"<","needQuote":true,"nodes":[]},{"pos":[788559,788566],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788600,788601]},{"pos":[788660,788668],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[788730,788731],"content":"<","needQuote":true,"nodes":[]},{"pos":[788781,788787],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[788911,788912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789082,789097],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[789161,789162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[789239,789250],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[789336,789339]},{"pos":[789373,789380],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[789413,789414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[789442,789443]},{"pos":[789498,789502],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[789561,789564]},{"pos":[789598,789605],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[789639,789640]},{"pos":[789699,789707],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[789770,789773]},{"pos":[789830,789836],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[789896,789897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789924,789925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789952,789953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790469,790535],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[791097,791109],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[791170,791171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[791248,791259],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[791344,791345],"content":"<","needQuote":true,"nodes":[]},{"pos":[791372,791379],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[791445,791446]},{"pos":[791501,791505],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[791563,791564],"content":"<","needQuote":true,"nodes":[]},{"pos":[791591,791598],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[791632,791633]},{"pos":[791692,791700],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[791762,791763],"content":"<","needQuote":true,"nodes":[]},{"pos":[791812,791817],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[791940,791941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792110,792125],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[792189,792190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[792267,792278],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[792364,792367]},{"pos":[792401,792408],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[792441,792442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[792470,792471]},{"pos":[792526,792530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[792589,792592]},{"pos":[792626,792633],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792667,792668]},{"pos":[792727,792735],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[792798,792801]},{"pos":[792857,792862],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[792921,792922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792949,792950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792977,792978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793491,793557],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[794119,794131],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[794192,794193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[794270,794281],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[794366,794367],"content":"<","needQuote":true,"nodes":[]},{"pos":[794394,794401],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[794467,794468]},{"pos":[794523,794527],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[794585,794586],"content":"<","needQuote":true,"nodes":[]},{"pos":[794613,794620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[794654,794655]},{"pos":[794714,794722],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[794784,794785],"content":"<","needQuote":true,"nodes":[]},{"pos":[794834,794839],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[794962,794963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[795132,795147],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[795211,795212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[795289,795300],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[795386,795389]},{"pos":[795423,795430],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[795463,795464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[795492,795493]},{"pos":[795548,795552],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[795611,795614]},{"pos":[795648,795655],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[795689,795690]},{"pos":[795749,795757],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[795820,795823]},{"pos":[795879,795884],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[795943,795944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[795971,795972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[795999,796000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796514,796581],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[797147,797159],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[797220,797221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[797298,797309],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[797394,797395],"content":"<","needQuote":true,"nodes":[]},{"pos":[797422,797429],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797495,797496]},{"pos":[797551,797555],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[797613,797614],"content":"<","needQuote":true,"nodes":[]},{"pos":[797641,797648],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797682,797683]},{"pos":[797742,797750],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[797812,797813],"content":"<","needQuote":true,"nodes":[]},{"pos":[797863,797869],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[797993,797994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[798164,798179],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[798243,798244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[798321,798332],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[798418,798421]},{"pos":[798455,798462],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[798495,798496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[798524,798525]},{"pos":[798580,798584],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[798643,798646]},{"pos":[798680,798687],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798721,798722]},{"pos":[798781,798789],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[798852,798855]},{"pos":[798912,798918],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[798978,798979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799006,799007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799034,799035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799535,799592],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[800091,800103],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[800164,800165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[800242,800253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[800338,800339],"content":"<","needQuote":true,"nodes":[]},{"pos":[800366,800373],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800439,800440]},{"pos":[800495,800499],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[800557,800558],"content":"<","needQuote":true,"nodes":[]},{"pos":[800585,800592],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800626,800627]},{"pos":[800682,800688],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[800780,800781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800934,800949],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[801013,801014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[801091,801102],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[801188,801191]},{"pos":[801225,801232],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[801265,801266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[801294,801295]},{"pos":[801350,801354],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[801413,801416]},{"pos":[801450,801457],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801491,801492]},{"pos":[801547,801553],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[801613,801614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[801641,801642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802085,802127],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[802544,802557],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[802619,802620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[802697,802708],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[802793,802794],"content":"<","needQuote":true,"nodes":[]},{"pos":[802821,802828],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[802894,802895]},{"pos":[802949,802954],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[803013,803014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803150,803166],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[803231,803232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[803309,803320],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[803406,803409]},{"pos":[803443,803450],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[803483,803484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[803512,803513]},{"pos":[803567,803572],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[803631,803632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[804049,804113],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[804640,804658],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[804725,804726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[804803,804814],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[804899,804900],"content":"<","needQuote":true,"nodes":[]},{"pos":[804927,804934],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805000,805001]},{"pos":[805056,805060],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[805118,805119],"content":"<","needQuote":true,"nodes":[]},{"pos":[805146,805153],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805187,805188]},{"pos":[805244,805251],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[805344,805345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805505,805526],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[805596,805597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[805674,805685],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[805771,805774]},{"pos":[805808,805815],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[805848,805849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[805877,805878]},{"pos":[805933,805937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[805996,805999]},{"pos":[806033,806040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[806074,806075]},{"pos":[806131,806138],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[806199,806200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806227,806228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806729,806800],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[807375,807393],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[807460,807461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[807538,807549],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[807634,807635],"content":"<","needQuote":true,"nodes":[]},{"pos":[807662,807669],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807735,807736]},{"pos":[807791,807795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[807853,807854],"content":"<","needQuote":true,"nodes":[]},{"pos":[807881,807888],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807922,807923]},{"pos":[807977,807982],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[808042,808043]},{"pos":[808099,808106],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[808199,808200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808373,808394],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[808464,808465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[808542,808553],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[808639,808642]},{"pos":[808676,808683],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[808716,808717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[808745,808746]},{"pos":[808801,808805],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[808864,808867]},{"pos":[808901,808908],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808942,808943]},{"pos":[808997,809002],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[809062,809063]},{"pos":[809119,809126],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[809187,809188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809215,809216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809697,809735],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[810116,810132],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[810197,810198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[810275,810286],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[810371,810372],"content":"<","needQuote":true,"nodes":[]},{"pos":[810399,810406],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[810471,810472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810598,810617],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[810685,810686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[810763,810774],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[810860,810863]},{"pos":[810897,810904],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[810937,810938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810965,810966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[811357,811427],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[811950,811977],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[812053,812054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[812131,812142],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[812227,812228],"content":"<","needQuote":true,"nodes":[]},{"pos":[812255,812262],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812328,812329]},{"pos":[812384,812388],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[812446,812447],"content":"<","needQuote":true,"nodes":[]},{"pos":[812474,812481],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812515,812516]},{"pos":[812548,812552],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[812614,812615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812767,812797],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[812876,812877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[812954,812965],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[813051,813054]},{"pos":[813088,813095],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[813128,813129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813157,813158]},{"pos":[813213,813217],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[813276,813279]},{"pos":[813313,813320],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813354,813355]},{"pos":[813387,813391],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[813421,813422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[813449,813450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[813984,814079],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[814787,814814],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[814890,814891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[814968,814979],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[815064,815065],"content":"<","needQuote":true,"nodes":[]},{"pos":[815092,815099],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815165,815166]},{"pos":[815221,815225],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[815283,815284],"content":"<","needQuote":true,"nodes":[]},{"pos":[815311,815318],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815352,815353]},{"pos":[815385,815389],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[815452,815453]},{"pos":[815541,815558],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[815649,815650],"content":"<","needQuote":true,"nodes":[]},{"pos":[815677,815681],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[815743,815744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815946,815976],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[816055,816056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[816133,816144],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[816230,816233]},{"pos":[816267,816274],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[816307,816308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[816336,816337]},{"pos":[816392,816396],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[816455,816458]},{"pos":[816492,816499],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[816533,816534]},{"pos":[816566,816570],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[816600,816601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[816629,816630]},{"pos":[816718,816735],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[816827,816830]},{"pos":[816864,816868],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[816898,816899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816926,816927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[817535,817640],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[818309,818346],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[818432,818433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[818510,818521],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[818606,818607],"content":"<","needQuote":true,"nodes":[]},{"pos":[818634,818641],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818707,818708]},{"pos":[818763,818767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[818825,818826],"content":"<","needQuote":true,"nodes":[]},{"pos":[818853,818860],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818894,818895]},{"pos":[818927,818931],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[818994,818995]},{"pos":[819050,819054],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[819112,819113],"content":"<","needQuote":true,"nodes":[]},{"pos":[819140,819147],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819181,819182]},{"pos":[819214,819222],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[819288,819289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[819462,819502],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[819591,819592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[819669,819680],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[819766,819769]},{"pos":[819803,819810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[819843,819844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[819872,819873]},{"pos":[819928,819932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[819991,819994]},{"pos":[820028,820035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820069,820070]},{"pos":[820102,820106],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[820136,820137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[820165,820166]},{"pos":[820221,820225],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[820284,820287]},{"pos":[820321,820328],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820362,820363]},{"pos":[820395,820403],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[820437,820438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820465,820466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[821115,821245],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[822099,822136],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[822222,822223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[822300,822311],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[822396,822397],"content":"<","needQuote":true,"nodes":[]},{"pos":[822424,822431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822497,822498]},{"pos":[822553,822557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[822615,822616],"content":"<","needQuote":true,"nodes":[]},{"pos":[822643,822650],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822684,822685]},{"pos":[822717,822721],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[822784,822785]},{"pos":[822840,822844],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[822902,822903],"content":"<","needQuote":true,"nodes":[]},{"pos":[822930,822937],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822971,822972]},{"pos":[823004,823012],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[823079,823080]},{"pos":[823168,823185],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[823276,823277],"content":"<","needQuote":true,"nodes":[]},{"pos":[823304,823308],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[823370,823371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823594,823634],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[823723,823724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[823801,823812],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[823898,823901]},{"pos":[823935,823942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[823975,823976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[824004,824005]},{"pos":[824060,824064],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[824123,824126]},{"pos":[824160,824167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824201,824202]},{"pos":[824234,824238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[824268,824269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[824297,824298]},{"pos":[824353,824357],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[824416,824419]},{"pos":[824453,824460],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824494,824495]},{"pos":[824527,824535],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[824569,824570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[824598,824599]},{"pos":[824687,824704],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[824796,824799]},{"pos":[824833,824837],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[824867,824868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824895,824896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825550,825587],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[825964,825979],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[826043,826044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[826121,826132],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[826217,826218],"content":"<","needQuote":true,"nodes":[]},{"pos":[826245,826252],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[826317,826318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826443,826461],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[826528,826529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[826606,826617],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[826703,826706]},{"pos":[826740,826747],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[826780,826781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826808,826809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[827193,827259],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[827766,827789],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[827861,827862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[827939,827950],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[828035,828036],"content":"<","needQuote":true,"nodes":[]},{"pos":[828063,828070],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[828136,828137]},{"pos":[828192,828196],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[828254,828255],"content":"<","needQuote":true,"nodes":[]},{"pos":[828282,828289],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[828323,828324]},{"pos":[828356,828360],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[828422,828423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828571,828597],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[828672,828673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[828750,828761],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[828847,828850]},{"pos":[828884,828891],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[828924,828925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[828953,828954]},{"pos":[829009,829013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[829072,829075]},{"pos":[829109,829116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[829150,829151]},{"pos":[829183,829187],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[829217,829218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829245,829246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829764,829855],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[830547,830570],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[830642,830643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[830720,830731],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[830816,830817],"content":"<","needQuote":true,"nodes":[]},{"pos":[830844,830851],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[830917,830918]},{"pos":[830973,830977],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[831035,831036],"content":"<","needQuote":true,"nodes":[]},{"pos":[831063,831070],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[831104,831105]},{"pos":[831137,831141],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[831204,831205]},{"pos":[831293,831310],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[831401,831402],"content":"<","needQuote":true,"nodes":[]},{"pos":[831429,831433],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[831495,831496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[831694,831720],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[831795,831796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[831873,831884],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[831970,831973]},{"pos":[832007,832014],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[832047,832048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[832076,832077]},{"pos":[832132,832136],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[832195,832198]},{"pos":[832232,832239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[832273,832274]},{"pos":[832306,832310],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[832340,832341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[832369,832370]},{"pos":[832458,832475],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[832567,832570]},{"pos":[832604,832608],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[832638,832639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[832666,832667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[833259,833360],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[834013,834046],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[834128,834129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[834206,834217],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[834302,834303],"content":"<","needQuote":true,"nodes":[]},{"pos":[834330,834337],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834403,834404]},{"pos":[834459,834463],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[834521,834522],"content":"<","needQuote":true,"nodes":[]},{"pos":[834549,834556],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834590,834591]},{"pos":[834623,834627],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[834690,834691]},{"pos":[834746,834750],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[834808,834809],"content":"<","needQuote":true,"nodes":[]},{"pos":[834836,834843],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834877,834878]},{"pos":[834910,834918],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[834984,834985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[835154,835190],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[835275,835276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835353,835364],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[835450,835453]},{"pos":[835487,835494],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[835527,835528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[835556,835557]},{"pos":[835612,835616],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[835675,835678]},{"pos":[835712,835719],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[835753,835754]},{"pos":[835786,835790],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[835820,835821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[835849,835850]},{"pos":[835905,835909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[835968,835971]},{"pos":[836005,836012],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[836046,836047]},{"pos":[836079,836087],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[836121,836122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836149,836150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836783,836909],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[837747,837780],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[837862,837863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[837940,837951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[838036,838037],"content":"<","needQuote":true,"nodes":[]},{"pos":[838064,838071],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838137,838138]},{"pos":[838193,838197],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[838255,838256],"content":"<","needQuote":true,"nodes":[]},{"pos":[838283,838290],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838324,838325]},{"pos":[838357,838361],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[838424,838425]},{"pos":[838480,838484],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[838542,838543],"content":"<","needQuote":true,"nodes":[]},{"pos":[838570,838577],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838611,838612]},{"pos":[838644,838652],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[838719,838720]},{"pos":[838808,838825],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[838916,838917],"content":"<","needQuote":true,"nodes":[]},{"pos":[838944,838948],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[839010,839011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[839230,839266],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[839351,839352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[839429,839440],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[839526,839529]},{"pos":[839563,839570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[839603,839604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[839632,839633]},{"pos":[839688,839692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[839751,839754]},{"pos":[839788,839795],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839829,839830]},{"pos":[839862,839866],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[839896,839897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[839925,839926]},{"pos":[839981,839985],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[840044,840047]},{"pos":[840081,840088],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[840122,840123]},{"pos":[840155,840163],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[840197,840198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[840226,840227]},{"pos":[840315,840332],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[840424,840427]},{"pos":[840461,840465],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[840495,840496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[840523,840524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[841209,841267],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[841810,841824],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[841887,841888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[841965,841976],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[842061,842062],"content":"<","needQuote":true,"nodes":[]},{"pos":[842089,842096],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842162,842163]},{"pos":[842245,842256],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[842341,842342],"content":"<","needQuote":true,"nodes":[]},{"pos":[842369,842376],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[842441,842442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842610,842627],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[842693,842694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[842771,842782],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[842868,842871]},{"pos":[842905,842912],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[842945,842946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[842974,842975]},{"pos":[843057,843068],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[843154,843157]},{"pos":[843191,843198],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[843231,843232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843259,843260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843802,843888],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[844625,844639],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[844702,844703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[844780,844791],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[844876,844877],"content":"<","needQuote":true,"nodes":[]},{"pos":[844904,844911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[844977,844978]},{"pos":[845060,845071],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[845156,845157],"content":"<","needQuote":true,"nodes":[]},{"pos":[845184,845191],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845257,845258]},{"pos":[845346,845363],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[845454,845455],"content":"<","needQuote":true,"nodes":[]},{"pos":[845482,845489],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[845554,845555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[845773,845790],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[845856,845857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[845934,845945],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[846031,846034]},{"pos":[846068,846075],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846108,846109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846137,846138]},{"pos":[846220,846231],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[846317,846320]},{"pos":[846354,846361],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846394,846395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846423,846424]},{"pos":[846512,846529],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[846621,846624]},{"pos":[846658,846665],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846698,846699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846726,846727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847316,847376],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[847887,847901],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[847964,847965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848042,848053],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[848138,848139],"content":"<","needQuote":true,"nodes":[]},{"pos":[848166,848173],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848239,848240]},{"pos":[848295,848299],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[848357,848358],"content":"<","needQuote":true,"nodes":[]},{"pos":[848385,848392],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848426,848427]},{"pos":[848483,848490],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[848583,848584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[848740,848757],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[848823,848824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848901,848912],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[848998,849001]},{"pos":[849035,849042],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849075,849076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[849104,849105]},{"pos":[849160,849164],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[849223,849226]},{"pos":[849260,849267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[849301,849302]},{"pos":[849358,849365],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[849426,849427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849454,849455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849940,850007],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[850566,850580],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[850643,850644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[850721,850732],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[850817,850818],"content":"<","needQuote":true,"nodes":[]},{"pos":[850845,850852],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[850918,850919]},{"pos":[850974,850978],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[851036,851037],"content":"<","needQuote":true,"nodes":[]},{"pos":[851064,851071],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[851105,851106]},{"pos":[851160,851165],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[851225,851226]},{"pos":[851282,851289],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[851382,851383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[851552,851569],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[851635,851636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851713,851724],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[851810,851813]},{"pos":[851847,851854],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[851887,851888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[851916,851917]},{"pos":[851972,851976],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[852035,852038]},{"pos":[852072,852079],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[852113,852114]},{"pos":[852168,852173],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[852233,852234]},{"pos":[852290,852297],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[852358,852359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852386,852387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852921,853025],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[853749,853778],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[853856,853857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[853934,853945],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[854030,854031],"content":"<","needQuote":true,"nodes":[]},{"pos":[854058,854064],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[854129,854130]},{"pos":[854212,854223],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[854308,854309],"content":"<","needQuote":true,"nodes":[]},{"pos":[854336,854343],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[854409,854410]},{"pos":[854465,854469],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[854527,854528],"content":"<","needQuote":true,"nodes":[]},{"pos":[854555,854561],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[854594,854595]},{"pos":[854627,854634],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[854668,854669]},{"pos":[854701,854708],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[854773,854774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[854965,854997],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[855078,855079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[855156,855167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[855253,855256]},{"pos":[855290,855296],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[855328,855329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[855357,855358]},{"pos":[855440,855451],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[855537,855540]},{"pos":[855574,855581],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[855614,855615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[855643,855644]},{"pos":[855699,855703],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[855762,855765]},{"pos":[855799,855805],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[855838,855839]},{"pos":[855871,855878],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[855912,855913]},{"pos":[855945,855952],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[855985,855986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856013,856014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856516,856527],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[856895,856900],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[857455,857460],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[857618,857623],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[858190,858200],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[858782,858789],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[858958,858968],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[859395,859422],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[859957,859989],"content":"Add(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(GatewayIPAddressInformation)","pos":[0,32]}]},{"pos":[860425,860428],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[860576,860577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[860671,860698],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[860781,860782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[860878,860881],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[861032,861033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[861127,861154],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[861237,861238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[861701,861707],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[861919,861922],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[861993,861994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[862021,862022],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[862049,862050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862146,862149],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[862223,862224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[862251,862252],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[862279,862280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862731,862738],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[863062,863067],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[863217,863218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[863245,863246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863340,863345],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[863498,863499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[863526,863527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863881,863888],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[864100,864105],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[864178,864179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[864206,864207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[864301,864306],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[864382,864383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[864410,864411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[864931,864968],"content":"Contains(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(GatewayIPAddressInformation)","pos":[0,37]}]},{"pos":[865419,865427],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[865580,865581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[865675,865702],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[865785,865786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[865887,865895],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[866051,866052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[866146,866173],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[866256,866257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[866740,866751],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[866978,866986],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[867062,867063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[867090,867091],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[867118,867119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[867220,867228],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[867307,867308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[867335,867336],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[867363,867364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[867925,867969],"content":"CopyTo(GatewayIPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(GatewayIPAddressInformation[], Int32)","pos":[0,44]}]},{"pos":[868517,868523],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[868674,868675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[868769,868796],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":"[]","pos":[868880,868882]},{"content":",","pos":[868914,868915]},{"pos":[868969,868974],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[869033,869034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869148,869154],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[869308,869309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[869403,869430],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[869513,869515],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[869544,869545]},{"pos":[869599,869604],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[869663,869664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[870160,870189],"content":"GatewayIPAddressInformation[]","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation[]","pos":[0,29]}]},{"pos":[870470,870497],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"content":"[]","pos":[870581,870583]},{"pos":[870692,870719],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[870802,870804],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[871018,871036],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[871334,871340],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[871414,871415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871442,871443],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[871471,871473]},{"content":",","pos":[871505,871506]},{"pos":[871560,871565],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[871624,871625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[871739,871745],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[871822,871823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871850,871851],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[871878,871880],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[871909,871910]},{"pos":[871964,871969],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[872028,872029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[872538,872553],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[872901,872914],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[873072,873073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[873100,873101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873203,873216],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[873377,873378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[873405,873406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873907,873947],"content":"IEnumerator<GatewayIPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;GatewayIPAddressInformation&gt;","pos":[0,40],"source":"IEnumerator<GatewayIPAddressInformation>"}]},{"pos":[874304,874315],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[874400,874401],"content":"<","needQuote":true,"nodes":[]},{"pos":[874495,874522],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[874698,874709],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[874795,874798]},{"pos":[874899,874926],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[875009,875010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[875350,875365],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[875601,875614],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[875695,875696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[875723,875724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[875826,875839],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[875923,875924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[875951,875952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[876215,876229],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[876448,876459],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[876523,876524],"content":"<","needQuote":true,"nodes":[]},{"pos":[876551,876552],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[876672,876683],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[876748,876751]},{"pos":[876785,876786],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[876813,876814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877308,877343],"content":"Remove(GatewayIPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(GatewayIPAddressInformation)","pos":[0,35]}]},{"pos":[877788,877794],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[877945,877946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878040,878067],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[878150,878151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[878250,878256],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[878410,878411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878505,878532],"content":"GatewayIPAddressInformation","needQuote":true,"nodes":[{"content":"GatewayIPAddressInformation","pos":[0,27]}]},{"pos":[878615,878616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879091,879100],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[879321,879327],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[879401,879402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[879429,879430],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[879457,879458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879557,879563],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[879640,879641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[879668,879669],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[879696,879697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879990,880005],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[880144,880157],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[880227,880228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880255,880256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880348,880361],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[880431,880432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880459,880460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880676,880687],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[880869,880890],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[881084,881111],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[881330,881347],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[881522,881542],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  commentId: T:System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  id: GatewayIPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.#ctor\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  - vb\n  name: GatewayIPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GatewayIPAddressInformationCollection\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 23\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Stores a set of <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types.</p>\\n\"\n  syntax:\n    content: 'public class GatewayIPAddressInformationCollection : ICollection<GatewayIPAddressInformation>, IEnumerable<GatewayIPAddressInformation>, IEnumerable'\n    content.vb: >-\n      Public Class GatewayIPAddressInformationCollection\n          Implements ICollection(Of GatewayIPAddressInformation), IEnumerable(Of GatewayIPAddressInformation), IEnumerable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: GatewayIPAddressInformationCollection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TSecond},{TResult}})\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.#ctor\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: GatewayIPAddressInformationCollection()\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GatewayIPAddressInformationCollection()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 25\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformationCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected GatewayIPAddressInformationCollection()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: GatewayIPAddressInformationCollection.GatewayIPAddressInformationCollection()\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count\n  commentId: P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count\n  id: Count\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 26\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  syntax:\n    content: public virtual int Count { get; }\n    content.vb: Public Overridable ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that contains the number of <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Count\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: GatewayIPAddressInformationCollection.Count\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly\n  commentId: P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsReadOnly\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 27\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a value that indicates whether access to this collection is read-only.</p>\\n\"\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.IsReadOnly\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: GatewayIPAddressInformationCollection.IsReadOnly\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)\n  commentId: P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 28\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specific index of the collection.</p>\\n\"\n  syntax:\n    content: public virtual GatewayIPAddressInformation this[int index] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As GatewayIPAddressInformation\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index of interest.</p>\\n\"\n    return:\n      type: System.Net.NetworkInformation.GatewayIPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specific index in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: GatewayIPAddressInformationCollection.Item[Int32]\n  nameWithType.vb: GatewayIPAddressInformationCollection.Item(Int32)\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  id: Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(GatewayIPAddressInformation)\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 29\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual void Add(GatewayIPAddressInformation address)\n    content.vb: Public Overridable Sub Add(address As GatewayIPAddressInformation)\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.GatewayIPAddressInformation\n      description: \"\\n<p>The object to be added to the collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: GatewayIPAddressInformationCollection.Add(GatewayIPAddressInformation)\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear\n  id: Clear\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 30\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual void Clear()\n    content.vb: Public Overridable Sub Clear\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Clear\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: GatewayIPAddressInformationCollection.Clear()\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  id: Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Contains(GatewayIPAddressInformation)\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 31\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Checks whether the collection contains the specified <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual bool Contains(GatewayIPAddressInformation address)\n    content.vb: Public Overridable Function Contains(address As GatewayIPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.GatewayIPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be searched in the collection.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object exists in the collection; otherwise <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: GatewayIPAddressInformationCollection.Contains(GatewayIPAddressInformation)\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)\n  id: CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(GatewayIPAddressInformation[], Int32)\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 32\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Copies the elements in this collection to a one-dimensional array of type <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void CopyTo(GatewayIPAddressInformation[] array, int offset)\n    content.vb: Public Overridable Sub CopyTo(array As GatewayIPAddressInformation(), offset As Integer)\n    parameters:\n    - id: array\n      type: System.Net.NetworkInformation.GatewayIPAddressInformation[]\n      description: \"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>count</em> is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or- </p>\\n<p>The number of elements in this <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>count</em> to the end of the destination <em>array</em>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The elements in this <xref href=\\\"System.Net.NetworkInformation.GatewayIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be cast automatically to the type of the destination <em>array</em>. </p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation(), System.Int32)\n  name.vb: CopyTo(GatewayIPAddressInformation(), Int32)\n  nameWithType: GatewayIPAddressInformationCollection.CopyTo(GatewayIPAddressInformation[], Int32)\n  nameWithType.vb: GatewayIPAddressInformationCollection.CopyTo(GatewayIPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 33\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: public virtual IEnumerator<GatewayIPAddressInformation> GetEnumerator()\n    content.vb: Public Overridable Function GetEnumerator As IEnumerator(Of GatewayIPAddressInformation)\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.GatewayIPAddressInformation}\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.GetEnumerator\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: GatewayIPAddressInformationCollection.GetEnumerator()\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  id: Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Remove(GatewayIPAddressInformation)\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 34\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual bool Remove(GatewayIPAddressInformation address)\n    content.vb: Public Overridable Function Remove(address As GatewayIPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.GatewayIPAddressInformation\n      description: \"\\n<p>The object to be removed.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: GatewayIPAddressInformationCollection.Remove(GatewayIPAddressInformation)\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 35\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: GatewayIPAddressInformationCollection.IEnumerable.GetEnumerator()\n  nameWithType.vb: GatewayIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<GatewayIPAddressInformation>\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  name.vb: ICollection(Of GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  nameWithType: ICollection<GatewayIPAddressInformation>\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<GatewayIPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  name.vb: IEnumerable(Of GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  nameWithType: IEnumerable<GatewayIPAddressInformation>\n  nameWithType.vb: IEnumerable(Of GatewayIPAddressInformation)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<GatewayIPAddressInformation>()\n  fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: AsQueryable(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<GatewayIPAddressInformation>\n    fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<GatewayIPAddressInformation>()\n  nameWithType.vb: Queryable.AsQueryable(Of GatewayIPAddressInformation)()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<GatewayIPAddressInformation>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: AsParallel(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<GatewayIPAddressInformation>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of GatewayIPAddressInformation)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<GatewayIPAddressInformation>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Aggregate(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Aggregate(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<GatewayIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate))\n  name.vb: Aggregate(Of GatewayIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<GatewayIPAddressInformation, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of GatewayIPAddressInformation, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<GatewayIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of GatewayIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: All(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.All(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Any(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Any(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: Any(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: AsEnumerable(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))\n  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Concat(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Concat(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  name.vb: Append(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  nameWithType.vb: Enumerable.Append(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  name.vb: Prepend(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  nameWithType.vb: Enumerable.Prepend(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  name.vb: Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  nameWithType.vb: Enumerable.Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation, IEqualityComparer<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation, IEqualityComparer(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation, IEqualityComparer<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation, IEqualityComparer(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Count(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Count(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: Count(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: DefaultIfEmpty(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  name.vb: DefaultIfEmpty(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<GatewayIPAddressInformation>(GatewayIPAddressInformation)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Distinct(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Distinct(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<GatewayIPAddressInformation>(IEqualityComparer<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Distinct(Of GatewayIPAddressInformation)(IEqualityComparer(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<GatewayIPAddressInformation>(IEqualityComparer<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Distinct(Of GatewayIPAddressInformation)(IEqualityComparer(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<GatewayIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)\n  name.vb: ElementAt(Of GatewayIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<GatewayIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of GatewayIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<GatewayIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)\n  name.vb: ElementAtOrDefault(Of GatewayIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<GatewayIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of GatewayIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: First(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.First(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: First(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.First(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: FirstOrDefault(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: FirstOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<GatewayIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<GatewayIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), TResult))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<GatewayIPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<GatewayIPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult))\n  name.vb: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Last(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Last(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: Last(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: LastOrDefault(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: LastOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: LongCount(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.LongCount(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: LongCount(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Max(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))\n  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult))\n  name.vb: Max(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<GatewayIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of GatewayIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Min(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))\n  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult))\n  name.vb: Min(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<GatewayIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of GatewayIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))\n  name.vb: OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))\n  name.vb: OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Reverse(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Reverse(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult))\n  name.vb: Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<GatewayIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of GatewayIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, TResult))\n  name.vb: Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<GatewayIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of GatewayIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<GatewayIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of GatewayIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<GatewayIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of GatewayIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: Single(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.Single(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: Single(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: SingleOrDefault(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: SingleOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<GatewayIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)\n  name.vb: Skip(Of GatewayIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<GatewayIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of GatewayIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))\n  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<GatewayIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)\n  name.vb: Take(Of GatewayIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<GatewayIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Take(Of GatewayIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: ToArray(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.ToArray(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))\n  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement))\n  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<GatewayIPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.GatewayIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()\n  name.vb: ToList(Of GatewayIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<GatewayIPAddressInformation>()\n  nameWithType.vb: Enumerable.ToList(Of GatewayIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))\n  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<GatewayIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of GatewayIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement))\n  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<GatewayIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<GatewayIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))\n  name.vb: Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))\n  name.vb: Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<GatewayIPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of GatewayIPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<GatewayIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<GatewayIPAddressInformation, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult))\n  name.vb: Zip(Of GatewayIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of GatewayIPAddressInformation, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<GatewayIPAddressInformation, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of GatewayIPAddressInformation, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<GatewayIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<GatewayIPAddressInformation, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of GatewayIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of GatewayIPAddressInformation, TSecond, TResult))\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection`1\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Count\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Count\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Count\n  nameWithType: ICollection<GatewayIPAddressInformation>.Count\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.IsReadOnly\n  nameWithType: ICollection<GatewayIPAddressInformation>.IsReadOnly\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: GatewayIPAddressInformation\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  commentId: T:System.Net.NetworkInformation.GatewayIPAddressInformation\n  nameWithType: GatewayIPAddressInformation\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(GatewayIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  nameWithType: ICollection<GatewayIPAddressInformation>.Add(GatewayIPAddressInformation)\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Add(GatewayIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Clear\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Clear\n  nameWithType: ICollection<GatewayIPAddressInformation>.Clear()\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Clear()\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(GatewayIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  nameWithType: ICollection<GatewayIPAddressInformation>.Contains(GatewayIPAddressInformation)\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Contains(GatewayIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(GatewayIPAddressInformation[], Int32)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation(), System.Int32)\n  name.vb: CopyTo(GatewayIPAddressInformation(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)\n  nameWithType: ICollection<GatewayIPAddressInformation>.CopyTo(GatewayIPAddressInformation[], Int32)\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).CopyTo(GatewayIPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformation[]\n  name: GatewayIPAddressInformation[]\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformation[]\n  fullname.vb: System.Net.NetworkInformation.GatewayIPAddressInformation()\n  name.vb: GatewayIPAddressInformation()\n  spec.csharp:\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: ()\n    fullName: ()\n  nameWithType: GatewayIPAddressInformation[]\n  nameWithType.vb: GatewayIPAddressInformation()\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation).GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.GetEnumerator\n  nameWithType: IEnumerable<GatewayIPAddressInformation>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of GatewayIPAddressInformation).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<GatewayIPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.GatewayIPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Net.NetworkInformation.GatewayIPAddressInformation)\n  name.vb: IEnumerator(Of GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  nameWithType: IEnumerator<GatewayIPAddressInformation>\n  nameWithType.vb: IEnumerator(Of GatewayIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator`1\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(GatewayIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation\n    name: GatewayIPAddressInformation\n    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)\n  nameWithType: ICollection<GatewayIPAddressInformation>.Remove(GatewayIPAddressInformation)\n  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Remove(GatewayIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}