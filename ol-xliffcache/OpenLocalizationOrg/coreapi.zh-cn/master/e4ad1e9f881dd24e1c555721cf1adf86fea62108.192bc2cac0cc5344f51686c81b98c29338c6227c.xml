{"nodes":[{"pos":[717,733],"content":"CookieCollection","needQuote":true,"nodes":[{"content":"CookieCollection","pos":[0,16]}]},{"pos":[2871,2889],"content":"CookieCollection()","needQuote":true,"nodes":[{"content":"CookieCollection()","pos":[0,18]}]},{"pos":[4126,4131],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[5700,5712],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[7062,7108],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[7109,7115],"source":" </p>\\n"},{"pos":[7943,7969],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[9305,9325],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[10542,10553],"content":"Add(Cookie)","needQuote":true,"nodes":[{"content":"Add(Cookie)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;cookie&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[11657,11705],"source":"\\n<p>\\n<em>cookie</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[11706,11712],"source":" </p>\\n"},{"pos":[12329,12350],"content":"Add(CookieCollection)","needQuote":true,"nodes":[{"content":"Add(CookieCollection)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;cookies&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[13371,13420],"source":"\\n<p>\\n<em>cookies</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13421,13427],"source":" </p>\\n"},{"pos":[13997,14012],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[15569,15601],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"pos":[16724,16734],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[16877,16883],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17057,17068],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[17281,17292],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[17491,17501],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17596,17604],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17673,17674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17701,17702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17772,17780],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17849,17850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17877,17878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18061,18075],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[18194,18200],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18267,18268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18318,18324],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18384,18385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18468,18474],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18541,18542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18592,18598],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18658,18659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18873,18895],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19043,19049],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19116,19117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19167,19173],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19234,19235]},{"pos":[19290,19296],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19356,19357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19454,19460],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19527,19528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19578,19584],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19645,19646]},{"pos":[19701,19707],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19767,19768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20013,20044],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[20210,20225],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20301,20302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20352,20358],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20419,20420]},{"pos":[20475,20481],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20541,20542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20648,20663],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20739,20740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20790,20796],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20857,20858]},{"pos":[20913,20919],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20979,20980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21210,21223],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[21324,21335],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[21407,21408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21435,21436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21509,21520],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[21592,21593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21620,21621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21796,21805],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[21898,21905],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21973,21974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22001,22002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22071,22078],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22146,22147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22174,22175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22350,22367],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[22476,22491],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22567,22568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22595,22596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22673,22688],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22764,22765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22792,22793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23088,23101],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[23218,23229],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[23288,23289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23316,23317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23398,23409],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[23468,23469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23496,23497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23852,23864],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[23997,24007],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[24074,24075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24102,24103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24192,24202],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[24269,24270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24297,24298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24639,24654],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[24858,24871],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[24933,24934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24961,24962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25040,25056],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[25121,25122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25149,25150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25528,25545],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[25757,25772],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[25836,25837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25864,25865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25945,25963],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[26030,26031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26058,26059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26294,26300],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26419,26437],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[26638,26662],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[26841,26852],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[26911,26912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26979,26990],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[27067,27068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27181,27192],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[27251,27252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27319,27330],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[27407,27408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27636,27645],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[27851,27874],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[28069,28079],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[28146,28147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28214,28225],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[28302,28303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28424,28434],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[28501,28502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28569,28580],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[28657,28658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28911,28929],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[29151,29177],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[29484,29497],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[29559,29560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29627,29638],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[29715,29716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29826,29842],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[29907,29908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29975,29986],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[30063,30064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30353,30363],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[30563,30591],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[30906,30921],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[30985,30986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31053,31064],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[31141,31142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31254,31272],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[31339,31340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31407,31418],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[31495,31496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31758,31769],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[31962,31967],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[32168,32173],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32315,32321],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32474,32480],"content":"Cookie","needQuote":true,"nodes":[{"content":"Cookie","pos":[0,6]}]},{"pos":[32689,32703],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[32933,32940],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33138,33146],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[33375,33391],"content":"CookieCollection","needQuote":true,"nodes":[{"content":"CookieCollection","pos":[0,16]}]},{"pos":[33629,33644],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[33783,33796],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[33866,33867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33894,33895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33987,34000],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[34070,34071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34098,34099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34315,34326],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[34584,34604],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[34782,34788],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[34851,34852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34901,34906],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[34945,34946]},{"pos":[35000,35005],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35064,35065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35177,35183],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[35246,35247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35296,35301],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[35340,35341]},{"pos":[35395,35400],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35459,35460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35671,35676],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[35816,35837],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Net.CookieCollection\n  commentId: T:System.Net.CookieCollection\n  id: CookieCollection\n  parent: System.Net\n  children:\n  - System.Net.CookieCollection.#ctor\n  - System.Net.CookieCollection.Add(System.Net.Cookie)\n  - System.Net.CookieCollection.Add(System.Net.CookieCollection)\n  - System.Net.CookieCollection.Count\n  - System.Net.CookieCollection.GetEnumerator\n  - System.Net.CookieCollection.Item(System.String)\n  - System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized\n  - System.Net.CookieCollection.System#Collections#ICollection#SyncRoot\n  langs:\n  - csharp\n  - vb\n  name: CookieCollection\n  fullName: System.Net.CookieCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CookieCollection\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 45\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Provides a collection container for instances of the <xref href=\\\"System.Net.Cookie\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: 'public class CookieCollection : ICollection, IEnumerable'\n    content.vb: >-\n      Public Class CookieCollection\n          Implements ICollection, IEnumerable\n  seealso:\n  - type: System.Net.Cookie\n    commentId: T:System.Net.Cookie\n  - type: System.Net.CookieCollection\n    commentId: T:System.Net.CookieCollection\n  - type: System.Net.CookieContainer\n    commentId: T:System.Net.CookieContainer\n  - type: System.Net.CookieException\n    commentId: T:System.Net.CookieException\n  - type: System.Collections.ICollection\n    commentId: T:System.Collections.ICollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CookieCollection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Net.CookieCollection.#ctor\n  commentId: M:System.Net.CookieCollection.#ctor\n  id: '#ctor'\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: CookieCollection()\n  fullName: System.Net.CookieCollection.CookieCollection()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 47\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public CookieCollection()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Net.Cookie\n    commentId: T:System.Net.Cookie\n  - type: System.Net.CookieCollection\n    commentId: T:System.Net.CookieCollection\n  - type: System.Net.CookieContainer\n    commentId: T:System.Net.CookieContainer\n  - type: System.Net.CookieException\n    commentId: T:System.Net.CookieException\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CookieCollection.CookieCollection()\n- uid: System.Net.CookieCollection.Count\n  commentId: P:System.Net.CookieCollection.Count\n  id: Count\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Net.CookieCollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 48\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Gets the number of cookies contained in a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of cookies contained in a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Net.Cookie\n    commentId: T:System.Net.Cookie\n  - type: System.Net.CookieCollection\n    commentId: T:System.Net.CookieCollection\n  - type: System.Net.CookieContainer\n    commentId: T:System.Net.CookieContainer\n  - type: System.Net.CookieException\n    commentId: T:System.Net.CookieException\n  implements:\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CookieCollection.Count\n- uid: System.Net.CookieCollection.Item(System.String)\n  commentId: P:System.Net.CookieCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[String]\n  fullName: System.Net.CookieCollection.Item[System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 49\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Net.Cookie\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with a specific name from a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public Cookie this[string name] { get; }\n    content.vb: Public ReadOnly Property Item(name As String) As Cookie\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the <xref href=\\\"System.Net.Cookie\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be found. </p>\\n\"\n    return:\n      type: System.Net.Cookie\n      description: \"\\n<p>The <xref href=\\\"System.Net.Cookie\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with a specific name from a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Net.CookieCollection\n    commentId: T:System.Net.CookieCollection\n  - type: System.Net.CookieContainer\n    commentId: T:System.Net.CookieContainer\n  - type: System.Net.CookieException\n    commentId: T:System.Net.CookieException\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Net.CookieCollection.Item(System.String)\n  name.vb: Item(String)\n  nameWithType: CookieCollection.Item[String]\n  nameWithType.vb: CookieCollection.Item(String)\n- uid: System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Net.CookieCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 50\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: CookieCollection.ICollection.IsSynchronized\n  nameWithType.vb: CookieCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Net.CookieCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Net.CookieCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Net.CookieCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 51\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: CookieCollection.ICollection.SyncRoot\n  nameWithType.vb: CookieCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Net.CookieCollection.Add(System.Net.Cookie)\n  commentId: M:System.Net.CookieCollection.Add(System.Net.Cookie)\n  id: Add(System.Net.Cookie)\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(Cookie)\n  fullName: System.Net.CookieCollection.Add(System.Net.Cookie)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 52\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Adds a <xref href=\\\"System.Net.Cookie\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Add(Cookie cookie)\n    content.vb: Public Sub Add(cookie As Cookie)\n    parameters:\n    - id: cookie\n      type: System.Net.Cookie\n      description: \"\\n<p>The <xref href=\\\"System.Net.Cookie\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be added to a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>cookie</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Net.CookieCollection\n    commentId: T:System.Net.CookieCollection\n  - type: System.Net.CookieContainer\n    commentId: T:System.Net.CookieContainer\n  - type: System.Net.CookieException\n    commentId: T:System.Net.CookieException\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CookieCollection.Add(Cookie)\n- uid: System.Net.CookieCollection.Add(System.Net.CookieCollection)\n  commentId: M:System.Net.CookieCollection.Add(System.Net.CookieCollection)\n  id: Add(System.Net.CookieCollection)\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(CookieCollection)\n  fullName: System.Net.CookieCollection.Add(System.Net.CookieCollection)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 53\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Adds the contents of a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the current instance.</p>\\n\"\n  syntax:\n    content: public void Add(CookieCollection cookies)\n    content.vb: Public Sub Add(cookies As CookieCollection)\n    parameters:\n    - id: cookies\n      type: System.Net.CookieCollection\n      description: \"\\n<p>The <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be added. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>cookies</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Net.CookieCollection\n    commentId: T:System.Net.CookieCollection\n  - type: System.Net.CookieContainer\n    commentId: T:System.Net.CookieContainer\n  - type: System.Net.CookieException\n    commentId: T:System.Net.CookieException\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CookieCollection.Add(CookieCollection)\n- uid: System.Net.CookieCollection.GetEnumerator\n  commentId: M:System.Net.CookieCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Net.CookieCollection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 54\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Gets an enumerator that can iterate through a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public IEnumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As IEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An instance of an implementation of an <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface that can iterate through a <xref href=\\\"System.Net.CookieCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CookieCollection.GetEnumerator()\n- uid: System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Net.CookieCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Net.CookieCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 55\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n    - id: index\n      type: System.Int32\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: CookieCollection.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: CookieCollection.System.Collections.ICollection.CopyTo(Array, Int32)\nreferences:\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Net.Cookie\n  parent: System.Net\n  isExternal: false\n  name: Cookie\n  fullName: System.Net.Cookie\n  commentId: T:System.Net.Cookie\n  nameWithType: Cookie\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n- uid: System.Net.CookieCollection\n  parent: System.Net\n  isExternal: false\n  name: CookieCollection\n  fullName: System.Net.CookieCollection\n  commentId: T:System.Net.CookieCollection\n  nameWithType: CookieCollection\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  nameWithType: ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  commentId: T:System.Array\n  nameWithType: Array\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}