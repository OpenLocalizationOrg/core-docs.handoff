{"nodes":[{"pos":[546,557],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[2280,2291],"content":"Nullable(T)","needQuote":true,"nodes":[{"content":"Nullable(T)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;A value type.&lt;/p&gt;\\n","pos":[3025,3049],"source":"\\n<p>A value type.</p>\\n"},{"pos":[3398,3406],"content":"HasValue","needQuote":true,"nodes":[{"content":"HasValue","pos":[0,8]}]},{"pos":[4822,4827],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[6568,6582],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object.&lt;/p&gt;\\n","pos":[7315,7336],"source":"\\n<p>An object.</p>\\n"},{"pos":[9934,9947],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11504,11523],"content":"GetValueOrDefault()","needQuote":true,"nodes":[{"content":"GetValueOrDefault()","pos":[0,19]}]},{"pos":[13404,13424],"content":"GetValueOrDefault(T)","needQuote":true,"nodes":[{"content":"GetValueOrDefault(T)","pos":[0,20]}]},{"pos":[15310,15336],"content":"Explicit(Nullable<T> to T)","needQuote":true,"nodes":[{"content":"Explicit(Nullable&lt;T&gt; to T)","pos":[0,26],"source":"Explicit(Nullable<T> to T)"}]},{"content":"\\n&lt;p&gt;A nullable value.&lt;/p&gt;\\n","pos":[16179,16207],"source":"\\n<p>A nullable value.</p>\\n"},{"pos":[16967,16993],"content":"Implicit(T to Nullable<T>)","needQuote":true,"nodes":[{"content":"Implicit(T to Nullable&lt;T&gt;)","pos":[0,26],"source":"Implicit(T to Nullable<T>)"}]},{"content":"\\n&lt;p&gt;A value type.&lt;/p&gt;\\n","pos":[17808,17832],"source":"\\n<p>A value type.</p>\\n"},{"pos":[18612,18622],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20046,20052],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20225,20247],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[20395,20401],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20468,20469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20519,20525],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20586,20587]},{"pos":[20642,20648],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20708,20709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20806,20812],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20879,20880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20930,20936],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20997,20998]},{"pos":[21053,21059],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21119,21120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21365,21396],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[21562,21577],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21653,21654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21704,21710],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21771,21772]},{"pos":[21827,21833],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21893,21894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22000,22015],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22091,22092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22142,22148],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22209,22210]},{"pos":[22265,22271],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22331,22332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22558,22567],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[22660,22667],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22735,22736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22763,22764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22833,22840],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22908,22909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22936,22937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23090,23096],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23212,23213],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23302,23303],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23403,23410],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23592,23606],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23731,23737],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23786,23787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23837,23843],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23903,23904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23990,23996],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24045,24046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24096,24102],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24162,24163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24344,24353],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[24532,24545],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[24652,24663],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24717,24718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24745,24746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24822,24833],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24887,24888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24915,24916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25082,25087],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25233,25244],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[25391,25399],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[25440,25441],"content":"<","needQuote":true,"nodes":[]},{"pos":[25468,25469],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25566,25574],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[25616,25619]},{"pos":[25653,25654],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25681,25682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25882,25892],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[25993,26001],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26052,26053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26080,26081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26154,26162],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26213,26214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26241,26242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26403,26409],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26573,26598],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Nullable`1\n  commentId: T:System.Nullable`1\n  id: Nullable`1\n  parent: System\n  children:\n  - System.Nullable`1.#ctor(`0)\n  - System.Nullable`1.Equals(System.Object)\n  - System.Nullable`1.GetHashCode\n  - System.Nullable`1.GetValueOrDefault\n  - System.Nullable`1.GetValueOrDefault(`0)\n  - System.Nullable`1.HasValue\n  - System.Nullable`1.op_Explicit(System.Nullable{`0})~`0\n  - System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}\n  - System.Nullable`1.ToString\n  - System.Nullable`1.Value\n  langs:\n  - csharp\n  - vb\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Nullable\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a value type that can be assigned <strong>null</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [NonVersionable]\n\n      public struct Nullable<T>\n          where T : struct\n    content.vb: >-\n      <Serializable>\n\n      <NonVersionable>\n\n      Public Structure Nullable(Of T As Structure)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The underlying value type of the <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> generic type.</p>\\n\"\n  seealso:\n  - type: System.Nullable\n    commentId: T:System.Nullable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  fullName.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Nullable`1.#ctor(`0)\n  commentId: M:System.Nullable`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: Nullable(T)\n  fullName: System.Nullable<T>.Nullable(T)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to the specified value. </p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public Nullable(T value)\n    content.vb: >-\n      <NonVersionable>\n\n      Public Sub New(value As T)\n    parameters:\n    - id: value\n      type: '{T}'\n      description: \"\\n<p>A value type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Nullable(Of T).Nullable(T)\n  nameWithType: Nullable<T>.Nullable(T)\n  nameWithType.vb: Nullable(Of T).Nullable(T)\n- uid: System.Nullable`1.HasValue\n  commentId: P:System.Nullable`1.HasValue\n  id: HasValue\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: HasValue\n  fullName: System.Nullable<T>.HasValue\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: HasValue\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a value indicating whether the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has a valid value of its underlying type. </p>\\n\"\n  syntax:\n    content: >-\n      public bool HasValue\n\n      {\n          [NonVersionable]\n          get;\n      }\n    content.vb: Public ReadOnly Property HasValue As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has a value; <strong>false</strong> if the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has no value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Nullable(Of T).HasValue\n  nameWithType: Nullable<T>.HasValue\n  nameWithType.vb: Nullable(Of T).HasValue\n- uid: System.Nullable`1.Value\n  commentId: P:System.Nullable`1.Value\n  id: Value\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Nullable<T>.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object if it has been assigned a valid underlying value.</p>\\n\"\n  syntax:\n    content: public T Value { get; }\n    content.vb: Public ReadOnly Property Value As T\n    parameters: []\n    return:\n      type: '{T}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>. An exception is thrown if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Nullable(Of T).Value\n  nameWithType: Nullable<T>.Value\n  nameWithType.vb: Nullable(Of T).Value\n- uid: System.Nullable`1.Equals(System.Object)\n  commentId: M:System.Nullable`1.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Nullable<T>.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 62\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object other)\n    content.vb: Public Overrides Function Equals(other As Object) As Boolean\n    parameters:\n    - id: other\n      type: System.Object\n      description: \"\\n<p>An object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <em>other</em> parameter is equal to the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>. </p>\\n<p>This table describes how equality is defined for the compared values: </p>\\n<p>Return Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>\\n<strong>true</strong>\\n</p>\\n</td><td>\\n<p>The <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>, and the <em>other</em> parameter is <strong>null</strong>. That is, two null values are equal by definition.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, and the value returned by the <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is equal to the <em>other</em> parameter.</p>\\n</td></tr><tr><td>\\n<p>\\n<strong>false</strong>\\n</p>\\n</td><td>\\n<p>The <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is <strong>true</strong>, and the <em>other</em> parameter is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is <strong>false</strong>, and the <em>other</em> parameter is not <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is <strong>true</strong>, and the value returned by the <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not equal to the <em>other</em> parameter.</p>\\n</td></tr></tbody></table>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Nullable(Of T).Equals(System.Object)\n  nameWithType: Nullable<T>.Equals(Object)\n  nameWithType.vb: Nullable(Of T).Equals(Object)\n- uid: System.Nullable`1.GetHashCode\n  commentId: M:System.Nullable`1.GetHashCode\n  id: GetHashCode\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Nullable<T>.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 68\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Retrieves the hash code of the object returned by the <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code of the object returned by the <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, or zero if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Nullable(Of T).GetHashCode()\n  nameWithType: Nullable<T>.GetHashCode()\n  nameWithType.vb: Nullable(Of T).GetHashCode()\n- uid: System.Nullable`1.GetValueOrDefault\n  commentId: M:System.Nullable`1.GetValueOrDefault\n  id: GetValueOrDefault\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: GetValueOrDefault()\n  fullName: System.Nullable<T>.GetValueOrDefault()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValueOrDefault\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Retrieves the value of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object, or the object's default value.</p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public T GetValueOrDefault()\n    content.vb: >-\n      <NonVersionable>\n\n      Public Function GetValueOrDefault As T\n    return:\n      type: '{T}'\n      description: \"\\n<p>The value of the <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property if the  <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>; otherwise, the default value of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. The type of the default value is the type argument of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object, and the value of the default value consists solely of binary zeroes.</p>\\n\"\n  seealso:\n  - type: System.Nullable`1.GetValueOrDefault(`0)\n    commentId: M:System.Nullable`1.GetValueOrDefault(`0)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Nullable(Of T).GetValueOrDefault()\n  nameWithType: Nullable<T>.GetValueOrDefault()\n  nameWithType.vb: Nullable(Of T).GetValueOrDefault()\n- uid: System.Nullable`1.GetValueOrDefault(`0)\n  commentId: M:System.Nullable`1.GetValueOrDefault(`0)\n  id: GetValueOrDefault(`0)\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: GetValueOrDefault(T)\n  fullName: System.Nullable<T>.GetValueOrDefault(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValueOrDefault\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 57\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Retrieves the value of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object, or the specified default value.</p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public T GetValueOrDefault(T defaultValue)\n    content.vb: >-\n      <NonVersionable>\n\n      Public Function GetValueOrDefault(defaultValue As T) As T\n    parameters:\n    - id: defaultValue\n      type: '{T}'\n      description: \"\\n<p>A value to return if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n    return:\n      type: '{T}'\n      description: \"\\n<p>The value of the <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>; otherwise, the <em>defaultValue</em> parameter.</p>\\n\"\n  seealso:\n  - type: System.Nullable`1.GetValueOrDefault\n    commentId: M:System.Nullable`1.GetValueOrDefault\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Nullable(Of T).GetValueOrDefault(T)\n  nameWithType: Nullable<T>.GetValueOrDefault(T)\n  nameWithType.vb: Nullable(Of T).GetValueOrDefault(T)\n- uid: System.Nullable`1.op_Explicit(System.Nullable{`0})~`0\n  commentId: M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0\n  id: op_Explicit(System.Nullable{`0})~`0\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: Explicit(Nullable<T> to T)\n  fullName: System.Nullable<T>.Explicit(System.Nullable<T> to T)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Explicit\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 81\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Defines an explicit conversion of a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to its underlying value. </p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public static explicit operator T(Nullable<T> value)\n    content.vb: >-\n      <NonVersionable>\n\n      Public Shared Narrowing Operator CType(value As Nullable(Of T)) As T\n    parameters:\n    - id: value\n      type: System.Nullable`1\n      description: \"\\n<p>A nullable value.</p>\\n\"\n    return:\n      type: '{T}'\n      description: \"\\n<p>The value of the <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for the <em>value</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Nullable(Of T).Narrowing(System.Nullable(Of T) to T)\n  name.vb: Narrowing(Nullable(Of T) to T)\n  nameWithType: Nullable<T>.Explicit(Nullable<T> to T)\n  nameWithType.vb: Nullable(Of T).Narrowing(Nullable(Of T) to T)\n- uid: System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}\n  commentId: M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}\n  id: op_Implicit(`0)~System.Nullable{`0}\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: Implicit(T to Nullable<T>)\n  fullName: System.Nullable<T>.Implicit(T to System.Nullable<T>)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Implicit\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 76\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object initialized to a specified value. </p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public static implicit operator Nullable<T>(T value)\n    content.vb: >-\n      <NonVersionable>\n\n      Public Shared Widening Operator CType(value As T) As Nullable(Of T)\n    parameters:\n    - id: value\n      type: '{T}'\n      description: \"\\n<p>A value type.</p>\\n\"\n    return:\n      type: System.Nullable`1\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object whose <xref href=\\\"System.Nullable`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is initialized with the <em>value</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Nullable(Of T).Widening(T to System.Nullable(Of T))\n  name.vb: Widening(T to Nullable(Of T))\n  nameWithType: Nullable<T>.Implicit(T to Nullable<T>)\n  nameWithType.vb: Nullable(Of T).Widening(T to Nullable(Of T))\n- uid: System.Nullable`1.ToString\n  commentId: M:System.Nullable`1.ToString\n  id: ToString\n  parent: System.Nullable`1\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Nullable<T>.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Nullable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Nullable.cs\n    startLine: 72\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the text representation of the value of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The text representation of the value of the current <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, or an empty string (\\\"\\\") if the <xref href=\\\"System.Nullable`1.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Nullable(Of T).ToString()\n  nameWithType: Nullable<T>.ToString()\n  nameWithType.vb: Nullable(Of T).ToString()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n  commentId: T:System.Nullable`1\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}