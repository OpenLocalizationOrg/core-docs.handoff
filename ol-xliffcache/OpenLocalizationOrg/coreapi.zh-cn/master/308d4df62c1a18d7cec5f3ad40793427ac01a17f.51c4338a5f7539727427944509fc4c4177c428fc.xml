{"nodes":[{"pos":[284,303],"content":"XDocumentExtensions","needQuote":true,"nodes":[{"content":"XDocumentExtensions","pos":[0,19]}]},{"pos":[1622,1650],"content":"ToXPathNavigable(Linq.XNode)","needQuote":true,"nodes":[{"content":"ToXPathNavigable(Linq.XNode)","pos":[0,28]}]},{"pos":[2718,2734],"content":"System.Xml.XPath","needQuote":true,"nodes":[{"content":"System.Xml.XPath","pos":[0,16]}]},{"pos":[2892,2898],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3067,3077],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[3206,3214],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[3317,3318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3365,3366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3456,3464],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[3567,3568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3615,3616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3798,3812],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3969,3975],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[4074,4075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4145,4151],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4236,4237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4340,4346],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[4445,4446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4516,4522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4607,4608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4818,4840],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[5034,5040],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5139,5140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5210,5216],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[5302,5303]},{"pos":[5381,5387],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5472,5473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5590,5596],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5695,5696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5766,5772],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[5858,5859]},{"pos":[5937,5943],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6028,6029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6257,6288],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[6509,6524],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[6641,6642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6712,6718],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6804,6805]},{"pos":[6883,6889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6974,6975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7101,7116],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7233,7234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7304,7310],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7396,7397]},{"pos":[7475,7481],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7566,7567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7729,7742],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7880,7891],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8000,8001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8048,8049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8142,8153],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8262,8263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8310,8311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8465,8474],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[8600,8607],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8708,8709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8756,8757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8846,8853],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8954,8955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9002,9003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9173,9190],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[9340,9355],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9472,9473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9520,9521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9618,9633],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9750,9751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9798,9799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9900,9906],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10069,10074],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[10274,10289],"content":"IXPathNavigable","needQuote":true,"nodes":[{"content":"IXPathNavigable","pos":[0,15]}]},{"pos":[10449,10464],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]}],"content":"items:\n- uid: System.Xml.XPath.XDocumentExtensions\n  commentId: T:System.Xml.XPath.XDocumentExtensions\n  id: XDocumentExtensions\n  parent: System.Xml.XPath\n  children:\n  - System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  langs:\n  - csharp\n  - vb\n  name: XDocumentExtensions\n  nameWithType: XDocumentExtensions\n  fullName: System.Xml.XPath.XDocumentExtensions\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XDocumentExtensions\n    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.Manual.cs\n    startLine: 11\n  assemblies:\n  - System.Xml.XPath.XDocument\n  namespace: System.Xml.XPath\n  syntax:\n    content: public class XDocumentExtensions\n    content.vb: Public Class XDocumentExtensions\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  commentId: M:System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  id: ToXPathNavigable(System.Xml.Linq.XNode)\n  isExtensionMethod: true\n  parent: System.Xml.XPath.XDocumentExtensions\n  langs:\n  - csharp\n  - vb\n  name: ToXPathNavigable(Linq.XNode)\n  nameWithType: XDocumentExtensions.ToXPathNavigable(Linq.XNode)\n  fullName: System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToXPathNavigable\n    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.Manual.cs\n    startLine: 13\n  assemblies:\n  - System.Xml.XPath.XDocument\n  namespace: System.Xml.XPath\n  syntax:\n    content: public static IXPathNavigable ToXPathNavigable(this Linq.XNode node)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function ToXPathNavigable(node As Linq.XNode) As IXPathNavigable\n    parameters:\n    - id: node\n      type: System.Xml.Linq.XNode\n    return:\n      type: System.Xml.XPath.IXPathNavigable\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\nreferences:\n- uid: System.Xml.XPath\n  commentId: N:System.Xml.XPath\n  isExternal: false\n  name: System.Xml.XPath\n  nameWithType: System.Xml.XPath\n  fullName: System.Xml.XPath\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Xml.Linq.XNode\n  commentId: T:System.Xml.Linq.XNode\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNode\n  nameWithType: XNode\n  fullName: System.Xml.Linq.XNode\n- uid: System.Xml.XPath.IXPathNavigable\n  commentId: T:System.Xml.XPath.IXPathNavigable\n  parent: System.Xml.XPath\n  isExternal: false\n  name: IXPathNavigable\n  nameWithType: IXPathNavigable\n  fullName: System.Xml.XPath.IXPathNavigable\n- uid: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  nameWithType: System.Xml.Linq\n  fullName: System.Xml.Linq\n"}