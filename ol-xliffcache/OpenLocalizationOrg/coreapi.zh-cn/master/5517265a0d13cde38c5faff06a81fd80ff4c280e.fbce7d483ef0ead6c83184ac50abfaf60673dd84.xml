{"nodes":[{"pos":[360,369],"content":"Activator","needQuote":true,"nodes":[{"content":"Activator","pos":[0,9]}]},{"pos":[1921,1941],"content":"CreateInstance(Type)","needQuote":true,"nodes":[{"content":"CreateInstance(Type)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The type of object to create.","pos":[2626,2660],"source":"\\n<p>The type of object to create."},{"content":"&lt;/p&gt;\\n","pos":[2661,2667],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the newly created object.&lt;/p&gt;\\n","pos":[2727,2778],"source":"\\n<p>A reference to the newly created object.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[2897,2943],"source":"\\n<p>\\n<em>type</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[2944,2950],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The constructor being called throws an exception.","pos":[4333,4387],"source":"\\n<p>The constructor being called throws an exception."},{"content":"&lt;/p&gt;\\n","pos":[4388,4394],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[4948,5058],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[5059,5065],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.","pos":[6025,6165],"source":"\\n<p>\\n<em>type</em> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered."},{"content":"&lt;/p&gt;\\n","pos":[6166,6172],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is not a valid type.","pos":[6269,6310],"source":"\\n<p>\\n<em>type</em> is not a valid type."},{"content":"&lt;/p&gt;\\n","pos":[6311,6317],"source":" </p>\\n"},{"pos":[7077,7106],"content":"CreateInstance(Type, Boolean)","needQuote":true,"nodes":[{"content":"CreateInstance(Type, Boolean)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The type of object to create.","pos":[7963,7997],"source":"\\n<p>The type of object to create."},{"content":"&lt;/p&gt;\\n","pos":[7998,8004],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a public or nonpublic default constructor can match; &lt;strong&gt;false&lt;/strong&gt; if only a public default constructor can match.","pos":[8073,8228],"source":"\\n<p>\\n<strong>true</strong> if a public or nonpublic default constructor can match; <strong>false</strong> if only a public default constructor can match."},{"content":"&lt;/p&gt;\\n","pos":[8229,8235],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the newly created object.&lt;/p&gt;\\n","pos":[8295,8346],"source":"\\n<p>A reference to the newly created object.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8465,8511],"source":"\\n<p>\\n<em>type</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8512,8518],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The constructor being called throws an exception.","pos":[9901,9955],"source":"\\n<p>The constructor being called throws an exception."},{"content":"&lt;/p&gt;\\n","pos":[9956,9962],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have permission to call this constructor.","pos":[10067,10133],"source":"\\n<p>The caller does not have permission to call this constructor."},{"content":"&lt;/p&gt;\\n","pos":[10134,10140],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[10245,10355],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[10356,10362],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;No matching public constructor was found.","pos":[10862,10908],"source":"\\n<p>No matching public constructor was found."},{"content":"&lt;/p&gt;\\n","pos":[10909,10915],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.","pos":[11050,11190],"source":"\\n<p>\\n<em>type</em> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered."},{"content":"&lt;/p&gt;\\n","pos":[11191,11197],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is not a valid type.","pos":[11294,11335],"source":"\\n<p>\\n<em>type</em> is not a valid type."},{"content":"&lt;/p&gt;\\n","pos":[11336,11342],"source":" </p>\\n"},{"pos":[12114,12144],"content":"CreateInstance(Type, Object[])","needQuote":true,"nodes":[{"content":"CreateInstance(Type, Object[])","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The type of object to create.","pos":[12924,12958],"source":"\\n<p>The type of object to create."},{"content":"&lt;/p&gt;\\n","pos":[12959,12965],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An array of arguments that match in number, order, and type the parameters of the constructor to invoke.","pos":[13030,13139],"source":"\\n<p>An array of arguments that match in number, order, and type the parameters of the constructor to invoke."},{"content":"If &lt;em&gt;args&lt;/em&gt; is an empty array or &lt;strong&gt;null&lt;/strong&gt;, the constructor that takes no parameters (the default constructor) is invoked.","pos":[13140,13279],"source":" If <em>args</em> is an empty array or <strong>null</strong>, the constructor that takes no parameters (the default constructor) is invoked."},{"content":"&lt;/p&gt;\\n","pos":[13280,13286],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the newly created object.&lt;/p&gt;\\n","pos":[13346,13397],"source":"\\n<p>A reference to the newly created object.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[13516,13562],"source":"\\n<p>\\n<em>type</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13563,13569],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The constructor being called throws an exception.","pos":[15062,15116],"source":"\\n<p>The constructor being called throws an exception."},{"content":"&lt;/p&gt;\\n","pos":[15117,15123],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[15677,15787],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[15788,15794],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.","pos":[16754,16894],"source":"\\n<p>\\n<em>type</em> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered."},{"content":"&lt;/p&gt;\\n","pos":[16895,16901],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is not a valid type.","pos":[16998,17039],"source":"\\n<p>\\n<em>type</em> is not a valid type."},{"content":"&lt;/p&gt;\\n","pos":[17040,17046],"source":" </p>\\n"},{"pos":[17920,17939],"content":"CreateInstance<T>()","needQuote":true,"nodes":[{"content":"CreateInstance&lt;T&gt;()","pos":[0,19],"source":"CreateInstance<T>()"}]},{"content":"\\n&lt;p&gt;The type to create.&lt;/p&gt;\\n","pos":[18727,18757],"source":"\\n<p>The type to create.</p>\\n"},{"content":"\\n&lt;p&gt;A reference to the newly created object.&lt;/p&gt;\\n","pos":[18809,18860],"source":"\\n<p>A reference to the newly created object.</p>\\n"},{"pos":[19672,19678],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19809,19815],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19975,19985],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20080,20088],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20157,20158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20185,20186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20256,20264],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20333,20334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20361,20362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20545,20559],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20678,20684],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20751,20752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20802,20808],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20868,20869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20952,20958],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21025,21026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21076,21082],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21142,21143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21357,21379],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21527,21533],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21600,21601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21651,21657],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21718,21719]},{"pos":[21774,21780],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21840,21841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21938,21944],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22011,22012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22062,22068],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22129,22130]},{"pos":[22185,22191],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22251,22252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22497,22528],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22694,22709],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22785,22786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22836,22842],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22903,22904]},{"pos":[22959,22965],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23025,23026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23132,23147],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23223,23224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23274,23280],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23341,23342]},{"pos":[23397,23403],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23463,23464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23694,23707],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[23808,23819],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23891,23892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23919,23920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23993,24004],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24076,24077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24104,24105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24280,24289],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[24382,24389],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24457,24458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24485,24486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24555,24562],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24630,24631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24658,24659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24834,24851],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[24960,24975],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25051,25052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25079,25080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25157,25172],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25248,25249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25276,25277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25444,25448],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[25588,25595],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25708,25716],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[25844,25850],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[25911,25913]},{"pos":[25978,25984],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26044,26046],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[26154,26155],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26244,26245],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26342,26363],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[26564,26581],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[26774,26795],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[26998,27023],"content":"TargetInvocationException","needQuote":true,"nodes":[{"content":"TargetInvocationException","pos":[0,25]}]},{"pos":[27245,27266],"content":"MethodAccessException","needQuote":true,"nodes":[{"content":"MethodAccessException","pos":[0,21]}]},{"pos":[27471,27492],"content":"MemberAccessException","needQuote":true,"nodes":[{"content":"MemberAccessException","pos":[0,21]}]},{"pos":[27708,27733],"content":"InvalidComObjectException","needQuote":true,"nodes":[{"content":"InvalidComObjectException","pos":[0,25]}]},{"pos":[27982,28004],"content":"MissingMethodException","needQuote":true,"nodes":[{"content":"MissingMethodException","pos":[0,22]}]},{"pos":[28210,28222],"content":"COMException","needQuote":true,"nodes":[{"content":"COMException","pos":[0,12]}]},{"pos":[28444,28461],"content":"TypeLoadException","needQuote":true,"nodes":[{"content":"TypeLoadException","pos":[0,17]}]}],"content":"items:\n- uid: System.Activator\n  commentId: T:System.Activator\n  id: Activator\n  parent: System\n  children:\n  - System.Activator.CreateInstance(System.Type)\n  - System.Activator.CreateInstance(System.Type,System.Boolean)\n  - System.Activator.CreateInstance(System.Type,System.Object[])\n  - System.Activator.CreateInstance``1\n  langs:\n  - csharp\n  - vb\n  name: Activator\n  fullName: System.Activator\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Activator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Activator\n    path: src/mscorlib/src/System/Activator.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: >-\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_Activator))]\n\n      [ComVisible(true)]\n\n      public sealed class Activator : _Activator\n    content.vb: >-\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_Activator))>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class Activator\n          Implements _Activator\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Activator\n- uid: System.Activator.CreateInstance(System.Type)\n  commentId: M:System.Activator.CreateInstance(System.Type)\n  id: CreateInstance(System.Type)\n  parent: System.Activator\n  langs:\n  - csharp\n  - vb\n  name: CreateInstance(Type)\n  fullName: System.Activator.CreateInstance(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Activator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateInstance\n    path: src/mscorlib/src/System/Activator.cs\n    startLine: 130\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates an instance of the specified type using that type's default constructor.</p>\\n\"\n  syntax:\n    content: public static object CreateInstance(Type type)\n    content.vb: Public Shared Function CreateInstance(type As Type) As Object\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of object to create. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>A reference to the newly created object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>type</em> is not a <strong>RuntimeType</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> is an open generic type (that is, the <xref href=\\\"System.Type.ContainsGenericParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property returns <strong>true</strong>).</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>type</em> cannot be a <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>Creation of <xref href=\\\"System.TypedReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.ArgIterator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.RuntimeArgumentHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types, or arrays of those types, is not supported.</p>\\n<p>-or-</p>\\n<p>The assembly that contains <em>type</em> is a dynamic assembly that was created with <xref href=\\\"System.Reflection.Emit.AssemblyBuilderAccess.Save\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: \"\\n<p>The constructor being called throws an exception. </p>\\n\"\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.MemberAccessException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The caller does not have permission to call this constructor. </p>\\n\"\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  - type: System.Runtime.InteropServices.InvalidComObjectException\n    commentId: T:System.Runtime.InteropServices.InvalidComObjectException\n    description: \"\\n<p>The COM type was not obtained through <xref href=\\\"System.Type.GetTypeFromProgID\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Type.GetTypeFromCLSID\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.MissingMethodException\n    commentId: T:System.MissingMethodException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.MissingMemberException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>No matching public constructor was found. </p>\\n\"\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: \"\\n<p>\\n<em>type</em> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </p>\\n\"\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: \"\\n<p>\\n<em>type</em> is not a valid type. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Activator.CreateInstance(Type)\n- uid: System.Activator.CreateInstance(System.Type,System.Boolean)\n  commentId: M:System.Activator.CreateInstance(System.Type,System.Boolean)\n  id: CreateInstance(System.Type,System.Boolean)\n  parent: System.Activator\n  langs:\n  - csharp\n  - vb\n  name: CreateInstance(Type, Boolean)\n  fullName: System.Activator.CreateInstance(System.Type, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Activator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateInstance\n    path: src/mscorlib/src/System/Activator.cs\n    startLine: 178\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates an instance of the specified type using that type's default constructor.</p>\\n\"\n  syntax:\n    content: >-\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static object CreateInstance(Type type, bool nonPublic)\n    content.vb: >-\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function CreateInstance(type As Type, nonPublic As Boolean) As Object\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of object to create. </p>\\n\"\n    - id: nonPublic\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a public or nonpublic default constructor can match; <strong>false</strong> if only a public default constructor can match. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>A reference to the newly created object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>type</em> is not a <strong>RuntimeType</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> is an open generic type (that is, the <xref href=\\\"System.Type.ContainsGenericParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property returns <strong>true</strong>).</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>type</em> cannot be a <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>Creation of <xref href=\\\"System.TypedReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.ArgIterator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.RuntimeArgumentHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types, or arrays of those types, is not supported. </p>\\n<p>-or-</p>\\n<p>The assembly that contains <em>type</em> is a dynamic assembly that was created with <xref href=\\\"System.Reflection.Emit.AssemblyBuilderAccess.Save\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: \"\\n<p>The constructor being called throws an exception. </p>\\n\"\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: \"\\n<p>The caller does not have permission to call this constructor. </p>\\n\"\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  - type: System.Runtime.InteropServices.InvalidComObjectException\n    commentId: T:System.Runtime.InteropServices.InvalidComObjectException\n    description: \"\\n<p>The COM type was not obtained through <xref href=\\\"System.Type.GetTypeFromProgID\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Type.GetTypeFromCLSID\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.MissingMethodException\n    commentId: T:System.MissingMethodException\n    description: \"\\n<p>No matching public constructor was found. </p>\\n\"\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: \"\\n<p>\\n<em>type</em> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </p>\\n\"\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: \"\\n<p>\\n<em>type</em> is not a valid type. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Activator.CreateInstance(Type, Boolean)\n- uid: System.Activator.CreateInstance(System.Type,System.Object[])\n  commentId: M:System.Activator.CreateInstance(System.Type,System.Object[])\n  id: CreateInstance(System.Type,System.Object[])\n  parent: System.Activator\n  langs:\n  - csharp\n  - vb\n  name: CreateInstance(Type, Object[])\n  fullName: System.Activator.CreateInstance(System.Type, System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Activator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateInstance\n    path: src/mscorlib/src/System/Activator.cs\n    startLine: 108\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates an instance of the specified type using the constructor that best matches the specified parameters.</p>\\n\"\n  syntax:\n    content: public static object CreateInstance(Type type, params object[] args)\n    content.vb: Public Shared Function CreateInstance(type As Type, ParamArray args As Object()) As Object\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of object to create. </p>\\n\"\n    - id: args\n      type: System.Object[]\n      description: \"\\n<p>An array of arguments that match in number, order, and type the parameters of the constructor to invoke. If <em>args</em> is an empty array or <strong>null</strong>, the constructor that takes no parameters (the default constructor) is invoked. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>A reference to the newly created object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>type</em> is not a <strong>RuntimeType</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> is an open generic type (that is, the <xref href=\\\"System.Type.ContainsGenericParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property returns <strong>true</strong>).</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>type</em> cannot be a <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>Creation of <xref href=\\\"System.TypedReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.ArgIterator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.RuntimeArgumentHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types, or arrays of those types, is not supported. </p>\\n<p>-or-</p>\\n<p>The assembly that contains <em>type</em> is a dynamic assembly that was created with <xref href=\\\"System.Reflection.Emit.AssemblyBuilderAccess.Save\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>The constructor that best matches <em>args</em> has <strong>varargs</strong> arguments. </p>\\n\"\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: \"\\n<p>The constructor being called throws an exception. </p>\\n\"\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.MemberAccessException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The caller does not have permission to call this constructor. </p>\\n\"\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  - type: System.Runtime.InteropServices.InvalidComObjectException\n    commentId: T:System.Runtime.InteropServices.InvalidComObjectException\n    description: \"\\n<p>The COM type was not obtained through <xref href=\\\"System.Type.GetTypeFromProgID\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Type.GetTypeFromCLSID\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.MissingMethodException\n    commentId: T:System.MissingMethodException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.MissingMemberException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>No matching public constructor was found. </p>\\n\"\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: \"\\n<p>\\n<em>type</em> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered. </p>\\n\"\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: \"\\n<p>\\n<em>type</em> is not a valid type. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Activator.CreateInstance(System.Type, System.Object())\n  name.vb: CreateInstance(Type, Object())\n  nameWithType: Activator.CreateInstance(Type, Object[])\n  nameWithType.vb: Activator.CreateInstance(Type, Object())\n- uid: System.Activator.CreateInstance``1\n  commentId: M:System.Activator.CreateInstance``1\n  id: CreateInstance``1\n  parent: System.Activator\n  langs:\n  - csharp\n  - vb\n  name: CreateInstance<T>()\n  fullName: System.Activator.CreateInstance<T>()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Activator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateInstance\n    path: src/mscorlib/src/System/Activator.cs\n    startLine: 194\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</p>\\n\"\n  syntax:\n    content: >-\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static T CreateInstance<T>()\n    content.vb: >-\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function CreateInstance(Of T) As T\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type to create.</p>\\n\"\n    return:\n      type: '{T}'\n      description: \"\\n<p>A reference to the newly created object.</p>\\n\"\n  exceptions:\n  - type: System.MissingMethodException\n    commentId: T:System.MissingMethodException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.MissingMemberException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The type that is specified for <em>T</em> does not have a parameterless constructor. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Activator.CreateInstance(Of T)()\n  name.vb: CreateInstance(Of T)()\n  nameWithType: Activator.CreateInstance<T>()\n  nameWithType.vb: Activator.CreateInstance(Of T)()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.Reflection.TargetInvocationException\n  isExternal: false\n  name: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n  nameWithType: TargetInvocationException\n  commentId: T:System.Reflection.TargetInvocationException\n- uid: System.MethodAccessException\n  isExternal: false\n  name: MethodAccessException\n  fullName: System.MethodAccessException\n  nameWithType: MethodAccessException\n  commentId: T:System.MethodAccessException\n- uid: System.MemberAccessException\n  parent: System\n  isExternal: false\n  name: MemberAccessException\n  fullName: System.MemberAccessException\n  nameWithType: MemberAccessException\n  commentId: T:System.MemberAccessException\n- uid: System.Runtime.InteropServices.InvalidComObjectException\n  isExternal: false\n  name: InvalidComObjectException\n  fullName: System.Runtime.InteropServices.InvalidComObjectException\n  nameWithType: InvalidComObjectException\n  commentId: T:System.Runtime.InteropServices.InvalidComObjectException\n- uid: System.MissingMethodException\n  isExternal: false\n  name: MissingMethodException\n  fullName: System.MissingMethodException\n  nameWithType: MissingMethodException\n  commentId: T:System.MissingMethodException\n- uid: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: COMException\n  fullName: System.Runtime.InteropServices.COMException\n  nameWithType: COMException\n  commentId: T:System.Runtime.InteropServices.COMException\n- uid: System.TypeLoadException\n  parent: System\n  isExternal: false\n  name: TypeLoadException\n  fullName: System.TypeLoadException\n  nameWithType: TypeLoadException\n  commentId: T:System.TypeLoadException\n"}