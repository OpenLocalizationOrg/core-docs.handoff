{"nodes":[{"pos":[1056,1072],"content":"PipeAccessRights","needQuote":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[2194,2214],"content":"AccessSystemSecurity","needQuote":true,"nodes":[{"content":"AccessSystemSecurity","pos":[0,20]}]},{"pos":[3247,3264],"content":"ChangePermissions","needQuote":true,"nodes":[{"content":"ChangePermissions","pos":[0,17]}]},{"pos":[4297,4314],"content":"CreateNewInstance","needQuote":true,"nodes":[{"content":"CreateNewInstance","pos":[0,17]}]},{"pos":[5404,5410],"content":"Delete","needQuote":true,"nodes":[{"content":"Delete","pos":[0,6]}]},{"pos":[6326,6337],"content":"FullControl","needQuote":true,"nodes":[{"content":"FullControl","pos":[0,11]}]},{"pos":[7390,7394],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[8791,8805],"content":"ReadAttributes","needQuote":true,"nodes":[{"content":"ReadAttributes","pos":[0,14]}]},{"pos":[9874,9882],"content":"ReadData","needQuote":true,"nodes":[{"content":"ReadData","pos":[0,8]}]},{"pos":[10969,10991],"content":"ReadExtendedAttributes","needQuote":true,"nodes":[{"content":"ReadExtendedAttributes","pos":[0,22]}]},{"pos":[12111,12126],"content":"ReadPermissions","needQuote":true,"nodes":[{"content":"ReadPermissions","pos":[0,15]}]},{"pos":[13207,13216],"content":"ReadWrite","needQuote":true,"nodes":[{"content":"ReadWrite","pos":[0,9]}]},{"pos":[14966,14977],"content":"Synchronize","needQuote":true,"nodes":[{"content":"Synchronize","pos":[0,11]}]},{"pos":[16000,16013],"content":"TakeOwnership","needQuote":true,"nodes":[{"content":"TakeOwnership","pos":[0,13]}]},{"pos":[17015,17020],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[18313,18328],"content":"WriteAttributes","needQuote":true,"nodes":[{"content":"WriteAttributes","pos":[0,15]}]},{"pos":[19379,19388],"content":"WriteData","needQuote":true,"nodes":[{"content":"WriteData","pos":[0,9]}]},{"pos":[20455,20478],"content":"WriteExtendedAttributes","needQuote":true,"nodes":[{"content":"WriteExtendedAttributes","pos":[0,23]}]},{"pos":[21414,21429],"content":"System.IO.Pipes","needQuote":true,"nodes":[{"content":"System.IO.Pipes","pos":[0,15]}]},{"pos":[21615,21631],"content":"PipeAccessRights","needQuote":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]}],"content":"items:\n- uid: System.IO.Pipes.PipeAccessRights\n  commentId: T:System.IO.Pipes.PipeAccessRights\n  id: PipeAccessRights\n  parent: System.IO.Pipes\n  children:\n  - System.IO.Pipes.PipeAccessRights.AccessSystemSecurity\n  - System.IO.Pipes.PipeAccessRights.ChangePermissions\n  - System.IO.Pipes.PipeAccessRights.CreateNewInstance\n  - System.IO.Pipes.PipeAccessRights.Delete\n  - System.IO.Pipes.PipeAccessRights.FullControl\n  - System.IO.Pipes.PipeAccessRights.Read\n  - System.IO.Pipes.PipeAccessRights.ReadAttributes\n  - System.IO.Pipes.PipeAccessRights.ReadData\n  - System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\n  - System.IO.Pipes.PipeAccessRights.ReadPermissions\n  - System.IO.Pipes.PipeAccessRights.ReadWrite\n  - System.IO.Pipes.PipeAccessRights.Synchronize\n  - System.IO.Pipes.PipeAccessRights.TakeOwnership\n  - System.IO.Pipes.PipeAccessRights.Write\n  - System.IO.Pipes.PipeAccessRights.WriteAttributes\n  - System.IO.Pipes.PipeAccessRights.WriteData\n  - System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\n  langs:\n  - csharp\n  - vb\n  name: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n  type: Enum\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PipeAccessRights\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 9\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Defines the access rights to use when you create access and audit rules.</p>\\n\"\n  syntax:\n    content: >-\n      [Flags]\n\n      public enum PipeAccessRights\n    content.vb: >-\n      <Flags>\n\n      Public Enum PipeAccessRights\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: PipeAccessRights\n- uid: System.IO.Pipes.PipeAccessRights.AccessSystemSecurity\n  commentId: F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity\n  id: AccessSystemSecurity\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: AccessSystemSecurity\n  fullName: System.IO.Pipes.PipeAccessRights.AccessSystemSecurity\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessSystemSecurity\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 12\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to make changes to the system access control list (SACL).</p>\\n\"\n  syntax:\n    content: AccessSystemSecurity = 16777216\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.AccessSystemSecurity\n- uid: System.IO.Pipes.PipeAccessRights.ChangePermissions\n  commentId: F:System.IO.Pipes.PipeAccessRights.ChangePermissions\n  id: ChangePermissions\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: ChangePermissions\n  fullName: System.IO.Pipes.PipeAccessRights.ChangePermissions\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChangePermissions\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 13\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to change the security and audit rules that are associated with a pipe.</p>\\n\"\n  syntax:\n    content: ChangePermissions = 262144\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.ChangePermissions\n- uid: System.IO.Pipes.PipeAccessRights.CreateNewInstance\n  commentId: F:System.IO.Pipes.PipeAccessRights.CreateNewInstance\n  id: CreateNewInstance\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: CreateNewInstance\n  fullName: System.IO.Pipes.PipeAccessRights.CreateNewInstance\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateNewInstance\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 14\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to create a new pipe. Setting this right also sets the <xref href=\\\"System.IO.Pipes.PipeAccessRights.Synchronize\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> right.</p>\\n\"\n  syntax:\n    content: CreateNewInstance = 4\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.CreateNewInstance\n- uid: System.IO.Pipes.PipeAccessRights.Delete\n  commentId: F:System.IO.Pipes.PipeAccessRights.Delete\n  id: Delete\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: Delete\n  fullName: System.IO.Pipes.PipeAccessRights.Delete\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Delete\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 15\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to delete a pipe.</p>\\n\"\n  syntax:\n    content: Delete = 65536\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.Delete\n- uid: System.IO.Pipes.PipeAccessRights.FullControl\n  commentId: F:System.IO.Pipes.PipeAccessRights.FullControl\n  id: FullControl\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: FullControl\n  fullName: System.IO.Pipes.PipeAccessRights.FullControl\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FullControl\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 16\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to exert full control over a pipe, and to modify access control and audit rules. This value represents the combination of all rights in this enumeration.</p>\\n\"\n  syntax:\n    content: FullControl = 2032031\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.FullControl\n- uid: System.IO.Pipes.PipeAccessRights.Read\n  commentId: F:System.IO.Pipes.PipeAccessRights.Read\n  id: Read\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: Read\n  fullName: System.IO.Pipes.PipeAccessRights.Read\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 17\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to read from the pipe. This right includes the <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadPermissions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> rights.</p>\\n\"\n  syntax:\n    content: Read = 131209\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.Read\n- uid: System.IO.Pipes.PipeAccessRights.ReadAttributes\n  commentId: F:System.IO.Pipes.PipeAccessRights.ReadAttributes\n  id: ReadAttributes\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: ReadAttributes\n  fullName: System.IO.Pipes.PipeAccessRights.ReadAttributes\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadAttributes\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 18\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to read file system attributes from a pipe. This does not include the right to read data, extended file system attributes, or access and audit rules.</p>\\n\"\n  syntax:\n    content: ReadAttributes = 128\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.ReadAttributes\n- uid: System.IO.Pipes.PipeAccessRights.ReadData\n  commentId: F:System.IO.Pipes.PipeAccessRights.ReadData\n  id: ReadData\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: ReadData\n  fullName: System.IO.Pipes.PipeAccessRights.ReadData\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadData\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 19\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to read data from the pipe. This does not include the right to read file system attributes, extended file system attributes, or access and audit rules.</p>\\n\"\n  syntax:\n    content: ReadData = 1\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.ReadData\n- uid: System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\n  commentId: F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\n  id: ReadExtendedAttributes\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: ReadExtendedAttributes\n  fullName: System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadExtendedAttributes\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 20\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to read extended file system attributes from a pipe. This does not include the right to read data, file system attributes, or access and audit rules.</p>\\n\"\n  syntax:\n    content: ReadExtendedAttributes = 8\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.ReadExtendedAttributes\n- uid: System.IO.Pipes.PipeAccessRights.ReadPermissions\n  commentId: F:System.IO.Pipes.PipeAccessRights.ReadPermissions\n  id: ReadPermissions\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: ReadPermissions\n  fullName: System.IO.Pipes.PipeAccessRights.ReadPermissions\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadPermissions\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 21\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to read access and audit rules from the pipe. This does not include the right to read data, file system attributes, or extended file system attributes.</p>\\n\"\n  syntax:\n    content: ReadPermissions = 131072\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.ReadPermissions\n- uid: System.IO.Pipes.PipeAccessRights.ReadWrite\n  commentId: F:System.IO.Pipes.PipeAccessRights.ReadWrite\n  id: ReadWrite\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: ReadWrite\n  fullName: System.IO.Pipes.PipeAccessRights.ReadWrite\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadWrite\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 22\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to read and write from the pipe. This right includes the <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.ReadPermissions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.WriteAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.WriteData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> rights.</p>\\n\"\n  syntax:\n    content: ReadWrite = 131483\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.ReadWrite\n- uid: System.IO.Pipes.PipeAccessRights.Synchronize\n  commentId: F:System.IO.Pipes.PipeAccessRights.Synchronize\n  id: Synchronize\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: Synchronize\n  fullName: System.IO.Pipes.PipeAccessRights.Synchronize\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Synchronize\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 23\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies whether the application can wait for a pipe handle to synchronize with the completion of an I/O operation.</p>\\n\"\n  syntax:\n    content: Synchronize = 1048576\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.Synchronize\n- uid: System.IO.Pipes.PipeAccessRights.TakeOwnership\n  commentId: F:System.IO.Pipes.PipeAccessRights.TakeOwnership\n  id: TakeOwnership\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: TakeOwnership\n  fullName: System.IO.Pipes.PipeAccessRights.TakeOwnership\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TakeOwnership\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 24\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to change the owner of a pipe. Note that owners of a pipe have full access to that resource.</p>\\n\"\n  syntax:\n    content: TakeOwnership = 524288\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.TakeOwnership\n- uid: System.IO.Pipes.PipeAccessRights.Write\n  commentId: F:System.IO.Pipes.PipeAccessRights.Write\n  id: Write\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: Write\n  fullName: System.IO.Pipes.PipeAccessRights.Write\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 25\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to write to the pipe. This right includes the <xref href=\\\"System.IO.Pipes.PipeAccessRights.WriteAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeAccessRights.WriteData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> rights.</p>\\n\"\n  syntax:\n    content: Write = 274\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.Write\n- uid: System.IO.Pipes.PipeAccessRights.WriteAttributes\n  commentId: F:System.IO.Pipes.PipeAccessRights.WriteAttributes\n  id: WriteAttributes\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: WriteAttributes\n  fullName: System.IO.Pipes.PipeAccessRights.WriteAttributes\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteAttributes\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 26\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to write file system attributes to a pipe. This does not include the right to write data or extended file system attributes.</p>\\n\"\n  syntax:\n    content: WriteAttributes = 256\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.WriteAttributes\n- uid: System.IO.Pipes.PipeAccessRights.WriteData\n  commentId: F:System.IO.Pipes.PipeAccessRights.WriteData\n  id: WriteData\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: WriteData\n  fullName: System.IO.Pipes.PipeAccessRights.WriteData\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteData\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 27\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to write data to a pipe. This does not include the right to write file system attributes or extended file system attributes.</p>\\n\"\n  syntax:\n    content: WriteData = 2\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.WriteData\n- uid: System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\n  commentId: F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\n  id: WriteExtendedAttributes\n  parent: System.IO.Pipes.PipeAccessRights\n  langs:\n  - csharp\n  - vb\n  name: WriteExtendedAttributes\n  fullName: System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteExtendedAttributes\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 28\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Specifies the right to write extended file system attributes to a pipe. This does not include the right to write file attributes or data.</p>\\n\"\n  syntax:\n    content: WriteExtendedAttributes = 16\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeAccessRights.WriteExtendedAttributes\nreferences:\n- uid: System.IO.Pipes\n  isExternal: false\n  name: System.IO.Pipes\n  fullName: System.IO.Pipes\n  commentId: N:System.IO.Pipes\n  nameWithType: System.IO.Pipes\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n  commentId: T:System.IO.Pipes.PipeAccessRights\n  nameWithType: PipeAccessRights\n"}