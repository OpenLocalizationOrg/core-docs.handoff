{"nodes":[{"pos":[694,706],"content":"InvokeBinder","needQuote":true,"nodes":[{"content":"InvokeBinder","pos":[0,12]}]},{"pos":[2997,3019],"content":"InvokeBinder(CallInfo)","needQuote":true,"nodes":[{"content":"InvokeBinder(CallInfo)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The signature of the arguments at the call site.&lt;/p&gt;\\n","pos":[3816,3875],"source":"\\n<p>The signature of the arguments at the call site.</p>\\n"},{"pos":[4177,4185],"content":"CallInfo","needQuote":true,"nodes":[{"content":"CallInfo","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The signature of the arguments at the call site.&lt;/p&gt;\\n","pos":[4878,4937],"source":"\\n<p>The signature of the arguments at the call site.</p>\\n"},{"pos":[5246,5256],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[6719,6763],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The target of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[7670,7724],"source":"\\n<p>The target of the dynamic invoke operation.</p>\\n"},{"content":"\\n&lt;p&gt;An array of arguments of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[7808,7873],"source":"\\n<p>An array of arguments of the dynamic invoke operation.</p>\\n"},{"pos":[9077,9131],"content":"FallbackInvoke(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"FallbackInvoke(DynamicMetaObject, DynamicMetaObject[])","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The target of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[10078,10132],"source":"\\n<p>The target of the dynamic invoke operation.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[10216,10273],"source":"\\n<p>The arguments of the dynamic invoke operation.</p>\\n"},{"pos":[11432,11505],"content":"FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","needQuote":true,"nodes":[{"content":"FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","pos":[0,73]}]},{"content":"\\n&lt;p&gt;The target of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[12581,12635],"source":"\\n<p>The target of the dynamic invoke operation.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[12719,12776],"source":"\\n<p>The arguments of the dynamic invoke operation.</p>\\n"},{"content":"\\n&lt;p&gt;The binding result to use if binding fails, or null.&lt;/p&gt;\\n","pos":[12869,12932],"source":"\\n<p>The binding result to use if binding fails, or null.</p>\\n"},{"pos":[13766,13780],"content":"System.Dynamic","needQuote":true,"nodes":[{"content":"System.Dynamic","pos":[0,14]}]},{"pos":[13935,13941],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14144,14158],"content":"CallSiteBinder","needQuote":true,"nodes":[{"content":"CallSiteBinder","pos":[0,14]}]},{"pos":[14410,14433],"content":"DynamicMetaObjectBinder","needQuote":true,"nodes":[{"content":"DynamicMetaObjectBinder","pos":[0,23]}]},{"pos":[14854,14922],"content":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)","needQuote":true,"nodes":[{"content":"Bind(Object[], ReadOnlyCollection&lt;ParameterExpression&gt;, LabelTarget)","pos":[0,68],"source":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)"}]},{"pos":[15650,15654],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[15723,15724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15774,15780],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[15841,15843]},{"content":",","pos":[15875,15876]},{"pos":[15969,15987],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[16083,16084],"content":"<","needQuote":true,"nodes":[]},{"pos":[16164,16183],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[16306,16307]},{"pos":[16384,16395],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[16477,16478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16717,16721],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[16790,16791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16841,16847],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16907,16909],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[16938,16939]},{"pos":[17032,17050],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[17147,17150]},{"pos":[17237,17256],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[17346,17347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[17375,17376]},{"pos":[17453,17464],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[17546,17547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18193,18238],"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","pos":[0,45]}]},{"pos":[18701,18706],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[18776,18777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18846,18863],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[18922,18923]},{"pos":[18997,19014],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[19073,19075]},{"pos":[19106,19107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19268,19273],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[19343,19344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19413,19430],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[19489,19490]},{"pos":[19564,19581],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[19639,19641],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[19669,19670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20156,20182],"content":"Defer(DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject[])","pos":[0,26]}]},{"pos":[20525,20530],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[20600,20601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20670,20687],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[20746,20748]},{"pos":[20779,20780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20908,20913],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[20983,20984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21053,21070],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[21128,21130],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[21158,21159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21564,21589],"content":"GetUpdateExpression(Type)","needQuote":true,"nodes":[{"content":"GetUpdateExpression(Type)","pos":[0,25]}]},{"pos":[21780,21799],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[21883,21884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21932,21936],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[21994,21995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22114,22133],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[22217,22218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22266,22270],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[22328,22329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22650,22661],"content":"UpdateLabel","needQuote":true,"nodes":[{"content":"UpdateLabel","pos":[0,11]}]},{"pos":[23188,23226],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[23726,23741],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[23829,23830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23909,23917],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[23983,23984],"content":"<","needQuote":true,"nodes":[]},{"pos":[24011,24012],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[24072,24073]},{"pos":[24128,24134],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[24195,24197]},{"pos":[24228,24229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24402,24420],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[24511,24512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24591,24599],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[24666,24669]},{"pos":[24703,24704],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24731,24732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[24760,24761]},{"pos":[24816,24822],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24882,24884],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[24912,24913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25440,25457],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[25751,25765],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[25852,25853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25880,25881],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25908,25909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26023,26040],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[26130,26131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26158,26159],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26186,26187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26471,26481],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26576,26584],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26653,26654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26681,26682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26752,26760],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26829,26830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26857,26858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27041,27055],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[27174,27180],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27247,27248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27298,27304],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27364,27365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27448,27454],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27521,27522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27572,27578],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27638,27639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27853,27875],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[28023,28029],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28096,28097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28147,28153],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28214,28215]},{"pos":[28270,28276],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28336,28337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28434,28440],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28507,28508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28558,28564],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28625,28626]},{"pos":[28681,28687],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28747,28748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28993,29024],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[29190,29205],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29281,29282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29332,29338],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29399,29400]},{"pos":[29455,29461],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29521,29522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29628,29643],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29719,29720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29770,29776],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29837,29838]},{"pos":[29893,29899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29959,29960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30190,30203],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[30304,30315],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30387,30388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30415,30416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30489,30500],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30572,30573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30600,30601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30776,30785],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[30878,30885],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[30953,30954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30981,30982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31051,31058],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31126,31127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31154,31155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31330,31347],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[31456,31471],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31547,31548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31575,31576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31653,31668],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31744,31745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31772,31773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31918,31924],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[32056,32087],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[32387,32425],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[32925,32940],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[33028,33029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33108,33116],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[33182,33183],"content":"<","needQuote":true,"nodes":[]},{"pos":[33210,33211],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[33271,33272]},{"pos":[33327,33333],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[33394,33396]},{"pos":[33427,33428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33601,33619],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[33710,33711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33790,33798],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[33865,33868]},{"pos":[33902,33903],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33930,33931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[33959,33960]},{"pos":[34015,34021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34081,34083],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[34111,34112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34521,34538],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[34832,34846],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[34933,34934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34961,34962],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34989,34990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35104,35121],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[35211,35212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35239,35240],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35267,35268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35555,35563],"content":"CallInfo","needQuote":true,"nodes":[{"content":"CallInfo","pos":[0,8]}]},{"pos":[35798,35808],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[36051,36055],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[36325,36369],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"pos":[36828,36832],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[36901,36902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36971,36988],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[37047,37048]},{"pos":[37122,37139],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[37198,37200]},{"pos":[37231,37232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37392,37396],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[37465,37466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37535,37552],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[37611,37612]},{"pos":[37686,37703],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[37761,37763],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[37791,37792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38203,38220],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[38398,38417],"content":"DynamicMetaObject[]","needQuote":true,"nodes":[{"content":"DynamicMetaObject[]","pos":[0,19]}]},{"pos":[38613,38630],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[38689,38691]},{"pos":[38775,38792],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[38850,38852],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]}],"content":"items:\n- uid: System.Dynamic.InvokeBinder\n  commentId: T:System.Dynamic.InvokeBinder\n  id: InvokeBinder\n  parent: System.Dynamic\n  children:\n  - System.Dynamic.InvokeBinder.#ctor(System.Dynamic.CallInfo)\n  - System.Dynamic.InvokeBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.InvokeBinder.CallInfo\n  - System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  - System.Dynamic.InvokeBinder.ReturnType\n  langs:\n  - csharp\n  - vb\n  name: InvokeBinder\n  fullName: System.Dynamic.InvokeBinder\n  type: Class\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InvokeBinder\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n    startLine: 11\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Represents the invoke dynamic operation at the call site, providing the binding semantic and the details about the operation.</p>\\n\"\n  syntax:\n    content: 'public abstract class InvokeBinder : DynamicMetaObjectBinder'\n    content.vb: >-\n      Public MustInherit Class InvokeBinder\n          Inherits DynamicMetaObjectBinder\n  inheritance:\n  - System.Object\n  - System.Runtime.CompilerServices.CallSiteBinder\n  - System.Dynamic.DynamicMetaObjectBinder\n  inheritedMembers:\n  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: InvokeBinder\n- uid: System.Dynamic.InvokeBinder.#ctor(System.Dynamic.CallInfo)\n  commentId: M:System.Dynamic.InvokeBinder.#ctor(System.Dynamic.CallInfo)\n  id: '#ctor(System.Dynamic.CallInfo)'\n  parent: System.Dynamic.InvokeBinder\n  langs:\n  - csharp\n  - vb\n  name: InvokeBinder(CallInfo)\n  fullName: System.Dynamic.InvokeBinder.InvokeBinder(System.Dynamic.CallInfo)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n    startLine: 19\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Dynamic.InvokeBinder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected InvokeBinder(CallInfo callInfo)\n    content.vb: Protected Sub New(callInfo As CallInfo)\n    parameters:\n    - id: callInfo\n      type: System.Dynamic.CallInfo\n      description: \"\\n<p>The signature of the arguments at the call site.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: InvokeBinder.InvokeBinder(CallInfo)\n- uid: System.Dynamic.InvokeBinder.CallInfo\n  commentId: P:System.Dynamic.InvokeBinder.CallInfo\n  id: CallInfo\n  parent: System.Dynamic.InvokeBinder\n  langs:\n  - csharp\n  - vb\n  name: CallInfo\n  fullName: System.Dynamic.InvokeBinder.CallInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CallInfo\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n    startLine: 36\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Gets the signature of the arguments at the call site.</p>\\n\"\n  syntax:\n    content: public CallInfo CallInfo { get; }\n    content.vb: Public ReadOnly Property CallInfo As CallInfo\n    parameters: []\n    return:\n      type: System.Dynamic.CallInfo\n      description: \"\\n<p>The signature of the arguments at the call site.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: InvokeBinder.CallInfo\n- uid: System.Dynamic.InvokeBinder.ReturnType\n  commentId: P:System.Dynamic.InvokeBinder.ReturnType\n  id: ReturnType\n  parent: System.Dynamic.InvokeBinder\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Dynamic.InvokeBinder.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReturnType\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n    startLine: 28\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>The result type of the operation.</p>\\n\"\n  syntax:\n    content: public override sealed Type ReturnType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property ReturnType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the result type of the operation.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: InvokeBinder.ReturnType\n- uid: System.Dynamic.InvokeBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.InvokeBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.InvokeBinder\n  langs:\n  - csharp\n  - vb\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.InvokeBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n    startLine: 67\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic invoke operation.</p>\\n\"\n  syntax:\n    content: public override sealed DynamicMetaObject Bind(DynamicMetaObject target, DynamicMetaObject[] args)\n    content.vb: Public NotOverridable Overrides Function Bind(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic invoke operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>An array of arguments of the dynamic invoke operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  fullName.vb: System.Dynamic.InvokeBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: InvokeBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: InvokeBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.InvokeBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackInvoke(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackInvoke\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n    startLine: 47\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic invoke operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public DynamicMetaObject FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args)\n    content.vb: Public Function FallbackInvoke(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic invoke operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>The arguments of the dynamic invoke operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: FallbackInvoke(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: InvokeBinder.FallbackInvoke(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: InvokeBinder.FallbackInvoke(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  commentId: M:System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  id: FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  parent: System.Dynamic.InvokeBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  fullName: System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackInvoke\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeBinder.cs\n    startLine: 59\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic invoke operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public abstract DynamicMetaObject FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)\n    content.vb: Public MustOverride Function FallbackInvoke(target As DynamicMetaObject, args As DynamicMetaObject(), errorSuggestion As DynamicMetaObject) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic invoke operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>The arguments of the dynamic invoke operation.</p>\\n\"\n    - id: errorSuggestion\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The binding result to use if binding fails, or null.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject(), System.Dynamic.DynamicMetaObject)\n  name.vb: FallbackInvoke(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\n  nameWithType: InvokeBinder.FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  nameWithType.vb: InvokeBinder.FallbackInvoke(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\nreferences:\n- uid: System.Dynamic\n  isExternal: false\n  name: System.Dynamic\n  fullName: System.Dynamic\n  nameWithType: System.Dynamic\n  commentId: N:System.Dynamic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n  nameWithType: CallSiteBinder\n  commentId: T:System.Runtime.CompilerServices.CallSiteBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObjectBinder\n  fullName: System.Dynamic.DynamicMetaObjectBinder\n  nameWithType: DynamicMetaObjectBinder\n  commentId: T:System.Dynamic.DynamicMetaObjectBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)\n  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: GetUpdateExpression(Type)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.GetUpdateExpression(Type)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  isExternal: false\n  name: UpdateLabel\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  nameWithType: CallSiteBinder.UpdateLabel\n  commentId: P:System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  isExternal: true\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  isExternal: false\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Dynamic.CallInfo\n  parent: System.Dynamic\n  isExternal: false\n  name: CallInfo\n  fullName: System.Dynamic.CallInfo\n  nameWithType: CallInfo\n  commentId: T:System.Dynamic.CallInfo\n- uid: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: ReturnType\n  fullName: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  nameWithType: DynamicMetaObjectBinder.ReturnType\n  commentId: P:System.Dynamic.DynamicMetaObjectBinder.ReturnType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObject\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObject\n  fullName: System.Dynamic.DynamicMetaObject\n  nameWithType: DynamicMetaObject\n  commentId: T:System.Dynamic.DynamicMetaObject\n- uid: System.Dynamic.DynamicMetaObject[]\n  name: DynamicMetaObject[]\n  fullName: System.Dynamic.DynamicMetaObject[]\n  fullname.vb: System.Dynamic.DynamicMetaObject()\n  name.vb: DynamicMetaObject()\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  nameWithType: DynamicMetaObject[]\n  nameWithType.vb: DynamicMetaObject()\n"}