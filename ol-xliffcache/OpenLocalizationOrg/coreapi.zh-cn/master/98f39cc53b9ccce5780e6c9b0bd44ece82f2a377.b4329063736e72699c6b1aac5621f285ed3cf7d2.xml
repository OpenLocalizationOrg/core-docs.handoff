{"nodes":[{"pos":[437,446],"content":"STGMEDIUM","needQuote":true,"nodes":[{"content":"STGMEDIUM","pos":[0,9]}]},{"pos":[2142,2156],"content":"pUnkForRelease","needQuote":true,"nodes":[{"content":"pUnkForRelease","pos":[0,14]}]},{"pos":[3694,3699],"content":"tymed","needQuote":true,"nodes":[{"content":"tymed","pos":[0,5]}]},{"pos":[5002,5013],"content":"unionmember","needQuote":true,"nodes":[{"content":"unionmember","pos":[0,11]}]},{"pos":[5966,6005],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[6269,6283],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6408,6414],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6463,6464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6514,6520],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6580,6581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6667,6673],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6722,6723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6773,6779],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6839,6840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7043,7056],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7163,7174],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7228,7229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7256,7257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7333,7344],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7398,7399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7426,7427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7616,7626],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7727,7735],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7786,7787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7814,7815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7888,7896],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7947,7948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7975,7976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8179,8201],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8349,8355],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8422,8423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8473,8479],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8540,8541]},{"pos":[8596,8602],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8662,8663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8760,8766],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8833,8834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8884,8890],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8951,8952]},{"pos":[9007,9013],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9073,9074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9319,9350],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9516,9531],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9607,9608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9658,9664],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9725,9726]},{"pos":[9781,9787],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9847,9848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9954,9969],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10045,10046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10096,10102],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10163,10164]},{"pos":[10219,10225],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10285,10286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10512,10521],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10614,10621],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10689,10690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10717,10718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10787,10794],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10862,10863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10890,10891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11047,11056],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[11210,11216],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11337,11343],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11539,11544],"content":"TYMED","needQuote":true,"nodes":[{"content":"TYMED","pos":[0,5]}]},{"pos":[11752,11758],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.STGMEDIUM\n  commentId: T:System.Runtime.InteropServices.ComTypes.STGMEDIUM\n  id: STGMEDIUM\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease\n  - System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed\n  - System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember\n  langs:\n  - csharp\n  - vb\n  name: STGMEDIUM\n  fullName: System.Runtime.InteropServices.ComTypes.STGMEDIUM\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: STGMEDIUM\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1411\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Provides the managed definition of the <strong>STGMEDIUM</strong> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct STGMEDIUM\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure STGMEDIUM\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: STGMEDIUM\n- uid: System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease\n  commentId: F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease\n  id: pUnkForRelease\n  parent: System.Runtime.InteropServices.ComTypes.STGMEDIUM\n  langs:\n  - csharp\n  - vb\n  name: pUnkForRelease\n  fullName: System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: pUnkForRelease\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1415\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a pointer to an interface instance that allows the sending process to control the way the storage is released when the receiving process calls the <strong>ReleaseStgMedium</strong> function. If <xref href=\\\"System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>null</strong>, <strong>ReleaseStgMedium</strong> uses default procedures to release the storage; otherwise, <strong>ReleaseStgMedium</strong> uses the specified <strong>IUnknown</strong> interface.</p>\\n\"\n  syntax:\n    content: public object pUnkForRelease\n    content.vb: Public pUnkForRelease As Object\n    return:\n      type: System.Object\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: STGMEDIUM.pUnkForRelease\n- uid: System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed\n  commentId: F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed\n  id: tymed\n  parent: System.Runtime.InteropServices.ComTypes.STGMEDIUM\n  langs:\n  - csharp\n  - vb\n  name: tymed\n  fullName: System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: tymed\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1416\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Specifies the type of storage medium. The marshaling and unmarshaling routines use this value to determine which union member was used. This value must be one of the elements of the <xref href=\\\"System.Runtime.InteropServices.ComTypes.TYMED\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  syntax:\n    content: public TYMED tymed\n    content.vb: Public tymed As TYMED\n    return:\n      type: System.Runtime.InteropServices.ComTypes.TYMED\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: STGMEDIUM.tymed\n- uid: System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember\n  commentId: F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember\n  id: unionmember\n  parent: System.Runtime.InteropServices.ComTypes.STGMEDIUM\n  langs:\n  - csharp\n  - vb\n  name: unionmember\n  fullName: System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: unionmember\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1417\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a handle, string, or interface pointer that the receiving process can use to access the data being transferred.</p>\\n\"\n  syntax:\n    content: public IntPtr unionmember\n    content.vb: Public unionmember As IntPtr\n    return:\n      type: System.IntPtr\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: STGMEDIUM.unionmember\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.Equals(System.Object)\n  nameWithType: ValueType.Equals(Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.GetHashCode\n  nameWithType: ValueType.GetHashCode()\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.ToString\n  nameWithType: ValueType.ToString()\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  commentId: T:System.ValueType\n  nameWithType: ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.InteropServices.ComTypes.TYMED\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: TYMED\n  fullName: System.Runtime.InteropServices.ComTypes.TYMED\n  commentId: T:System.Runtime.InteropServices.ComTypes.TYMED\n  nameWithType: TYMED\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  commentId: T:System.IntPtr\n  nameWithType: IntPtr\n"}