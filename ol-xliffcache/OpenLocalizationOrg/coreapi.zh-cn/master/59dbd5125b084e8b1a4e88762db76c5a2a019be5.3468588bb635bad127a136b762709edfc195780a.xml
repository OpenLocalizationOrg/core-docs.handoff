{"nodes":[{"pos":[303,314],"content":"PipeOptions","needQuote":true,"nodes":[{"content":"PipeOptions","pos":[0,11]}]},{"pos":[1528,1540],"content":"Asynchronous","needQuote":true,"nodes":[{"content":"Asynchronous","pos":[0,12]}]},{"pos":[2400,2404],"content":"None","needQuote":true,"nodes":[{"content":"None","pos":[0,4]}]},{"pos":[3224,3236],"content":"WriteThrough","needQuote":true,"nodes":[{"content":"WriteThrough","pos":[0,12]}]},{"pos":[4013,4028],"content":"System.IO.Pipes","needQuote":true,"nodes":[{"content":"System.IO.Pipes","pos":[0,15]}]},{"pos":[4209,4220],"content":"PipeOptions","needQuote":true,"nodes":[{"content":"PipeOptions","pos":[0,11]}]}],"content":"items:\n- uid: System.IO.Pipes.PipeOptions\n  commentId: T:System.IO.Pipes.PipeOptions\n  id: PipeOptions\n  parent: System.IO.Pipes\n  children:\n  - System.IO.Pipes.PipeOptions.Asynchronous\n  - System.IO.Pipes.PipeOptions.None\n  - System.IO.Pipes.PipeOptions.WriteThrough\n  langs:\n  - csharp\n  - vb\n  name: PipeOptions\n  fullName: System.IO.Pipes.PipeOptions\n  type: Enum\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PipeOptions\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 81\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Provides options for creating a <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. This enumeration has a <xref href=\\\"System.FlagsAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute that allows a bitwise combination of its member values.</p>\\n\"\n  syntax:\n    content: >-\n      [Flags]\n\n      public enum PipeOptions\n    content.vb: >-\n      <Flags>\n\n      Public Enum PipeOptions\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: PipeOptions\n- uid: System.IO.Pipes.PipeOptions.Asynchronous\n  commentId: F:System.IO.Pipes.PipeOptions.Asynchronous\n  id: Asynchronous\n  parent: System.IO.Pipes.PipeOptions\n  langs:\n  - csharp\n  - vb\n  name: Asynchronous\n  fullName: System.IO.Pipes.PipeOptions.Asynchronous\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Asynchronous\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 84\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Indicates that the pipe can be used for asynchronous reading and writing.</p>\\n\"\n  syntax:\n    content: Asynchronous = 1073741824\n    return:\n      type: System.IO.Pipes.PipeOptions\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeOptions.Asynchronous\n- uid: System.IO.Pipes.PipeOptions.None\n  commentId: F:System.IO.Pipes.PipeOptions.None\n  id: None\n  parent: System.IO.Pipes.PipeOptions\n  langs:\n  - csharp\n  - vb\n  name: None\n  fullName: System.IO.Pipes.PipeOptions.None\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: None\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 85\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Indicates that there are no additional parameters.</p>\\n\"\n  syntax:\n    content: None = 0\n    return:\n      type: System.IO.Pipes.PipeOptions\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeOptions.None\n- uid: System.IO.Pipes.PipeOptions.WriteThrough\n  commentId: F:System.IO.Pipes.PipeOptions.WriteThrough\n  id: WriteThrough\n  parent: System.IO.Pipes.PipeOptions\n  langs:\n  - csharp\n  - vb\n  name: WriteThrough\n  fullName: System.IO.Pipes.PipeOptions.WriteThrough\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteThrough\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 86\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Indicates that the system should write through any intermediate cache and go directly to the pipe.</p>\\n\"\n  syntax:\n    content: WriteThrough = -2147483648\n    return:\n      type: System.IO.Pipes.PipeOptions\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PipeOptions.WriteThrough\nreferences:\n- uid: System.IO.Pipes\n  isExternal: false\n  name: System.IO.Pipes\n  fullName: System.IO.Pipes\n  commentId: N:System.IO.Pipes\n  nameWithType: System.IO.Pipes\n- uid: System.IO.Pipes.PipeOptions\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeOptions\n  fullName: System.IO.Pipes.PipeOptions\n  commentId: T:System.IO.Pipes.PipeOptions\n  nameWithType: PipeOptions\n"}