{"nodes":[{"pos":[284,296],"content":"IXmlLineInfo","needQuote":true,"nodes":[{"content":"IXmlLineInfo","pos":[0,12]}]},{"pos":[1185,1195],"content":"LineNumber","needQuote":true,"nodes":[{"content":"LineNumber","pos":[0,10]}]},{"pos":[2329,2341],"content":"LinePosition","needQuote":true,"nodes":[{"content":"LinePosition","pos":[0,12]}]},{"pos":[3486,3499],"content":"HasLineInfo()","needQuote":true,"nodes":[{"content":"HasLineInfo()","pos":[0,13]}]},{"pos":[4533,4543],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[4685,4690],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4808,4814],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[4946,4953],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Xml.IXmlLineInfo\n  commentId: T:System.Xml.IXmlLineInfo\n  id: IXmlLineInfo\n  parent: System.Xml\n  children:\n  - System.Xml.IXmlLineInfo.HasLineInfo\n  - System.Xml.IXmlLineInfo.LineNumber\n  - System.Xml.IXmlLineInfo.LinePosition\n  langs:\n  - csharp\n  - vb\n  name: IXmlLineInfo\n  fullName: System.Xml.IXmlLineInfo\n  type: Interface\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IXmlLineInfo\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 21\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Provides an interface to enable a class to return line and position information.</p>\\n\"\n  syntax:\n    content: public interface IXmlLineInfo\n    content.vb: Public Interface IXmlLineInfo\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IXmlLineInfo\n- uid: System.Xml.IXmlLineInfo.LineNumber\n  commentId: P:System.Xml.IXmlLineInfo.LineNumber\n  id: LineNumber\n  parent: System.Xml.IXmlLineInfo\n  langs:\n  - csharp\n  - vb\n  name: LineNumber\n  fullName: System.Xml.IXmlLineInfo.LineNumber\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LineNumber\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 23\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the current line number.</p>\\n\"\n  syntax:\n    content: int LineNumber { get; }\n    content.vb: ReadOnly Property LineNumber As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current line number or 0 if no line information is available (for example, <xref href=\\\"System.Xml.IXmlLineInfo.HasLineInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>false</strong>).</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXmlLineInfo.LineNumber\n- uid: System.Xml.IXmlLineInfo.LinePosition\n  commentId: P:System.Xml.IXmlLineInfo.LinePosition\n  id: LinePosition\n  parent: System.Xml.IXmlLineInfo\n  langs:\n  - csharp\n  - vb\n  name: LinePosition\n  fullName: System.Xml.IXmlLineInfo.LinePosition\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LinePosition\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 24\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the current line position.</p>\\n\"\n  syntax:\n    content: int LinePosition { get; }\n    content.vb: ReadOnly Property LinePosition As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current line position or 0 if no line information is available (for example, <xref href=\\\"System.Xml.IXmlLineInfo.HasLineInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>false</strong>).</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXmlLineInfo.LinePosition\n- uid: System.Xml.IXmlLineInfo.HasLineInfo\n  commentId: M:System.Xml.IXmlLineInfo.HasLineInfo\n  id: HasLineInfo\n  parent: System.Xml.IXmlLineInfo\n  langs:\n  - csharp\n  - vb\n  name: HasLineInfo()\n  fullName: System.Xml.IXmlLineInfo.HasLineInfo()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasLineInfo\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 25\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets a value indicating whether the class can return line information.</p>\\n\"\n  syntax:\n    content: bool HasLineInfo()\n    content.vb: Function HasLineInfo As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <xref href=\\\"System.Xml.IXmlLineInfo.LineNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.IXmlLineInfo.LinePosition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can be provided; otherwise, <strong>false</strong>.</p>\\n\"\n  nameWithType: IXmlLineInfo.HasLineInfo()\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n"}