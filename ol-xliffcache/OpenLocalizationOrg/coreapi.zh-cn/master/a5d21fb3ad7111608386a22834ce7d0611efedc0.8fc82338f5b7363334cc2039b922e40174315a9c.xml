{"nodes":[{"pos":[659,687],"content":"CryptographicAttributeObject","needQuote":true,"nodes":[{"content":"CryptographicAttributeObject","pos":[0,28]}]},{"pos":[2280,2313],"content":"CryptographicAttributeObject(Oid)","needQuote":true,"nodes":[{"content":"CryptographicAttributeObject(Oid)","pos":[0,33]}]},{"pos":[4343,4402],"content":"CryptographicAttributeObject(Oid, AsnEncodedDataCollection)","needQuote":true,"nodes":[{"content":"CryptographicAttributeObject(Oid, AsnEncodedDataCollection)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;The set of values associated with the attribute represented by the &lt;em&gt;oid&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[6094,6195],"source":"\\n<p>The set of values associated with the attribute represented by the <em>oid</em> parameter.</p>\\n"},{"content":"\\n&lt;p&gt;The collection contains duplicate items.&lt;/p&gt;\\n","pos":[6322,6373],"source":"\\n<p>The collection contains duplicate items.</p>\\n"},{"pos":[7036,7039],"content":"Oid","needQuote":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"content":"\\n&lt;p&gt;The object identifier for the attribute.&lt;/p&gt;\\n","pos":[7911,7962],"source":"\\n<p>The object identifier for the attribute.</p>\\n"},{"pos":[8464,8470],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The set of values that is associated with the attribute.&lt;/p&gt;\\n","pos":[9520,9587],"source":"\\n<p>The set of values that is associated with the attribute.</p>\\n"},{"pos":[9942,9970],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[10167,10173],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10333,10343],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10438,10446],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10515,10516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10543,10544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10614,10622],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10691,10692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10719,10720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10903,10917],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11036,11042],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11109,11110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11160,11166],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11226,11227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11310,11316],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11383,11384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11434,11440],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11500,11501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11715,11737],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11885,11891],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11958,11959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12009,12015],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12076,12077]},{"pos":[12132,12138],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12198,12199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12296,12302],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12369,12370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12420,12426],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12487,12488]},{"pos":[12543,12549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12609,12610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12855,12886],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13052,13067],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13143,13144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13194,13200],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13261,13262]},{"pos":[13317,13323],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13383,13384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13490,13505],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13581,13582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13632,13638],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13699,13700]},{"pos":[13755,13761],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13821,13822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14052,14065],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14166,14177],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14249,14250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14277,14278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14351,14362],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14434,14435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14462,14463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14638,14647],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14740,14747],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14815,14816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14843,14844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14913,14920],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14988,14989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15016,15017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15192,15209],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15318,15333],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15409,15410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15437,15438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15515,15530],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15606,15607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15634,15635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15780,15786],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15958,15961],"content":"Oid","needQuote":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[16164,16188],"content":"AsnEncodedDataCollection","needQuote":true,"nodes":[{"content":"AsnEncodedDataCollection","pos":[0,24]}]},{"pos":[16450,16475],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Security.Cryptography.CryptographicAttributeObject\n  commentId: T:System.Security.Cryptography.CryptographicAttributeObject\n  id: CryptographicAttributeObject\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)\n  - System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)\n  - System.Security.Cryptography.CryptographicAttributeObject.Oid\n  - System.Security.Cryptography.CryptographicAttributeObject.Values\n  langs:\n  - csharp\n  - vb\n  name: CryptographicAttributeObject\n  fullName: System.Security.Cryptography.CryptographicAttributeObject\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CryptographicAttributeObject\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 9\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Contains a type and a collection of values associated with that type.</p>\\n\"\n  syntax:\n    content: public sealed class CryptographicAttributeObject\n    content.vb: Public NotInheritable Class CryptographicAttributeObject\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: CryptographicAttributeObject\n- uid: System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)\n  commentId: M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)\n  id: '#ctor(System.Security.Cryptography.Oid)'\n  parent: System.Security.Cryptography.CryptographicAttributeObject\n  langs:\n  - csharp\n  - vb\n  name: CryptographicAttributeObject(Oid)\n  fullName: System.Security.Cryptography.CryptographicAttributeObject.CryptographicAttributeObject(System.Security.Cryptography.Oid)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 11\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an attribute represented by the specified <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public CryptographicAttributeObject(Oid oid)\n    content.vb: Public Sub New(oid As Oid)\n    parameters:\n    - id: oid\n      type: System.Security.Cryptography.Oid\n      description: \"\\n<p>The attribute to store in this <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Oid\n    commentId: T:System.Security.Cryptography.Oid\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CryptographicAttributeObject.CryptographicAttributeObject(Oid)\n- uid: System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)\n  commentId: M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)\n  id: '#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)'\n  parent: System.Security.Cryptography.CryptographicAttributeObject\n  langs:\n  - csharp\n  - vb\n  name: CryptographicAttributeObject(Oid, AsnEncodedDataCollection)\n  fullName: System.Security.Cryptography.CryptographicAttributeObject.CryptographicAttributeObject(System.Security.Cryptography.Oid, System.Security.Cryptography.AsnEncodedDataCollection)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 12\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an attribute represented by the specified <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and the set of values associated with that attribute represented by the specified <xref href=\\\"System.Security.Cryptography.AsnEncodedDataCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: public CryptographicAttributeObject(Oid oid, AsnEncodedDataCollection values)\n    content.vb: Public Sub New(oid As Oid, values As AsnEncodedDataCollection)\n    parameters:\n    - id: oid\n      type: System.Security.Cryptography.Oid\n      description: \"\\n<p>The attribute to store in this <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    - id: values\n      type: System.Security.Cryptography.AsnEncodedDataCollection\n      description: \"\\n<p>The set of values associated with the attribute represented by the <em>oid</em> parameter.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection contains duplicate items.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Oid\n    commentId: T:System.Security.Cryptography.Oid\n  - type: System.Security.Cryptography.AsnEncodedDataCollection\n    commentId: T:System.Security.Cryptography.AsnEncodedDataCollection\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CryptographicAttributeObject.CryptographicAttributeObject(Oid, AsnEncodedDataCollection)\n- uid: System.Security.Cryptography.CryptographicAttributeObject.Oid\n  commentId: P:System.Security.Cryptography.CryptographicAttributeObject.Oid\n  id: Oid\n  parent: System.Security.Cryptography.CryptographicAttributeObject\n  langs:\n  - csharp\n  - vb\n  name: Oid\n  fullName: System.Security.Cryptography.CryptographicAttributeObject.Oid\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Oid\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 13\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the object identifier for the attribute.</p>\\n\"\n  syntax:\n    content: public Oid Oid { get; }\n    content.vb: Public ReadOnly Property Oid As Oid\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Oid\n      description: \"\\n<p>The object identifier for the attribute.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Oid\n    commentId: T:System.Security.Cryptography.Oid\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CryptographicAttributeObject.Oid\n- uid: System.Security.Cryptography.CryptographicAttributeObject.Values\n  commentId: P:System.Security.Cryptography.CryptographicAttributeObject.Values\n  id: Values\n  parent: System.Security.Cryptography.CryptographicAttributeObject\n  langs:\n  - csharp\n  - vb\n  name: Values\n  fullName: System.Security.Cryptography.CryptographicAttributeObject.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Values\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 14\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Security.Cryptography.AsnEncodedDataCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection that contains the set of values that are associated with the attribute.</p>\\n\"\n  syntax:\n    content: >-\n      public AsnEncodedDataCollection Values\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Values As AsnEncodedDataCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.AsnEncodedDataCollection\n      description: \"\\n<p>The set of values that is associated with the attribute.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.AsnEncodedDataCollection\n    commentId: T:System.Security.Cryptography.AsnEncodedDataCollection\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CryptographicAttributeObject.Values\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.Oid\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Oid\n  fullName: System.Security.Cryptography.Oid\n  commentId: T:System.Security.Cryptography.Oid\n  nameWithType: Oid\n- uid: System.Security.Cryptography.AsnEncodedDataCollection\n  isExternal: false\n  name: AsnEncodedDataCollection\n  fullName: System.Security.Cryptography.AsnEncodedDataCollection\n  commentId: T:System.Security.Cryptography.AsnEncodedDataCollection\n  nameWithType: AsnEncodedDataCollection\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}