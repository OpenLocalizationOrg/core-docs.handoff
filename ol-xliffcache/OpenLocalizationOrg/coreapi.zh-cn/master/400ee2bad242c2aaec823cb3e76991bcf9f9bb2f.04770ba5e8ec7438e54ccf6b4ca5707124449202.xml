{"nodes":[{"pos":[734,759],"content":"EventWaitHandleAccessRule","needQuote":true,"nodes":[{"content":"EventWaitHandleAccessRule","pos":[0,25]}]},{"pos":[3584,3670],"content":"EventWaitHandleAccessRule(IdentityReference, EventWaitHandleRights, AccessControlType)","needQuote":true,"nodes":[{"content":"EventWaitHandleAccessRule(IdentityReference, EventWaitHandleRights, AccessControlType)","pos":[0,86]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;eventRights&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n","pos":[6150,6276],"source":"\\n<p>\\n<em>eventRights</em> specifies an invalid value.</p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> specifies an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;identity&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;eventRights&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[6381,6490],"source":"\\n<p>\\n<em>identity</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>eventRights</em> is zero.</p>\\n"},{"pos":[7790,7865],"content":"EventWaitHandleAccessRule(String, EventWaitHandleRights, AccessControlType)","needQuote":true,"nodes":[{"content":"EventWaitHandleAccessRule(String, EventWaitHandleRights, AccessControlType)","pos":[0,75]}]},{"content":"\\n&lt;p&gt;The name of the user or group the rule applies to.&lt;/p&gt;\\n","pos":[9135,9196],"source":"\\n<p>The name of the user or group the rule applies to.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;eventRights&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n","pos":[9916,10042],"source":"\\n<p>\\n<em>eventRights</em> specifies an invalid value.</p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> specifies an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;eventRights&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[10147,10189],"source":"\\n<p>\\n<em>eventRights</em> is zero.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;identity&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;identity&lt;/em&gt; is a zero-length string.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;identity&lt;/em&gt; is longer than 512 characters.&lt;/p&gt;\\n","pos":[10286,10480],"source":"\\n<p>\\n<em>identity</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>identity</em> is a zero-length string.</p>\\n<p>-or-</p>\\n<p>\\n<em>identity</em> is longer than 512 characters.</p>\\n"},{"pos":[10965,10986],"content":"EventWaitHandleRights","needQuote":true,"nodes":[{"content":"EventWaitHandleRights","pos":[0,21]}]},{"pos":[12294,12323],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[12523,12529],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12731,12748],"content":"AuthorizationRule","needQuote":true,"nodes":[{"content":"AuthorizationRule","pos":[0,17]}]},{"pos":[13022,13032],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[13314,13331],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[13681,13698],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[14062,14072],"content":"AccessMask","needQuote":true,"nodes":[{"content":"AccessMask","pos":[0,10]}]},{"pos":[14416,14427],"content":"IsInherited","needQuote":true,"nodes":[{"content":"IsInherited","pos":[0,11]}]},{"pos":[14779,14795],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[15162,15178],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[15468,15478],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15573,15581],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15650,15651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15678,15679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15749,15757],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15826,15827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15854,15855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16038,16052],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16171,16177],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16244,16245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16295,16301],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16361,16362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16445,16451],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16518,16519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16569,16575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16635,16636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16850,16872],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17020,17026],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17093,17094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17144,17150],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17211,17212]},{"pos":[17267,17273],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17333,17334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17431,17437],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17504,17505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17555,17561],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17622,17623]},{"pos":[17678,17684],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17744,17745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17990,18021],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18187,18202],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18278,18279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18329,18335],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18396,18397]},{"pos":[18452,18458],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18518,18519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18625,18640],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18716,18717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18767,18773],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18834,18835]},{"pos":[18890,18896],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18956,18957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19187,19200],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19301,19312],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19384,19385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19412,19413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19486,19497],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19569,19570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19597,19598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19773,19782],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19875,19882],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19950,19951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19978,19979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20048,20055],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20123,20124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20151,20152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20327,20344],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20453,20468],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20544,20545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20572,20573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20650,20665],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20741,20742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20769,20770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20915,20921],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21101,21118],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[21395,21416],"content":"EventWaitHandleRights","needQuote":true,"nodes":[{"content":"EventWaitHandleRights","pos":[0,21]}]},{"pos":[21709,21726],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[21945,21970],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[22158,22164],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22313,22340],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[22546,22567],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[22768,22785],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Security.AccessControl.EventWaitHandleAccessRule\n  commentId: T:System.Security.AccessControl.EventWaitHandleAccessRule\n  id: EventWaitHandleAccessRule\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandleAccessRule\n  fullName: System.Security.AccessControl.EventWaitHandleAccessRule\n  type: Class\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EventWaitHandleAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 10\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public sealed class EventWaitHandleAccessRule : AccessRule\n    content.vb: >-\n      <SecurityCritical>\n\n      Public NotInheritable Class EventWaitHandleAccessRule\n          Inherits AccessRule\n  seealso:\n  - type: System.Security.AccessControl.EventWaitHandleSecurity\n    commentId: T:System.Security.AccessControl.EventWaitHandleSecurity\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  inheritedMembers:\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: EventWaitHandleAccessRule\n- uid: System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.EventWaitHandleAccessRule\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandleAccessRule(IdentityReference, EventWaitHandleRights, AccessControlType)\n  fullName: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AccessControlType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 13\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.EventWaitHandleAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\\n\"\n  syntax:\n    content: public EventWaitHandleAccessRule(IdentityReference identity, EventWaitHandleRights eventRights, AccessControlType type)\n    content.vb: Public Sub New(identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>The user or group the rule applies to. Must be of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or a type such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: eventRights\n      type: System.Security.AccessControl.EventWaitHandleRights\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.EventWaitHandleRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying the rights allowed or denied.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying whether the rights are allowed or denied.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>eventRights</em> specifies an invalid value.</p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> specifies an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>identity</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>eventRights</em> is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>identity</em> is neither of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> nor of a type such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventWaitHandleAccessRule.EventWaitHandleAccessRule(IdentityReference, EventWaitHandleRights, AccessControlType)\n- uid: System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.EventWaitHandleAccessRule\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandleAccessRule(String, EventWaitHandleRights, AccessControlType)\n  fullName: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleAccessRule(System.String, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AccessControlType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 14\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.EventWaitHandleAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\\n\"\n  syntax:\n    content: public EventWaitHandleAccessRule(string identity, EventWaitHandleRights eventRights, AccessControlType type)\n    content.vb: Public Sub New(identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)\n    parameters:\n    - id: identity\n      type: System.String\n      description: \"\\n<p>The name of the user or group the rule applies to.</p>\\n\"\n    - id: eventRights\n      type: System.Security.AccessControl.EventWaitHandleRights\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.EventWaitHandleRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying the rights allowed or denied.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying whether the rights are allowed or denied.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>eventRights</em> specifies an invalid value.</p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> specifies an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>eventRights</em> is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>identity</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>identity</em> is a zero-length string.</p>\\n<p>-or-</p>\\n<p>\\n<em>identity</em> is longer than 512 characters.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventWaitHandleAccessRule.EventWaitHandleAccessRule(String, EventWaitHandleRights, AccessControlType)\n- uid: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights\n  commentId: P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights\n  id: EventWaitHandleRights\n  parent: System.Security.AccessControl.EventWaitHandleAccessRule\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandleRights\n  fullName: System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights\n  type: Property\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EventWaitHandleRights\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 15\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the rights allowed or denied by the access rule.</p>\\n\"\n  syntax:\n    content: public EventWaitHandleRights EventWaitHandleRights { get; }\n    content.vb: Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights\n    parameters: []\n    return:\n      type: System.Security.AccessControl.EventWaitHandleRights\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.EventWaitHandleRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values indicating the rights allowed or denied by the access rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EventWaitHandleAccessRule.EventWaitHandleRights\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.AuthorizationRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuthorizationRule\n  fullName: System.Security.AccessControl.AuthorizationRule\n  commentId: T:System.Security.AccessControl.AuthorizationRule\n  nameWithType: AuthorizationRule\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n  commentId: T:System.Security.AccessControl.AccessRule\n  nameWithType: AccessRule\n- uid: System.Security.AccessControl.AccessRule.AccessControlType\n  parent: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessRule.AccessControlType\n  commentId: P:System.Security.AccessControl.AccessRule.AccessControlType\n  nameWithType: AccessRule.AccessControlType\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask\n  commentId: P:System.Security.AccessControl.AuthorizationRule.AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Security.AccessControl.EventWaitHandleRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: EventWaitHandleRights\n  fullName: System.Security.AccessControl.EventWaitHandleRights\n  commentId: T:System.Security.AccessControl.EventWaitHandleRights\n  nameWithType: EventWaitHandleRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n  commentId: T:System.Security.AccessControl.AccessControlType\n  nameWithType: AccessControlType\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}