{"nodes":[{"pos":[1117,1151],"content":"NameValueWithParametersHeaderValue","needQuote":true,"nodes":[{"content":"NameValueWithParametersHeaderValue","pos":[0,34]}]},{"pos":[2982,3052],"content":"NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue)","needQuote":true,"nodes":[{"content":"NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue)","pos":[0,70]}]},{"pos":[4720,4762],"content":"NameValueWithParametersHeaderValue(String)","needQuote":true,"nodes":[{"content":"NameValueWithParametersHeaderValue(String)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The header name.&lt;/p&gt;\\n","pos":[5594,5621],"source":"\\n<p>The header name.</p>\\n"},{"pos":[6132,6182],"content":"NameValueWithParametersHeaderValue(String, String)","needQuote":true,"nodes":[{"content":"NameValueWithParametersHeaderValue(String, String)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The header name.&lt;/p&gt;\\n","pos":[7060,7087],"source":"\\n<p>The header name.</p>\\n"},{"content":"\\n&lt;p&gt;The header value.&lt;/p&gt;\\n","pos":[7151,7179],"source":"\\n<p>The header value.</p>\\n"},{"pos":[7624,7634],"content":"Parameters","needQuote":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[9174,9188],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[10098,10155],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[11020,11033],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12479,12492],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents name value with parameter header value information.&lt;/p&gt;\\n","pos":[13351,13438],"source":"\\n<p>A string that represents name value with parameter header value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[13940,14005],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid name value with parameter header value information.&lt;/p&gt;\\n","pos":[14098,14190],"source":"\\n<p>\\n<em>input</em> is not valid name value with parameter header value information.</p>\\n"},{"pos":[14614,14624],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16266,16322],"content":"TryParse(String, out NameValueWithParametersHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out NameValueWithParametersHeaderValue)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[17325,17359],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[18619,18642],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[18824,18830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19023,19043],"content":"NameValueHeaderValue","needQuote":true,"nodes":[{"content":"NameValueHeaderValue","pos":[0,20]}]},{"pos":[19338,19342],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[19653,19658],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[20035,20073],"content":"TryParse(String, NameValueHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, NameValueHeaderValue)","pos":[0,38]}]},{"pos":[20350,20358],"content":"TryParse","needQuote":true,"nodes":[{"content":"TryParse","pos":[0,8]}]},{"pos":[20437,20438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20488,20494],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[20555,20556]},{"pos":[20642,20662],"content":"NameValueHeaderValue","needQuote":true,"nodes":[{"content":"NameValueHeaderValue","pos":[0,20]}]},{"pos":[20732,20733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20895,20903],"content":"TryParse","needQuote":true,"nodes":[{"content":"TryParse","pos":[0,8]}]},{"pos":[20982,20983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21033,21039],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[21100,21101]},{"pos":[21187,21207],"content":"NameValueHeaderValue","needQuote":true,"nodes":[{"content":"NameValueHeaderValue","pos":[0,20]}]},{"pos":[21277,21278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21609,21631],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21779,21785],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21852,21853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21903,21909],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21970,21971]},{"pos":[22026,22032],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22092,22093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22190,22196],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22263,22264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22314,22320],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22381,22382]},{"pos":[22437,22443],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22503,22504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22749,22780],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22946,22961],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23037,23038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23088,23094],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23155,23156]},{"pos":[23211,23217],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23277,23278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23384,23399],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23475,23476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23526,23532],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23593,23594]},{"pos":[23649,23655],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23715,23716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23942,23951],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[24044,24051],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24119,24120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24147,24148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24217,24224],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24292,24293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24320,24321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24496,24513],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[24622,24637],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24713,24714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24741,24742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24819,24834],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24910,24911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24938,24939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25084,25090],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[25283,25317],"content":"NameValueWithParametersHeaderValue","needQuote":true,"nodes":[{"content":"NameValueWithParametersHeaderValue","pos":[0,34]}]},{"pos":[25580,25586],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25857,25890],"content":"ICollection<NameValueHeaderValue>","needQuote":true,"nodes":[{"content":"ICollection&lt;NameValueHeaderValue&gt;","pos":[0,33],"source":"ICollection<NameValueHeaderValue>"}]},{"pos":[26214,26225],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[26310,26311],"content":"<","needQuote":true,"nodes":[]},{"pos":[26392,26412],"content":"NameValueHeaderValue","needQuote":true,"nodes":[{"content":"NameValueHeaderValue","pos":[0,20]}]},{"pos":[26575,26586],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[26672,26675]},{"pos":[26763,26783],"content":"NameValueHeaderValue","needQuote":true,"nodes":[{"content":"NameValueHeaderValue","pos":[0,20]}]},{"pos":[26853,26854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27153,27167],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[27386,27397],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[27461,27462],"content":"<","needQuote":true,"nodes":[]},{"pos":[27489,27490],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27610,27621],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[27686,27689]},{"pos":[27723,27724],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27751,27752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27955,27981],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[28262,28276],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[28457,28463],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28540,28541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28591,28597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28657,28658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28772,28778],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28855,28856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28906,28912],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28972,28973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29191,29198],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29427,29440],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[29603,29614],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[29696,29697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29724,29725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29829,29840],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[29922,29923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29950,29951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30156,30161],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30381,30391],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[30548,30556],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30635,30636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30663,30664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30765,30773],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30852,30853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30880,30881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31079,31100],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[31299,31314],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  commentId: T:System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  id: NameValueWithParametersHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString\n  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)\n  langs:\n  - csharp\n  - vb\n  name: NameValueWithParametersHeaderValue\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NameValueWithParametersHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 470\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents a name/value pair with parameters used in various headers as defined in RFC 2616.</p>\\n\"\n  syntax:\n    content: 'public class NameValueWithParametersHeaderValue : NameValueHeaderValue'\n    content.vb: >-\n      Public Class NameValueWithParametersHeaderValue\n          Inherits NameValueHeaderValue\n  inheritance:\n  - System.Object\n  - System.Net.Http.Headers.NameValueHeaderValue\n  inheritedMembers:\n  - System.Net.Http.Headers.NameValueHeaderValue.Name\n  - System.Net.Http.Headers.NameValueHeaderValue.Value\n  - System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: NameValueWithParametersHeaderValue\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)\n  id: '#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)'\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue)\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(System.Net.Http.Headers.NameValueWithParametersHeaderValue)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 472\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue source)\n    content.vb: Protected Sub New(source As NameValueWithParametersHeaderValue)\n    parameters:\n    - id: source\n      type: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n      description: \"\\n<p>A <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue)\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: NameValueWithParametersHeaderValue(String)\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 473\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public NameValueWithParametersHeaderValue(string name)\n    content.vb: Public Sub New(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The header name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(String)\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: NameValueWithParametersHeaderValue(String, String)\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 474\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public NameValueWithParametersHeaderValue(string name, string value)\n    content.vb: Public Sub New(name As String, value As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The header name.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The header value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(String, String)\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters\n  commentId: P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters\n  id: Parameters\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parameters\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parameters\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 475\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the parameters from the <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public ICollection<NameValueHeaderValue> Parameters { get; }\n    content.vb: Public ReadOnly Property Parameters As ICollection(Of NameValueHeaderValue)\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}\n      description: \"\\n<p>Returns <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A collection containing the parameters.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: NameValueWithParametersHeaderValue.Parameters\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 476\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NameValueWithParametersHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 477\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NameValueWithParametersHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 478\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static NameValueWithParametersHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As NameValueWithParametersHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents name value with parameter header value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid name value with parameter header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: NameValueWithParametersHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 479\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Net.Http.Headers.NameValueHeaderValue.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NameValueWithParametersHeaderValue.ToString()\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)\n  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)\n  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out NameValueWithParametersHeaderValue)\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String, out System.Net.Http.Headers.NameValueWithParametersHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 480\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out NameValueWithParametersHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As NameValueWithParametersHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.NameValueWithParametersHeaderValue)\n  name.vb: TryParse(String, ByRef NameValueWithParametersHeaderValue)\n  nameWithType: NameValueWithParametersHeaderValue.TryParse(String, out NameValueWithParametersHeaderValue)\n  nameWithType.vb: NameValueWithParametersHeaderValue.TryParse(String, ByRef NameValueWithParametersHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Net.Http.Headers.NameValueHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: NameValueHeaderValue\n  fullName: System.Net.Http.Headers.NameValueHeaderValue\n  commentId: T:System.Net.Http.Headers.NameValueHeaderValue\n  nameWithType: NameValueHeaderValue\n- uid: System.Net.Http.Headers.NameValueHeaderValue.Name\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  isExternal: false\n  name: Name\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.Name\n  commentId: P:System.Net.Http.Headers.NameValueHeaderValue.Name\n  nameWithType: NameValueHeaderValue.Name\n- uid: System.Net.Http.Headers.NameValueHeaderValue.Value\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  isExternal: false\n  name: Value\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.Value\n  commentId: P:System.Net.Http.Headers.NameValueHeaderValue.Value\n  nameWithType: NameValueHeaderValue.Value\n- uid: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  isExternal: true\n  name: TryParse(String, NameValueHeaderValue)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String, System.Net.Http.Headers.NameValueHeaderValue)\n  spec.csharp:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n    name: TryParse\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.TryParse\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Http.Headers.NameValueHeaderValue\n    name: NameValueHeaderValue\n    fullName: System.Net.Http.Headers.NameValueHeaderValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n    name: TryParse\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.TryParse\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Http.Headers.NameValueHeaderValue\n    name: NameValueHeaderValue\n    fullName: System.Net.Http.Headers.NameValueHeaderValue\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n  nameWithType: NameValueHeaderValue.TryParse(String, NameValueHeaderValue)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: NameValueWithParametersHeaderValue\n  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  commentId: T:System.Net.Http.Headers.NameValueWithParametersHeaderValue\n  nameWithType: NameValueWithParametersHeaderValue\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<NameValueHeaderValue>\n  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.Http.Headers.NameValueHeaderValue)\n  name.vb: ICollection(Of NameValueHeaderValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.Http.Headers.NameValueHeaderValue\n    name: NameValueHeaderValue\n    fullName: System.Net.Http.Headers.NameValueHeaderValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.Headers.NameValueHeaderValue\n    name: NameValueHeaderValue\n    fullName: System.Net.Http.Headers.NameValueHeaderValue\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}\n  nameWithType: ICollection<NameValueHeaderValue>\n  nameWithType.vb: ICollection(Of NameValueHeaderValue)\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection`1\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n    name: Equals\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n    name: Equals\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  nameWithType: NameValueHeaderValue.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode()\n  spec.csharp:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n    name: GetHashCode\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n    name: GetHashCode\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  nameWithType: NameValueHeaderValue.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Net.Http.Headers.NameValueHeaderValue.ToString\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  isExternal: false\n  name: ToString()\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.ToString()\n  spec.csharp:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.ToString\n    name: ToString\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.NameValueHeaderValue.ToString\n    name: ToString\n    fullName: System.Net.Http.Headers.NameValueHeaderValue.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.ToString\n  nameWithType: NameValueHeaderValue.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}