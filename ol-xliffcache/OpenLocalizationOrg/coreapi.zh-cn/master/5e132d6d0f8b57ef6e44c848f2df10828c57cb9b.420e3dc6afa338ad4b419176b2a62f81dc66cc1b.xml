{"nodes":[{"pos":[3496,3513],"content":"ObjectSecurity<T>","needQuote":true,"nodes":[{"content":"ObjectSecurity&lt;T&gt;","pos":[0,17],"source":"ObjectSecurity<T>"}]},{"content":"\\n&lt;p&gt;The access rights for the object.&lt;/p&gt;\\n","pos":[4445,4489],"source":"\\n<p>The access rights for the object.</p>\\n"},{"pos":[11062,11099],"content":"ObjectSecurity(Boolean, ResourceType)","needQuote":true,"nodes":[{"content":"ObjectSecurity(Boolean, ResourceType)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The type of resource.&lt;/p&gt;\\n","pos":[12265,12297],"source":"\\n<p>The type of resource.</p>\\n"},{"pos":[13347,13419],"content":"ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections)","needQuote":true,"nodes":[{"content":"ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections)","pos":[0,72]}]},{"content":"\\n&lt;p&gt;The type of resource.&lt;/p&gt;\\n","pos":[14811,14843],"source":"\\n<p>The type of resource.</p>\\n"},{"content":"\\n&lt;p&gt;A handle.&lt;/p&gt;\\n","pos":[14940,14960],"source":"\\n<p>A handle.</p>\\n"},{"content":"\\n&lt;p&gt;The sections to include.&lt;/p&gt;\\n","pos":[15072,15107],"source":"\\n<p>The sections to include.</p>\\n"},{"pos":[16587,16712],"content":"ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)","needQuote":true,"nodes":[{"content":"ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)","pos":[0,125]}]},{"content":"\\n&lt;p&gt;The type of resource.&lt;/p&gt;\\n","pos":[18386,18418],"source":"\\n<p>The type of resource.</p>\\n"},{"content":"\\n&lt;p&gt;A handle.&lt;/p&gt;\\n","pos":[18515,18535],"source":"\\n<p>A handle.</p>\\n"},{"content":"\\n&lt;p&gt;The sections to include.&lt;/p&gt;\\n","pos":[18647,18682],"source":"\\n<p>The sections to include.</p>\\n"},{"content":"\\n&lt;p&gt;A delegate implemented by integrators that provides custom exceptions.&lt;/p&gt;\\n","pos":[18823,18904],"source":"\\n<p>A delegate implemented by integrators that provides custom exceptions.</p>\\n"},{"content":"\\n&lt;p&gt;An object that contains contextual information about the source or destination of the exception.&lt;/p&gt;\\n","pos":[18979,19086],"source":"\\n<p>An object that contains contextual information about the source or destination of the exception.</p>\\n"},{"pos":[20414,20482],"content":"ObjectSecurity(Boolean, ResourceType, String, AccessControlSections)","needQuote":true,"nodes":[{"content":"ObjectSecurity(Boolean, ResourceType, String, AccessControlSections)","pos":[0,68]}]},{"content":"\\n&lt;p&gt;The type of resource.&lt;/p&gt;\\n","pos":[21826,21858],"source":"\\n<p>The type of resource.</p>\\n"},{"content":"\\n&lt;p&gt;The sections to include.&lt;/p&gt;\\n","pos":[22224,22259],"source":"\\n<p>The sections to include.</p>\\n"},{"pos":[23619,23740],"content":"ObjectSecurity(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)","needQuote":true,"nodes":[{"content":"ObjectSecurity(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)","pos":[0,121]}]},{"content":"\\n&lt;p&gt;The type of resource.&lt;/p&gt;\\n","pos":[25366,25398],"source":"\\n<p>The type of resource.</p>\\n"},{"content":"\\n&lt;p&gt;The sections to include.","pos":[25764,25793],"source":"\\n<p>The sections to include."},{"content":"&lt;/p&gt;\\n","pos":[25794,25800],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A delegate implemented by integrators that provides custom exceptions.&lt;/p&gt;\\n","pos":[25941,26022],"source":"\\n<p>A delegate implemented by integrators that provides custom exceptions.</p>\\n"},{"content":"\\n&lt;p&gt;An object that contains contextual information about the source or destination of the exception.&lt;/p&gt;\\n","pos":[26097,26204],"source":"\\n<p>An object that contains contextual information about the source or destination of the exception.</p>\\n"},{"pos":[27149,27164],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The type of the securable object associated with the current instance.&lt;/p&gt;\\n","pos":[27975,28056],"source":"\\n<p>The type of the securable object associated with the current instance.</p>\\n"},{"pos":[28686,28700],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The Type of the object associated with the access rules of the current instance.&lt;/p&gt;\\n","pos":[29518,29609],"source":"\\n<p>The Type of the object associated with the access rules of the current instance.</p>\\n"},{"pos":[30232,30245],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The Type object associated with the audit rules of the current instance.&lt;/p&gt;\\n","pos":[31050,31133],"source":"\\n<p>The Type object associated with the audit rules of the current instance.</p>\\n"},{"pos":[32409,32516],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"content":"\\n&lt;p&gt;Represents a user account.&lt;/p&gt;\\n","pos":[33998,34035],"source":"\\n<p>Represents a user account.</p>\\n"},{"content":"\\n&lt;p&gt;The access type.&lt;/p&gt;\\n","pos":[34103,34130],"source":"\\n<p>The access type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;&lt;/strong&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the access rule is inherited; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[34201,34322],"source":"\\n<p>\\n<strong></strong>\\n<strong>true</strong> if the access rule is inherited; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies how to propagate access masks to child objects.&lt;/p&gt;\\n","pos":[34430,34498],"source":"\\n<p>Specifies how to propagate access masks to child objects.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies how to propagate Access Control Entries (ACEs) to child objects.&lt;/p&gt;\\n","pos":[34606,34691],"source":"\\n<p>Specifies how to propagate Access Control Entries (ACEs) to child objects.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies whether access is allowed or denied.&lt;/p&gt;\\n","pos":[34788,34845],"source":"\\n<p>Specifies whether access is allowed or denied.</p>\\n"},{"content":"\\n&lt;p&gt;Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.&lt;/p&gt;\\n","pos":[34932,35064],"source":"\\n<p>Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.</p>\\n"},{"pos":[36431,36459],"content":"AddAccessRule(AccessRule<T>)","needQuote":true,"nodes":[{"content":"AddAccessRule(AccessRule&lt;T&gt;)","pos":[0,28],"source":"AddAccessRule(AccessRule<T>)"}]},{"content":"\\n&lt;p&gt;The rule to add.&lt;/p&gt;\\n","pos":[37396,37423],"source":"\\n<p>The rule to add.</p>\\n"},{"pos":[38205,38231],"content":"AddAuditRule(AuditRule<T>)","needQuote":true,"nodes":[{"content":"AddAuditRule(AuditRule&lt;T&gt;)","pos":[0,26],"source":"AddAuditRule(AuditRule<T>)"}]},{"content":"\\n&lt;p&gt;The audit rule to add.&lt;/p&gt;\\n","pos":[39152,39185],"source":"\\n<p>The audit rule to add.</p>\\n"},{"pos":[40460,40559],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"content":"\\n&lt;p&gt;Represents a user account.","pos":[42083,42114],"source":"\\n<p>Represents a user account."},{"content":"&lt;/p&gt;\\n","pos":[42115,42121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer that specifies an access type.&lt;/p&gt;\\n","pos":[42189,42241],"source":"\\n<p>An integer that specifies an access type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the access rule is inherited; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[42312,42414],"source":"\\n<p>\\n<strong>true</strong> if the access rule is inherited; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies how to propagate access masks to child objects.&lt;/p&gt;\\n","pos":[42522,42590],"source":"\\n<p>Specifies how to propagate access masks to child objects.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies how to propagate Access Control Entries (ACEs) to child objects.&lt;/p&gt;\\n","pos":[42698,42783],"source":"\\n<p>Specifies how to propagate Access Control Entries (ACEs) to child objects.</p>\\n"},{"content":"\\n&lt;p&gt;Describes the type of auditing to perform.&lt;/p&gt;\\n","pos":[42874,42927],"source":"\\n<p>Describes the type of auditing to perform.</p>\\n"},{"content":"\\n&lt;p&gt;Returns the specified audit rule for the specified user.&lt;/p&gt;\\n","pos":[43013,43080],"source":"\\n<p>Returns the specified audit rule for the specified user.</p>\\n"},{"pos":[44388,44407],"content":"Persist(SafeHandle)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The handle of the securable object with which this ObjectSecurity`1 object is associated.&lt;/p&gt;\\n","pos":[45297,45397],"source":"\\n<p>The handle of the securable object with which this ObjectSecurity`1 object is associated.</p>\\n"},{"pos":[45977,45992],"content":"Persist(String)","needQuote":true,"nodes":[{"content":"Persist(String)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The name of the securable object with which this ObjectSecurity`1 object is associated.&lt;/p&gt;\\n","pos":[46810,46908],"source":"\\n<p>The name of the securable object with which this ObjectSecurity`1 object is associated.</p>\\n"},{"pos":[47572,47603],"content":"RemoveAccessRule(AccessRule<T>)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(AccessRule&lt;T&gt;)","pos":[0,31],"source":"RemoveAccessRule(AccessRule<T>)"}]},{"content":"\\n&lt;p&gt;The rule to remove.&lt;/p&gt;\\n","pos":[48647,48677],"source":"\\n<p>The rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;Returns &lt;strong&gt;true&lt;/strong&gt; if the access rule was successfully removed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[48738,48858],"source":"\\n<p>Returns <strong>true</strong> if the access rule was successfully removed; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[49676,49710],"content":"RemoveAccessRuleAll(AccessRule<T>)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(AccessRule&lt;T&gt;)","pos":[0,34],"source":"RemoveAccessRuleAll(AccessRule<T>)"}]},{"content":"\\n&lt;p&gt;The access rule to remove.&lt;/p&gt;\\n","pos":[50735,50772],"source":"\\n<p>The access rule to remove.</p>\\n"},{"pos":[51617,51656],"content":"RemoveAccessRuleSpecific(AccessRule<T>)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(AccessRule&lt;T&gt;)","pos":[0,39],"source":"RemoveAccessRuleSpecific(AccessRule<T>)"}]},{"content":"\\n&lt;p&gt;The access rule to remove.&lt;/p&gt;\\n","pos":[52677,52714],"source":"\\n<p>The access rule to remove.</p>\\n"},{"pos":[53549,53578],"content":"RemoveAuditRule(AuditRule<T>)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(AuditRule&lt;T&gt;)","pos":[0,29],"source":"RemoveAuditRule(AuditRule<T>)"}]},{"content":"\\n&lt;p&gt;The audit rule to remove&lt;/p&gt;\\n","pos":[54605,54640],"source":"\\n<p>The audit rule to remove</p>\\n"},{"content":"\\n&lt;p&gt;Returns &lt;strong&gt;true&lt;/strong&gt; if the object was removed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[54701,54803],"source":"\\n<p>Returns <strong>true</strong> if the object was removed; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[55607,55639],"content":"RemoveAuditRuleAll(AuditRule<T>)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(AuditRule&lt;T&gt;)","pos":[0,32],"source":"RemoveAuditRuleAll(AuditRule<T>)"}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[56647,56683],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"pos":[57514,57551],"content":"RemoveAuditRuleSpecific(AuditRule<T>)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(AuditRule&lt;T&gt;)","pos":[0,37],"source":"RemoveAuditRuleSpecific(AuditRule<T>)"}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[58555,58591],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"pos":[59421,59451],"content":"ResetAccessRule(AccessRule<T>)","needQuote":true,"nodes":[{"content":"ResetAccessRule(AccessRule&lt;T&gt;)","pos":[0,30],"source":"ResetAccessRule(AccessRule<T>)"}]},{"content":"\\n&lt;p&gt;The access rule to reset.&lt;/p&gt;\\n","pos":[60430,60466],"source":"\\n<p>The access rule to reset.</p>\\n"},{"pos":[61262,61290],"content":"SetAccessRule(AccessRule<T>)","needQuote":true,"nodes":[{"content":"SetAccessRule(AccessRule&lt;T&gt;)","pos":[0,28],"source":"SetAccessRule(AccessRule<T>)"}]},{"content":"\\n&lt;p&gt;The access rule to set.&lt;/p&gt;\\n","pos":[62346,62380],"source":"\\n<p>The access rule to set.</p>\\n"},{"pos":[63162,63188],"content":"SetAuditRule(AuditRule<T>)","needQuote":true,"nodes":[{"content":"SetAuditRule(AuditRule&lt;T&gt;)","pos":[0,26],"source":"SetAuditRule(AuditRule<T>)"}]},{"content":"\\n&lt;p&gt;The audit rule to set.&lt;/p&gt;\\n","pos":[64226,64259],"source":"\\n<p>The audit rule to set.</p>\\n"},{"pos":[64722,64751],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[64951,64957],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65156,65170],"content":"ObjectSecurity","needQuote":true,"nodes":[{"content":"ObjectSecurity","pos":[0,14]}]},{"pos":[65445,65465],"content":"CommonObjectSecurity","needQuote":true,"nodes":[{"content":"CommonObjectSecurity","pos":[0,20]}]},{"pos":[65758,65778],"content":"NativeObjectSecurity","needQuote":true,"nodes":[{"content":"NativeObjectSecurity","pos":[0,20]}]},{"pos":[66194,66236],"content":"Persist(SafeHandle, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections)","pos":[0,42]}]},{"pos":[66592,66599],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[66683,66684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66762,66772],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[66861,66862]},{"pos":[66955,66976],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[67053,67054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67255,67262],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[67346,67347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67425,67435],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[67524,67525]},{"pos":[67618,67639],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[67716,67717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68246,68296],"content":"Persist(SafeHandle, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections, Object)","pos":[0,50]}]},{"pos":[68681,68688],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[68772,68773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68851,68861],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[68950,68951]},{"pos":[69044,69065],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[69143,69144]},{"pos":[69199,69205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69265,69266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69481,69488],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[69572,69573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69651,69661],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[69750,69751]},{"pos":[69844,69865],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[69943,69944]},{"pos":[69999,70005],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70065,70066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70575,70613],"content":"Persist(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections)","pos":[0,38]}]},{"pos":[70913,70920],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[71004,71005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71055,71061],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[71122,71123]},{"pos":[71216,71237],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[71314,71315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71488,71495],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[71579,71580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71630,71636],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[71697,71698]},{"pos":[71791,71812],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[71889,71890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72359,72405],"content":"Persist(String, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections, Object)","pos":[0,46]}]},{"pos":[72734,72741],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[72825,72826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72876,72882],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[72943,72944]},{"pos":[73037,73058],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[73136,73137]},{"pos":[73192,73198],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73258,73259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73446,73453],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[73537,73538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73588,73594],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[73655,73656]},{"pos":[73749,73770],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[73848,73849]},{"pos":[73904,73910],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73970,73971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74430,74455],"content":"AddAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[74716,74729],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[74819,74820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74897,74907],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[74973,74974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75128,75141],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[75231,75232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75309,75319],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[75385,75386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75789,75812],"content":"AddAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[76069,76081],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[76170,76171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76247,76256],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[76321,76322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76474,76486],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[76575,76576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76652,76661],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[76726,76727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77129,77167],"content":"GetAccessRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAccessRules(Boolean, Boolean, Type)","pos":[0,38]}]},{"pos":[77434,77448],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[77539,77540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77591,77598],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[77660,77661]},{"pos":[77717,77724],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[77786,77787]},{"pos":[77840,77844],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[77902,77903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78059,78073],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[78164,78165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78216,78223],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[78285,78286]},{"pos":[78342,78349],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[78411,78412]},{"pos":[78465,78469],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78527,78528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78948,78985],"content":"GetAuditRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAuditRules(Boolean, Boolean, Type)","pos":[0,37]}]},{"pos":[79250,79263],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[79353,79354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79405,79412],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[79474,79475]},{"pos":[79531,79538],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[79600,79601]},{"pos":[79654,79658],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[79716,79717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79872,79885],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[79975,79976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80027,80034],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[80096,80097]},{"pos":[80153,80160],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[80222,80223]},{"pos":[80276,80280],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[80338,80339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80827,80887],"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","pos":[0,60]}]},{"pos":[81291,81303],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[81392,81393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81485,81510],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[81592,81593]},{"pos":[81675,81685],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[81752,81753]},{"pos":[81809,81816],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[81877,81878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82103,82115],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[82204,82205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82297,82322],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[82404,82405]},{"pos":[82487,82497],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[82564,82565]},{"pos":[82621,82628],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82689,82690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83269,83327],"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","pos":[0,58]}]},{"pos":[83727,83738],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[83826,83827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83919,83944],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[84026,84027]},{"pos":[84108,84117],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[84183,84184]},{"pos":[84240,84247],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[84308,84309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84532,84543],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[84631,84632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84724,84749],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[84831,84832]},{"pos":[84913,84922],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[84988,84989]},{"pos":[85045,85052],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[85113,85114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85624,85652],"content":"RemoveAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(AccessRule)","pos":[0,28]}]},{"pos":[85919,85935],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[86028,86029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86106,86116],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[86182,86183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86340,86356],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[86449,86450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86527,86537],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[86603,86604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87021,87052],"content":"RemoveAccessRuleAll(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(AccessRule)","pos":[0,31]}]},{"pos":[87325,87344],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[87440,87441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87518,87528],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[87594,87595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87755,87774],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[87870,87871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87948,87958],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[88024,88025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88453,88489],"content":"RemoveAccessRuleSpecific(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(AccessRule)","pos":[0,36]}]},{"pos":[88772,88796],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[88897,88898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88975,88985],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[89051,89052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89217,89241],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[89342,89343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89420,89430],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[89496,89497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89925,89951],"content":"RemoveAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(AuditRule)","pos":[0,26]}]},{"pos":[90214,90229],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[90321,90322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90398,90407],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[90472,90473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90628,90643],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[90735,90736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90812,90821],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[90886,90887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91298,91327],"content":"RemoveAuditRuleAll(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(AuditRule)","pos":[0,29]}]},{"pos":[91596,91614],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[91709,91710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91786,91795],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[91860,91861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92019,92037],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[92132,92133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92209,92218],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[92283,92284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92706,92740],"content":"RemoveAuditRuleSpecific(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(AuditRule)","pos":[0,34]}]},{"pos":[93019,93042],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[93142,93143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93219,93228],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[93293,93294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93457,93480],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[93580,93581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93657,93666],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[93731,93732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94157,94184],"content":"ResetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(AccessRule)","pos":[0,27]}]},{"pos":[94449,94464],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[94556,94557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94634,94644],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[94710,94711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94867,94882],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[94974,94975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95052,95062],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[95128,95129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95538,95563],"content":"SetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[95824,95837],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[95927,95928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96005,96015],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[96081,96082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96236,96249],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[96339,96340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96417,96427],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[96493,96494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96897,96920],"content":"SetAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[97177,97189],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[97278,97279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97355,97364],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[97429,97430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97582,97594],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[97683,97684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97760,97769],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[97834,97835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98188,98207],"content":"AccessRulesModified","needQuote":true,"nodes":[{"content":"AccessRulesModified","pos":[0,19]}]},{"pos":[98575,98598],"content":"AreAccessRulesCanonical","needQuote":true,"nodes":[{"content":"AreAccessRulesCanonical","pos":[0,23]}]},{"pos":[98978,99001],"content":"AreAccessRulesProtected","needQuote":true,"nodes":[{"content":"AreAccessRulesProtected","pos":[0,23]}]},{"pos":[99380,99402],"content":"AreAuditRulesCanonical","needQuote":true,"nodes":[{"content":"AreAuditRulesCanonical","pos":[0,22]}]},{"pos":[99778,99800],"content":"AreAuditRulesProtected","needQuote":true,"nodes":[{"content":"AreAuditRulesProtected","pos":[0,22]}]},{"pos":[100172,100190],"content":"AuditRulesModified","needQuote":true,"nodes":[{"content":"AuditRulesModified","pos":[0,18]}]},{"pos":[100545,100558],"content":"GroupModified","needQuote":true,"nodes":[{"content":"GroupModified","pos":[0,13]}]},{"pos":[100896,100907],"content":"IsContainer","needQuote":true,"nodes":[{"content":"IsContainer","pos":[0,11]}]},{"pos":[101232,101236],"content":"IsDS","needQuote":true,"nodes":[{"content":"IsDS","pos":[0,4]}]},{"pos":[101549,101562],"content":"OwnerModified","needQuote":true,"nodes":[{"content":"OwnerModified","pos":[0,13]}]},{"pos":[101909,101923],"content":"GetGroup(Type)","needQuote":true,"nodes":[{"content":"GetGroup(Type)","pos":[0,14]}]},{"pos":[102104,102112],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[102191,102192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102240,102244],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[102302,102303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102417,102425],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[102504,102505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102553,102557],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[102615,102616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102917,102931],"content":"GetOwner(Type)","needQuote":true,"nodes":[{"content":"GetOwner(Type)","pos":[0,14]}]},{"pos":[103112,103120],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[103199,103200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103248,103252],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[103310,103311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103425,103433],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[103512,103513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103561,103565],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[103623,103624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103936,103969],"content":"GetSecurityDescriptorBinaryForm()","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm()","pos":[0,33]}]},{"pos":[104172,104203],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[104305,104306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104333,104334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104458,104489],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[104591,104592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104619,104620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105012,105064],"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","pos":[0,52]}]},{"pos":[105367,105396],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[105496,105497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105585,105606],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[105683,105684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105859,105888],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[105988,105989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106077,106098],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[106175,106176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106581,106608],"content":"IsSddlConversionSupported()","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported()","pos":[0,27]}]},{"pos":[106799,106824],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[106920,106921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106948,106949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107067,107092],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[107188,107189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107216,107217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107644,107708],"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","pos":[0,64]}]},{"pos":[108108,108124],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[108211,108212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108304,108329],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[108411,108412]},{"pos":[108494,108504],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[108571,108572]},{"pos":[108628,108635],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[108696,108697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108920,108936],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[109023,109024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109116,109141],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[109223,109224]},{"pos":[109306,109316],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[109383,109384]},{"pos":[109440,109447],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[109508,109509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110076,110138],"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","pos":[0,62]}]},{"pos":[110534,110549],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[110635,110636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110728,110753],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[110835,110836]},{"pos":[110917,110926],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[110992,110993]},{"pos":[111049,111056],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[111117,111118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111339,111354],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[111440,111441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111533,111558],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[111640,111641]},{"pos":[111722,111731],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[111797,111798]},{"pos":[111854,111861],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[111922,111923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112447,112494],"content":"Persist(Boolean, String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(Boolean, String, AccessControlSections)","pos":[0,47]}]},{"pos":[112813,112820],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[112898,112899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112950,112957],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[113019,113020]},{"pos":[113075,113081],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[113142,113143]},{"pos":[113236,113257],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[113334,113335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113517,113524],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[113602,113603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113654,113661],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[113723,113724]},{"pos":[113779,113785],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[113846,113847]},{"pos":[113940,113961],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[114038,114039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114481,114516],"content":"PurgeAccessRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAccessRules(IdentityReference)","pos":[0,35]}]},{"pos":[114777,114793],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[114880,114881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114961,114978],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[115068,115069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115223,115239],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[115326,115327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115407,115424],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[115514,115515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115916,115950],"content":"PurgeAuditRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAuditRules(IdentityReference)","pos":[0,34]}]},{"pos":[116209,116224],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[116310,116311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116391,116408],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[116498,116499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116652,116667],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[116753,116754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116834,116851],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[116941,116942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117290,117300],"content":"ReadLock()","needQuote":true,"nodes":[{"content":"ReadLock()","pos":[0,10]}]},{"pos":[117457,117465],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[117544,117545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117572,117573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117674,117682],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[117761,117762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117789,117790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118064,118076],"content":"ReadUnlock()","needQuote":true,"nodes":[{"content":"ReadUnlock()","pos":[0,12]}]},{"pos":[118237,118247],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[118328,118329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118356,118357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118460,118470],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[118551,118552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118579,118580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118901,118942],"content":"SetAccessRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection(Boolean, Boolean)","pos":[0,41]}]},{"pos":[119190,119213],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[119307,119308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119359,119366],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[119428,119429]},{"pos":[119485,119492],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[119553,119554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119701,119724],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[119818,119819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119870,119877],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[119939,119940]},{"pos":[119996,120003],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[120064,120065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120458,120498],"content":"SetAuditRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection(Boolean, Boolean)","pos":[0,40]}]},{"pos":[120744,120766],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[120859,120860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120911,120918],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[120980,120981]},{"pos":[121037,121044],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[121105,121106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121252,121274],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[121367,121368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121419,121426],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[121488,121489]},{"pos":[121545,121552],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[121613,121614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122005,122032],"content":"SetGroup(IdentityReference)","needQuote":true,"nodes":[{"content":"SetGroup(IdentityReference)","pos":[0,27]}]},{"pos":[122277,122285],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[122364,122365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122445,122462],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[122552,122553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122699,122707],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[122786,122787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122867,122884],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[122974,122975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123353,123380],"content":"SetOwner(IdentityReference)","needQuote":true,"nodes":[{"content":"SetOwner(IdentityReference)","pos":[0,27]}]},{"pos":[123625,123633],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[123712,123713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123793,123810],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[123900,123901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124047,124055],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[124134,124135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124215,124232],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[124322,124323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124694,124733],"content":"SetSecurityDescriptorBinaryForm(Byte[])","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[])","pos":[0,39]}]},{"pos":[125122,125153],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[125255,125256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125304,125308],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[125367,125369]},{"pos":[125400,125401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125540,125571],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[125673,125674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125722,125726],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[125784,125786],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[125814,125815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126317,126379],"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","pos":[0,62]}]},{"pos":[126949,126980],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[127082,127083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127131,127135],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[127194,127196]},{"content":",","pos":[127228,127229]},{"pos":[127322,127343],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[127420,127421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127612,127643],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[127745,127746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127794,127798],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[127856,127858],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[127887,127888]},{"pos":[127981,128002],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[128079,128080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128626,128663],"content":"SetSecurityDescriptorSddlForm(String)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String)","pos":[0,37]}]},{"pos":[128890,128919],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[129019,129020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129070,129076],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[129136,129137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129274,129303],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[129403,129404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129454,129460],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[129520,129521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129943,130003],"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","pos":[0,60]}]},{"pos":[130335,130364],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[130464,130465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130515,130521],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[130582,130583]},{"pos":[130676,130697],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[130774,130775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130964,130993],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[131093,131094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131144,131150],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[131211,131212]},{"pos":[131305,131326],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[131403,131404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131815,131826],"content":"WriteLock()","needQuote":true,"nodes":[{"content":"WriteLock()","pos":[0,11]}]},{"pos":[131985,131994],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[132074,132075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132102,132103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132205,132214],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[132294,132295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132322,132323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132600,132613],"content":"WriteUnlock()","needQuote":true,"nodes":[{"content":"WriteUnlock()","pos":[0,13]}]},{"pos":[132776,132787],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[132869,132870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132897,132898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133002,133013],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[133095,133096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133123,133124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133339,133349],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[133444,133452],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[133521,133522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133549,133550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133620,133628],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[133697,133698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133725,133726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133909,133923],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[134042,134048],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[134115,134116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134166,134172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[134232,134233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134316,134322],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[134389,134390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134440,134446],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[134506,134507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134721,134743],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[134891,134897],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[134964,134965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135015,135021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[135082,135083]},{"pos":[135138,135144],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[135204,135205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135302,135308],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[135375,135376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135426,135432],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[135493,135494]},{"pos":[135549,135555],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[135615,135616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135861,135892],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[136058,136073],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[136149,136150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136200,136206],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[136267,136268]},{"pos":[136323,136329],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136389,136390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136496,136511],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[136587,136588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136638,136644],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[136705,136706]},{"pos":[136761,136767],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136827,136828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137058,137071],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[137172,137183],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[137255,137256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137283,137284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137357,137368],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[137440,137441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137468,137469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137644,137653],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[137746,137753],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[137821,137822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137849,137850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137919,137926],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[137994,137995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138022,138023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138198,138215],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[138324,138339],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[138415,138416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138443,138444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138521,138536],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[138612,138613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138640,138641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138786,138792],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[138924,138931],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[139131,139143],"content":"ResourceType","needQuote":true,"nodes":[{"content":"ResourceType","pos":[0,12]}]},{"pos":[139404,139414],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[139680,139701],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[139937,139967],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[140253,140296],"content":"NativeObjectSecurity.ExceptionFromErrorCode","needQuote":true,"nodes":[{"content":"NativeObjectSecurity.ExceptionFromErrorCode","pos":[0,43]}]},{"pos":[140598,140604],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[140834,140849],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[141110,141114],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[141337,141351],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[141694,141707],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[142265,142372],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"pos":[142980,142997],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[143085,143086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143166,143183],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[143274,143275]},{"pos":[143329,143334],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[143394,143395]},{"pos":[143451,143458],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[143520,143521]},{"pos":[143609,143625],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[143698,143699]},{"pos":[143787,143803],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[143876,143877]},{"pos":[143966,143983],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[144056,144057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144382,144399],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[144487,144488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144568,144585],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[144676,144677]},{"pos":[144731,144736],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[144796,144797]},{"pos":[144853,144860],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[144922,144923]},{"pos":[145011,145027],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[145100,145101]},{"pos":[145189,145205],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[145278,145279]},{"pos":[145368,145385],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[145458,145459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146023,146040],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[146255,146260],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[146458,146474],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[146751,146767],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[147045,147062],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[147336,147346],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[147544,147569],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[147849,147862],"content":"AccessRule<T>","needQuote":true,"nodes":[{"content":"AccessRule&lt;T&gt;","pos":[0,13],"source":"AccessRule<T>"}]},{"pos":[148086,148096],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[148162,148163],"content":"<","needQuote":true,"nodes":[]},{"pos":[148190,148191],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[148313,148323],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":"(Of","pos":[148390,148393]},{"pos":[148427,148428],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[148455,148456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148677,148690],"content":"AccessRule<T>","needQuote":true,"nodes":[{"content":"AccessRule&lt;T&gt;","pos":[0,13],"source":"AccessRule<T>"}]},{"pos":[148914,148924],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[148990,148991],"content":"<","needQuote":true,"nodes":[]},{"pos":[149018,149019],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[149141,149151],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":"(Of","pos":[149218,149221]},{"pos":[149255,149256],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[149283,149284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149581,149593],"content":"AuditRule<T>","needQuote":true,"nodes":[{"content":"AuditRule&lt;T&gt;","pos":[0,12],"source":"AuditRule<T>"}]},{"pos":[149813,149822],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[149887,149888],"content":"<","needQuote":true,"nodes":[]},{"pos":[149915,149916],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[150037,150046],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":"(Of","pos":[150112,150115]},{"pos":[150149,150150],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[150177,150178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150395,150407],"content":"AuditRule<T>","needQuote":true,"nodes":[{"content":"AuditRule&lt;T&gt;","pos":[0,12],"source":"AuditRule<T>"}]},{"pos":[150627,150636],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[150701,150702],"content":"<","needQuote":true,"nodes":[]},{"pos":[150729,150730],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[150851,150860],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":"(Of","pos":[150926,150929]},{"pos":[150963,150964],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[150991,150992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151489,151588],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"pos":[152180,152196],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[152283,152284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152364,152381],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[152472,152473]},{"pos":[152527,152532],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[152592,152593]},{"pos":[152649,152656],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[152718,152719]},{"pos":[152807,152823],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[152896,152897]},{"pos":[152985,153001],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[153074,153075]},{"pos":[153157,153167],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[153233,153234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153551,153567],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[153654,153655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153735,153752],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[153843,153844]},{"pos":[153898,153903],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[153963,153964]},{"pos":[154020,154027],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[154089,154090]},{"pos":[154178,154194],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[154267,154268]},{"pos":[154356,154372],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[154445,154446]},{"pos":[154528,154538],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[154604,154605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155154,155164],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[155416,155425],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]}],"content":"items:\n- uid: System.Security.AccessControl.ObjectSecurity`1\n  commentId: T:System.Security.AccessControl.ObjectSecurity`1\n  id: ObjectSecurity`1\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  - System.Security.AccessControl.ObjectSecurity`1.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleType\n  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)\n  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  langs:\n  - csharp\n  - vb\n  name: ObjectSecurity<T>\n  fullName: System.Security.AccessControl.ObjectSecurity<T>\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ObjectSecurity\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 415\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights. </p>\\n\"\n  syntax:\n    content: 'public abstract class ObjectSecurity<T> : NativeObjectSecurity where T : struct'\n    content.vb: >-\n      Public MustInherit Class ObjectSecurity(Of T As Structure)\n          Inherits NativeObjectSecurity\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The access rights for the object.</p>\\n\"\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  inheritedMembers:\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T)\n  name.vb: ObjectSecurity(Of T)\n  nameWithType: ObjectSecurity<T>\n  nameWithType.vb: ObjectSecurity(Of T)\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: ObjectSecurity(Boolean, ResourceType)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 417\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\\n\"\n  syntax:\n    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType)\n    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.ObjectSecurity`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container object.</p>\\n\"\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: \"\\n<p>The type of resource.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity(Boolean, ResourceType)\n  nameWithType.vb: ObjectSecurity(Of T).ObjectSecurity(Boolean, ResourceType)\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 418\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\\n\"\n  syntax:\n    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, SafeHandle safeHandle, AccessControlSections includeSections)\n    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, safeHandle As SafeHandle, includeSections As AccessControlSections)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.ObjectSecurity`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container object.</p>\\n\"\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: \"\\n<p>The type of resource.</p>\\n\"\n    - id: safeHandle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: \"\\n<p>A handle.</p>\\n\"\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: \"\\n<p>The sections to include.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections)\n  nameWithType.vb: ObjectSecurity(Of T).ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 419\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\\n\"\n  syntax:\n    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, SafeHandle safeHandle, AccessControlSections includeSections, NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)\n    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, safeHandle As SafeHandle, includeSections As AccessControlSections, exceptionFromErrorCode As NativeObjectSecurity.ExceptionFromErrorCode, exceptionContext As Object)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.ObjectSecurity`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container object.</p>\\n\"\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: \"\\n<p>The type of resource.</p>\\n\"\n    - id: safeHandle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: \"\\n<p>A handle.</p>\\n\"\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: \"\\n<p>The sections to include.</p>\\n\"\n    - id: exceptionFromErrorCode\n      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n      description: \"\\n<p>A delegate implemented by integrators that provides custom exceptions.</p>\\n\"\n    - id: exceptionContext\n      type: System.Object\n      description: \"\\n<p>An object that contains contextual information about the source or destination of the exception.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)\n  nameWithType.vb: ObjectSecurity(Of T).ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: ObjectSecurity(Boolean, ResourceType, String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 420\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\\n\"\n  syntax:\n    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections)\n    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, name As String, includeSections As AccessControlSections)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.ObjectSecurity`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container object.</p>\\n\"\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: \"\\n<p>The type of resource.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the securable object with which the new <xref href=\\\"System.Security.AccessControl.ObjectSecurity`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is associated.</p>\\n\"\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: \"\\n<p>The sections to include.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity(Boolean, ResourceType, String, AccessControlSections)\n  nameWithType.vb: ObjectSecurity(Of T).ObjectSecurity(Boolean, ResourceType, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: ObjectSecurity(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 421\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\\n\"\n  syntax:\n    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections, NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)\n    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, name As String, includeSections As AccessControlSections, exceptionFromErrorCode As NativeObjectSecurity.ExceptionFromErrorCode, exceptionContext As Object)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.ObjectSecurity`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container object.</p>\\n\"\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: \"\\n<p>The type of resource.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the securable object with which the new <xref href=\\\"System.Security.AccessControl.ObjectSecurity`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is associated.</p>\\n\"\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: \"\\n<p>The sections to include. </p>\\n\"\n    - id: exceptionFromErrorCode\n      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n      description: \"\\n<p>A delegate implemented by integrators that provides custom exceptions.</p>\\n\"\n    - id: exceptionContext\n      type: System.Object\n      description: \"\\n<p>An object that contains contextual information about the source or destination of the exception.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)\n  nameWithType.vb: ObjectSecurity(Of T).ObjectSecurity(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.AccessRightType\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRightType\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 422\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the Type of the securable object associated with this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public override Type AccessRightType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRightType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the securable object associated with the current instance.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AccessRightType\n  nameWithType: ObjectSecurity<T>.AccessRightType\n  nameWithType.vb: ObjectSecurity(Of T).AccessRightType\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.AccessRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleType\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 423\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object. </p>\\n\"\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The Type of the object associated with the access rules of the current instance.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AccessRuleType\n  nameWithType: ObjectSecurity<T>.AccessRuleType\n  nameWithType.vb: ObjectSecurity(Of T).AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.AuditRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleType\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 424\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AuditRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The Type object associated with the audit rules of the current instance.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AuditRuleType\n  nameWithType: ObjectSecurity<T>.AuditRuleType\n  nameWithType.vb: ObjectSecurity(Of T).AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleFactory\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 425\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.</p>\\n\"\n  syntax:\n    content: public override AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)\n    content.vb: Public Overrides Function AccessRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>Represents a user account.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access type.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong></strong>\\n<strong>true</strong> if the access rule is inherited; otherwise, <strong>false</strong>.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Specifies how to propagate access masks to child objects.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Specifies how to propagate Access Control Entries (ACEs) to child objects.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>Specifies whether access is allowed or denied.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: \"\\n<p>Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  nameWithType: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType.vb: ObjectSecurity(Of T).AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: AddAccessRule(AccessRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.AddAccessRule(System.Security.AccessControl.AccessRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAccessRule\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 426\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public virtual void AddAccessRule(AccessRule<T> rule)\n    content.vb: Public Overridable Sub AddAccessRule(rule As AccessRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule{{T}}\n      description: \"\\n<p>The rule to add.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AddAccessRule(System.Security.AccessControl.AccessRule(Of T))\n  name.vb: AddAccessRule(AccessRule(Of T))\n  nameWithType: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).AddAccessRule(AccessRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  id: AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: AddAuditRule(AuditRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.AddAuditRule(System.Security.AccessControl.AuditRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAuditRule\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 427\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public virtual void AddAuditRule(AuditRule<T> rule)\n    content.vb: Public Overridable Sub AddAuditRule(rule As AuditRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule{{T}}\n      description: \"\\n<p>The audit rule to add.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AddAuditRule(System.Security.AccessControl.AuditRule(Of T))\n  name.vb: AddAuditRule(AuditRule(Of T))\n  nameWithType: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).AddAuditRule(AuditRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleFactory\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 428\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.AuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class representing the specified audit rule for the specified user.</p>\\n\"\n  syntax:\n    content: public override AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)\n    content.vb: Public Overrides Function AuditRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>Represents a user account. </p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>An integer that specifies an access type.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the access rule is inherited; otherwise, <strong>false</strong>.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Specifies how to propagate access masks to child objects.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Specifies how to propagate Access Control Entries (ACEs) to child objects.</p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>Describes the type of auditing to perform.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: \"\\n<p>Returns the specified audit rule for the specified user.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  nameWithType: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType.vb: ObjectSecurity(Of T).AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)\n  id: Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: Persist(SafeHandle)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.Persist(System.Runtime.InteropServices.SafeHandle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Persist\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 429\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.</p>\\n\"\n  syntax:\n    content: protected void Persist(SafeHandle handle)\n    content.vb: Protected Sub Persist(handle As SafeHandle)\n    parameters:\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: \"\\n<p>The handle of the securable object with which this ObjectSecurity`1 object is associated.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).Persist(System.Runtime.InteropServices.SafeHandle)\n  nameWithType: ObjectSecurity<T>.Persist(SafeHandle)\n  nameWithType.vb: ObjectSecurity(Of T).Persist(SafeHandle)\n- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)\n  id: Persist(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: Persist(String)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.Persist(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Persist\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 430\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.</p>\\n\"\n  syntax:\n    content: protected void Persist(string name)\n    content.vb: Protected Sub Persist(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the securable object with which this ObjectSecurity`1 object is associated.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).Persist(System.String)\n  nameWithType: ObjectSecurity<T>.Persist(String)\n  nameWithType.vb: ObjectSecurity(Of T).Persist(String)\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRule(AccessRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAccessRule(System.Security.AccessControl.AccessRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRule\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 431\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public virtual bool RemoveAccessRule(AccessRule<T> rule)\n    content.vb: Public Overridable Function RemoveAccessRule(rule As AccessRule(Of T)) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule{{T}}\n      description: \"\\n<p>The rule to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the access rule was successfully removed; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAccessRule(System.Security.AccessControl.AccessRule(Of T))\n  name.vb: RemoveAccessRule(AccessRule(Of T))\n  nameWithType: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).RemoveAccessRule(AccessRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleAll(AccessRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleAll\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 432\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public virtual void RemoveAccessRuleAll(AccessRule<T> rule)\n    content.vb: Public Overridable Sub RemoveAccessRuleAll(rule As AccessRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule{{T}}\n      description: \"\\n<p>The access rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAccessRuleAll(System.Security.AccessControl.AccessRule(Of T))\n  name.vb: RemoveAccessRuleAll(AccessRule(Of T))\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).RemoveAccessRuleAll(AccessRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleSpecific(AccessRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleSpecific\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 433\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object</p>\\n\"\n  syntax:\n    content: public virtual void RemoveAccessRuleSpecific(AccessRule<T> rule)\n    content.vb: Public Overridable Sub RemoveAccessRuleSpecific(rule As AccessRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule{{T}}\n      description: \"\\n<p>The access rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule(Of T))\n  name.vb: RemoveAccessRuleSpecific(AccessRule(Of T))\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).RemoveAccessRuleSpecific(AccessRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  id: RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRule(AuditRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAuditRule(System.Security.AccessControl.AuditRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRule\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 434\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public virtual bool RemoveAuditRule(AuditRule<T> rule)\n    content.vb: Public Overridable Function RemoveAuditRule(rule As AuditRule(Of T)) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule{{T}}\n      description: \"\\n<p>The audit rule to remove</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the object was removed; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAuditRule(System.Security.AccessControl.AuditRule(Of T))\n  name.vb: RemoveAuditRule(AuditRule(Of T))\n  nameWithType: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).RemoveAuditRule(AuditRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleAll(AuditRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleAll\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 435\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</p>\\n\"\n  syntax:\n    content: public virtual void RemoveAuditRuleAll(AuditRule<T> rule)\n    content.vb: Public Overridable Sub RemoveAuditRuleAll(rule As AuditRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule{{T}}\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAuditRuleAll(System.Security.AccessControl.AuditRule(Of T))\n  name.vb: RemoveAuditRuleAll(AuditRule(Of T))\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).RemoveAuditRuleAll(AuditRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleSpecific(AuditRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleSpecific\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 436\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object</p>\\n\"\n  syntax:\n    content: public virtual void RemoveAuditRuleSpecific(AuditRule<T> rule)\n    content.vb: Public Overridable Sub RemoveAuditRuleSpecific(rule As AuditRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule{{T}}\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule(Of T))\n  name.vb: RemoveAuditRuleSpecific(AuditRule(Of T))\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).RemoveAuditRuleSpecific(AuditRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: ResetAccessRule(AccessRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.ResetAccessRule(System.Security.AccessControl.AccessRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetAccessRule\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 437\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.</p>\\n\"\n  syntax:\n    content: public virtual void ResetAccessRule(AccessRule<T> rule)\n    content.vb: Public Overridable Sub ResetAccessRule(rule As AccessRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule{{T}}\n      description: \"\\n<p>The access rule to reset.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ResetAccessRule(System.Security.AccessControl.AccessRule(Of T))\n  name.vb: ResetAccessRule(AccessRule(Of T))\n  nameWithType: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).ResetAccessRule(AccessRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: SetAccessRule(AccessRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.SetAccessRule(System.Security.AccessControl.AccessRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessRule\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 438\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.</p>\\n\"\n  syntax:\n    content: public virtual void SetAccessRule(AccessRule<T> rule)\n    content.vb: Public Overridable Sub SetAccessRule(rule As AccessRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule{{T}}\n      description: \"\\n<p>The access rule to set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).SetAccessRule(System.Security.AccessControl.AccessRule(Of T))\n  name.vb: SetAccessRule(AccessRule(Of T))\n  nameWithType: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).SetAccessRule(AccessRule(Of T))\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  id: SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  - vb\n  name: SetAuditRule(AuditRule<T>)\n  fullName: System.Security.AccessControl.ObjectSecurity<T>.SetAuditRule(System.Security.AccessControl.AuditRule<T>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAuditRule\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 439\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.</p>\\n\"\n  syntax:\n    content: public virtual void SetAuditRule(AuditRule<T> rule)\n    content.vb: Public Overridable Sub SetAuditRule(rule As AuditRule(Of T))\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule{{T}}\n      description: \"\\n<p>The audit rule to set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).SetAuditRule(System.Security.AccessControl.AuditRule(Of T))\n  name.vb: SetAuditRule(AuditRule(Of T))\n  nameWithType: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)\n  nameWithType.vb: ObjectSecurity(Of T).SetAuditRule(AuditRule(Of T))\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.ObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n  commentId: T:System.Security.AccessControl.ObjectSecurity\n  nameWithType: ObjectSecurity\n- uid: System.Security.AccessControl.CommonObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonObjectSecurity\n  fullName: System.Security.AccessControl.CommonObjectSecurity\n  commentId: T:System.Security.AccessControl.CommonObjectSecurity\n  nameWithType: CommonObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n  commentId: T:System.Security.AccessControl.NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAccessRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAuditRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  fullName: System.Security.AccessControl.ObjectSecurity.IsDS\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS\n  nameWithType: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetGroup(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetOwner(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: Persist(Boolean, String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAccessRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAuditRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock\n  nameWithType: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  nameWithType: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetGroup(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetOwner(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())\n  name.vb: SetSecurityDescriptorBinaryForm(Byte())\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte())\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)\n  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock\n  nameWithType: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  nameWithType: ObjectSecurity.WriteUnlock()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.AccessControl.ResourceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ResourceType\n  fullName: System.Security.AccessControl.ResourceType\n  commentId: T:System.Security.AccessControl.ResourceType\n  nameWithType: ResourceType\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n  nameWithType: SafeHandle\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n  commentId: T:System.Security.AccessControl.AccessControlSections\n  nameWithType: AccessControlSections\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity.ExceptionFromErrorCode\n  fullName: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n  commentId: T:System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n  nameWithType: NativeObjectSecurity.ExceptionFromErrorCode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n  commentId: T:System.Security.AccessControl.AccessControlType\n  nameWithType: AccessControlType\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n  commentId: T:System.Security.AccessControl.AccessRule\n  nameWithType: AccessRule\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.AccessControl.AccessRule{{T}}\n  parent: System.Security.AccessControl\n  definition: System.Security.AccessControl.AccessRule`1\n  name: AccessRule<T>\n  fullName: System.Security.AccessControl.AccessRule<T>\n  fullname.vb: System.Security.AccessControl.AccessRule(Of T)\n  name.vb: AccessRule(Of T)\n  spec.csharp:\n  - uid: System.Security.AccessControl.AccessRule`1\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Security.AccessControl.AccessRule`1\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Security.AccessControl.AccessRule{`0}\n  nameWithType: AccessRule<T>\n  nameWithType.vb: AccessRule(Of T)\n- uid: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule<T>\n  fullName: System.Security.AccessControl.AccessRule<T>\n  fullname.vb: System.Security.AccessControl.AccessRule(Of T)\n  name.vb: AccessRule(Of T)\n  spec.csharp:\n  - uid: System.Security.AccessControl.AccessRule`1\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Security.AccessControl.AccessRule`1\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Security.AccessControl.AccessRule`1\n  nameWithType: AccessRule<T>\n  nameWithType.vb: AccessRule(Of T)\n- uid: System.Security.AccessControl.AuditRule{{T}}\n  parent: System.Security.AccessControl\n  definition: System.Security.AccessControl.AuditRule`1\n  name: AuditRule<T>\n  fullName: System.Security.AccessControl.AuditRule<T>\n  fullname.vb: System.Security.AccessControl.AuditRule(Of T)\n  name.vb: AuditRule(Of T)\n  spec.csharp:\n  - uid: System.Security.AccessControl.AuditRule`1\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Security.AccessControl.AuditRule`1\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Security.AccessControl.AuditRule{`0}\n  nameWithType: AuditRule<T>\n  nameWithType.vb: AuditRule(Of T)\n- uid: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule<T>\n  fullName: System.Security.AccessControl.AuditRule<T>\n  fullname.vb: System.Security.AccessControl.AuditRule(Of T)\n  name.vb: AuditRule(Of T)\n  spec.csharp:\n  - uid: System.Security.AccessControl.AuditRule`1\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Security.AccessControl.AuditRule`1\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Security.AccessControl.AuditRule`1\n  nameWithType: AuditRule<T>\n  nameWithType.vb: AuditRule(Of T)\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n  commentId: T:System.Security.AccessControl.AuditFlags\n  nameWithType: AuditFlags\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n  commentId: T:System.Security.AccessControl.AuditRule\n  nameWithType: AuditRule\n"}