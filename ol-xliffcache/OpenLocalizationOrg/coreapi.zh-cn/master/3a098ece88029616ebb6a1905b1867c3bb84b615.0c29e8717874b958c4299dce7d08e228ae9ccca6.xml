{"nodes":[{"pos":[1676,1681],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[3187,3206],"content":"Claim(BinaryReader)","needQuote":true,"nodes":[{"content":"Claim(BinaryReader)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;&lt;/p&gt;\\n","pos":[3860,3871],"source":"\\n<p></p>\\n"},{"pos":[4339,4374],"content":"Claim(BinaryReader, ClaimsIdentity)","needQuote":true,"nodes":[{"content":"Claim(BinaryReader, ClaimsIdentity)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The binary reader.&lt;/p&gt;\\n","pos":[5286,5315],"source":"\\n<p>The binary reader.</p>\\n"},{"content":"\\n&lt;p&gt;The subject that this claim describes.&lt;/p&gt;\\n","pos":[5405,5454],"source":"\\n<p>The subject that this claim describes.</p>\\n"},{"pos":[5842,5854],"content":"Claim(Claim)","needQuote":true,"nodes":[{"content":"Claim(Claim)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The security claim.&lt;/p&gt;\\n","pos":[6638,6668],"source":"\\n<p>The security claim.</p>\\n"},{"pos":[7153,7181],"content":"Claim(Claim, ClaimsIdentity)","needQuote":true,"nodes":[{"content":"Claim(Claim, ClaimsIdentity)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The security claim.&lt;/p&gt;\\n","pos":[8102,8132],"source":"\\n<p>The security claim.</p>\\n"},{"content":"\\n&lt;p&gt;The subject that this claim describes.&lt;/p&gt;\\n","pos":[8222,8271],"source":"\\n<p>The subject that this claim describes.</p>\\n"},{"pos":[8655,8676],"content":"Claim(String, String)","needQuote":true,"nodes":[{"content":"Claim(String, String)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The claim type.&lt;/p&gt;\\n","pos":[9510,9536],"source":"\\n<p>The claim type.</p>\\n"},{"content":"\\n&lt;p&gt;The claim value.&lt;/p&gt;\\n","pos":[9600,9627],"source":"\\n<p>The claim value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9746,9816],"source":"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[10440,10469],"content":"Claim(String, String, String)","needQuote":true,"nodes":[{"content":"Claim(String, String, String)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The claim type.&lt;/p&gt;\\n","pos":[11369,11395],"source":"\\n<p>The claim type.</p>\\n"},{"content":"\\n&lt;p&gt;The claim value.&lt;/p&gt;\\n","pos":[11459,11486],"source":"\\n<p>The claim value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11869,11939],"source":"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[12613,12650],"content":"Claim(String, String, String, String)","needQuote":true,"nodes":[{"content":"Claim(String, String, String, String)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The claim type.&lt;/p&gt;\\n","pos":[13606,13632],"source":"\\n<p>The claim type.</p>\\n"},{"content":"\\n&lt;p&gt;The claim value.&lt;/p&gt;\\n","pos":[13696,13723],"source":"\\n<p>The claim value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[14378,14448],"source":"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[15172,15217],"content":"Claim(String, String, String, String, String)","needQuote":true,"nodes":[{"content":"Claim(String, String, String, String, String)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The claim type.&lt;/p&gt;\\n","pos":[16255,16281],"source":"\\n<p>The claim type.</p>\\n"},{"content":"\\n&lt;p&gt;The claim value.&lt;/p&gt;\\n","pos":[16345,16372],"source":"\\n<p>The claim value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17452,17522],"source":"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[18368,18429],"content":"Claim(String, String, String, String, String, ClaimsIdentity)","needQuote":true,"nodes":[{"content":"Claim(String, String, String, String, String, ClaimsIdentity)","pos":[0,61]}]},{"content":"\\n&lt;p&gt;The claim type.&lt;/p&gt;\\n","pos":[19564,19590],"source":"\\n<p>The claim type.</p>\\n"},{"content":"\\n&lt;p&gt;The claim value.&lt;/p&gt;\\n","pos":[19654,19681],"source":"\\n<p>The claim value.</p>\\n"},{"content":"\\n&lt;p&gt;The subject that this claim describes.&lt;/p&gt;\\n","pos":[20732,20781],"source":"\\n<p>The subject that this claim describes.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20900,20970],"source":"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[21557,21580],"content":"CustomSerializationData","needQuote":true,"nodes":[{"content":"CustomSerializationData","pos":[0,23]}]},{"pos":[22724,22730],"content":"Issuer","needQuote":true,"nodes":[{"content":"Issuer","pos":[0,6]}]},{"content":"\\n&lt;p&gt;A name that refers to the issuer of the claim.&lt;/p&gt;\\n","pos":[23376,23433],"source":"\\n<p>A name that refers to the issuer of the claim.</p>\\n"},{"pos":[23995,24009],"content":"OriginalIssuer","needQuote":true,"nodes":[{"content":"OriginalIssuer","pos":[0,14]}]},{"content":"\\n&lt;p&gt;A name that refers to the original issuer of the claim.&lt;/p&gt;\\n","pos":[24697,24763],"source":"\\n<p>A name that refers to the original issuer of the claim.</p>\\n"},{"pos":[25305,25315],"content":"Properties","needQuote":true,"nodes":[{"content":"Properties","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A dictionary that contains additional properties associated with the claim.","pos":[26128,26208],"source":"\\n<p>A dictionary that contains additional properties associated with the claim."},{"content":"The properties are represented as name-value pairs.&lt;/p&gt;\\n","pos":[26209,26266],"source":" The properties are represented as name-value pairs.</p>\\n"},{"pos":[26680,26687],"content":"Subject","needQuote":true,"nodes":[{"content":"Subject","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The subject of the claim.&lt;/p&gt;\\n","pos":[27378,27414],"source":"\\n<p>The subject of the claim.</p>\\n"},{"pos":[27700,27704],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The claim type.&lt;/p&gt;\\n","pos":[28346,28372],"source":"\\n<p>The claim type.</p>\\n"},{"pos":[28658,28663],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The claim value.&lt;/p&gt;\\n","pos":[29304,29331],"source":"\\n<p>The claim value.</p>\\n"},{"pos":[29841,29850],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The claim value type.&lt;/p&gt;\\n","pos":[30512,30544],"source":"\\n<p>The claim value type.</p>\\n"},{"pos":[30943,30950],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The new claim object.&lt;/p&gt;\\n","pos":[31734,31766],"source":"\\n<p>The new claim object.</p>\\n"},{"pos":[32179,32200],"content":"Clone(ClaimsIdentity)","needQuote":true,"nodes":[{"content":"Clone(ClaimsIdentity)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The intended subject of the new claim.&lt;/p&gt;\\n","pos":[33134,33183],"source":"\\n<p>The intended subject of the new claim.</p>\\n"},{"content":"\\n&lt;p&gt;The new claim object.&lt;/p&gt;\\n","pos":[33258,33290],"source":"\\n<p>The new claim object.</p>\\n"},{"pos":[33609,33619],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[34918,34939],"content":"WriteTo(BinaryWriter)","needQuote":true,"nodes":[{"content":"WriteTo(BinaryWriter)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;&lt;/p&gt;\\n","pos":[35623,35634],"source":"\\n<p></p>\\n"},{"pos":[36064,36093],"content":"WriteTo(BinaryWriter, Byte[])","needQuote":true,"nodes":[{"content":"WriteTo(BinaryWriter, Byte[])","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The writer to write this claim&lt;/p&gt;\\n","pos":[36950,36991],"source":"\\n<p>The writer to write this claim</p>\\n"},{"content":"\\n&lt;p&gt;The user data to claim&lt;/p&gt;\\n","pos":[37058,37091],"source":"\\n<p>The user data to claim</p>\\n"},{"pos":[37494,37516],"content":"System.Security.Claims","needQuote":true,"nodes":[{"content":"System.Security.Claims","pos":[0,22]}]},{"pos":[37695,37701],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37874,37888],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[38007,38013],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38080,38081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38131,38137],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38197,38198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38281,38287],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38354,38355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38405,38411],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38471,38472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38686,38708],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[38856,38862],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38929,38930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38980,38986],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39047,39048]},{"pos":[39103,39109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39169,39170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39267,39273],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[39340,39341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39391,39397],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39458,39459]},{"pos":[39514,39520],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39580,39581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39826,39857],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[40023,40038],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[40114,40115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40165,40171],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40232,40233]},{"pos":[40288,40294],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40354,40355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40461,40476],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[40552,40553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40603,40609],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40670,40671]},{"pos":[40726,40732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40792,40793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41023,41036],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[41137,41148],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[41220,41221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41248,41249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41322,41333],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[41405,41406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41433,41434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41609,41618],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[41711,41718],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[41786,41787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41814,41815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41884,41891],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[41959,41960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41987,41988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42163,42180],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[42289,42304],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[42380,42381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42408,42409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42486,42501],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[42577,42578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42605,42606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42751,42757],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[42900,42912],"content":"BinaryReader","needQuote":true,"nodes":[{"content":"BinaryReader","pos":[0,12]}]},{"pos":[43060,43069],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[43249,43263],"content":"ClaimsIdentity","needQuote":true,"nodes":[{"content":"ClaimsIdentity","pos":[0,14]}]},{"pos":[43495,43500],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[43674,43680],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[43788,43794],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[43914,43918],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[43977,43979]},{"pos":[44042,44046],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[44104,44106],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[44348,44375],"content":"IDictionary<String, String>","needQuote":true,"nodes":[{"content":"IDictionary&lt;String, String&gt;","pos":[0,27],"source":"IDictionary<String, String>"}]},{"pos":[44661,44672],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[44757,44758],"content":"<","needQuote":true,"nodes":[]},{"pos":[44808,44814],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[44875,44876]},{"pos":[44931,44937],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45090,45101],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[45187,45190]},{"pos":[45247,45253],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[45314,45315]},{"pos":[45370,45376],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45436,45437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45707,45732],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[45984,45995],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[46059,46060],"content":"<","needQuote":true,"nodes":[]},{"pos":[46087,46091],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[46122,46123]},{"pos":[46155,46161],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[46286,46297],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[46362,46365]},{"pos":[46399,46403],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[46434,46435]},{"pos":[46467,46473],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[46505,46506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46731,46757],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[46963,46973],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[47068,47076],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[47145,47146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47173,47174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47244,47252],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[47321,47322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47349,47350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47517,47529],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"pos":[47696,47717],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Claims.Claim\n  commentId: T:System.Security.Claims.Claim\n  id: Claim\n  parent: System.Security.Claims\n  children:\n  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)\n  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)\n  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)\n  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)\n  - System.Security.Claims.Claim.#ctor(System.String,System.String)\n  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)\n  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)\n  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)\n  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)\n  - System.Security.Claims.Claim.Clone\n  - System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)\n  - System.Security.Claims.Claim.CustomSerializationData\n  - System.Security.Claims.Claim.Issuer\n  - System.Security.Claims.Claim.OriginalIssuer\n  - System.Security.Claims.Claim.Properties\n  - System.Security.Claims.Claim.Subject\n  - System.Security.Claims.Claim.ToString\n  - System.Security.Claims.Claim.Type\n  - System.Security.Claims.Claim.Value\n  - System.Security.Claims.Claim.ValueType\n  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)\n  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  langs:\n  - csharp\n  - vb\n  name: Claim\n  fullName: System.Security.Claims.Claim\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Claim\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 10\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Represents a claim.</p>\\n\"\n  syntax:\n    content: public class Claim\n    content.vb: Public Class Claim\n  seealso:\n  - type: System.Security.Claims.ClaimsIdentity\n    commentId: T:System.Security.Claims.ClaimsIdentity\n  - type: System.Security.Claims.ClaimsPrincipal\n    commentId: T:System.Security.Claims.ClaimsPrincipal\n  - type: System.IdentityModel.Tokens.IssuerNameRegistry\n    commentId: T:System.IdentityModel.Tokens.IssuerNameRegistry\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Claim\n- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)\n  id: '#ctor(System.IO.BinaryReader)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(BinaryReader)\n  fullName: System.Security.Claims.Claim.Claim(System.IO.BinaryReader)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 12\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p></p>\\n\"\n  syntax:\n    content: public Claim(BinaryReader reader)\n    content.vb: Public Sub New(reader As BinaryReader)\n    parameters:\n    - id: reader\n      type: System.IO.BinaryReader\n      description: \"\\n<p></p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Claim.Claim(BinaryReader)\n- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)\n  id: '#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(BinaryReader, ClaimsIdentity)\n  fullName: System.Security.Claims.Claim.Claim(System.IO.BinaryReader, System.Security.Claims.ClaimsIdentity)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 13\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified reader, and subject.</p>\\n\"\n  syntax:\n    content: public Claim(BinaryReader reader, ClaimsIdentity subject)\n    content.vb: Public Sub New(reader As BinaryReader, subject As ClaimsIdentity)\n    parameters:\n    - id: reader\n      type: System.IO.BinaryReader\n      description: \"\\n<p>The binary reader.</p>\\n\"\n    - id: subject\n      type: System.Security.Claims.ClaimsIdentity\n      description: \"\\n<p>The subject that this claim describes.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Claim.Claim(BinaryReader, ClaimsIdentity)\n- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)\n  id: '#ctor(System.Security.Claims.Claim)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(Claim)\n  fullName: System.Security.Claims.Claim.Claim(System.Security.Claims.Claim)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 14\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected Claim(Claim other)\n    content.vb: Protected Sub New(other As Claim)\n    parameters:\n    - id: other\n      type: System.Security.Claims.Claim\n      description: \"\\n<p>The security claim.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: Claim.Claim(Claim)\n- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)\n  id: '#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(Claim, ClaimsIdentity)\n  fullName: System.Security.Claims.Claim.Claim(System.Security.Claims.Claim, System.Security.Claims.ClaimsIdentity)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 15\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified security claim, and subject.</p>\\n\"\n  syntax:\n    content: protected Claim(Claim other, ClaimsIdentity subject)\n    content.vb: Protected Sub New(other As Claim, subject As ClaimsIdentity)\n    parameters:\n    - id: other\n      type: System.Security.Claims.Claim\n      description: \"\\n<p>The security claim.</p>\\n\"\n    - id: subject\n      type: System.Security.Claims.ClaimsIdentity\n      description: \"\\n<p>The subject that this claim describes.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: Claim.Claim(Claim, ClaimsIdentity)\n- uid: System.Security.Claims.Claim.#ctor(System.String,System.String)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(String, String)\n  fullName: System.Security.Claims.Claim.Claim(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 16\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified claim type, and value.</p>\\n\"\n  syntax:\n    content: public Claim(string type, string value)\n    content.vb: Public Sub New(type As String, value As String)\n    parameters:\n    - id: type\n      type: System.String\n      description: \"\\n<p>The claim type.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The claim value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.ClaimTypes\n    commentId: T:System.Security.Claims.ClaimTypes\n  - type: System.Security.Claims.ClaimValueTypes\n    commentId: T:System.Security.Claims.ClaimValueTypes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Claim.Claim(String, String)\n- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(String, String, String)\n  fullName: System.Security.Claims.Claim.Claim(System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 17\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified claim type, value, and value type.</p>\\n\"\n  syntax:\n    content: public Claim(string type, string value, string valueType)\n    content.vb: Public Sub New(type As String, value As String, valueType As String)\n    parameters:\n    - id: type\n      type: System.String\n      description: \"\\n<p>The claim type.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The claim value.</p>\\n\"\n    - id: valueType\n      type: System.String\n      description: \"\\n<p>The claim value type. If this parameter is <strong>null</strong>, then <xref href=\\\"System.Security.Claims.ClaimValueTypes.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.ClaimTypes\n    commentId: T:System.Security.Claims.ClaimTypes\n  - type: System.Security.Claims.ClaimValueTypes\n    commentId: T:System.Security.Claims.ClaimValueTypes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Claim.Claim(String, String, String)\n- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String,System.String)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(String, String, String, String)\n  fullName: System.Security.Claims.Claim.Claim(System.String, System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 18\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified claim type, value, value type, and issuer.</p>\\n\"\n  syntax:\n    content: public Claim(string type, string value, string valueType, string issuer)\n    content.vb: Public Sub New(type As String, value As String, valueType As String, issuer As String)\n    parameters:\n    - id: type\n      type: System.String\n      description: \"\\n<p>The claim type.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The claim value.</p>\\n\"\n    - id: valueType\n      type: System.String\n      description: \"\\n<p>The claim value type. If this parameter is <strong>null</strong>, then <xref href=\\\"System.Security.Claims.ClaimValueTypes.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used.</p>\\n\"\n    - id: issuer\n      type: System.String\n      description: \"\\n<p>The claim issuer. If this parameter is empty or <strong>null</strong>, then <xref href=\\\"System.Security.Claims.ClaimsIdentity.DefaultIssuer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.ClaimTypes\n    commentId: T:System.Security.Claims.ClaimTypes\n  - type: System.Security.Claims.ClaimValueTypes\n    commentId: T:System.Security.Claims.ClaimValueTypes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Claim.Claim(String, String, String, String)\n- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(String, String, String, String, String)\n  fullName: System.Security.Claims.Claim.Claim(System.String, System.String, System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 19\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified claim type, value, value type, issuer,  and original issuer.</p>\\n\"\n  syntax:\n    content: public Claim(string type, string value, string valueType, string issuer, string originalIssuer)\n    content.vb: Public Sub New(type As String, value As String, valueType As String, issuer As String, originalIssuer As String)\n    parameters:\n    - id: type\n      type: System.String\n      description: \"\\n<p>The claim type.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The claim value.</p>\\n\"\n    - id: valueType\n      type: System.String\n      description: \"\\n<p>The claim value type. If this parameter is <strong>null</strong>, then <xref href=\\\"System.Security.Claims.ClaimValueTypes.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used.</p>\\n\"\n    - id: issuer\n      type: System.String\n      description: \"\\n<p>The claim issuer. If this parameter is empty or <strong>null</strong>, then <xref href=\\\"System.Security.Claims.ClaimsIdentity.DefaultIssuer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used.</p>\\n\"\n    - id: originalIssuer\n      type: System.String\n      description: \"\\n<p>The original issuer of the claim. If this parameter is empty or <strong>null</strong>, then the <xref href=\\\"System.Security.Claims.Claim.OriginalIssuer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to the value of the <xref href=\\\"System.Security.Claims.Claim.Issuer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.ClaimTypes\n    commentId: T:System.Security.Claims.ClaimTypes\n  - type: System.Security.Claims.ClaimValueTypes\n    commentId: T:System.Security.Claims.ClaimValueTypes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Claim.Claim(String, String, String, String, String)\n- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)\n  commentId: M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)\n  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)'\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Claim(String, String, String, String, String, ClaimsIdentity)\n  fullName: System.Security.Claims.Claim.Claim(System.String, System.String, System.String, System.String, System.String, System.Security.Claims.ClaimsIdentity)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 20\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified claim type, value, value type, issuer, original issuer and subject.</p>\\n\"\n  syntax:\n    content: public Claim(string type, string value, string valueType, string issuer, string originalIssuer, ClaimsIdentity subject)\n    content.vb: Public Sub New(type As String, value As String, valueType As String, issuer As String, originalIssuer As String, subject As ClaimsIdentity)\n    parameters:\n    - id: type\n      type: System.String\n      description: \"\\n<p>The claim type.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The claim value.</p>\\n\"\n    - id: valueType\n      type: System.String\n      description: \"\\n<p>The claim value type. If this parameter is <strong>null</strong>, then <xref href=\\\"System.Security.Claims.ClaimValueTypes.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used.</p>\\n\"\n    - id: issuer\n      type: System.String\n      description: \"\\n<p>The claim issuer. If this parameter is empty or <strong>null</strong>, then <xref href=\\\"System.Security.Claims.ClaimsIdentity.DefaultIssuer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used.</p>\\n\"\n    - id: originalIssuer\n      type: System.String\n      description: \"\\n<p>The original issuer of the claim. If this parameter is empty or <strong>null</strong>, then the <xref href=\\\"System.Security.Claims.Claim.OriginalIssuer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to the value of the <xref href=\\\"System.Security.Claims.Claim.Issuer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n    - id: subject\n      type: System.Security.Claims.ClaimsIdentity\n      description: \"\\n<p>The subject that this claim describes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> or <em>value</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.ClaimTypes\n    commentId: T:System.Security.Claims.ClaimTypes\n  - type: System.Security.Claims.ClaimValueTypes\n    commentId: T:System.Security.Claims.ClaimValueTypes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Claim.Claim(String, String, String, String, String, ClaimsIdentity)\n- uid: System.Security.Claims.Claim.CustomSerializationData\n  commentId: P:System.Security.Claims.Claim.CustomSerializationData\n  id: CustomSerializationData\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: CustomSerializationData\n  fullName: System.Security.Claims.Claim.CustomSerializationData\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CustomSerializationData\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 21\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p></p>\\n\"\n  syntax:\n    content: protected virtual byte[] CustomSerializationData { get; }\n    content.vb: Protected Overridable ReadOnly Property CustomSerializationData As Byte()\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>Returns <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  - get\n  modifiers.vb:\n  - Protected\n  - Overridable\n  - ReadOnly\n  nameWithType: Claim.CustomSerializationData\n- uid: System.Security.Claims.Claim.Issuer\n  commentId: P:System.Security.Claims.Claim.Issuer\n  id: Issuer\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Issuer\n  fullName: System.Security.Claims.Claim.Issuer\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Issuer\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 22\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Gets the issuer of the claim.</p>\\n\"\n  syntax:\n    content: public string Issuer { get; }\n    content.vb: Public ReadOnly Property Issuer As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A name that refers to the issuer of the claim.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.Claim.OriginalIssuer\n    commentId: P:System.Security.Claims.Claim.OriginalIssuer\n  - type: System.IdentityModel.Tokens.IssuerNameRegistry\n    commentId: T:System.IdentityModel.Tokens.IssuerNameRegistry\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Claim.Issuer\n- uid: System.Security.Claims.Claim.OriginalIssuer\n  commentId: P:System.Security.Claims.Claim.OriginalIssuer\n  id: OriginalIssuer\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: OriginalIssuer\n  fullName: System.Security.Claims.Claim.OriginalIssuer\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OriginalIssuer\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 23\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Gets the original issuer of the claim. </p>\\n\"\n  syntax:\n    content: public string OriginalIssuer { get; }\n    content.vb: Public ReadOnly Property OriginalIssuer As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A name that refers to the original issuer of the claim.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.Claim.Issuer\n    commentId: P:System.Security.Claims.Claim.Issuer\n  - type: System.IdentityModel.Tokens.IssuerNameRegistry\n    commentId: T:System.IdentityModel.Tokens.IssuerNameRegistry\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Claim.OriginalIssuer\n- uid: System.Security.Claims.Claim.Properties\n  commentId: P:System.Security.Claims.Claim.Properties\n  id: Properties\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Properties\n  fullName: System.Security.Claims.Claim.Properties\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Properties\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 24\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Gets a dictionary that contains additional properties associated with this claim.</p>\\n\"\n  syntax:\n    content: public IDictionary<string, string> Properties { get; }\n    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: \"\\n<p>A dictionary that contains additional properties associated with the claim. The properties are represented as name-value pairs.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.ClaimProperties\n    commentId: T:System.Security.Claims.ClaimProperties\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Claim.Properties\n- uid: System.Security.Claims.Claim.Subject\n  commentId: P:System.Security.Claims.Claim.Subject\n  id: Subject\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Subject\n  fullName: System.Security.Claims.Claim.Subject\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subject\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 25\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Gets the subject of the claim.</p>\\n\"\n  syntax:\n    content: public ClaimsIdentity Subject { get; }\n    content.vb: Public ReadOnly Property Subject As ClaimsIdentity\n    parameters: []\n    return:\n      type: System.Security.Claims.ClaimsIdentity\n      description: \"\\n<p>The subject of the claim.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Claim.Subject\n- uid: System.Security.Claims.Claim.Type\n  commentId: P:System.Security.Claims.Claim.Type\n  id: Type\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Security.Claims.Claim.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 26\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Gets the claim type of the claim.</p>\\n\"\n  syntax:\n    content: public string Type { get; }\n    content.vb: Public ReadOnly Property Type As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The claim type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Claim.Type\n- uid: System.Security.Claims.Claim.Value\n  commentId: P:System.Security.Claims.Claim.Value\n  id: Value\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Security.Claims.Claim.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 27\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Gets the value of the claim.</p>\\n\"\n  syntax:\n    content: public string Value { get; }\n    content.vb: Public ReadOnly Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The claim value.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.Claim.ValueType\n    commentId: P:System.Security.Claims.Claim.ValueType\n  - type: System.Security.Claims.Claim.Type\n    commentId: P:System.Security.Claims.Claim.Type\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Claim.Value\n- uid: System.Security.Claims.Claim.ValueType\n  commentId: P:System.Security.Claims.Claim.ValueType\n  id: ValueType\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: ValueType\n  fullName: System.Security.Claims.Claim.ValueType\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueType\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 28\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Gets the value type of the claim.</p>\\n\"\n  syntax:\n    content: public string ValueType { get; }\n    content.vb: Public ReadOnly Property ValueType As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The claim value type.</p>\\n\"\n  seealso:\n  - type: System.Security.Claims.Claim.Value\n    commentId: P:System.Security.Claims.Claim.Value\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Claim.ValueType\n- uid: System.Security.Claims.Claim.Clone\n  commentId: M:System.Security.Claims.Claim.Clone\n  id: Clone\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Clone()\n  fullName: System.Security.Claims.Claim.Clone()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clone\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 29\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object copied from this object. The new claim does not have a subject.</p>\\n\"\n  syntax:\n    content: public virtual Claim Clone()\n    content.vb: Public Overridable Function Clone As Claim\n    return:\n      type: System.Security.Claims.Claim\n      description: \"\\n<p>The new claim object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: Claim.Clone()\n- uid: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)\n  commentId: M:System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)\n  id: Clone(System.Security.Claims.ClaimsIdentity)\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: Clone(ClaimsIdentity)\n  fullName: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clone\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 30\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object copied from this object. The subject of the new claim is set to the specified ClaimsIdentity.</p>\\n\"\n  syntax:\n    content: public virtual Claim Clone(ClaimsIdentity identity)\n    content.vb: Public Overridable Function Clone(identity As ClaimsIdentity) As Claim\n    parameters:\n    - id: identity\n      type: System.Security.Claims.ClaimsIdentity\n      description: \"\\n<p>The intended subject of the new claim.</p>\\n\"\n    return:\n      type: System.Security.Claims.Claim\n      description: \"\\n<p>The new claim object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: Claim.Clone(ClaimsIdentity)\n- uid: System.Security.Claims.Claim.ToString\n  commentId: M:System.Security.Claims.Claim.ToString\n  id: ToString\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Security.Claims.Claim.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 31\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Returns a string representation of this <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of this <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Claim.ToString()\n- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)\n  commentId: M:System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)\n  id: WriteTo(System.IO.BinaryWriter)\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(BinaryWriter)\n  fullName: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 32\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p></p>\\n\"\n  syntax:\n    content: public virtual void WriteTo(BinaryWriter writer)\n    content.vb: Public Overridable Sub WriteTo(writer As BinaryWriter)\n    parameters:\n    - id: writer\n      type: System.IO.BinaryWriter\n      description: \"\\n<p></p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: Claim.WriteTo(BinaryWriter)\n- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  commentId: M:System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  id: WriteTo(System.IO.BinaryWriter,System.Byte[])\n  parent: System.Security.Claims.Claim\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(BinaryWriter, Byte[])\n  fullName: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 33\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Claims\n  summary: \"\\n<p>Writes this <xref href=\\\"System.Security.Claims.Claim\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the writer.</p>\\n\"\n  syntax:\n    content: protected virtual void WriteTo(BinaryWriter writer, byte[] userData)\n    content.vb: Protected Overridable Sub WriteTo(writer As BinaryWriter, userData As Byte())\n    parameters:\n    - id: writer\n      type: System.IO.BinaryWriter\n      description: \"\\n<p>The writer to write this claim</p>\\n\"\n    - id: userData\n      type: System.Byte[]\n      description: \"\\n<p>The user data to claim</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  fullName.vb: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter, System.Byte())\n  name.vb: WriteTo(BinaryWriter, Byte())\n  nameWithType: Claim.WriteTo(BinaryWriter, Byte[])\n  nameWithType.vb: Claim.WriteTo(BinaryWriter, Byte())\nreferences:\n- uid: System.Security.Claims\n  isExternal: false\n  name: System.Security.Claims\n  fullName: System.Security.Claims\n  commentId: N:System.Security.Claims\n  nameWithType: System.Security.Claims\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO.BinaryReader\n  parent: System.IO\n  isExternal: false\n  name: BinaryReader\n  fullName: System.IO.BinaryReader\n  commentId: T:System.IO.BinaryReader\n  nameWithType: BinaryReader\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Security.Claims.ClaimsIdentity\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsIdentity\n  fullName: System.Security.Claims.ClaimsIdentity\n  commentId: T:System.Security.Claims.ClaimsIdentity\n  nameWithType: ClaimsIdentity\n- uid: System.Security.Claims.Claim\n  parent: System.Security.Claims\n  isExternal: false\n  name: Claim\n  fullName: System.Security.Claims.Claim\n  commentId: T:System.Security.Claims.Claim\n  nameWithType: Claim\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IDictionary`2\n  name: IDictionary<String, String>\n  fullName: System.Collections.Generic.IDictionary<System.String, System.String>\n  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)\n  name.vb: IDictionary(Of String, String)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}\n  nameWithType: IDictionary<String, String>\n  nameWithType.vb: IDictionary(Of String, String)\n- uid: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IDictionary`2\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.IO.BinaryWriter\n  parent: System.IO\n  isExternal: false\n  name: BinaryWriter\n  fullName: System.IO.BinaryWriter\n  commentId: T:System.IO.BinaryWriter\n  nameWithType: BinaryWriter\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}