{"nodes":[{"pos":[364,383],"content":"SafeX509ChainHandle","needQuote":true,"nodes":[{"content":"SafeX509ChainHandle","pos":[0,19]}]},{"pos":[2919,2934],"content":"ReleaseHandle()","needQuote":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[4123,4132],"content":"IsInvalid","needQuote":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[5242,5269],"content":"Microsoft.Win32.SafeHandles","needQuote":true,"nodes":[{"content":"Microsoft.Win32.SafeHandles","pos":[0,27]}]},{"pos":[5463,5469],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5688,5711],"content":"CriticalFinalizerObject","needQuote":true,"nodes":[{"content":"CriticalFinalizerObject","pos":[0,23]}]},{"pos":[6017,6027],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[6237,6248],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[6478,6484],"content":"handle","needQuote":true,"nodes":[{"content":"handle","pos":[0,6]}]},{"pos":[6797,6814],"content":"SetHandle(IntPtr)","needQuote":true,"nodes":[{"content":"SetHandle(IntPtr)","pos":[0,17]}]},{"pos":[6995,7004],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[7081,7082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7132,7138],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[7198,7199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7313,7322],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[7399,7400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7450,7456],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[7516,7517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7809,7829],"content":"DangerousGetHandle()","needQuote":true,"nodes":[{"content":"DangerousGetHandle()","pos":[0,20]}]},{"pos":[8000,8018],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[8104,8105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8132,8133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8241,8259],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[8345,8346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8373,8374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8649,8656],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[8801,8806],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[8900,8901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8928,8929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9024,9029],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[9123,9124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9151,9152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9404,9413],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[9562,9569],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[9644,9645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9672,9673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9770,9777],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[9852,9853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9880,9881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10152,10168],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[10347,10354],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[10429,10430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10481,10488],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10549,10550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10663,10670],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[10745,10746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10797,10804],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10865,10866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11156,11176],"content":"SetHandleAsInvalid()","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid()","pos":[0,20]}]},{"pos":[11347,11365],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[11451,11452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11479,11480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11588,11606],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[11692,11693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11720,11721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12023,12047],"content":"DangerousAddRef(Boolean)","needQuote":true,"nodes":[{"content":"DangerousAddRef(Boolean)","pos":[0,24]}]},{"pos":[12243,12258],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[12341,12342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12393,12400],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12461,12462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12584,12599],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[12682,12683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12734,12741],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12802,12803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13108,13126],"content":"DangerousRelease()","needQuote":true,"nodes":[{"content":"DangerousRelease()","pos":[0,18]}]},{"pos":[13293,13309],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[13393,13394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13421,13422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13528,13544],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[13628,13629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13656,13657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13932,13940],"content":"IsClosed","needQuote":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[14187,14197],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14292,14300],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14369,14370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14397,14398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14468,14476],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14545,14546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14573,14574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14757,14771],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14890,14896],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14963,14964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15014,15020],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15080,15081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15164,15170],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15237,15238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15288,15294],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15354,15355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15569,15591],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15739,15745],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15812,15813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15863,15869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15930,15931]},{"pos":[15986,15992],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16052,16053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16150,16156],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16223,16224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16274,16280],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16341,16342]},{"pos":[16397,16403],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16463,16464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16709,16740],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16906,16921],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16997,16998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17048,17054],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17115,17116]},{"pos":[17171,17177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17237,17238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17344,17359],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17435,17436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17486,17492],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17553,17554]},{"pos":[17609,17615],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17675,17676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17906,17919],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18020,18031],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18103,18104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18131,18132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18205,18216],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18288,18289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18316,18317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18492,18501],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18594,18601],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18669,18670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18697,18698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18767,18774],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18842,18843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18870,18871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19046,19063],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19172,19187],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19263,19264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19291,19292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19369,19384],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19460,19461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19488,19489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19634,19640],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19776,19811],"content":"System.Runtime.ConstrainedExecution","needQuote":true,"nodes":[{"content":"System.Runtime.ConstrainedExecution","pos":[0,35]}]},{"pos":[20029,20059],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[20339,20354],"content":"ReleaseHandle()","needQuote":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[20515,20528],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[20609,20610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20637,20638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20741,20754],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[20835,20836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20863,20864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21062,21069],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21290,21299],"content":"IsInvalid","needQuote":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]}],"content":"items:\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  id: SafeX509ChainHandle\n  parent: Microsoft.Win32.SafeHandles\n  children:\n  - Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  - Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle\n  langs:\n  - csharp\n  - vb\n  name: SafeX509ChainHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SafeX509ChainHandle\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.Manual.cs\n    startLine: 10\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: Microsoft.Win32.SafeHandles\n  summary: \"\\n<p>Provides a wrapper class that represents the handle of an X.509 chain object. For more information, see <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Chain\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public sealed class SafeX509ChainHandle : SafeHandle, IDisposable'\n    content.vb: >-\n      Public NotInheritable Class SafeX509ChainHandle\n          Inherits SafeHandle\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  - System.Runtime.InteropServices.SafeHandle\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Runtime.InteropServices.SafeHandle.handle\n  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - System.Runtime.InteropServices.SafeHandle.Close\n  - System.Runtime.InteropServices.SafeHandle.Dispose\n  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  - System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - System.Runtime.InteropServices.SafeHandle.IsClosed\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SafeX509ChainHandle\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle\n  commentId: M:Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle\n  id: ReleaseHandle\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  langs:\n  - csharp\n  - vb\n  name: ReleaseHandle()\n  fullName: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReleaseHandle\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 13\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: protected override bool ReleaseHandle()\n    content.vb: Protected Overrides Function ReleaseHandle As Boolean\n    return:\n      type: System.Boolean\n  overridden: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SafeX509ChainHandle.ReleaseHandle()\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  commentId: P:Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  id: IsInvalid\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  langs:\n  - csharp\n  - vb\n  name: IsInvalid\n  fullName: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsInvalid\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.Manual.cs\n    startLine: 12\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: >-\n      public override bool IsInvalid\n\n      {\n          [SecurityCritical]\n          get;\n      }\n    content.vb: Public Overrides ReadOnly Property IsInvalid As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  overridden: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SafeX509ChainHandle.IsInvalid\nreferences:\n- uid: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: Microsoft.Win32.SafeHandles\n  fullName: Microsoft.Win32.SafeHandles\n  commentId: N:Microsoft.Win32.SafeHandles\n  nameWithType: Microsoft.Win32.SafeHandles\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  parent: System.Runtime.ConstrainedExecution\n  isExternal: true\n  name: CriticalFinalizerObject\n  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  commentId: T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  nameWithType: CriticalFinalizerObject\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n  nameWithType: SafeHandle\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Runtime.InteropServices.SafeHandle.handle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: handle\n  fullName: System.Runtime.InteropServices.SafeHandle.handle\n  commentId: F:System.Runtime.InteropServices.SafeHandle.handle\n  nameWithType: SafeHandle.handle\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: SetHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  nameWithType: SafeHandle.SetHandle(IntPtr)\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousGetHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  nameWithType: SafeHandle.DangerousGetHandle()\n- uid: System.Runtime.InteropServices.SafeHandle.Close\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: Close()\n  fullName: System.Runtime.InteropServices.SafeHandle.Close()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Close\n    name: Close\n    fullName: System.Runtime.InteropServices.SafeHandle.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Close\n    name: Close\n    fullName: System.Runtime.InteropServices.SafeHandle.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Close\n  nameWithType: SafeHandle.Close()\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Dispose()\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose\n  nameWithType: SafeHandle.Dispose()\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  nameWithType: SafeHandle.Dispose(Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandleAsInvalid()\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  nameWithType: SafeHandle.SetHandleAsInvalid()\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: DangerousAddRef(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  nameWithType: SafeHandle.DangerousAddRef(Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousRelease()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  nameWithType: SafeHandle.DangerousRelease()\n- uid: System.Runtime.InteropServices.SafeHandle.IsClosed\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsClosed\n  fullName: System.Runtime.InteropServices.SafeHandle.IsClosed\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsClosed\n  nameWithType: SafeHandle.IsClosed\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.ConstrainedExecution\n  isExternal: false\n  name: System.Runtime.ConstrainedExecution\n  fullName: System.Runtime.ConstrainedExecution\n  commentId: N:System.Runtime.ConstrainedExecution\n  nameWithType: System.Runtime.ConstrainedExecution\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: ReleaseHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  nameWithType: SafeHandle.ReleaseHandle()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsInvalid\n  fullName: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsInvalid\n  nameWithType: SafeHandle.IsInvalid\n"}