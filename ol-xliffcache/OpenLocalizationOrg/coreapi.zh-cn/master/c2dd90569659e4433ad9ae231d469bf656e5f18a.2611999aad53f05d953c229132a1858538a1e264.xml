{"nodes":[{"pos":[161,185],"content":"EventHandler<TEventArgs>","needQuote":true,"nodes":[{"content":"EventHandler&lt;TEventArgs&gt;","pos":[0,24],"source":"EventHandler<TEventArgs>"}]},{"content":"\\n&lt;p&gt;The source of the event.&lt;/p&gt;\\n","pos":[976,1011],"source":"\\n<p>The source of the event.</p>\\n"},{"content":"\\n&lt;p&gt;An object that contains the event data.","pos":[1072,1116],"source":"\\n<p>An object that contains the event data."},{"content":"&lt;/p&gt;\\n","pos":[1117,1123],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type of the event data generated by the event.&lt;/p&gt;\\n","pos":[1186,1247],"source":"\\n<p>The type of the event data generated by the event.</p>\\n"},{"pos":[1862,1868],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[2171,2186],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2355,2368],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2453,2454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2481,2482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2589,2602],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2687,2688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2715,2716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2951,2957],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3091,3101],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[3291,3314],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3515,3528],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3613,3614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3666,3674],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3736,3737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3861,3874],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3959,3960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4012,4020],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4082,4083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4369,4396],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[4606,4616],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[4748,4765],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.EventHandler`1\n  commentId: T:System.EventHandler`1\n  id: EventHandler`1\n  parent: System\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n  type: Delegate\n  source:\n    remote:\n      path: src/mscorlib/src/System/EventHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EventHandler\n    path: src/mscorlib/src/System/EventHandler.cs\n    startLine: 11\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the method that will handle an event when the event provides data. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public delegate void EventHandler<TEventArgs>(object sender, TEventArgs e);\n    content.vb: >-\n      <Serializable>\n\n      Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>The source of the event.</p>\\n\"\n    - id: e\n      type: '{TEventArgs}'\n      description: \"\\n<p>An object that contains the event data. </p>\\n\"\n    typeParameters:\n    - id: TEventArgs\n      description: \"\\n<p>The type of the event data generated by the event.</p>\\n\"\n  seealso:\n  - type: System.EventHandler\n    commentId: T:System.EventHandler\n  - type: System.EventArgs\n    commentId: T:System.EventArgs\n  - type: System.Delegate\n    commentId: T:System.Delegate\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  fullName.vb: System.EventHandler(Of TEventArgs)\n  name.vb: EventHandler(Of TEventArgs)\n  nameWithType: EventHandler<TEventArgs>\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  nameWithType.vb: EventHandler(Of TEventArgs)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: '{TEventArgs}'\n  definition: TEventArgs\n  name: TEventArgs\n  fullName: TEventArgs\n  nameWithType: TEventArgs\n  commentId: '!:TEventArgs'\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: TEventArgs\n  isExternal: false\n  name: TEventArgs\n  fullName: TEventArgs\n  nameWithType: TEventArgs\n  commentId: '!:TEventArgs'\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}