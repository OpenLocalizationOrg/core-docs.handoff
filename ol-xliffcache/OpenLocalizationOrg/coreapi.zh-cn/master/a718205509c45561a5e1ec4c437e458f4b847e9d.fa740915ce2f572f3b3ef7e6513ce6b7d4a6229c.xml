{"nodes":[{"pos":[1672,1682],"content":"PipeStream","needQuote":true,"nodes":[{"content":"PipeStream","pos":[0,10]}]},{"pos":[5108,5140],"content":"PipeStream(PipeDirection, Int32)","needQuote":true,"nodes":[{"content":"PipeStream(PipeDirection, Int32)","pos":[0,32]}]},{"pos":[7373,7427],"content":"PipeStream(PipeDirection, PipeTransmissionMode, Int32)","needQuote":true,"nodes":[{"content":"PipeStream(PipeDirection, PipeTransmissionMode, Int32)","pos":[0,54]}]},{"pos":[10112,10119],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the stream supports read operations; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10791,10900],"source":"\\n<p>\\n<strong>true</strong> if the stream supports read operations; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11260,11267],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;false&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[11939,11988],"source":"\\n<p>\\n<strong>false</strong> in all cases.</p>\\n"},{"pos":[12351,12359],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the stream supports write operations; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13036,13146],"source":"\\n<p>\\n<strong>true</strong> if the stream supports write operations; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[13523,13535],"content":"InBufferSize","needQuote":true,"nodes":[{"content":"InBufferSize","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An integer value that represents the inbound buffer size, in bytes.&lt;/p&gt;\\n","pos":[14207,14285],"source":"\\n<p>An integer value that represents the inbound buffer size, in bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is unreadable.&lt;/p&gt;\\n","pos":[14404,14440],"source":"\\n<p>The stream is unreadable.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is waiting to connect.&lt;/p&gt;\\n","pos":[14553,14595],"source":"\\n<p>The pipe is waiting to connect.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or another I/O error occurred.&lt;/p&gt;\\n","pos":[14686,14746],"source":"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n"},{"pos":[15073,15080],"content":"IsAsync","needQuote":true,"nodes":[{"content":"IsAsync","pos":[0,7]}]},{"pos":[16331,16342],"content":"IsConnected","needQuote":true,"nodes":[{"content":"IsConnected","pos":[0,11]}]},{"pos":[17633,17650],"content":"IsMessageComplete","needQuote":true,"nodes":[{"content":"IsMessageComplete","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if there are no more characters to read in the message; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[18378,18503],"source":"\\n<p>\\n<strong>true</strong> if there are no more characters to read in the message; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[19087,19117],"source":"\\n<p>The pipe is closed.</p>\\n"},{"pos":[19418,19424],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;0 in all cases.&lt;/p&gt;\\n","pos":[20049,20075],"source":"\\n<p>0 in all cases.</p>\\n"},{"content":"\\n&lt;p&gt;Always thrown.&lt;/p&gt;\\n","pos":[20232,20257],"source":"\\n<p>Always thrown.</p>\\n"},{"pos":[20595,20608],"content":"OutBufferSize","needQuote":true,"nodes":[{"content":"OutBufferSize","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The outbound buffer size, in bytes.&lt;/p&gt;\\n","pos":[21286,21332],"source":"\\n<p>The outbound buffer size, in bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is unwriteable.&lt;/p&gt;\\n","pos":[21451,21488],"source":"\\n<p>The stream is unwriteable.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is waiting to connect.&lt;/p&gt;\\n","pos":[21601,21643],"source":"\\n<p>The pipe is waiting to connect.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or another I/O error occurred.&lt;/p&gt;\\n","pos":[21734,21794],"source":"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n"},{"pos":[22125,22133],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"content":"\\n&lt;p&gt;0 in all cases.&lt;/p&gt;\\n","pos":[22781,22807],"source":"\\n<p>0 in all cases.</p>\\n"},{"content":"\\n&lt;p&gt;Always thrown.&lt;/p&gt;\\n","pos":[22966,22991],"source":"\\n<p>Always thrown.</p>\\n"},{"pos":[23311,23319],"content":"ReadMode","needQuote":true,"nodes":[{"content":"ReadMode","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The handle has not been set.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The pipe is waiting to connect with a named client.&lt;/p&gt;\\n","pos":[25031,25143],"source":"\\n<p>The handle has not been set.</p>\\n<p>-or-</p>\\n<p>The pipe is waiting to connect with a named client.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or an I/O error occurred with a named client.&lt;/p&gt;\\n","pos":[25234,25309],"source":"\\n<p>The pipe is broken or an I/O error occurred with a named client.</p>\\n"},{"pos":[25648,25662],"content":"SafePipeHandle","needQuote":true,"nodes":[{"content":"SafePipeHandle","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The pipe handle has not been set.&lt;/p&gt;\\n","pos":[26881,26925],"source":"\\n<p>The pipe handle has not been set.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[27034,27064],"source":"\\n<p>The pipe is closed.</p>\\n"},{"pos":[27392,27408],"content":"TransmissionMode","needQuote":true,"nodes":[{"content":"TransmissionMode","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[28471,28501],"source":"\\n<p>The pipe is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The handle has not been set.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The pipe is waiting to connect in an anonymous client/server operation or with a named client.","pos":[28614,28763],"source":"\\n<p>The handle has not been set.</p>\\n<p>-or-</p>\\n<p>The pipe is waiting to connect in an anonymous client/server operation or with a named client."},{"content":"&lt;/p&gt;\\n","pos":[28764,28770],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or another I/O error occurred.&lt;/p&gt;\\n","pos":[28861,28921],"source":"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n"},{"pos":[29300,29316],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[30126,30269],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[30633,30640],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[31386,31416],"source":"\\n<p>The pipe is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe does not support write operations.&lt;/p&gt;\\n","pos":[31521,31575],"source":"\\n<p>The pipe does not support write operations.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or another I/O error occurred.&lt;/p&gt;\\n","pos":[31666,31726],"source":"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n"},{"pos":[32140,32166],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the specified byte array with the values between &lt;em&gt;offset&lt;/em&gt; and (&lt;em&gt;offset&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; - 1) replaced by the bytes read from the current source.&lt;/p&gt;\\n","pos":[32946,33151],"source":"\\n<p>When this method returns, contains the specified byte array with the values between <em>offset</em> and (<em>offset</em> + <em>count</em> - 1) replaced by the bytes read from the current source.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in the &lt;em&gt;buffer&lt;/em&gt; array at which the bytes that are read will be placed.&lt;/p&gt;\\n","pos":[33215,33319],"source":"\\n<p>The byte offset in the <em>buffer</em> array at which the bytes that are read will be placed.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to read.&lt;/p&gt;\\n","pos":[33382,33429],"source":"\\n<p>The maximum number of bytes to read.</p>\\n"},{"content":"\\n&lt;p&gt;The total number of bytes that are read into &lt;em&gt;buffer&lt;/em&gt;.","pos":[33488,33554],"source":"\\n<p>The total number of bytes that are read into <em>buffer</em>."},{"content":"This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.&lt;/p&gt;\\n","pos":[33555,33708],"source":" This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[33904,33958],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is less than 0.&lt;/p&gt;\\n","pos":[34075,34173],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is less than 0.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is greater than the number of bytes available in &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n","pos":[34270,34363],"source":"\\n<p>\\n<em>count</em> is greater than the number of bytes available in <em>buffer</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[34472,34502],"source":"\\n<p>The pipe is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe does not support read operations.&lt;/p&gt;\\n","pos":[34607,34660],"source":"\\n<p>The pipe does not support read operations.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is disconnected, waiting to connect, or the handle has not been set.&lt;/p&gt;\\n","pos":[34773,34861],"source":"\\n<p>The pipe is disconnected, waiting to connect, or the handle has not been set.</p>\\n"},{"content":"\\n&lt;p&gt;Any I/O error occurred.&lt;/p&gt;\\n","pos":[34952,34986],"source":"\\n<p>Any I/O error occurred.</p>\\n"},{"pos":[35493,35503],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[36422,36452],"source":"\\n<p>The pipe is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe does not support read operations.&lt;/p&gt;\\n","pos":[36557,36610],"source":"\\n<p>The pipe does not support read operations.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is disconnected, waiting to connect, or the handle has not been set.&lt;/p&gt;\\n","pos":[36723,36811],"source":"\\n<p>The pipe is disconnected, waiting to connect, or the handle has not been set.</p>\\n"},{"content":"\\n&lt;p&gt;Any I/O error occurred.&lt;/p&gt;\\n","pos":[36902,36936],"source":"\\n<p>Any I/O error occurred.</p>\\n"},{"pos":[37335,37358],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The point, relative to &lt;em&gt;origin&lt;/em&gt;, to begin seeking from.&lt;/p&gt;\\n","pos":[38097,38170],"source":"\\n<p>The point, relative to <em>origin</em>, to begin seeking from.</p>\\n"},{"content":"\\n&lt;p&gt;The new position in the stream.&lt;/p&gt;\\n","pos":[38515,38557],"source":"\\n<p>The new position in the stream.</p>\\n"},{"pos":[38992,39008],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The new length of the stream.&lt;/p&gt;\\n","pos":[39678,39718],"source":"\\n<p>The new length of the stream.</p>\\n"},{"pos":[40109,40127],"content":"WaitForPipeDrain()","needQuote":true,"nodes":[{"content":"WaitForPipeDrain()","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[40811,40841],"source":"\\n<p>The pipe is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe does not support write operations.&lt;/p&gt;\\n","pos":[40946,41000],"source":"\\n<p>The pipe does not support write operations.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or another I/O error occurred.&lt;/p&gt;\\n","pos":[41091,41151],"source":"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n"},{"pos":[41552,41579],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The buffer that contains data to write to the pipe.&lt;/p&gt;\\n","pos":[42340,42402],"source":"\\n<p>The buffer that contains data to write to the pipe.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based byte offset in &lt;em&gt;buffer&lt;/em&gt; at which to begin copying bytes to the current stream.&lt;/p&gt;\\n","pos":[42466,42577],"source":"\\n<p>The zero-based byte offset in <em>buffer</em> at which to begin copying bytes to the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to write to the current stream.&lt;/p&gt;\\n","pos":[42640,42710],"source":"\\n<p>The maximum number of bytes to write to the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[42907,42961],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is less than 0.&lt;/p&gt;\\n","pos":[43078,43176],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is less than 0.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is greater than the number of bytes available in &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n","pos":[43273,43366],"source":"\\n<p>\\n<em>count</em> is greater than the number of bytes available in <em>buffer</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[43475,43505],"source":"\\n<p>The pipe is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe does not support write operations.&lt;/p&gt;\\n","pos":[43610,43664],"source":"\\n<p>The pipe does not support write operations.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or another I/O error occurred.&lt;/p&gt;\\n","pos":[43755,43815],"source":"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n"},{"pos":[44368,44383],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The byte to write to the stream.&lt;/p&gt;\\n","pos":[45026,45069],"source":"\\n<p>The byte to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is closed.&lt;/p&gt;\\n","pos":[45246,45276],"source":"\\n<p>The pipe is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe does not support write operations.&lt;/p&gt;\\n","pos":[45381,45435],"source":"\\n<p>The pipe does not support write operations.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is disconnected, waiting to connect, or the handle has not been set.&lt;/p&gt;\\n","pos":[45548,45636],"source":"\\n<p>The pipe is disconnected, waiting to connect, or the handle has not been set.</p>\\n"},{"content":"\\n&lt;p&gt;The pipe is broken or another I/O error occurred.&lt;/p&gt;\\n","pos":[45727,45787],"source":"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n"},{"pos":[46329,46379],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[48389,48440],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[50076,50091],"content":"System.IO.Pipes","needQuote":true,"nodes":[{"content":"System.IO.Pipes","pos":[0,15]}]},{"pos":[50249,50255],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50411,50429],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[50616,50622],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[50778,50789],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[51167,51186],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[51327,51338],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[51392,51393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51446,51452],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[51494,51495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51589,51600],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[51654,51655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51708,51714],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[51756,51757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52000,52026],"content":"CopyToAsync(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32)","pos":[0,26]}]},{"pos":[52194,52205],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[52259,52260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52313,52319],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[52362,52363]},{"pos":[52417,52422],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52481,52482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52589,52600],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[52654,52655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52708,52714],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[52757,52758]},{"pos":[52812,52817],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52876,52877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53175,53220],"content":"CopyToAsync(Stream, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32, CancellationToken)","pos":[0,45]}]},{"pos":[53459,53470],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[53524,53525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53578,53584],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[53627,53628]},{"pos":[53682,53687],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[53747,53748]},{"pos":[53824,53841],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[53922,53923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54065,54076],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[54130,54131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54184,54190],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[54233,54234]},{"pos":[54288,54293],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[54353,54354]},{"pos":[54430,54447],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[54528,54529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54829,54843],"content":"CopyTo(Stream)","needQuote":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[54974,54980],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[55029,55030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55083,55089],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[55131,55132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55221,55227],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[55276,55277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55330,55336],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[55378,55379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55607,55628],"content":"CopyTo(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Stream, Int32)","pos":[0,21]}]},{"pos":[55786,55792],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[55841,55842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55895,55901],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[55944,55945]},{"pos":[55999,56004],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56063,56064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56166,56172],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[56221,56222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56275,56281],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[56324,56325]},{"pos":[56379,56384],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56443,56444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56660,56667],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[56762,56767],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[56836,56837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56864,56865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56935,56940],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[57009,57010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57037,57038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57211,57220],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[57319,57326],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[57376,57377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57404,57405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57477,57484],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[57534,57535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57562,57563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57743,57755],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[57860,57870],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[57923,57924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57951,57952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58027,58037],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[58090,58091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58118,58119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58340,58369],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[58544,58554],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[58607,58608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58679,58696],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[58777,58778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58889,58899],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[58952,58953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59024,59041],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[59122,59123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59367,59385],"content":"CreateWaitHandle()","needQuote":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[59502,59518],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[59598,59599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59626,59627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59708,59724],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[59804,59805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59832,59833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60105,60159],"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,54]}]},{"pos":[60604,60613],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[60686,60687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60735,60739],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[60798,60800]},{"content":",","pos":[60832,60833]},{"pos":[60887,60892],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[60952,60953]},{"pos":[61007,61012],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[61072,61073]},{"pos":[61135,61148],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[61216,61217]},{"pos":[61272,61278],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61338,61339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61489,61498],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[61571,61572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61620,61624],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[61682,61684],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[61713,61714]},{"pos":[61768,61773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[61833,61834]},{"pos":[61888,61893],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[61953,61954]},{"pos":[62016,62029],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[62097,62098]},{"pos":[62153,62159],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62219,62220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62621,62642],"content":"EndRead(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[62781,62788],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[62859,62860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62916,62928],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[62994,62995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63088,63095],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[63166,63167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63223,63235],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[63301,63302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63554,63585],"content":"ReadAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32)","pos":[0,31]}]},{"pos":[63898,63907],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[63959,63960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64008,64012],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[64071,64073]},{"content":",","pos":[64105,64106]},{"pos":[64160,64165],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[64225,64226]},{"pos":[64280,64285],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64344,64345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64460,64469],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[64521,64522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64570,64574],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[64632,64634],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[64663,64664]},{"pos":[64718,64723],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[64783,64784]},{"pos":[64838,64843],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64902,64903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65281,65336],"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,55]}]},{"pos":[65785,65795],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[65869,65870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65918,65922],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[65981,65983]},{"content":",","pos":[66015,66016]},{"pos":[66070,66075],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[66135,66136]},{"pos":[66190,66195],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[66255,66256]},{"pos":[66318,66331],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[66399,66400]},{"pos":[66455,66461],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66521,66522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66673,66683],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[66757,66758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66806,66810],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[66868,66870],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[66899,66900]},{"pos":[66954,66959],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[67019,67020]},{"pos":[67074,67079],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[67139,67140]},{"pos":[67202,67215],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[67283,67284]},{"pos":[67339,67345],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67405,67406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67811,67833],"content":"EndWrite(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[67974,67982],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[68054,68055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68111,68123],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[68189,68190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68284,68292],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[68364,68365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68421,68433],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[68499,68500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68755,68787],"content":"WriteAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32)","pos":[0,32]}]},{"pos":[69104,69114],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[69167,69168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69216,69220],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[69279,69281]},{"content":",","pos":[69313,69314]},{"pos":[69368,69373],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[69433,69434]},{"pos":[69488,69493],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69552,69553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69669,69679],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[69732,69733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69781,69785],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[69843,69845],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[69874,69875]},{"pos":[69929,69934],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[69994,69995]},{"pos":[70049,70054],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70113,70114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70439,70459],"content":"Synchronized(Stream)","needQuote":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[70602,70614],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[70690,70691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70744,70750],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[70813,70814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70909,70921],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[70997,70998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71051,71057],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[71120,71121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71339,71356],"content":"ObjectInvariant()","needQuote":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[71471,71486],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[71565,71566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71593,71594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71674,71689],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[71768,71769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71796,71797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71993,72003],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[72212,72223],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[72436,72448],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[72700,72724],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[72887,72902],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[72990,72991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73042,73049],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73110,73111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73216,73231],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[73319,73320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73371,73378],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73439,73440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73705,73725],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[73864,73882],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[73973,73974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74001,74002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74094,74112],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[74203,74204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74231,74232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74487,74514],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[74667,74692],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[74790,74791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74818,74819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74918,74943],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[75041,75042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75069,75070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75339,75357],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[75508,75520],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[75605,75606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75654,75658],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[75716,75717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75816,75828],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[75913,75914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75962,75966],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[76024,76025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76244,76254],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[76349,76357],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[76426,76427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76454,76455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76525,76533],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[76602,76603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76630,76631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76814,76828],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[76947,76953],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77020,77021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77071,77077],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77137,77138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77221,77227],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77294,77295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77345,77351],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77411,77412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77626,77648],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[77796,77802],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77869,77870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77920,77926],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[77987,77988]},{"pos":[78043,78049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78109,78110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78207,78213],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[78280,78281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78331,78337],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78398,78399]},{"pos":[78454,78460],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78520,78521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78766,78797],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[78963,78978],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[79054,79055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79105,79111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79172,79173]},{"pos":[79228,79234],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79294,79295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79401,79416],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[79492,79493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79543,79549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79610,79611]},{"pos":[79666,79672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79732,79733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79963,79976],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[80077,80088],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[80160,80161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80188,80189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80262,80273],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[80345,80346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80373,80374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80549,80558],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[80651,80658],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[80726,80727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80754,80755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80824,80831],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[80899,80900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80927,80928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81103,81120],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[81229,81244],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[81320,81321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81348,81349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81426,81441],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[81517,81518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81545,81546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81874,81889],"content":"AsInputStream()","needQuote":true,"nodes":[{"content":"AsInputStream()","pos":[0,15]}]},{"pos":[82048,82061],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[82141,82142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82169,82170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82272,82285],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[82365,82366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82393,82394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82789,82805],"content":"AsOutputStream()","needQuote":true,"nodes":[{"content":"AsOutputStream()","pos":[0,16]}]},{"pos":[82966,82980],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[83061,83062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83089,83090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83193,83207],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[83288,83289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83316,83317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83726,83748],"content":"AsRandomAccessStream()","needQuote":true,"nodes":[{"content":"AsRandomAccessStream()","pos":[0,22]}]},{"pos":[83921,83941],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[84028,84029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84056,84057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84166,84186],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[84273,84274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84301,84302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84526,84532],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[84642,84651],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[84832,84853],"content":"AsInputStream(Stream)","needQuote":true,"nodes":[{"content":"AsInputStream(Stream)","pos":[0,21]}]},{"pos":[85046,85059],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[85139,85140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85193,85199],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[85262,85263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85383,85396],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[85476,85477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85530,85536],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[85599,85600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85870,85900],"content":"WindowsRuntimeStreamExtensions","needQuote":true,"nodes":[{"content":"WindowsRuntimeStreamExtensions","pos":[0,30]}]},{"pos":[86165,86187],"content":"AsOutputStream(Stream)","needQuote":true,"nodes":[{"content":"AsOutputStream(Stream)","pos":[0,22]}]},{"pos":[86382,86396],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[86477,86478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86531,86537],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[86600,86601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86722,86736],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[86817,86818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86871,86877],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[86940,86941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87231,87259],"content":"AsRandomAccessStream(Stream)","needQuote":true,"nodes":[{"content":"AsRandomAccessStream(Stream)","pos":[0,28]}]},{"pos":[87466,87486],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[87573,87574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87627,87633],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[87696,87697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87824,87844],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[87931,87932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87985,87991],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[88054,88055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88334,88347],"content":"PipeDirection","needQuote":true,"nodes":[{"content":"PipeDirection","pos":[0,13]}]},{"pos":[88530,88535],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88709,88729],"content":"PipeTransmissionMode","needQuote":true,"nodes":[{"content":"PipeTransmissionMode","pos":[0,20]}]},{"pos":[88955,88962],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[89138,89145],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89314,89321],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[89518,89526],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[89724,89730],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[89901,89906],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[90070,90078],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[90306,90320],"content":"SafePipeHandle","needQuote":true,"nodes":[{"content":"SafePipeHandle","pos":[0,14]}]},{"pos":[90528,90555],"content":"Microsoft.Win32.SafeHandles","needQuote":true,"nodes":[{"content":"Microsoft.Win32.SafeHandles","pos":[0,27]}]},{"pos":[90785,90801],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[90930,90937],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[90987,90988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91039,91046],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[91107,91108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91196,91203],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[91253,91254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91305,91312],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[91373,91374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91572,91579],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[91674,91679],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[91727,91728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91755,91756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91826,91831],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[91879,91880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91907,91908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92118,92144],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"pos":[92437,92441],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[92488,92489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92537,92541],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[92600,92602]},{"content":",","pos":[92634,92635]},{"pos":[92689,92694],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[92754,92755]},{"pos":[92809,92814],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[92873,92874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92984,92988],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[93035,93036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93084,93088],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[93146,93148],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[93177,93178]},{"pos":[93232,93237],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93297,93298]},{"pos":[93352,93357],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[93416,93417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93644,93650],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[93770,93774],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[93833,93835]},{"pos":[93898,93902],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[93960,93962],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[94117,94127],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[94228,94236],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[94287,94288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94315,94316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94389,94397],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[94448,94449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94476,94477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94687,94710],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"pos":[94872,94876],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[94923,94924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94973,94978],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[95038,95039]},{"pos":[95101,95111],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[95157,95158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95262,95266],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[95313,95314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95363,95368],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[95428,95429]},{"pos":[95491,95501],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[95547,95548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95760,95770],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[95969,95985],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[96114,96123],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[96175,96176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96225,96230],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[96289,96290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96378,96387],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[96439,96440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96489,96494],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[96553,96554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96792,96819],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"pos":[97116,97121],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[97169,97170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97218,97222],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[97281,97283]},{"content":",","pos":[97315,97316]},{"pos":[97370,97375],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[97435,97436]},{"pos":[97490,97495],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[97554,97555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97666,97671],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[97719,97720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97768,97772],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[97830,97832],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[97861,97862]},{"pos":[97916,97921],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[97981,97982]},{"pos":[98036,98041],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[98100,98101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98403,98418],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[98545,98554],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[98606,98607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98655,98659],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[98717,98718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98805,98814],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[98866,98867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98915,98919],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[98977,98978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99153,99157],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[99394,99444],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[99883,99892],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[99944,99945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99993,99997],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[100056,100058]},{"content":",","pos":[100090,100091]},{"pos":[100145,100150],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100210,100211]},{"pos":[100265,100270],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100330,100331]},{"pos":[100407,100424],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[100505,100506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100656,100665],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[100717,100718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100766,100770],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[100828,100830],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[100859,100860]},{"pos":[100914,100919],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100979,100980]},{"pos":[101034,101039],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[101099,101100]},{"pos":[101176,101193],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[101274,101275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101658,101675],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[101941,101952],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[102157,102161],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[102235,102236],"content":"<","needQuote":true,"nodes":[]},{"pos":[102285,102290],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[102431,102435],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[102510,102513]},{"pos":[102569,102574],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[102633,102634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102822,102838],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[102998,103011],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[103208,103212],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[103265,103266],"content":"<","needQuote":true,"nodes":[]},{"pos":[103293,103300],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[103415,103419],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[103473,103476]},{"pos":[103510,103517],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[103550,103551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103737,103759],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[104037,104088],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[104531,104541],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[104594,104595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104643,104647],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[104706,104708]},{"content":",","pos":[104740,104741]},{"pos":[104795,104800],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[104860,104861]},{"pos":[104915,104920],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[104980,104981]},{"pos":[105057,105074],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[105155,105156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105307,105317],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[105370,105371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105419,105423],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[105481,105483],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[105512,105513]},{"pos":[105567,105572],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[105632,105633]},{"pos":[105687,105692],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[105752,105753]},{"pos":[105829,105846],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[105927,105928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106313,106317],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[106492,106519],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[106742,106763],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[106972,106997],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[107210,107221],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[107387,107410],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[107604,107625],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[107826,107843],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.IO.Pipes.PipeStream\n  commentId: T:System.IO.Pipes.PipeStream\n  id: PipeStream\n  parent: System.IO.Pipes\n  children:\n  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)\n  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)\n  - System.IO.Pipes.PipeStream.CanRead\n  - System.IO.Pipes.PipeStream.CanSeek\n  - System.IO.Pipes.PipeStream.CanWrite\n  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  - System.IO.Pipes.PipeStream.Flush\n  - System.IO.Pipes.PipeStream.InBufferSize\n  - System.IO.Pipes.PipeStream.IsAsync\n  - System.IO.Pipes.PipeStream.IsConnected\n  - System.IO.Pipes.PipeStream.IsMessageComplete\n  - System.IO.Pipes.PipeStream.Length\n  - System.IO.Pipes.PipeStream.OutBufferSize\n  - System.IO.Pipes.PipeStream.Position\n  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Pipes.PipeStream.ReadByte\n  - System.IO.Pipes.PipeStream.ReadMode\n  - System.IO.Pipes.PipeStream.SafePipeHandle\n  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  - System.IO.Pipes.PipeStream.TransmissionMode\n  - System.IO.Pipes.PipeStream.WaitForPipeDrain\n  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  langs:\n  - csharp\n  - vb\n  name: PipeStream\n  fullName: System.IO.Pipes.PipeStream\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PipeStream\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs\n    startLine: 18\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Exposes a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object around a pipe, which supports both anonymous and named pipes.</p>\\n\"\n  syntax:\n    content: 'public abstract class PipeStream : Stream, IDisposable'\n    content.vb: >-\n      Public MustInherit Class PipeStream\n          Inherits Stream\n          Implements IDisposable\n  see:\n  - type: System.Security.Permissions.SecurityAction.InheritanceDemand\n    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.Stream.Null\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.Close\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.WriteTimeout\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: PipeStream\n  extensionMethods:\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)\n  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: PipeStream(PipeDirection, Int32)\n  fullName: System.IO.Pipes.PipeStream.PipeStream(System.IO.Pipes.PipeDirection, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 90\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified <xref href=\\\"System.IO.Pipes.PipeDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value and buffer size.</p>\\n\"\n  syntax:\n    content: protected PipeStream(PipeDirection direction, int bufferSize)\n    content.vb: Protected Sub New(direction As PipeDirection, bufferSize As Integer)\n    parameters:\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.Pipes.PipeDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates the direction of the pipe object.</p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>A positive <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value greater than or equal to 0 that indicates the buffer size.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>direction</em> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n<p>-or-</p>\\n<p>\\n<em>bufferSize</em> is less than 0.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PipeStream.PipeStream(PipeDirection, Int32)\n- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)\n  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n  fullName: System.IO.Pipes.PipeStream.PipeStream(System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeTransmissionMode, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 91\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified <xref href=\\\"System.IO.Pipes.PipeDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and buffer size.</p>\\n\"\n  syntax:\n    content: protected PipeStream(PipeDirection direction, PipeTransmissionMode transmissionMode, int outBufferSize)\n    content.vb: Protected Sub New(direction As PipeDirection, transmissionMode As PipeTransmissionMode, outBufferSize As Integer)\n    parameters:\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.Pipes.PipeDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates the direction of the pipe object.</p>\\n\"\n    - id: transmissionMode\n      type: System.IO.Pipes.PipeTransmissionMode\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates the transmission mode of the pipe object.</p>\\n\"\n    - id: outBufferSize\n      type: System.Int32\n      description: \"\\n<p>A positive <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value greater than or equal to 0 that indicates the buffer size.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>direction</em> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n<p>-or-</p>\\n<p>\\n<em>transmissionMode</em> is not a valid <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n<p>-or-</p>\\n<p>\\n<em>bufferSize</em> is less than 0.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n- uid: System.IO.Pipes.PipeStream.CanRead\n  commentId: P:System.IO.Pipes.PipeStream.CanRead\n  id: CanRead\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.IO.Pipes.PipeStream.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanRead\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 92\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets a value indicating whether the current stream supports read operations.</p>\\n\"\n  syntax:\n    content: public override bool CanRead { get; }\n    content.vb: Public Overrides ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the stream supports read operations; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanRead\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PipeStream.CanRead\n- uid: System.IO.Pipes.PipeStream.CanSeek\n  commentId: P:System.IO.Pipes.PipeStream.CanSeek\n  id: CanSeek\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: CanSeek\n  fullName: System.IO.Pipes.PipeStream.CanSeek\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanSeek\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 93\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets a value indicating whether the current stream supports seek operations.</p>\\n\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>false</strong> in all cases.</p>\\n\"\n  overridden: System.IO.Stream.CanSeek\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PipeStream.CanSeek\n- uid: System.IO.Pipes.PipeStream.CanWrite\n  commentId: P:System.IO.Pipes.PipeStream.CanWrite\n  id: CanWrite\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.IO.Pipes.PipeStream.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanWrite\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 94\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets a value indicating whether the current stream supports write operations.</p>\\n\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the stream supports write operations; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanWrite\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PipeStream.CanWrite\n- uid: System.IO.Pipes.PipeStream.InBufferSize\n  commentId: P:System.IO.Pipes.PipeStream.InBufferSize\n  id: InBufferSize\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: InBufferSize\n  fullName: System.IO.Pipes.PipeStream.InBufferSize\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InBufferSize\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 95\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the size, in bytes, of the inbound buffer for a pipe.</p>\\n\"\n  syntax:\n    content: public virtual int InBufferSize { get; }\n    content.vb: Public Overridable ReadOnly Property InBufferSize As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer value that represents the inbound buffer size, in bytes.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream is unreadable.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The pipe is waiting to connect.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: PipeStream.InBufferSize\n- uid: System.IO.Pipes.PipeStream.IsAsync\n  commentId: P:System.IO.Pipes.PipeStream.IsAsync\n  id: IsAsync\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: IsAsync\n  fullName: System.IO.Pipes.PipeStream.IsAsync\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsAsync\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 96\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets a value indicating whether a <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was opened asynchronously or synchronously.</p>\\n\"\n  syntax:\n    content: public bool IsAsync { get; }\n    content.vb: Public ReadOnly Property IsAsync As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was opened asynchronously; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PipeStream.IsAsync\n- uid: System.IO.Pipes.PipeStream.IsConnected\n  commentId: P:System.IO.Pipes.PipeStream.IsConnected\n  id: IsConnected\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: IsConnected\n  fullName: System.IO.Pipes.PipeStream.IsConnected\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsConnected\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 97\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets or sets a value indicating whether a <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is connected.</p>\\n\"\n  syntax:\n    content: public bool IsConnected { get; protected set; }\n    content.vb: Public Property IsConnected As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is connected; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n  nameWithType: PipeStream.IsConnected\n- uid: System.IO.Pipes.PipeStream.IsMessageComplete\n  commentId: P:System.IO.Pipes.PipeStream.IsMessageComplete\n  id: IsMessageComplete\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: IsMessageComplete\n  fullName: System.IO.Pipes.PipeStream.IsMessageComplete\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsMessageComplete\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 98\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets a value indicating whether there is more data in the message returned from the most recent read operation.</p>\\n\"\n  syntax:\n    content: public bool IsMessageComplete { get; }\n    content.vb: Public ReadOnly Property IsMessageComplete As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if there are no more characters to read in the message; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The pipe is not connected.</p>\\n<p>-or-</p>\\n<p>The pipe handle has not been set.</p>\\n<p>-or-</p>\\n<p>The pipe's <xref href=\\\"System.IO.Pipes.PipeStream.ReadMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property value is not <xref href=\\\"System.IO.Pipes.PipeTransmissionMode.Message\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PipeStream.IsMessageComplete\n- uid: System.IO.Pipes.PipeStream.Length\n  commentId: P:System.IO.Pipes.PipeStream.Length\n  id: Length\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.IO.Pipes.PipeStream.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 99\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the length of a stream, in bytes.</p>\\n\"\n  syntax:\n    content: public override long Length { get; }\n    content.vb: Public Overrides ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>0 in all cases.</p>\\n\"\n  overridden: System.IO.Stream.Length\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Always thrown.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PipeStream.Length\n- uid: System.IO.Pipes.PipeStream.OutBufferSize\n  commentId: P:System.IO.Pipes.PipeStream.OutBufferSize\n  id: OutBufferSize\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: OutBufferSize\n  fullName: System.IO.Pipes.PipeStream.OutBufferSize\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutBufferSize\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 100\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the size, in bytes, of the outbound buffer for a pipe.</p>\\n\"\n  syntax:\n    content: public virtual int OutBufferSize { get; }\n    content.vb: Public Overridable ReadOnly Property OutBufferSize As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The outbound buffer size, in bytes.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream is unwriteable.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The pipe is waiting to connect.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: PipeStream.OutBufferSize\n- uid: System.IO.Pipes.PipeStream.Position\n  commentId: P:System.IO.Pipes.PipeStream.Position\n  id: Position\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.IO.Pipes.PipeStream.Position\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Position\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 101\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets or sets the current position of the current stream.</p>\\n\"\n  syntax:\n    content: public override long Position { get; set; }\n    content.vb: Public Overrides Property Position As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>0 in all cases.</p>\\n\"\n  overridden: System.IO.Stream.Position\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Always thrown.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PipeStream.Position\n- uid: System.IO.Pipes.PipeStream.ReadMode\n  commentId: P:System.IO.Pipes.PipeStream.ReadMode\n  id: ReadMode\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: ReadMode\n  fullName: System.IO.Pipes.PipeStream.ReadMode\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadMode\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 102\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets or sets the reading mode for a <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual PipeTransmissionMode ReadMode { get; set; }\n    content.vb: Public Overridable Property ReadMode As PipeTransmissionMode\n    parameters: []\n    return:\n      type: System.IO.Pipes.PipeTransmissionMode\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates how the <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object reads from the pipe.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The supplied value is not a valid <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The supplied value is not a supported <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value for this pipe stream.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The handle has not been set.</p>\\n<p>-or-</p>\\n<p>The pipe is waiting to connect with a named client.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or an I/O error occurred with a named client.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: PipeStream.ReadMode\n- uid: System.IO.Pipes.PipeStream.SafePipeHandle\n  commentId: P:System.IO.Pipes.PipeStream.SafePipeHandle\n  id: SafePipeHandle\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: SafePipeHandle\n  fullName: System.IO.Pipes.PipeStream.SafePipeHandle\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SafePipeHandle\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 103\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the safe handle for the local end of the pipe that the current <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object encapsulates.</p>\\n\"\n  syntax:\n    content: public SafePipeHandle SafePipeHandle { get; }\n    content.vb: Public ReadOnly Property SafePipeHandle As SafePipeHandle\n    parameters: []\n    return:\n      type: Microsoft.Win32.SafeHandles.SafePipeHandle\n      description: \"\\n<p>A <xref href=\\\"Microsoft.Win32.SafeHandles.SafePipeHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the pipe that is encapsulated by the current <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The pipe handle has not been set.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PipeStream.SafePipeHandle\n- uid: System.IO.Pipes.PipeStream.TransmissionMode\n  commentId: P:System.IO.Pipes.PipeStream.TransmissionMode\n  id: TransmissionMode\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: TransmissionMode\n  fullName: System.IO.Pipes.PipeStream.TransmissionMode\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TransmissionMode\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 104\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the pipe transmission mode supported by the current pipe.</p>\\n\"\n  syntax:\n    content: public virtual PipeTransmissionMode TransmissionMode { get; }\n    content.vb: Public Overridable ReadOnly Property TransmissionMode As PipeTransmissionMode\n    parameters: []\n    return:\n      type: System.IO.Pipes.PipeTransmissionMode\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates the transmission mode supported by the current pipe.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The handle has not been set.</p>\\n<p>-or-</p>\\n<p>The pipe is waiting to connect in an anonymous client/server operation or with a named client. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: PipeStream.TransmissionMode\n- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  commentId: M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 105\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.Pipes.PipeStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  overridden: System.IO.Stream.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: PipeStream.Dispose(Boolean)\n- uid: System.IO.Pipes.PipeStream.Flush\n  commentId: M:System.IO.Pipes.PipeStream.Flush\n  id: Flush\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.IO.Pipes.PipeStream.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flush\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 106\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.Stream.Flush\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The pipe does not support write operations.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PipeStream.Flush()\n- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Pipes.PipeStream.Read(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 107\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Reads a block of bytes from a stream and writes the data to a specified buffer.</p>\\n\"\n  syntax:\n    content: public override int Read(byte[] buffer, int offset, int count)\n    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>When this method returns, contains the specified byte array with the values between <em>offset</em> and (<em>offset</em> + <em>count</em> - 1) replaced by the bytes read from the current source.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in the <em>buffer</em> array at which the bytes that are read will be placed.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to read.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The total number of bytes that are read into <em>buffer</em>. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.</p>\\n\"\n  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is less than 0.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>count</em> is greater than the number of bytes available in <em>buffer</em>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The pipe does not support read operations.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The pipe is disconnected, waiting to connect, or the handle has not been set.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>Any I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Pipes.PipeStream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  nameWithType: PipeStream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: PipeStream.Read(Byte(), Int32, Int32)\n- uid: System.IO.Pipes.PipeStream.ReadByte\n  commentId: M:System.IO.Pipes.PipeStream.ReadByte\n  id: ReadByte\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: ReadByte()\n  fullName: System.IO.Pipes.PipeStream.ReadByte()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadByte\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 108\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Reads a byte from a pipe.</p>\\n\"\n  syntax:\n    content: public override int ReadByte()\n    content.vb: Public Overrides Function ReadByte As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The byte, cast to <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or -1 indicates the end of the stream (the pipe has been closed).</p>\\n\"\n  overridden: System.IO.Stream.ReadByte\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The pipe does not support read operations.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The pipe is disconnected, waiting to connect, or the handle has not been set.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>Any I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PipeStream.ReadByte()\n- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Pipes.PipeStream.Seek(System.Int64, System.IO.SeekOrigin)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Seek\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 109\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Sets the current position of the current stream to the specified value.</p>\\n\"\n  syntax:\n    content: public override long Seek(long offset, SeekOrigin origin)\n    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The point, relative to <em>origin</em>, to begin seeking from.</p>\\n\"\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: \"\\n<p>Specifies the beginning, the end, or the current position as a reference point for <em>offset</em>, using a value of type <xref href=\\\"System.IO.SeekOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The new position in the stream.</p>\\n\"\n  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PipeStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  commentId: M:System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetLength\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 110\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Sets the length of the current stream to the specified value.</p>\\n\"\n  syntax:\n    content: public override void SetLength(long value)\n    content.vb: Public Overrides Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The new length of the stream.</p>\\n\"\n  overridden: System.IO.Stream.SetLength(System.Int64)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PipeStream.SetLength(Int64)\n- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain\n  commentId: M:System.IO.Pipes.PipeStream.WaitForPipeDrain\n  id: WaitForPipeDrain\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: WaitForPipeDrain()\n  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WaitForPipeDrain\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 111\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Waits for the other end of the pipe to read all sent bytes.</p>\\n\"\n  syntax:\n    content: public void WaitForPipeDrain()\n    content.vb: Public Sub WaitForPipeDrain\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The pipe does not support write operations.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeStream.WaitForPipeDrain()\n- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Pipes.PipeStream.Write(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 112\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Writes a block of bytes to the current stream using data from a buffer.</p>\\n\"\n  syntax:\n    content: public override void Write(byte[] buffer, int offset, int count)\n    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer that contains data to write to the pipe.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based byte offset in <em>buffer</em> at which to begin copying bytes to the current stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to write to the current stream.</p>\\n\"\n  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or-</p>\\n<p>\\n<em>count</em> is less than 0.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>count</em> is greater than the number of bytes available in <em>buffer</em>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The pipe does not support write operations.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Pipes.PipeStream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  nameWithType: PipeStream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: PipeStream.Write(Byte(), Int32, Int32)\n- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  commentId: M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  id: WriteByte(System.Byte)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: WriteByte(Byte)\n  fullName: System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteByte\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs\n    startLine: 113\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Writes a byte to the current stream.</p>\\n\"\n  syntax:\n    content: public override void WriteByte(byte value)\n    content.vb: Public Overrides Sub WriteByte(value As Byte)\n    parameters:\n    - id: value\n      type: System.Byte\n      description: \"\\n<p>The byte to write to the stream.</p>\\n\"\n  overridden: System.IO.Stream.WriteByte(System.Byte)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The pipe is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The pipe does not support write operations.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The pipe is disconnected, waiting to connect, or the handle has not been set.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pipe is broken or another I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PipeStream.WriteByte(Byte)\n- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadAsync\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs\n    startLine: 20\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  syntax:\n    content: public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n    - id: offset\n      type: System.Int32\n    - id: count\n      type: System.Int32\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Pipes.PipeStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: PipeStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteAsync\n    path: src/System.IO.Pipes/ref/System.IO.Pipes.Manual.cs\n    startLine: 21\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  syntax:\n    content: public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n    - id: offset\n      type: System.Int32\n    - id: count\n      type: System.Int32\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task\n  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Pipes.PipeStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: PipeStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\nreferences:\n- uid: System.IO.Pipes\n  isExternal: false\n  name: System.IO.Pipes\n  fullName: System.IO.Pipes\n  commentId: N:System.IO.Pipes\n  nameWithType: System.IO.Pipes\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  fullName: System.IO.Stream.Null\n  commentId: F:System.IO.Stream.Null\n  nameWithType: Stream.Null\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)\n  nameWithType: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyTo(Stream, Int32)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: true\n  name: Close()\n  fullName: System.IO.Stream.Close()\n  spec.csharp:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Close\n  nameWithType: Stream.Close()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.Stream.Dispose()\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose\n  nameWithType: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync\n  nameWithType: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: true\n  name: CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  spec.csharp:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CreateWaitHandle\n  nameWithType: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)\n  nameWithType: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: true\n  name: ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  spec.csharp:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ObjectInvariant\n  nameWithType: Stream.ObjectInvariant()\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  commentId: P:System.IO.Stream.CanTimeout\n  nameWithType: Stream.CanTimeout\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  commentId: P:System.IO.Stream.ReadTimeout\n  nameWithType: Stream.ReadTimeout\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  commentId: P:System.IO.Stream.WriteTimeout\n  nameWithType: Stream.WriteTimeout\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  name: AsInputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  name: AsOutputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  name: AsRandomAccessStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  isExternal: true\n  name: AsInputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions\n  parent: System.IO\n  isExternal: false\n  name: WindowsRuntimeStreamExtensions\n  fullName: System.IO.WindowsRuntimeStreamExtensions\n  commentId: T:System.IO.WindowsRuntimeStreamExtensions\n  nameWithType: WindowsRuntimeStreamExtensions\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  isExternal: true\n  name: AsOutputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  isExternal: true\n  name: AsRandomAccessStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)\n- uid: System.IO.Pipes.PipeDirection\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeDirection\n  fullName: System.IO.Pipes.PipeDirection\n  commentId: T:System.IO.Pipes.PipeDirection\n  nameWithType: PipeDirection\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.IO.Pipes.PipeTransmissionMode\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeTransmissionMode\n  fullName: System.IO.Pipes.PipeTransmissionMode\n  commentId: T:System.IO.Pipes.PipeTransmissionMode\n  nameWithType: PipeTransmissionMode\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  fullName: System.IO.Stream.CanRead\n  commentId: P:System.IO.Stream.CanRead\n  nameWithType: Stream.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  fullName: System.IO.Stream.CanSeek\n  commentId: P:System.IO.Stream.CanSeek\n  nameWithType: Stream.CanSeek\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  fullName: System.IO.Stream.CanWrite\n  commentId: P:System.IO.Stream.CanWrite\n  nameWithType: Stream.CanWrite\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  fullName: System.IO.Stream.Length\n  commentId: P:System.IO.Stream.Length\n  nameWithType: Stream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  fullName: System.IO.Stream.Position\n  commentId: P:System.IO.Stream.Position\n  nameWithType: Stream.Position\n- uid: Microsoft.Win32.SafeHandles.SafePipeHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafePipeHandle\n  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafePipeHandle\n  nameWithType: SafePipeHandle\n- uid: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: Microsoft.Win32.SafeHandles\n  fullName: Microsoft.Win32.SafeHandles\n  commentId: N:Microsoft.Win32.SafeHandles\n  nameWithType: Microsoft.Win32.SafeHandles\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose(System.Boolean)\n  nameWithType: Stream.Dispose(Boolean)\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.Stream.Flush()\n  spec.csharp:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Flush\n  nameWithType: Stream.Flush()\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  spec.csharp:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadByte\n  nameWithType: Stream.ReadByte()\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)\n  spec.csharp:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  nameWithType: Stream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  fullName: System.IO.SeekOrigin\n  commentId: T:System.IO.SeekOrigin\n  nameWithType: SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: true\n  name: SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(System.Int64)\n  spec.csharp:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.SetLength(System.Int64)\n  nameWithType: Stream.SetLength(Int64)\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(System.Byte)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteByte(System.Byte)\n  nameWithType: Stream.WriteByte(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  commentId: T:System.Byte\n  nameWithType: Byte\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}