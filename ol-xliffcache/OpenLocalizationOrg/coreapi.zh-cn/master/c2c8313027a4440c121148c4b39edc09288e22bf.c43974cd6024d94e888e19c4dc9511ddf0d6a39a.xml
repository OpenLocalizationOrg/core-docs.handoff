{"nodes":[{"pos":[1612,1625],"content":"DeflateStream","needQuote":true,"nodes":[{"content":"DeflateStream","pos":[0,13]}]},{"pos":[4978,5017],"content":"DeflateStream(Stream, CompressionLevel)","needQuote":true,"nodes":[{"content":"DeflateStream(Stream, CompressionLevel)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The stream to compress.&lt;/p&gt;\\n","pos":[5965,5999],"source":"\\n<p>The stream to compress.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.&lt;/p&gt;\\n","pos":[6099,6236],"source":"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6355,6409],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[7278,7326],"content":"DeflateStream(Stream, CompressionLevel, Boolean)","needQuote":true,"nodes":[{"content":"DeflateStream(Stream, CompressionLevel, Boolean)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The stream to compress.&lt;/p&gt;\\n","pos":[8367,8401],"source":"\\n<p>The stream to compress.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.&lt;/p&gt;\\n","pos":[8501,8638],"source":"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9051,9105],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[9935,9973],"content":"DeflateStream(Stream, CompressionMode)","needQuote":true,"nodes":[{"content":"DeflateStream(Stream, CompressionMode)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The stream to compress or decompress.&lt;/p&gt;\\n","pos":[10893,10941],"source":"\\n<p>The stream to compress or decompress.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to compress or decompress the stream.&lt;/p&gt;\\n","pos":[11028,11129],"source":"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11248,11302],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[12787,12834],"content":"DeflateStream(Stream, CompressionMode, Boolean)","needQuote":true,"nodes":[{"content":"DeflateStream(Stream, CompressionMode, Boolean)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The stream to compress or decompress.&lt;/p&gt;\\n","pos":[13847,13895],"source":"\\n<p>The stream to compress or decompress.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to compress or decompress the stream.&lt;/p&gt;\\n","pos":[13982,14083],"source":"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[14489,14543],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[15837,15847],"content":"BaseStream","needQuote":true,"nodes":[{"content":"BaseStream","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A stream object that represents the underlying stream.&lt;/p&gt;\\n","pos":[16526,16591],"source":"\\n<p>A stream object that represents the underlying stream.</p>\\n"},{"content":"\\n&lt;p&gt;The underlying stream is closed.&lt;/p&gt;\\n","pos":[16714,16757],"source":"\\n<p>The underlying stream is closed.</p>\\n"},{"pos":[17084,17091],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[18479,18486],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;false&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[19187,19236],"source":"\\n<p>\\n<strong>false</strong> in all cases.</p>\\n"},{"pos":[19629,19637],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[21003,21009],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;A long value.&lt;/p&gt;\\n","pos":[21781,21805],"source":"\\n<p>A long value.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[21962,22019],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[22372,22380],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A long value.&lt;/p&gt;\\n","pos":[23156,23180],"source":"\\n<p>A long value.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[23339,23396],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[23791,23807],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[24664,24807],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[25201,25208],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[25952,25984],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[26428,26454],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The array to store decompressed bytes.&lt;/p&gt;\\n","pos":[27263,27312],"source":"\\n<p>The array to store decompressed bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;array&lt;/em&gt; at which the read bytes will be placed.&lt;/p&gt;\\n","pos":[27376,27460],"source":"\\n<p>The byte offset in <em>array</em> at which the read bytes will be placed.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of decompressed bytes to read.&lt;/p&gt;\\n","pos":[27523,27583],"source":"\\n<p>The maximum number of decompressed bytes to read.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes that were read into the byte array.&lt;/p&gt;\\n","pos":[27642,27708],"source":"\\n<p>The number of bytes that were read into the byte array.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[27904,27957],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; length minus the index starting point is less than &lt;em&gt;count&lt;/em&gt;.&lt;/p&gt;\\n","pos":[28436,28606],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>array</em> length minus the index starting point is less than <em>count</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The data is in an invalid format.&lt;/p&gt;\\n","pos":[28715,28759],"source":"\\n<p>The data is in an invalid format.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[28868,28900],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[29680,29730],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[31669,31692],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The location in the stream.&lt;/p&gt;\\n","pos":[32545,32583],"source":"\\n<p>The location in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;A long value.&lt;/p&gt;\\n","pos":[32824,32848],"source":"\\n<p>A long value.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[33038,33095],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[33489,33505],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The length of the stream.&lt;/p&gt;\\n","pos":[34299,34335],"source":"\\n<p>The length of the stream.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[34509,34566],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[35022,35049],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The buffer that contains the data to compress.&lt;/p&gt;\\n","pos":[35859,35916],"source":"\\n<p>The buffer that contains the data to compress.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;array&lt;/em&gt; from which the bytes will be read.&lt;/p&gt;\\n","pos":[35980,36059],"source":"\\n<p>The byte offset in <em>array</em> from which the bytes will be read.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to write.&lt;/p&gt;\\n","pos":[36122,36170],"source":"\\n<p>The maximum number of bytes to write.</p>\\n"},{"pos":[37035,37086],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[38771,38792],"content":"System.IO.Compression","needQuote":true,"nodes":[{"content":"System.IO.Compression","pos":[0,21]}]},{"pos":[38968,38974],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39130,39148],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[39335,39341],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[39497,39508],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[39886,39905],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[40046,40057],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[40111,40112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40165,40171],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[40213,40214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40308,40319],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[40373,40374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40427,40433],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[40475,40476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40719,40745],"content":"CopyToAsync(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32)","pos":[0,26]}]},{"pos":[40913,40924],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[40978,40979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41032,41038],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[41081,41082]},{"pos":[41136,41141],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41200,41201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41308,41319],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[41373,41374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41427,41433],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[41476,41477]},{"pos":[41531,41536],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41595,41596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41894,41939],"content":"CopyToAsync(Stream, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32, CancellationToken)","pos":[0,45]}]},{"pos":[42178,42189],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[42243,42244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42297,42303],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[42346,42347]},{"pos":[42401,42406],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[42466,42467]},{"pos":[42543,42560],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[42641,42642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42784,42795],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[42849,42850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42903,42909],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[42952,42953]},{"pos":[43007,43012],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[43072,43073]},{"pos":[43149,43166],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[43247,43248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43548,43562],"content":"CopyTo(Stream)","needQuote":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[43693,43699],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[43748,43749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43802,43808],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[43850,43851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43940,43946],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[43995,43996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44049,44055],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[44097,44098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44326,44347],"content":"CopyTo(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Stream, Int32)","pos":[0,21]}]},{"pos":[44505,44511],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[44560,44561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44614,44620],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[44663,44664]},{"pos":[44718,44723],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44782,44783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44885,44891],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[44940,44941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44994,45000],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[45043,45044]},{"pos":[45098,45103],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45162,45163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45379,45386],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[45481,45486],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[45555,45556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45583,45584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45654,45659],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[45728,45729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45756,45757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45930,45939],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[46038,46045],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[46095,46096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46123,46124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46196,46203],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[46253,46254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46281,46282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46462,46474],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[46579,46589],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[46642,46643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46670,46671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46746,46756],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[46809,46810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46837,46838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47059,47088],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[47263,47273],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[47326,47327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47398,47415],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[47496,47497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47608,47618],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[47671,47672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47743,47760],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[47841,47842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48086,48104],"content":"CreateWaitHandle()","needQuote":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[48221,48237],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[48317,48318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48345,48346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48427,48443],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[48523,48524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48551,48552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48824,48878],"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,54]}]},{"pos":[49323,49332],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[49405,49406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49454,49458],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[49517,49519]},{"content":",","pos":[49551,49552]},{"pos":[49606,49611],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[49671,49672]},{"pos":[49726,49731],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[49791,49792]},{"pos":[49854,49867],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[49935,49936]},{"pos":[49991,49997],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50057,50058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50208,50217],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[50290,50291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50339,50343],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[50401,50403],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[50432,50433]},{"pos":[50487,50492],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[50552,50553]},{"pos":[50607,50612],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[50672,50673]},{"pos":[50735,50748],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[50816,50817]},{"pos":[50872,50878],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50938,50939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51340,51361],"content":"EndRead(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[51500,51507],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[51578,51579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51635,51647],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[51713,51714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51807,51814],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[51885,51886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51942,51954],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[52020,52021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52273,52304],"content":"ReadAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32)","pos":[0,31]}]},{"pos":[52617,52626],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[52678,52679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52727,52731],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[52790,52792]},{"content":",","pos":[52824,52825]},{"pos":[52879,52884],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[52944,52945]},{"pos":[52999,53004],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53063,53064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53179,53188],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[53240,53241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53289,53293],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[53351,53353],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[53382,53383]},{"pos":[53437,53442],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[53502,53503]},{"pos":[53557,53562],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53621,53622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54000,54055],"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,55]}]},{"pos":[54504,54514],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[54588,54589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54637,54641],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[54700,54702]},{"content":",","pos":[54734,54735]},{"pos":[54789,54794],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[54854,54855]},{"pos":[54909,54914],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[54974,54975]},{"pos":[55037,55050],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[55118,55119]},{"pos":[55174,55180],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55240,55241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55392,55402],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[55476,55477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55525,55529],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[55587,55589],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[55618,55619]},{"pos":[55673,55678],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[55738,55739]},{"pos":[55793,55798],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[55858,55859]},{"pos":[55921,55934],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[56002,56003]},{"pos":[56058,56064],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56124,56125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56530,56552],"content":"EndWrite(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[56693,56701],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[56773,56774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56830,56842],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[56908,56909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57003,57011],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[57083,57084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57140,57152],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[57218,57219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57474,57506],"content":"WriteAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32)","pos":[0,32]}]},{"pos":[57823,57833],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[57886,57887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57935,57939],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[57998,58000]},{"content":",","pos":[58032,58033]},{"pos":[58087,58092],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[58152,58153]},{"pos":[58207,58212],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58271,58272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58388,58398],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[58451,58452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58500,58504],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58562,58564],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[58593,58594]},{"pos":[58648,58653],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[58713,58714]},{"pos":[58768,58773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58832,58833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59137,59147],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[59248,59256],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[59307,59308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59335,59336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59409,59417],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[59468,59469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59496,59497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59690,59705],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[59832,59841],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[59893,59894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59942,59946],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[60004,60005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60092,60101],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[60153,60154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60202,60206],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[60264,60265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60485,60505],"content":"Synchronized(Stream)","needQuote":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[60648,60660],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[60736,60737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60790,60796],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[60859,60860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60955,60967],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[61043,61044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61097,61103],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[61166,61167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61385,61402],"content":"ObjectInvariant()","needQuote":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[61517,61532],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[61611,61612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61639,61640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61720,61735],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[61814,61815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61842,61843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62039,62049],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[62258,62269],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[62482,62494],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[62746,62770],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[62933,62948],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[63036,63037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63088,63095],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63156,63157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63262,63277],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[63365,63366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63417,63424],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63485,63486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63751,63771],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[63910,63928],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[64019,64020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64047,64048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64140,64158],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[64249,64250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64277,64278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64533,64560],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[64713,64738],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[64836,64837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64864,64865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64964,64989],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[65087,65088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65115,65116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65385,65403],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[65554,65566],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[65651,65652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65700,65704],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[65762,65763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65862,65874],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[65959,65960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66008,66012],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[66070,66071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66290,66300],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[66395,66403],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[66472,66473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66500,66501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66571,66579],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[66648,66649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66676,66677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66860,66874],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[66993,66999],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[67066,67067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67117,67123],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67183,67184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67267,67273],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[67340,67341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67391,67397],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67457,67458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67672,67694],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[67842,67848],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[67915,67916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67966,67972],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[68033,68034]},{"pos":[68089,68095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68155,68156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68253,68259],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68326,68327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68377,68383],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[68444,68445]},{"pos":[68500,68506],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68566,68567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68812,68843],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[69009,69024],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[69100,69101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69151,69157],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69218,69219]},{"pos":[69274,69280],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69340,69341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69447,69462],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[69538,69539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69589,69595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69656,69657]},{"pos":[69712,69718],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69778,69779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70009,70022],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[70123,70134],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[70206,70207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70234,70235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70308,70319],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[70391,70392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70419,70420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70595,70604],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[70697,70704],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70772,70773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70800,70801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70870,70877],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70945,70946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70973,70974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71149,71166],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[71275,71290],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[71366,71367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71394,71395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71472,71487],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[71563,71564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71591,71592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71920,71935],"content":"AsInputStream()","needQuote":true,"nodes":[{"content":"AsInputStream()","pos":[0,15]}]},{"pos":[72094,72107],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[72187,72188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72215,72216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72318,72331],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[72411,72412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72439,72440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72835,72851],"content":"AsOutputStream()","needQuote":true,"nodes":[{"content":"AsOutputStream()","pos":[0,16]}]},{"pos":[73012,73026],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[73107,73108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73135,73136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73239,73253],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[73334,73335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73362,73363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73772,73794],"content":"AsRandomAccessStream()","needQuote":true,"nodes":[{"content":"AsRandomAccessStream()","pos":[0,22]}]},{"pos":[73967,73987],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[74074,74075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74102,74103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74212,74232],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[74319,74320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74347,74348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74572,74578],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[74688,74697],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[74878,74899],"content":"AsInputStream(Stream)","needQuote":true,"nodes":[{"content":"AsInputStream(Stream)","pos":[0,21]}]},{"pos":[75092,75105],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[75185,75186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75239,75245],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[75308,75309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75429,75442],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[75522,75523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75576,75582],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[75645,75646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75916,75946],"content":"WindowsRuntimeStreamExtensions","needQuote":true,"nodes":[{"content":"WindowsRuntimeStreamExtensions","pos":[0,30]}]},{"pos":[76211,76233],"content":"AsOutputStream(Stream)","needQuote":true,"nodes":[{"content":"AsOutputStream(Stream)","pos":[0,22]}]},{"pos":[76428,76442],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[76523,76524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76577,76583],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[76646,76647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76768,76782],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[76863,76864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76917,76923],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[76986,76987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77277,77305],"content":"AsRandomAccessStream(Stream)","needQuote":true,"nodes":[{"content":"AsRandomAccessStream(Stream)","pos":[0,28]}]},{"pos":[77512,77532],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[77619,77620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77673,77679],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[77742,77743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77870,77890],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[77977,77978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78031,78037],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[78100,78101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78395,78411],"content":"CompressionLevel","needQuote":true,"nodes":[{"content":"CompressionLevel","pos":[0,16]}]},{"pos":[78617,78624],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[78811,78826],"content":"CompressionMode","needQuote":true,"nodes":[{"content":"CompressionMode","pos":[0,15]}]},{"pos":[79049,79056],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[79252,79259],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[79456,79464],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[79662,79668],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[79839,79844],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[80008,80016],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[80230,80246],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[80375,80382],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[80432,80433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80484,80491],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80552,80553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80641,80648],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[80698,80699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80750,80757],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80818,80819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81017,81024],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[81119,81124],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[81172,81173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81200,81201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81271,81276],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[81324,81325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81352,81353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81563,81589],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"pos":[81882,81886],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[81933,81934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81982,81986],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[82045,82047]},{"content":",","pos":[82079,82080]},{"pos":[82134,82139],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[82199,82200]},{"pos":[82254,82259],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82318,82319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82429,82433],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[82480,82481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82529,82533],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[82591,82593],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[82622,82623]},{"pos":[82677,82682],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[82742,82743]},{"pos":[82797,82802],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82861,82862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83089,83095],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[83215,83219],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[83278,83280]},{"pos":[83343,83347],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[83405,83407],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[83539,83544],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83784,83834],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[84273,84282],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[84334,84335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84383,84387],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[84446,84448]},{"content":",","pos":[84480,84481]},{"pos":[84535,84540],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84600,84601]},{"pos":[84655,84660],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84720,84721]},{"pos":[84797,84814],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[84895,84896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85046,85055],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[85107,85108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85156,85160],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[85218,85220],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[85249,85250]},{"pos":[85304,85309],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[85369,85370]},{"pos":[85424,85429],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[85489,85490]},{"pos":[85566,85583],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[85664,85665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86048,86065],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[86331,86342],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[86547,86551],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[86625,86626],"content":"<","needQuote":true,"nodes":[]},{"pos":[86675,86680],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86821,86825],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[86900,86903]},{"pos":[86959,86964],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[87023,87024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87212,87228],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[87388,87401],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[87598,87602],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[87655,87656],"content":"<","needQuote":true,"nodes":[]},{"pos":[87683,87690],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[87805,87809],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[87863,87866]},{"pos":[87900,87907],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[87940,87941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88127,88149],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[88380,88403],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"pos":[88565,88569],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[88616,88617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88666,88671],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[88731,88732]},{"pos":[88794,88804],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[88850,88851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88955,88959],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[89006,89007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89056,89061],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[89121,89122]},{"pos":[89184,89194],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[89240,89241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89453,89463],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[89662,89678],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[89807,89816],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[89868,89869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89918,89923],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[89982,89983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90071,90080],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[90132,90133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90182,90187],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[90246,90247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90485,90512],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"pos":[90809,90814],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[90862,90863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90911,90915],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[90974,90976]},{"content":",","pos":[91008,91009]},{"pos":[91063,91068],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91128,91129]},{"pos":[91183,91188],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91247,91248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91359,91364],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[91412,91413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91461,91465],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[91523,91525],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[91554,91555]},{"pos":[91609,91614],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91674,91675]},{"pos":[91729,91734],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91793,91794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92160,92211],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[92654,92664],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[92717,92718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92766,92770],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[92829,92831]},{"content":",","pos":[92863,92864]},{"pos":[92918,92923],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[92983,92984]},{"pos":[93038,93043],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93103,93104]},{"pos":[93180,93197],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[93278,93279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93430,93440],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[93493,93494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93542,93546],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[93604,93606],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[93635,93636]},{"pos":[93690,93695],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93755,93756]},{"pos":[93810,93815],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93875,93876]},{"pos":[93952,93969],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[94050,94051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94436,94440],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[94609,94630],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[94831,94848],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[95026,95049],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[95260,95281],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[95490,95515],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[95721,95748],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[95956,95976],"content":"InvalidDataException","needQuote":true,"nodes":[{"content":"InvalidDataException","pos":[0,20]}]}],"content":"items:\n- uid: System.IO.Compression.DeflateStream\n  commentId: T:System.IO.Compression.DeflateStream\n  id: DeflateStream\n  parent: System.IO.Compression\n  children:\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  - System.IO.Compression.DeflateStream.BaseStream\n  - System.IO.Compression.DeflateStream.CanRead\n  - System.IO.Compression.DeflateStream.CanSeek\n  - System.IO.Compression.DeflateStream.CanWrite\n  - System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  - System.IO.Compression.DeflateStream.Flush\n  - System.IO.Compression.DeflateStream.Length\n  - System.IO.Compression.DeflateStream.Position\n  - System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  - System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  - vb\n  name: DeflateStream\n  fullName: System.IO.Compression.DeflateStream\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DeflateStream\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 21\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.</p>\\n\"\n  syntax:\n    content: 'public class DeflateStream : Stream, IDisposable'\n    content.vb: >-\n      Public Class DeflateStream\n          Inherits Stream\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.Stream.Null\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.Close\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.WriteTimeout\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DeflateStream\n  extensionMethods:\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: DeflateStream(Stream, CompressionLevel)\n  fullName: System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionLevel)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 23\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.DeflateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression level.</p>\\n\"\n  syntax:\n    content: public DeflateStream(Stream stream, CompressionLevel compressionLevel)\n    content.vb: Public Sub New(stream As Stream, compressionLevel As CompressionLevel)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to compress.</p>\\n\"\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: \"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The stream does not support write operations such as compression. (The <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property on the stream object is <strong>false</strong>.)</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionLevel)\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: DeflateStream(Stream, CompressionLevel, Boolean)\n  fullName: System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionLevel, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 24\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.DeflateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.</p>\\n\"\n  syntax:\n    content: public DeflateStream(Stream stream, CompressionLevel compressionLevel, bool leaveOpen)\n    content.vb: Public Sub New(stream As Stream, compressionLevel As CompressionLevel, leaveOpen As Boolean)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to compress.</p>\\n\"\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: \"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n\"\n    - id: leaveOpen\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to leave the stream object open after disposing the <xref href=\\\"System.IO.Compression.DeflateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The stream does not support write operations such as compression. (The <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property on the stream object is <strong>false</strong>.)</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionLevel, Boolean)\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: DeflateStream(Stream, CompressionMode)\n  fullName: System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionMode)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 25\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.DeflateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression mode.</p>\\n\"\n  syntax:\n    content: public DeflateStream(Stream stream, CompressionMode mode)\n    content.vb: Public Sub New(stream As Stream, mode As CompressionMode)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to compress or decompress.</p>\\n\"\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: \"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>mode</em> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionMode)\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: DeflateStream(Stream, CompressionMode, Boolean)\n  fullName: System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionMode, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 26\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.DeflateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.</p>\\n\"\n  syntax:\n    content: public DeflateStream(Stream stream, CompressionMode mode, bool leaveOpen)\n    content.vb: Public Sub New(stream As Stream, mode As CompressionMode, leaveOpen As Boolean)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to compress or decompress.</p>\\n\"\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: \"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n\"\n    - id: leaveOpen\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to leave the stream open after disposing the <xref href=\\\"System.IO.Compression.DeflateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>mode</em> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionMode, Boolean)\n- uid: System.IO.Compression.DeflateStream.BaseStream\n  commentId: P:System.IO.Compression.DeflateStream.BaseStream\n  id: BaseStream\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: BaseStream\n  fullName: System.IO.Compression.DeflateStream.BaseStream\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseStream\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 27\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a reference to the underlying stream.</p>\\n\"\n  syntax:\n    content: public Stream BaseStream { get; }\n    content.vb: Public ReadOnly Property BaseStream As Stream\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>A stream object that represents the underlying stream.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The underlying stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DeflateStream.BaseStream\n- uid: System.IO.Compression.DeflateStream.CanRead\n  commentId: P:System.IO.Compression.DeflateStream.CanRead\n  id: CanRead\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.IO.Compression.DeflateStream.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanRead\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 28\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a value indicating whether the stream supports reading while decompressing a file.</p>\\n\"\n  syntax:\n    content: public override bool CanRead { get; }\n    content.vb: Public Overrides ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value is <strong>Decompress</strong>, and the underlying stream is opened and supports reading; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanRead\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DeflateStream.CanRead\n- uid: System.IO.Compression.DeflateStream.CanSeek\n  commentId: P:System.IO.Compression.DeflateStream.CanSeek\n  id: CanSeek\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: CanSeek\n  fullName: System.IO.Compression.DeflateStream.CanSeek\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanSeek\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 29\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a value indicating whether the stream supports seeking.</p>\\n\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>false</strong> in all cases.</p>\\n\"\n  overridden: System.IO.Stream.CanSeek\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DeflateStream.CanSeek\n- uid: System.IO.Compression.DeflateStream.CanWrite\n  commentId: P:System.IO.Compression.DeflateStream.CanWrite\n  id: CanWrite\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.IO.Compression.DeflateStream.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanWrite\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 30\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a value indicating whether the stream supports writing.</p>\\n\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value is <strong>Compress</strong>, and the underlying stream supports writing and is not closed; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanWrite\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DeflateStream.CanWrite\n- uid: System.IO.Compression.DeflateStream.Length\n  commentId: P:System.IO.Compression.DeflateStream.Length\n  id: Length\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.IO.Compression.DeflateStream.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 31\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This property is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override long Length { get; }\n    content.vb: Public Overrides ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long value.</p>\\n\"\n  overridden: System.IO.Stream.Length\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DeflateStream.Length\n- uid: System.IO.Compression.DeflateStream.Position\n  commentId: P:System.IO.Compression.DeflateStream.Position\n  id: Position\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.IO.Compression.DeflateStream.Position\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Position\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 32\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This property is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override long Position { get; set; }\n    content.vb: Public Overrides Property Position As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long value.</p>\\n\"\n  overridden: System.IO.Stream.Position\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DeflateStream.Position\n- uid: System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  commentId: M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 33\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.Compression.DeflateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  overridden: System.IO.Stream.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: DeflateStream.Dispose(Boolean)\n- uid: System.IO.Compression.DeflateStream.Flush\n  commentId: M:System.IO.Compression.DeflateStream.Flush\n  id: Flush\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.IO.Compression.DeflateStream.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flush\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 34\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>The current implementation of this method has no functionality.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.Stream.Flush\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DeflateStream.Flush()\n- uid: System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Compression.DeflateStream.Read(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 35\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Reads a number of decompressed bytes into the specified byte array.</p>\\n\"\n  syntax:\n    content: public override int Read(byte[] array, int offset, int count)\n    content.vb: Public Overrides Function Read(array As Byte(), offset As Integer, count As Integer) As Integer\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: \"\\n<p>The array to store decompressed bytes.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>array</em> at which the read bytes will be placed.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of decompressed bytes to read.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes that were read into the byte array.</p>\\n\"\n  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value was <strong>Compress</strong> when the object was created.</p>\\n<p>- or - </p>\\n<p>The underlying stream does not support reading.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>array</em> length minus the index starting point is less than <em>count</em>.</p>\\n\"\n  - type: System.IO.InvalidDataException\n    commentId: T:System.IO.InvalidDataException\n    description: \"\\n<p>The data is in an invalid format.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.DeflateStream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  nameWithType: DeflateStream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: DeflateStream.Read(Byte(), Int32, Int32)\n- uid: System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Compression.DeflateStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadAsync\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 36\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override Task<int> ReadAsync(byte[] array, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function ReadAsync(array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)\n    parameters:\n    - id: array\n      type: System.Byte[]\n    - id: offset\n      type: System.Int32\n    - id: count\n      type: System.Int32\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.DeflateStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: DeflateStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: DeflateStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Compression.DeflateStream.Seek(System.Int64, System.IO.SeekOrigin)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Seek\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 37\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This operation is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override long Seek(long offset, SeekOrigin origin)\n    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The location in the stream.</p>\\n\"\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.SeekOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long value.</p>\\n\"\n  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DeflateStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  commentId: M:System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetLength\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 38\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This operation is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void SetLength(long value)\n    content.vb: Public Overrides Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The length of the stream.</p>\\n\"\n  overridden: System.IO.Stream.SetLength(System.Int64)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DeflateStream.SetLength(Int64)\n- uid: System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Compression.DeflateStream.Write(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 39\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Writes compressed bytes to the underlying stream from the specified byte array.</p>\\n\"\n  syntax:\n    content: public override void Write(byte[] array, int offset, int count)\n    content.vb: Public Overrides Sub Write(array As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: \"\\n<p>The buffer that contains the data to compress.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>array</em> from which the bytes will be read.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to write.</p>\\n\"\n  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.DeflateStream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  nameWithType: DeflateStream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: DeflateStream.Write(Byte(), Int32, Int32)\n- uid: System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Compression.DeflateStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteAsync\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 40\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override Task WriteAsync(byte[] array, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function WriteAsync(array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: array\n      type: System.Byte[]\n    - id: offset\n      type: System.Int32\n    - id: count\n      type: System.Int32\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task\n  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.DeflateStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: DeflateStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: DeflateStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\nreferences:\n- uid: System.IO.Compression\n  isExternal: false\n  name: System.IO.Compression\n  fullName: System.IO.Compression\n  commentId: N:System.IO.Compression\n  nameWithType: System.IO.Compression\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  fullName: System.IO.Stream.Null\n  commentId: F:System.IO.Stream.Null\n  nameWithType: Stream.Null\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)\n  nameWithType: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyTo(Stream, Int32)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: true\n  name: Close()\n  fullName: System.IO.Stream.Close()\n  spec.csharp:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Close\n  nameWithType: Stream.Close()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.Stream.Dispose()\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose\n  nameWithType: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync\n  nameWithType: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: true\n  name: CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  spec.csharp:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CreateWaitHandle\n  nameWithType: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  spec.csharp:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadByte\n  nameWithType: Stream.ReadByte()\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(System.Byte)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteByte(System.Byte)\n  nameWithType: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)\n  nameWithType: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: true\n  name: ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  spec.csharp:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ObjectInvariant\n  nameWithType: Stream.ObjectInvariant()\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  commentId: P:System.IO.Stream.CanTimeout\n  nameWithType: Stream.CanTimeout\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  commentId: P:System.IO.Stream.ReadTimeout\n  nameWithType: Stream.ReadTimeout\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  commentId: P:System.IO.Stream.WriteTimeout\n  nameWithType: Stream.WriteTimeout\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  name: AsInputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  name: AsOutputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  name: AsRandomAccessStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  isExternal: true\n  name: AsInputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions\n  parent: System.IO\n  isExternal: false\n  name: WindowsRuntimeStreamExtensions\n  fullName: System.IO.WindowsRuntimeStreamExtensions\n  commentId: T:System.IO.WindowsRuntimeStreamExtensions\n  nameWithType: WindowsRuntimeStreamExtensions\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  isExternal: true\n  name: AsOutputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  isExternal: true\n  name: AsRandomAccessStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)\n- uid: System.IO.Compression.CompressionLevel\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionLevel\n  fullName: System.IO.Compression.CompressionLevel\n  commentId: T:System.IO.Compression.CompressionLevel\n  nameWithType: CompressionLevel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IO.Compression.CompressionMode\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionMode\n  fullName: System.IO.Compression.CompressionMode\n  commentId: T:System.IO.Compression.CompressionMode\n  nameWithType: CompressionMode\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  fullName: System.IO.Stream.CanRead\n  commentId: P:System.IO.Stream.CanRead\n  nameWithType: Stream.CanRead\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  fullName: System.IO.Stream.CanSeek\n  commentId: P:System.IO.Stream.CanSeek\n  nameWithType: Stream.CanSeek\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  fullName: System.IO.Stream.CanWrite\n  commentId: P:System.IO.Stream.CanWrite\n  nameWithType: Stream.CanWrite\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  fullName: System.IO.Stream.Length\n  commentId: P:System.IO.Stream.Length\n  nameWithType: Stream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  fullName: System.IO.Stream.Position\n  commentId: P:System.IO.Stream.Position\n  nameWithType: Stream.Position\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose(System.Boolean)\n  nameWithType: Stream.Dispose(Boolean)\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.Stream.Flush()\n  spec.csharp:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Flush\n  nameWithType: Stream.Flush()\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)\n  spec.csharp:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  nameWithType: Stream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  fullName: System.IO.SeekOrigin\n  commentId: T:System.IO.SeekOrigin\n  nameWithType: SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: true\n  name: SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(System.Int64)\n  spec.csharp:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.SetLength(System.Int64)\n  nameWithType: Stream.SetLength(Int64)\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.IO.InvalidDataException\n  isExternal: false\n  name: InvalidDataException\n  fullName: System.IO.InvalidDataException\n  nameWithType: InvalidDataException\n  commentId: T:System.IO.InvalidDataException\n"}