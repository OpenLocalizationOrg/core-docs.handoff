{"nodes":[{"pos":[657,684],"content":"PackageRelationshipSelector","needQuote":true,"nodes":[{"content":"PackageRelationshipSelector","pos":[0,27]}]},{"pos":[2728,2801],"content":"PackageRelationshipSelector(Uri, PackageRelationshipSelectorType, String)","needQuote":true,"nodes":[{"content":"PackageRelationshipSelector(Uri, PackageRelationshipSelectorType, String)","pos":[0,73]}]},{"content":"\\n&lt;p&gt;The qualification string that is used to select the relationships based on the &lt;em&gt;selectorType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[4642,4754],"source":"\\n<p>The qualification string that is used to select the relationships based on the <em>selectorType</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceUri&lt;/em&gt; or &lt;em&gt;selectionCriteria&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4873,4960],"source":"\\n<p>\\n<em>sourceUri</em> or <em>selectionCriteria</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;selectorType&lt;/em&gt; parameter is not valid.&lt;/p&gt;\\n","pos":[5077,5137],"source":"\\n<p>The <em>selectorType</em> parameter is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;selectionCriteria&lt;/em&gt; is not valid for the specified &lt;em&gt;selectorType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[5584,5679],"source":"\\n<p>The <em>selectionCriteria</em> is not valid for the specified <em>selectorType</em>.</p>\\n"},{"pos":[6957,6974],"content":"SelectionCriteria","needQuote":true,"nodes":[{"content":"SelectionCriteria","pos":[0,17]}]},{"pos":[9215,9227],"content":"SelectorType","needQuote":true,"nodes":[{"content":"SelectorType","pos":[0,12]}]},{"pos":[11486,11495],"content":"SourceUri","needQuote":true,"nodes":[{"content":"SourceUri","pos":[0,9]}]},{"pos":[13833,13848],"content":"Select(Package)","needQuote":true,"nodes":[{"content":"Select(Package)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The package from which to select the relationships based on the selection criteria.&lt;/p&gt;\\n","pos":[15091,15185],"source":"\\n<p>The package from which to select the relationships based on the selection criteria.</p>\\n"},{"pos":[15783,15802],"content":"System.IO.Packaging","needQuote":true,"nodes":[{"content":"System.IO.Packaging","pos":[0,19]}]},{"pos":[15972,15978],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16138,16148],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16243,16251],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16320,16321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16348,16349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16419,16427],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16496,16497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16524,16525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16708,16722],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16841,16847],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16914,16915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16965,16971],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17031,17032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17115,17121],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17188,17189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17239,17245],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17305,17306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17520,17542],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17690,17696],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17763,17764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17814,17820],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17881,17882]},{"pos":[17937,17943],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18003,18004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18101,18107],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18174,18175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18225,18231],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18292,18293]},{"pos":[18348,18354],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18414,18415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18660,18691],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18857,18872],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18948,18949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18999,19005],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19066,19067]},{"pos":[19122,19128],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19188,19189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19295,19310],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19386,19387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19437,19443],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19504,19505]},{"pos":[19560,19566],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19626,19627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19857,19870],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19971,19982],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20054,20055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20082,20083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20156,20167],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20239,20240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20267,20268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20443,20452],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20545,20552],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20620,20621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20648,20649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20718,20725],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20793,20794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20821,20822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20997,21014],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21123,21138],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21214,21215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21242,21243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21320,21335],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21411,21412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21439,21440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21585,21591],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21719,21722],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[21909,21940],"content":"PackageRelationshipSelectorType","needQuote":true,"nodes":[{"content":"PackageRelationshipSelectorType","pos":[0,31]}]},{"pos":[22186,22192],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22364,22371],"content":"Package","needQuote":true,"nodes":[{"content":"Package","pos":[0,7]}]},{"pos":[22652,22677],"content":"List<PackageRelationship>","needQuote":true,"nodes":[{"content":"List&lt;PackageRelationship&gt;","pos":[0,25],"source":"List<PackageRelationship>"}]},{"pos":[22962,22966],"content":"List","needQuote":true,"nodes":[{"content":"List","pos":[0,4]}]},{"pos":[23044,23045],"content":"<","needQuote":true,"nodes":[]},{"pos":[23121,23140],"content":"PackageRelationship","needQuote":true,"nodes":[{"content":"PackageRelationship","pos":[0,19]}]},{"pos":[23291,23295],"content":"List","needQuote":true,"nodes":[{"content":"List","pos":[0,4]}]},{"content":"(Of","pos":[23374,23377]},{"pos":[23460,23479],"content":"PackageRelationship","needQuote":true,"nodes":[{"content":"PackageRelationship","pos":[0,19]}]},{"pos":[23544,23545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23846,23853],"content":"List<T>","needQuote":true,"nodes":[{"content":"List&lt;T&gt;","pos":[0,7],"source":"List<T>"}]},{"pos":[24044,24048],"content":"List","needQuote":true,"nodes":[{"content":"List","pos":[0,4]}]},{"pos":[24105,24106],"content":"<","needQuote":true,"nodes":[]},{"pos":[24133,24134],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24247,24251],"content":"List","needQuote":true,"nodes":[{"content":"List","pos":[0,4]}]},{"content":"(Of","pos":[24309,24312]},{"pos":[24346,24347],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24374,24375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24557,24583],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[24772,24793],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[24987,25014],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[25215,25227],"content":"XmlException","needQuote":true,"nodes":[{"content":"XmlException","pos":[0,12]}]},{"pos":[25409,25426],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.IO.Packaging.PackageRelationshipSelector\n  commentId: T:System.IO.Packaging.PackageRelationshipSelector\n  id: PackageRelationshipSelector\n  parent: System.IO.Packaging\n  children:\n  - System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\n  - System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)\n  - System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n  - System.IO.Packaging.PackageRelationshipSelector.SelectorType\n  - System.IO.Packaging.PackageRelationshipSelector.SourceUri\n  langs:\n  - csharp\n  - vb\n  name: PackageRelationshipSelector\n  fullName: System.IO.Packaging.PackageRelationshipSelector\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PackageRelationshipSelector\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 139\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Defines <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> criteria to select part-level or package-level relationships.</p>\\n\"\n  syntax:\n    content: public sealed class PackageRelationshipSelector\n    content.vb: Public NotInheritable Class PackageRelationshipSelector\n  seealso:\n  - type: System.IO.Packaging.PackageRelationshipSelectorType\n    commentId: T:System.IO.Packaging.PackageRelationshipSelectorType\n  - type: System.IO.Packaging.PackageRelationship\n    commentId: T:System.IO.Packaging.PackageRelationship\n  - type: System.IO.Packaging.PackagePart\n    commentId: T:System.IO.Packaging.PackagePart\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: PackageRelationshipSelector\n- uid: System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\n  commentId: M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\n  id: '#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)'\n  parent: System.IO.Packaging.PackageRelationshipSelector\n  langs:\n  - csharp\n  - vb\n  name: PackageRelationshipSelector(Uri, PackageRelationshipSelectorType, String)\n  fullName: System.IO.Packaging.PackageRelationshipSelector.PackageRelationshipSelector(System.Uri, System.IO.Packaging.PackageRelationshipSelectorType, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 141\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public PackageRelationshipSelector(Uri sourceUri, PackageRelationshipSelectorType selectorType, string selectionCriteria)\n    content.vb: Public Sub New(sourceUri As Uri, selectorType As PackageRelationshipSelectorType, selectionCriteria As String)\n    parameters:\n    - id: sourceUri\n      type: System.Uri\n      description: \"\\n<p>The uniform resource identifier (URI) of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> (<em>SourceUri</em>=\\\"/\\\") that owns the relationship.</p>\\n\"\n    - id: selectorType\n      type: System.IO.Packaging.PackageRelationshipSelectorType\n      description: \"\\n<p>The type of the <em>selectionCriteria</em>, either by relationship <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or relationship <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: selectionCriteria\n      type: System.String\n      description: \"\\n<p>The qualification string that is used to select the relationships based on the <em>selectorType</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sourceUri</em> or <em>selectionCriteria</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>selectorType</em> parameter is not valid.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The <em>selectorType</em> parameter is <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> but <em>selectionCriteria</em> is not a valid XML Schema Definition (XSD) identifier (ID).</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>selectionCriteria</em> is not valid for the specified <em>selectorType</em>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>sourceUri</em> is not the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root (\\\"/\\\") and is also not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n  - type: System.IO.Packaging.PackageRelationshipSelector.SelectorType\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectorType\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackageRelationshipSelector.PackageRelationshipSelector(Uri, PackageRelationshipSelectorType, String)\n- uid: System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n  commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n  id: SelectionCriteria\n  parent: System.IO.Packaging.PackageRelationshipSelector\n  langs:\n  - csharp\n  - vb\n  name: SelectionCriteria\n  fullName: System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SelectionCriteria\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 142\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the selection criteria specified to the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor.</p>\\n\"\n  syntax:\n    content: public string SelectionCriteria { get; }\n    content.vb: Public ReadOnly Property SelectionCriteria As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The selection criteria based on the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.SelectorType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified to the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationshipSelector.SelectorType\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectorType\n  - type: System.IO.Packaging.PackageRelationshipSelector.SourceUri\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SourceUri\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationshipSelector.SelectionCriteria\n- uid: System.IO.Packaging.PackageRelationshipSelector.SelectorType\n  commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectorType\n  id: SelectorType\n  parent: System.IO.Packaging.PackageRelationshipSelector\n  langs:\n  - csharp\n  - vb\n  name: SelectorType\n  fullName: System.IO.Packaging.PackageRelationshipSelector.SelectorType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SelectorType\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 143\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified to the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor.</p>\\n\"\n  syntax:\n    content: public PackageRelationshipSelectorType SelectorType { get; }\n    content.vb: Public ReadOnly Property SelectorType As PackageRelationshipSelectorType\n    parameters: []\n    return:\n      type: System.IO.Packaging.PackageRelationshipSelectorType\n      description: \"\\n<p>The selector type of <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.PackageRelationshipSelectorType.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified to the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n  - type: System.IO.Packaging.PackageRelationshipSelector.SourceUri\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SourceUri\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationshipSelector.SelectorType\n- uid: System.IO.Packaging.PackageRelationshipSelector.SourceUri\n  commentId: P:System.IO.Packaging.PackageRelationshipSelector.SourceUri\n  id: SourceUri\n  parent: System.IO.Packaging.PackageRelationshipSelector\n  langs:\n  - csharp\n  - vb\n  name: SourceUri\n  fullName: System.IO.Packaging.PackageRelationshipSelector.SourceUri\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SourceUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 144\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the root package URI (\\\"/\\\") or part <xref href=\\\"System.IO.Packaging.PackagePart.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified to the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor as the owner of the relationship.</p>\\n\"\n  syntax:\n    content: public Uri SourceUri { get; }\n    content.vb: Public ReadOnly Property SourceUri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>The root package URI (\\\"/\\\") or part <xref href=\\\"System.IO.Packaging.PackagePart.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified to the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor as the owner of the relationship.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\n  - type: System.IO.Packaging.PackageRelationshipSelector.SelectorType\n    commentId: P:System.IO.Packaging.PackageRelationshipSelector.SelectorType\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationshipSelector.SourceUri\n- uid: System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)\n  commentId: M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)\n  id: Select(System.IO.Packaging.Package)\n  parent: System.IO.Packaging.PackageRelationshipSelector\n  langs:\n  - csharp\n  - vb\n  name: Select(Package)\n  fullName: System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Select\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 145\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a list of <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that match the defined <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.SourceUri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.SelectorType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public List<PackageRelationship> Select(Package package)\n    content.vb: Public Function Select(package As Package) As List(Of PackageRelationship)\n    parameters:\n    - id: package\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The package from which to select the relationships based on the selection criteria.</p>\\n\"\n    return:\n      type: System.Collections.Generic.List{System.IO.Packaging.PackageRelationship}\n      description: \"\\n<p>A list of relationships that match the selection parameters specified to the <xref href=\\\"System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackageRelationshipSelector.Select(Package)\nreferences:\n- uid: System.IO.Packaging\n  isExternal: false\n  name: System.IO.Packaging\n  fullName: System.IO.Packaging\n  commentId: N:System.IO.Packaging\n  nameWithType: System.IO.Packaging\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.IO.Packaging.PackageRelationshipSelectorType\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackageRelationshipSelectorType\n  fullName: System.IO.Packaging.PackageRelationshipSelectorType\n  commentId: T:System.IO.Packaging.PackageRelationshipSelectorType\n  nameWithType: PackageRelationshipSelectorType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.IO.Packaging.Package\n  parent: System.IO.Packaging\n  isExternal: false\n  name: Package\n  fullName: System.IO.Packaging.Package\n  commentId: T:System.IO.Packaging.Package\n  nameWithType: Package\n- uid: System.Collections.Generic.List{System.IO.Packaging.PackageRelationship}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.List`1\n  name: List<PackageRelationship>\n  fullName: System.Collections.Generic.List<System.IO.Packaging.PackageRelationship>\n  fullname.vb: System.Collections.Generic.List(Of System.IO.Packaging.PackageRelationship)\n  name.vb: List(Of PackageRelationship)\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    fullName: System.Collections.Generic.List\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.IO.Packaging.PackageRelationship\n    name: PackageRelationship\n    fullName: System.IO.Packaging.PackageRelationship\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    fullName: System.Collections.Generic.List\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.IO.Packaging.PackageRelationship\n    name: PackageRelationship\n    fullName: System.IO.Packaging.PackageRelationship\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.List{System.IO.Packaging.PackageRelationship}\n  nameWithType: List<PackageRelationship>\n  nameWithType.vb: List(Of PackageRelationship)\n- uid: System.Collections.Generic.List`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<T>\n  fullName: System.Collections.Generic.List<T>\n  fullname.vb: System.Collections.Generic.List(Of T)\n  name.vb: List(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    fullName: System.Collections.Generic.List\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.List`1\n  nameWithType: List<T>\n  nameWithType.vb: List(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.Xml.XmlException\n  isExternal: false\n  name: XmlException\n  fullName: System.Xml.XmlException\n  commentId: T:System.Xml.XmlException\n  nameWithType: XmlException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}