{"nodes":[{"pos":[949,972],"content":"ContractFailedEventArgs","needQuote":true,"nodes":[{"content":"ContractFailedEventArgs","pos":[0,23]}]},{"pos":[2856,2927],"content":"ContractFailedEventArgs(ContractFailureKind, String, String, Exception)","needQuote":true,"nodes":[{"content":"ContractFailedEventArgs(ContractFailureKind, String, String, Exception)","pos":[0,71]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the contract that failed.&lt;/p&gt;\\n","pos":[4238,4319],"source":"\\n<p>One of the enumeration values that specifies the contract that failed.</p>\\n"},{"content":"\\n&lt;p&gt;The message for the event.&lt;/p&gt;\\n","pos":[4385,4422],"source":"\\n<p>The message for the event.</p>\\n"},{"content":"\\n&lt;p&gt;The condition for the event.&lt;/p&gt;\\n","pos":[4490,4529],"source":"\\n<p>The condition for the event.</p>\\n"},{"content":"\\n&lt;p&gt;The exception that caused the event.&lt;/p&gt;\\n","pos":[4608,4655],"source":"\\n<p>The exception that caused the event.</p>\\n"},{"pos":[5089,5098],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The condition for the failure.&lt;/p&gt;\\n","pos":[5826,5867],"source":"\\n<p>The condition for the failure.</p>\\n"},{"pos":[6266,6277],"content":"FailureKind","needQuote":true,"nodes":[{"content":"FailureKind","pos":[0,11]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the type of contract that failed.&lt;/p&gt;\\n","pos":[7061,7150],"source":"\\n<p>One of the enumeration values that specifies the type of contract that failed.</p>\\n"},{"pos":[7539,7546],"content":"Handled","needQuote":true,"nodes":[{"content":"Handled","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the event has been handled; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[8373,8467],"source":"\\n<p>\\n<strong>true</strong> if the event has been handled; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8468,8474],"source":" </p>\\n"},{"pos":[8859,8866],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The message that describes the event.&lt;/p&gt;\\n","pos":[9690,9738],"source":"\\n<p>The message that describes the event.</p>\\n"},{"pos":[10153,10170],"content":"OriginalException","needQuote":true,"nodes":[{"content":"OriginalException","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The exception that caused the event.&lt;/p&gt;\\n","pos":[11051,11098],"source":"\\n<p>The exception that caused the event.</p>\\n"},{"pos":[11490,11496],"content":"Unwind","needQuote":true,"nodes":[{"content":"Unwind","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to apply the escalation policy; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[12233,12328],"source":"\\n<p>\\n<strong>true</strong> to apply the escalation policy; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12329,12373],"source":" The default is <strong>false</strong>.</p>\\n"},{"pos":[12766,12778],"content":"SetHandled()","needQuote":true,"nodes":[{"content":"SetHandled()","pos":[0,12]}]},{"pos":[14216,14227],"content":"SetUnwind()","needQuote":true,"nodes":[{"content":"SetUnwind()","pos":[0,11]}]},{"pos":[15473,15501],"content":"System.Diagnostics.Contracts","needQuote":true,"nodes":[{"content":"System.Diagnostics.Contracts","pos":[0,28]}]},{"pos":[15698,15704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15852,15861],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[16033,16038],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[16225,16235],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16330,16338],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16407,16408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16435,16436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16506,16514],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16583,16584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16611,16612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16795,16809],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16928,16934],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17001,17002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17052,17058],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17118,17119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17202,17208],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17275,17276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17326,17332],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17392,17393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17607,17629],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17777,17783],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17850,17851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17901,17907],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17968,17969]},{"pos":[18024,18030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18090,18091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18188,18194],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18261,18262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18312,18318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18379,18380]},{"pos":[18435,18441],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18501,18502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18747,18778],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18944,18959],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19035,19036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19086,19092],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19153,19154]},{"pos":[19209,19215],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19275,19276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19382,19397],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19473,19474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19524,19530],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19591,19592]},{"pos":[19647,19653],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19713,19714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19944,19957],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20058,20069],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20141,20142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20169,20170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20243,20254],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20326,20327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20354,20355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20530,20539],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20632,20639],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20707,20708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20735,20736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20805,20812],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20880,20881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20908,20909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21084,21101],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21210,21225],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21301,21302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21329,21330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21407,21422],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21498,21499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21526,21527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21672,21678],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21866,21885],"content":"ContractFailureKind","needQuote":true,"nodes":[{"content":"ContractFailureKind","pos":[0,19]}]},{"pos":[22113,22119],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22267,22276],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[22431,22438],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs\n  commentId: T:System.Diagnostics.Contracts.ContractFailedEventArgs\n  id: ContractFailedEventArgs\n  parent: System.Diagnostics.Contracts\n  children:\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.Condition\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.Handled\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.Message\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind\n  - System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind\n  langs:\n  - csharp\n  - vb\n  name: ContractFailedEventArgs\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ContractFailedEventArgs\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 144\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Provides methods and data for the <xref href=\\\"System.Diagnostics.Contracts.Contract.ContractFailed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: 'public sealed class ContractFailedEventArgs : EventArgs'\n    content.vb: >-\n      Public NotInheritable Class ContractFailedEventArgs\n          Inherits EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ContractFailedEventArgs\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)\n  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)\n  id: '#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)'\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: ContractFailedEventArgs(ContractFailureKind, String, String, Exception)\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.ContractFailedEventArgs(System.Diagnostics.Contracts.ContractFailureKind, System.String, System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 156\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Provides data for the <xref href=\\\"System.Diagnostics.Contracts.Contract.ContractFailed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: >-\n      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)]\n\n      public ContractFailedEventArgs(ContractFailureKind failureKind, string message, string condition, Exception originalException)\n    content.vb: >-\n      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)>\n\n      Public Sub New(failureKind As ContractFailureKind, message As String, condition As String, originalException As Exception)\n    parameters:\n    - id: failureKind\n      type: System.Diagnostics.Contracts.ContractFailureKind\n      description: \"\\n<p>One of the enumeration values that specifies the contract that failed.</p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message for the event.</p>\\n\"\n    - id: condition\n      type: System.String\n      description: \"\\n<p>The condition for the event.</p>\\n\"\n    - id: originalException\n      type: System.Exception\n      description: \"\\n<p>The exception that caused the event.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ContractFailedEventArgs.ContractFailedEventArgs(ContractFailureKind, String, String, Exception)\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition\n  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Condition\n  id: Condition\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Condition\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Condition\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 168\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Gets the condition for the failure of the contract.</p>\\n\"\n  syntax:\n    content: public string Condition { get; }\n    content.vb: Public ReadOnly Property Condition As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The condition for the failure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContractFailedEventArgs.Condition\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind\n  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind\n  id: FailureKind\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: FailureKind\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FailureKind\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 169\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Gets the type of contract that failed.</p>\\n\"\n  syntax:\n    content: public ContractFailureKind FailureKind { get; }\n    content.vb: Public ReadOnly Property FailureKind As ContractFailureKind\n    parameters: []\n    return:\n      type: System.Diagnostics.Contracts.ContractFailureKind\n      description: \"\\n<p>One of the enumeration values that specifies the type of contract that failed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContractFailedEventArgs.FailureKind\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled\n  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Handled\n  id: Handled\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Handled\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Handled\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 173\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Indicates whether the <xref href=\\\"System.Diagnostics.Contracts.Contract.ContractFailed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event has been handled.</p>\\n\"\n  syntax:\n    content: public bool Handled { get; }\n    content.vb: Public ReadOnly Property Handled As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the event has been handled; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContractFailedEventArgs.Handled\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Message\n  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Message\n  id: Message\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 167\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Gets the message that describes the <xref href=\\\"System.Diagnostics.Contracts.Contract.ContractFailed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: public string Message { get; }\n    content.vb: Public ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The message that describes the event.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContractFailedEventArgs.Message\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException\n  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException\n  id: OriginalException\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: OriginalException\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OriginalException\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 170\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Gets the original exception that caused the <xref href=\\\"System.Diagnostics.Contracts.Contract.ContractFailed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: public Exception OriginalException { get; }\n    content.vb: Public ReadOnly Property OriginalException As Exception\n    parameters: []\n    return:\n      type: System.Exception\n      description: \"\\n<p>The exception that caused the event.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContractFailedEventArgs.OriginalException\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind\n  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind\n  id: Unwind\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Unwind\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Unwind\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 188\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Indicates whether the code contract escalation policy should be applied.</p>\\n\"\n  syntax:\n    content: public bool Unwind { get; }\n    content.vb: Public ReadOnly Property Unwind As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to apply the escalation policy; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContractFailedEventArgs.Unwind\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled\n  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled\n  id: SetHandled\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: SetHandled()\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetHandled\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 178\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Sets the <xref href=\\\"System.Diagnostics.Contracts.ContractFailedEventArgs.Handled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to <strong>true</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public void SetHandled()\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub SetHandled\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ContractFailedEventArgs.SetHandled()\n- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind\n  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind\n  id: SetUnwind\n  parent: System.Diagnostics.Contracts.ContractFailedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: SetUnwind()\n  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetUnwind\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 193\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Diagnostics.Contracts\n  summary: \"\\n<p>Sets the <xref href=\\\"System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to <strong>true</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public void SetUnwind()\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub SetUnwind\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ContractFailedEventArgs.SetUnwind()\nreferences:\n- uid: System.Diagnostics.Contracts\n  isExternal: false\n  name: System.Diagnostics.Contracts\n  fullName: System.Diagnostics.Contracts\n  nameWithType: System.Diagnostics.Contracts\n  commentId: N:System.Diagnostics.Contracts\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Diagnostics.Contracts.ContractFailureKind\n  parent: System.Diagnostics.Contracts\n  isExternal: false\n  name: ContractFailureKind\n  fullName: System.Diagnostics.Contracts.ContractFailureKind\n  nameWithType: ContractFailureKind\n  commentId: T:System.Diagnostics.Contracts.ContractFailureKind\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n"}