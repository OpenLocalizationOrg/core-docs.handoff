{"nodes":[{"pos":[374,385],"content":"CONNECTDATA","needQuote":true,"nodes":[{"content":"CONNECTDATA","pos":[0,11]}]},{"pos":[2126,2134],"content":"dwCookie","needQuote":true,"nodes":[{"content":"dwCookie","pos":[0,8]}]},{"pos":[3330,3334],"content":"pUnk","needQuote":true,"nodes":[{"content":"pUnk","pos":[0,4]}]},{"pos":[4481,4520],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[4784,4798],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4923,4929],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[4978,4979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5029,5035],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5095,5096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5182,5188],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5237,5238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5288,5294],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5354,5355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5558,5571],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5678,5689],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[5743,5744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5771,5772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5848,5859],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[5913,5914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5941,5942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6131,6141],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6242,6250],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6301,6302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6329,6330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6403,6411],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6462,6463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6490,6491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6694,6716],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6864,6870],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6937,6938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6988,6994],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7055,7056]},{"pos":[7111,7117],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7177,7178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7275,7281],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7348,7349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7399,7405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7466,7467]},{"pos":[7522,7528],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7588,7589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7834,7865],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8031,8046],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8122,8123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8173,8179],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8240,8241]},{"pos":[8296,8302],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8362,8363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8469,8484],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8560,8561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8611,8617],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8678,8679]},{"pos":[8734,8740],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8800,8801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9027,9036],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9129,9136],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9204,9205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9232,9233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9302,9309],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9377,9378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9405,9406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9562,9571],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[9725,9731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9852,9858],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[9988,9993],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA\n  commentId: T:System.Runtime.InteropServices.ComTypes.CONNECTDATA\n  id: CONNECTDATA\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie\n  - System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk\n  langs:\n  - csharp\n  - vb\n  name: CONNECTDATA\n  fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CONNECTDATA\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Describes a connection that exists to a given connection point.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n\n      public struct CONNECTDATA\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential, CharSet:=CharSet.Unicode)>\n\n      Public Structure CONNECTDATA\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: CONNECTDATA\n- uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie\n  commentId: F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie\n  id: dwCookie\n  parent: System.Runtime.InteropServices.ComTypes.CONNECTDATA\n  langs:\n  - csharp\n  - vb\n  name: dwCookie\n  fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: dwCookie\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a connection token that is returned from a call to <xref href=\\\"System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int dwCookie\n    content.vb: Public dwCookie As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CONNECTDATA.dwCookie\n- uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk\n  commentId: F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk\n  id: pUnk\n  parent: System.Runtime.InteropServices.ComTypes.CONNECTDATA\n  langs:\n  - csharp\n  - vb\n  name: pUnk\n  fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: pUnk\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a pointer to the <strong>IUnknown</strong> interface on a connected advisory sink. The caller must call <strong>IUnknown::Release</strong> on this pointer when the <strong>CONNECTDATA</strong> structure is no longer needed.</p>\\n\"\n  syntax:\n    content: >-\n      [MarshalAs(UnmanagedType.Interface)]\n\n      public object pUnk\n    content.vb: >-\n      <MarshalAs(UnmanagedType.Interface)>\n\n      Public pUnk As Object\n    return:\n      type: System.Object\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CONNECTDATA.pUnk\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}