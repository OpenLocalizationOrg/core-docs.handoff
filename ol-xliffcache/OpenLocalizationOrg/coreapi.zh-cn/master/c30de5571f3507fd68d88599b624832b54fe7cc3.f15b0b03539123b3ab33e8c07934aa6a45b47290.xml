{"nodes":[{"pos":[576,582],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[2263,2285],"content":"Switch(String, String)","needQuote":true,"nodes":[{"content":"Switch(String, String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The name of the switch.","pos":[3139,3167],"source":"\\n<p>The name of the switch."},{"content":"&lt;/p&gt;\\n","pos":[3168,3174],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The description for the switch.","pos":[3244,3280],"source":"\\n<p>The description for the switch."},{"content":"&lt;/p&gt;\\n","pos":[3281,3287],"source":" </p>\\n"},{"pos":[4216,4246],"content":"Switch(String, String, String)","needQuote":true,"nodes":[{"content":"Switch(String, String, String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The name of the switch.","pos":[5249,5277],"source":"\\n<p>The name of the switch."},{"content":"&lt;/p&gt;\\n","pos":[5278,5284],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The description of the switch.","pos":[5354,5389],"source":"\\n<p>The description of the switch."},{"content":"&lt;/p&gt;\\n","pos":[5390,5396],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The default value for the switch.&lt;/p&gt;\\n","pos":[5473,5517],"source":"\\n<p>The default value for the switch.</p>\\n"},{"pos":[5824,5835],"content":"Description","needQuote":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[7344,7355],"content":"DisplayName","needQuote":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[8884,8897],"content":"SwitchSetting","needQuote":true,"nodes":[{"content":"SwitchSetting","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The current setting for this switch.","pos":[9874,9915],"source":"\\n<p>The current setting for this switch."},{"content":"The default is zero.&lt;/p&gt;\\n","pos":[9916,9942],"source":" The default is zero.</p>\\n"},{"pos":[10656,10661],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;A string representing the value of the switch.&lt;/p&gt;\\n","pos":[11337,11394],"source":"\\n<p>A string representing the value of the switch.</p>\\n"},{"pos":[12312,12336],"content":"OnSwitchSettingChanged()","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged()","pos":[0,24]}]},{"pos":[13430,13446],"content":"OnValueChanged()","needQuote":true,"nodes":[{"content":"OnValueChanged()","pos":[0,16]}]},{"pos":[14362,14380],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[14547,14553],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14713,14723],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14818,14826],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14895,14896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14923,14924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14994,15002],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15071,15072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15099,15100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15283,15297],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15416,15422],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15489,15490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15540,15546],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15606,15607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15690,15696],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15763,15764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15814,15820],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15880,15881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16095,16117],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16265,16271],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16338,16339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16389,16395],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16456,16457]},{"pos":[16512,16518],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16578,16579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16676,16682],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16749,16750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16800,16806],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16867,16868]},{"pos":[16923,16929],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16989,16990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17235,17266],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17432,17447],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17523,17524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17574,17580],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17641,17642]},{"pos":[17697,17703],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17763,17764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17870,17885],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17961,17962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18012,18018],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18079,18080]},{"pos":[18135,18141],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18201,18202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18432,18445],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18546,18557],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18629,18630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18657,18658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18731,18742],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18814,18815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18842,18843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19018,19027],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19120,19127],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19195,19196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19223,19224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19293,19300],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19368,19369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19396,19397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19572,19589],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19698,19713],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19789,19790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19817,19818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19895,19910],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19986,19987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20014,20015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20160,20166],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20297,20303],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20447,20452],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Diagnostics.Switch\n  commentId: T:System.Diagnostics.Switch\n  id: Switch\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.Switch.#ctor(System.String,System.String)\n  - System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)\n  - System.Diagnostics.Switch.Description\n  - System.Diagnostics.Switch.DisplayName\n  - System.Diagnostics.Switch.OnSwitchSettingChanged\n  - System.Diagnostics.Switch.OnValueChanged\n  - System.Diagnostics.Switch.SwitchSetting\n  - System.Diagnostics.Switch.Value\n  langs:\n  - csharp\n  - vb\n  name: Switch\n  fullName: System.Diagnostics.Switch\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Switch\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 18\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Provides an abstract base class to create new debugging and tracing switches.</p>\\n\"\n  syntax:\n    content: public abstract class Switch\n    content.vb: Public MustInherit Class Switch\n  seealso:\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: Switch\n- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)\n  commentId: M:System.Diagnostics.Switch.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: Switch(String, String)\n  fullName: System.Diagnostics.Switch.Switch(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 51\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.Switch\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected Switch(string displayName, string description)\n    content.vb: Protected Sub New(displayName As String, description As String)\n    parameters:\n    - id: displayName\n      type: System.String\n      description: \"\\n<p>The name of the switch. </p>\\n\"\n    - id: description\n      type: System.String\n      description: \"\\n<p>The description for the switch. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.SourceSwitch\n    commentId: T:System.Diagnostics.SourceSwitch\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: Switch.Switch(String, String)\n- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: Switch(String, String, String)\n  fullName: System.Diagnostics.Switch.Switch(System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 55\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.Switch\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, specifying the display name, description, and default value for the switch. </p>\\n\"\n  syntax:\n    content: protected Switch(string displayName, string description, string defaultSwitchValue)\n    content.vb: Protected Sub New(displayName As String, description As String, defaultSwitchValue As String)\n    parameters:\n    - id: displayName\n      type: System.String\n      description: \"\\n<p>The name of the switch. </p>\\n\"\n    - id: description\n      type: System.String\n      description: \"\\n<p>The description of the switch. </p>\\n\"\n    - id: defaultSwitchValue\n      type: System.String\n      description: \"\\n<p>The default value for the switch.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: Switch.Switch(String, String, String)\n- uid: System.Diagnostics.Switch.Description\n  commentId: P:System.Diagnostics.Switch.Description\n  id: Description\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: Description\n  fullName: System.Diagnostics.Switch.Description\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Description\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 114\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a description of the switch.</p>\\n\"\n  syntax:\n    content: public string Description { get; }\n    content.vb: Public ReadOnly Property Description As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The description of the switch. The default value is an empty string (\\\"\\\").</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Switch.Description\n- uid: System.Diagnostics.Switch.DisplayName\n  commentId: P:System.Diagnostics.Switch.DisplayName\n  id: DisplayName\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: DisplayName\n  fullName: System.Diagnostics.Switch.DisplayName\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DisplayName\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 103\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a name used to identify the switch.</p>\\n\"\n  syntax:\n    content: public string DisplayName { get; }\n    content.vb: Public ReadOnly Property DisplayName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name used to identify the switch. The default value is an empty string (\\\"\\\").</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Switch.DisplayName\n- uid: System.Diagnostics.Switch.SwitchSetting\n  commentId: P:System.Diagnostics.Switch.SwitchSetting\n  id: SwitchSetting\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: SwitchSetting\n  fullName: System.Diagnostics.Switch.SwitchSetting\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SwitchSetting\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 127\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the current setting for this switch.</p>\\n\"\n  syntax:\n    content: >-\n      protected int SwitchSetting\n\n      {\n          [SuppressMessage(\"Microsoft.Concurrency\", \"CA8001\", Justification = \"reviewed for thread-safety\")]\n          get;\n          [SuppressMessage(\"Microsoft.Concurrency\", \"CA8001\", Justification = \"reviewed for thread-safety\")]\n          set;\n      }\n    content.vb: Protected Property SwitchSetting As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current setting for this switch. The default is zero.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - protected\n  - get\n  - set\n  modifiers.vb:\n  - Protected\n  nameWithType: Switch.SwitchSetting\n- uid: System.Diagnostics.Switch.Value\n  commentId: P:System.Diagnostics.Switch.Value\n  id: Value\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Diagnostics.Switch.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 160\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the value of the switch.</p>\\n\"\n  syntax:\n    content: protected string Value { get; set; }\n    content.vb: Protected Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string representing the value of the switch.</p>\\n\"\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: \"\\n<p>The value is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>The value does not consist solely of an optional negative sign followed by a sequence of digits ranging from 0 to 9.</p>\\n<p>-or-</p>\\n<p>The value represents a number less than <xref href=\\\"System.Int32.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - get\n  - set\n  modifiers.vb:\n  - Protected\n  nameWithType: Switch.Value\n- uid: System.Diagnostics.Switch.OnSwitchSettingChanged\n  commentId: M:System.Diagnostics.Switch.OnSwitchSettingChanged\n  id: OnSwitchSettingChanged\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: OnSwitchSettingChanged()\n  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnSwitchSettingChanged\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 211\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Invoked when the <xref href=\\\"System.Diagnostics.Switch.SwitchSetting\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is changed.</p>\\n\"\n  syntax:\n    content: protected virtual void OnSwitchSettingChanged()\n    content.vb: Protected Overridable Sub OnSwitchSettingChanged\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: Switch.OnSwitchSettingChanged()\n- uid: System.Diagnostics.Switch.OnValueChanged\n  commentId: M:System.Diagnostics.Switch.OnValueChanged\n  id: OnValueChanged\n  parent: System.Diagnostics.Switch\n  langs:\n  - csharp\n  - vb\n  name: OnValueChanged()\n  fullName: System.Diagnostics.Switch.OnValueChanged()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnValueChanged\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Switch.cs\n    startLine: 215\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Invoked when the <xref href=\\\"System.Diagnostics.Switch.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is changed.</p>\\n\"\n  syntax:\n    content: protected virtual void OnValueChanged()\n    content.vb: Protected Overridable Sub OnValueChanged\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: Switch.OnValueChanged()\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Configuration.ConfigurationErrorsException\n"}