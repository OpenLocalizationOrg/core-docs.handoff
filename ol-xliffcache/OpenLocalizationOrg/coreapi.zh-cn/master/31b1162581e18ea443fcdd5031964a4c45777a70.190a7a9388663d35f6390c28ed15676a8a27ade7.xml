{"nodes":[{"pos":[471,484],"content":"OidEnumerator","needQuote":true,"nodes":[{"content":"OidEnumerator","pos":[0,13]}]},{"pos":[2104,2111],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[3666,3685],"content":"IEnumerator.Current","needQuote":true,"nodes":[{"content":"IEnumerator.Current","pos":[0,19]}]},{"pos":[5406,5416],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt;, if the enumerator was successfully advanced to the next element; &lt;strong&gt;false&lt;/strong&gt;, if the enumerator has passed the end of the collection.&lt;/p&gt;\\n","pos":[6338,6518],"source":"\\n<p>\\n<strong>true</strong>, if the enumerator was successfully advanced to the next element; <strong>false</strong>, if the enumerator has passed the end of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.&lt;/p&gt;\\n","pos":[6645,6717],"source":"\\n<p>The collection was modified after the enumerator was created.</p>\\n"},{"pos":[7096,7103],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.&lt;/p&gt;\\n","pos":[7869,7941],"source":"\\n<p>The collection was modified after the enumerator was created.</p>\\n"},{"pos":[8170,8198],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[8395,8401],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8575,8586],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[8785,8795],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8890,8898],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8967,8968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8995,8996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9066,9074],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9143,9144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9171,9172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9355,9369],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9488,9494],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9561,9562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9612,9618],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9678,9679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9762,9768],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9835,9836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9886,9892],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9952,9953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10167,10189],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10337,10343],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10410,10411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10461,10467],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10528,10529]},{"pos":[10584,10590],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10650,10651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10748,10754],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10821,10822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10872,10878],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10939,10940]},{"pos":[10995,11001],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11061,11062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11307,11338],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11504,11519],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11595,11596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11646,11652],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11713,11714]},{"pos":[11769,11775],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11835,11836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11942,11957],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12033,12034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12084,12090],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12151,12152]},{"pos":[12207,12213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12273,12274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12504,12517],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12618,12629],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12701,12702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12729,12730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12803,12814],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12886,12887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12914,12915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13090,13099],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13192,13199],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13267,13268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13295,13296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13365,13372],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13440,13441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13468,13469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13644,13661],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13770,13785],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13861,13862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13889,13890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13967,13982],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14058,14059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14086,14087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14232,14238],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14357,14375],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[14583,14586],"content":"Oid","needQuote":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[14815,14822],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[15080,15090],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[15219,15227],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[15292,15293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15320,15321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15408,15416],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[15481,15482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15509,15510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15688,15695],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15890,15897],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[16020,16025],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[16087,16088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16115,16116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16200,16205],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[16267,16268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16295,16296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16486,16511],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Security.Cryptography.OidEnumerator\n  commentId: T:System.Security.Cryptography.OidEnumerator\n  id: OidEnumerator\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.OidEnumerator.Current\n  - System.Security.Cryptography.OidEnumerator.MoveNext\n  - System.Security.Cryptography.OidEnumerator.Reset\n  - System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  - vb\n  name: OidEnumerator\n  fullName: System.Security.Cryptography.OidEnumerator\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OidEnumerator\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 46\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Provides the ability to navigate through an <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class OidEnumerator : IEnumerator'\n    content.vb: >-\n      Public NotInheritable Class OidEnumerator\n          Implements IEnumerator\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerator\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: OidEnumerator\n- uid: System.Security.Cryptography.OidEnumerator.Current\n  commentId: P:System.Security.Cryptography.OidEnumerator.Current\n  id: Current\n  parent: System.Security.Cryptography.OidEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Security.Cryptography.OidEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Current\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 49\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the current <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object in an <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public Oid Current { get; }\n    content.vb: Public ReadOnly Property Current As Oid\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Oid\n      description: \"\\n<p>The current <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: OidEnumerator.Current\n- uid: System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Security.Cryptography.OidEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Current\n  fullName: System.Security.Cryptography.OidEnumerator.System.Collections.IEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Current\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 50\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the current <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object in an <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: object IEnumerator.Current { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The current <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IEnumerator.Current\n  nameWithType: OidEnumerator.IEnumerator.Current\n  nameWithType.vb: OidEnumerator.System.Collections.IEnumerator.Current\n- uid: System.Security.Cryptography.OidEnumerator.MoveNext\n  commentId: M:System.Security.Cryptography.OidEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Security.Cryptography.OidEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Security.Cryptography.OidEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveNext\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 51\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Advances to the next <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object in an <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong>, if the enumerator was successfully advanced to the next element; <strong>false</strong>, if the enumerator has passed the end of the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.MoveNext\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OidEnumerator.MoveNext()\n- uid: System.Security.Cryptography.OidEnumerator.Reset\n  commentId: M:System.Security.Cryptography.OidEnumerator.Reset\n  id: Reset\n  parent: System.Security.Cryptography.OidEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Security.Cryptography.OidEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Reset\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 52\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Sets an enumerator to its initial position.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.Reset\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OidEnumerator.Reset()\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Security.Cryptography.Oid\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Oid\n  fullName: System.Security.Cryptography.Oid\n  commentId: T:System.Security.Cryptography.Oid\n  nameWithType: Oid\n- uid: System.Collections.IEnumerator.Current\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Current\n- uid: System.Collections.IEnumerator.MoveNext\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerator.MoveNext\n  nameWithType: IEnumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.IEnumerator.Reset\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerator.Reset\n  nameWithType: IEnumerator.Reset()\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}