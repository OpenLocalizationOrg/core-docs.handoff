{"nodes":[{"pos":[491,503],"content":"ErrorWrapper","needQuote":true,"nodes":[{"content":"ErrorWrapper","pos":[0,12]}]},{"pos":[2277,2300],"content":"ErrorWrapper(Exception)","needQuote":true,"nodes":[{"content":"ErrorWrapper(Exception)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The exception to be converted to an error code.","pos":[3456,3508],"source":"\\n<p>The exception to be converted to an error code."},{"content":"&lt;/p&gt;\\n","pos":[3509,3515],"source":" </p>\\n"},{"pos":[4023,4042],"content":"ErrorWrapper(Int32)","needQuote":true,"nodes":[{"content":"ErrorWrapper(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The HRESULT of the error.","pos":[4905,4935],"source":"\\n<p>The HRESULT of the error."},{"content":"&lt;/p&gt;\\n","pos":[4936,4942],"source":" </p>\\n"},{"pos":[5321,5341],"content":"ErrorWrapper(Object)","needQuote":true,"nodes":[{"content":"ErrorWrapper(Object)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The object containing the HRESULT of the error.","pos":[6229,6281],"source":"\\n<p>The object containing the HRESULT of the error."},{"content":"&lt;/p&gt;\\n","pos":[6282,6288],"source":" </p>\\n"},{"pos":[6876,6885],"content":"ErrorCode","needQuote":true,"nodes":[{"content":"ErrorCode","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The HRESULT of the error.&lt;/p&gt;\\n","pos":[7592,7628],"source":"\\n<p>The HRESULT of the error.</p>\\n"},{"pos":[7826,7856],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[8059,8065],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8225,8235],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8330,8338],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8407,8408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8435,8436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8506,8514],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8583,8584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8611,8612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8795,8809],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8928,8934],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9001,9002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9052,9058],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9118,9119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9202,9208],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9275,9276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9326,9332],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9392,9393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9607,9629],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9777,9783],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9850,9851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9901,9907],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9968,9969]},{"pos":[10024,10030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10090,10091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10188,10194],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10261,10262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10312,10318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10379,10380]},{"pos":[10435,10441],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10501,10502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10747,10778],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10944,10959],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11035,11036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11086,11092],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11153,11154]},{"pos":[11209,11215],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11275,11276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11382,11397],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11473,11474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11524,11530],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11591,11592]},{"pos":[11647,11653],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11713,11714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11944,11957],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12058,12069],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12141,12142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12169,12170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12243,12254],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12326,12327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12354,12355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12530,12539],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12632,12639],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12707,12708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12735,12736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12805,12812],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12880,12881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12908,12909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13084,13101],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13210,13225],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13301,13302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13329,13330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13407,13422],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13498,13499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13526,13527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13672,13678],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13812,13821],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[13974,13979],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14132,14149],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ErrorWrapper\n  commentId: T:System.Runtime.InteropServices.ErrorWrapper\n  id: ErrorWrapper\n  parent: System.Runtime.InteropServices\n  children:\n  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)\n  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)\n  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)\n  - System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  langs:\n  - csharp\n  - vb\n  name: ErrorWrapper\n  fullName: System.Runtime.InteropServices.ErrorWrapper\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ErrorWrapper\n    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Wraps objects the marshaler should marshal as a <strong>VT_ERROR</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public sealed class ErrorWrapper\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class ErrorWrapper\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.ObsoleteAttribute\n    ctor: System.ObsoleteAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: ErrorWrapper and support for marshalling to the VARIANT type may be unavailable in future releases.\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ErrorWrapper\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)\n  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)\n  id: '#ctor(System.Exception)'\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  - vb\n  name: ErrorWrapper(Exception)\n  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorWrapper(System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.InteropServices.ErrorWrapper\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the HRESULT that corresponds to the exception supplied.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]\n\n      public ErrorWrapper(Exception e)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <SecurityPermission(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)>\n\n      Public Sub New(e As Exception)\n    parameters:\n    - id: e\n      type: System.Exception\n      description: \"\\n<p>The exception to be converted to an error code. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ErrorWrapper.ErrorWrapper(Exception)\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)\n  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  - vb\n  name: ErrorWrapper(Int32)\n  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorWrapper(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.InteropServices.ErrorWrapper\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the HRESULT of the error.</p>\\n\"\n  syntax:\n    content: public ErrorWrapper(int errorCode)\n    content.vb: Public Sub New(errorCode As Integer)\n    parameters:\n    - id: errorCode\n      type: System.Int32\n      description: \"\\n<p>The HRESULT of the error. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ErrorWrapper.ErrorWrapper(Int32)\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)\n  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  - vb\n  name: ErrorWrapper(Object)\n  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorWrapper(System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.InteropServices.ErrorWrapper\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with an object containing the HRESULT of the error.</p>\\n\"\n  syntax:\n    content: public ErrorWrapper(object errorCode)\n    content.vb: Public Sub New(errorCode As Object)\n    parameters:\n    - id: errorCode\n      type: System.Object\n      description: \"\\n<p>The object containing the HRESULT of the error. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>errorCode</em> parameter is not an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ErrorWrapper.ErrorWrapper(Object)\n- uid: System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  commentId: P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  id: ErrorCode\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  - vb\n  name: ErrorCode\n  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ErrorCode\n    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Gets the error code of the wrapper.</p>\\n\"\n  syntax:\n    content: public int ErrorCode { get; }\n    content.vb: Public ReadOnly Property ErrorCode As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The HRESULT of the error.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ErrorWrapper.ErrorCode\nreferences:\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}