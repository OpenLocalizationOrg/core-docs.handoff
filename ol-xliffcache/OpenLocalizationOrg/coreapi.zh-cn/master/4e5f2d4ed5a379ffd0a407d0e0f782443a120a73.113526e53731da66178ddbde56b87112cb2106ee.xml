{"nodes":[{"pos":[347,358],"content":"Progress<T>","needQuote":true,"nodes":[{"content":"Progress&lt;T&gt;","pos":[0,11],"source":"Progress<T>"}]},{"content":"\\n&lt;p&gt;Specifies the type of the progress report value.&lt;/p&gt;\\n","pos":[1069,1128],"source":"\\n<p>Specifies the type of the progress report value.</p>\\n"},{"pos":[1847,1857],"content":"Progress()","needQuote":true,"nodes":[{"content":"Progress()","pos":[0,10]}]},{"pos":[2795,2814],"content":"Progress(Action<T>)","needQuote":true,"nodes":[{"content":"Progress(Action&lt;T&gt;)","pos":[0,19],"source":"Progress(Action<T>)"}]},{"pos":[4535,4550],"content":"ProgressChanged","needQuote":true,"nodes":[{"content":"ProgressChanged","pos":[0,15]}]},{"pos":[5525,5536],"content":"OnReport(T)","needQuote":true,"nodes":[{"content":"OnReport(T)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The value of the updated progress.&lt;/p&gt;\\n","pos":[6129,6174],"source":"\\n<p>The value of the updated progress.</p>\\n"},{"pos":[6637,6659],"content":"IProgress<T>.Report(T)","needQuote":true,"nodes":[{"content":"IProgress&lt;T&gt;.Report(T)","pos":[0,22],"source":"IProgress<T>.Report(T)"}]},{"content":"\\n&lt;p&gt;The value of the updated progress.&lt;/p&gt;\\n","pos":[7311,7356],"source":"\\n<p>The value of the updated progress.</p>\\n"},{"pos":[7687,7693],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[7824,7830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7996,8008],"content":"IProgress<T>","needQuote":true,"nodes":[{"content":"IProgress&lt;T&gt;","pos":[0,12],"source":"IProgress<T>"}]},{"pos":[8159,8168],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"pos":[8231,8232],"content":"<","needQuote":true,"nodes":[]},{"pos":[8259,8260],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[8358,8367],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"content":"(Of","pos":[8431,8434]},{"pos":[8468,8469],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[8496,8497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8695,8705],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8800,8808],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8877,8878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8905,8906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8976,8984],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9053,9054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9081,9082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9265,9279],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9398,9404],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9471,9472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9522,9528],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9588,9589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9672,9678],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9745,9746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9796,9802],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9862,9863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10077,10099],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10247,10253],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10320,10321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10371,10377],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10438,10439]},{"pos":[10494,10500],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10560,10561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10658,10664],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10731,10732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10782,10788],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10849,10850]},{"pos":[10905,10911],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10971,10972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11217,11248],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11414,11429],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11505,11506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11556,11562],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11623,11624]},{"pos":[11679,11685],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11745,11746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11852,11867],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11943,11944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11994,12000],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12061,12062]},{"pos":[12117,12123],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12183,12184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12414,12427],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12528,12539],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12611,12612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12639,12640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12713,12724],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12796,12797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12824,12825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13000,13009],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13102,13109],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13177,13178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13205,13206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13275,13282],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13350,13351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13378,13379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13554,13571],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13680,13695],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13771,13772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13799,13800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13877,13892],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13968,13969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13996,13997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14154,14166],"content":"IProgress<T>","needQuote":true,"nodes":[{"content":"IProgress&lt;T&gt;","pos":[0,12],"source":"IProgress<T>"}]},{"pos":[14317,14326],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"pos":[14368,14369],"content":"<","needQuote":true,"nodes":[]},{"pos":[14396,14397],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14495,14504],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"content":"(Of","pos":[14547,14550]},{"pos":[14584,14585],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14612,14613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14809,14818],"content":"Action<T>","needQuote":true,"nodes":[{"content":"Action&lt;T&gt;","pos":[0,9],"source":"Action<T>"}]},{"pos":[14957,14963],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[15023,15024],"content":"<","needQuote":true,"nodes":[]},{"pos":[15051,15052],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[15147,15153],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[15214,15217]},{"pos":[15251,15252],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[15279,15280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15439,15448],"content":"Action<T>","needQuote":true,"nodes":[{"content":"Action&lt;T&gt;","pos":[0,9],"source":"Action<T>"}]},{"pos":[15587,15593],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[15632,15633],"content":"<","needQuote":true,"nodes":[]},{"pos":[15660,15661],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[15756,15762],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[15802,15805]},{"pos":[15839,15840],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[15867,15868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16067,16082],"content":"EventHandler<T>","needQuote":true,"nodes":[{"content":"EventHandler&lt;T&gt;","pos":[0,15],"source":"EventHandler<T>"}]},{"pos":[16245,16257],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[16323,16324],"content":"<","needQuote":true,"nodes":[]},{"pos":[16351,16352],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[16453,16465],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"content":"(Of","pos":[16532,16535]},{"pos":[16569,16570],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[16597,16598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16781,16805],"content":"EventHandler<TEventArgs>","needQuote":true,"nodes":[{"content":"EventHandler&lt;TEventArgs&gt;","pos":[0,24],"source":"EventHandler<TEventArgs>"}]},{"pos":[16995,17007],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[17052,17053],"content":"<","needQuote":true,"nodes":[]},{"pos":[17080,17090],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[17200,17212],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"content":"(Of","pos":[17258,17261]},{"pos":[17295,17305],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[17341,17342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17521,17522],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[17611,17612],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[17770,17779],"content":"Report(T)","needQuote":true,"nodes":[{"content":"Report(T)","pos":[0,9]}]},{"pos":[17934,17940],"content":"Report","needQuote":true,"nodes":[{"content":"Report","pos":[0,6]}]},{"pos":[18013,18014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18041,18042],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[18069,18070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18147,18153],"content":"Report","needQuote":true,"nodes":[{"content":"Report","pos":[0,6]}]},{"pos":[18229,18230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18257,18258],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[18285,18286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18498,18507],"content":"Report(T)","needQuote":true,"nodes":[{"content":"Report(T)","pos":[0,9]}]},{"pos":[18662,18668],"content":"Report","needQuote":true,"nodes":[{"content":"Report","pos":[0,6]}]},{"pos":[18741,18742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18769,18770],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[18797,18798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18875,18881],"content":"Report","needQuote":true,"nodes":[{"content":"Report","pos":[0,6]}]},{"pos":[18957,18958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18985,18986],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[19013,19014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Progress`1\n  commentId: T:System.Progress`1\n  id: Progress`1\n  parent: System\n  children:\n  - System.Progress`1.#ctor\n  - System.Progress`1.#ctor(System.Action{`0})\n  - System.Progress`1.OnReport(`0)\n  - System.Progress`1.ProgressChanged\n  - System.Progress`1.System#IProgress{T}#Report(`0)\n  langs:\n  - csharp\n  - vb\n  name: Progress<T>\n  fullName: System.Progress<T>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Progress.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Progress\n    path: src/mscorlib/src/System/Progress.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Provides an <xref href=\\\"System.IProgress`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that invokes callbacks for each reported progress value.</p>\\n\"\n  syntax:\n    content: 'public class Progress<T> : IProgress<T>'\n    content.vb: >-\n      Public Class Progress(Of T)\n          Implements IProgress(Of T)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>Specifies the type of the progress report value.</p>\\n\"\n  inheritance:\n  - System.Object\n  implements:\n  - System.IProgress{{T}}\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Progress(Of T)\n  name.vb: Progress(Of T)\n  nameWithType: Progress<T>\n  nameWithType.vb: Progress(Of T)\n- uid: System.Progress`1.#ctor\n  commentId: M:System.Progress`1.#ctor\n  id: '#ctor'\n  parent: System.Progress`1\n  langs:\n  - csharp\n  - vb\n  name: Progress()\n  fullName: System.Progress<T>.Progress()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Progress.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Progress.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes the <xref href=\\\"System.Progress`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public Progress()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Progress(Of T).Progress()\n  nameWithType: Progress<T>.Progress()\n  nameWithType.vb: Progress(Of T).Progress()\n- uid: System.Progress`1.#ctor(System.Action{`0})\n  commentId: M:System.Progress`1.#ctor(System.Action{`0})\n  id: '#ctor(System.Action{`0})'\n  parent: System.Progress`1\n  langs:\n  - csharp\n  - vb\n  name: Progress(Action<T>)\n  fullName: System.Progress<T>.Progress(System.Action<T>)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Progress.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Progress.cs\n    startLine: 63\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes the <xref href=\\\"System.Progress`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object with the specified callback.</p>\\n\"\n  syntax:\n    content: public Progress(Action<T> handler)\n    content.vb: Public Sub New(handler As Action(Of T))\n    parameters:\n    - id: handler\n      type: System.Action{{T}}\n      description: \"\\n<p>A handler to invoke for each reported progress value. This handler will be invoked in addition to any delegates registered with the <xref href=\\\"System.Progress`1.ProgressChanged\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event. Depending on the <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance captured by the <xref href=\\\"System.Progress`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at construction, it is possible that this handler instance could be invoked concurrently with itself.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Progress(Of T).Progress(System.Action(Of T))\n  name.vb: Progress(Action(Of T))\n  nameWithType: Progress<T>.Progress(Action<T>)\n  nameWithType.vb: Progress(Of T).Progress(Action(Of T))\n- uid: System.Progress`1.ProgressChanged\n  commentId: E:System.Progress`1.ProgressChanged\n  id: ProgressChanged\n  parent: System.Progress`1\n  langs:\n  - csharp\n  - vb\n  name: ProgressChanged\n  fullName: System.Progress<T>.ProgressChanged\n  type: Event\n  source:\n    remote:\n      path: src/mscorlib/src/System/Progress.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ProgressChanged\n    path: src/mscorlib/src/System/Progress.cs\n    startLine: 74\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Raised for each reported progress value.</p>\\n\"\n  syntax:\n    content: public event EventHandler<T> ProgressChanged\n    content.vb: Public Event ProgressChanged As EventHandler(Of T)\n    return:\n      type: System.EventHandler{{T}}\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Progress(Of T).ProgressChanged\n  nameWithType: Progress<T>.ProgressChanged\n  nameWithType.vb: Progress(Of T).ProgressChanged\n- uid: System.Progress`1.OnReport(`0)\n  commentId: M:System.Progress`1.OnReport(`0)\n  id: OnReport(`0)\n  parent: System.Progress`1\n  langs:\n  - csharp\n  - vb\n  name: OnReport(T)\n  fullName: System.Progress<T>.OnReport(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Progress.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OnReport\n    path: src/mscorlib/src/System/Progress.cs\n    startLine: 78\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Reports a progress change.</p>\\n\"\n  syntax:\n    content: protected virtual void OnReport(T value)\n    content.vb: Protected Overridable Sub OnReport(value As T)\n    parameters:\n    - id: value\n      type: '{T}'\n      description: \"\\n<p>The value of the updated progress.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  fullName.vb: System.Progress(Of T).OnReport(T)\n  nameWithType: Progress<T>.OnReport(T)\n  nameWithType.vb: Progress(Of T).OnReport(T)\n- uid: System.Progress`1.System#IProgress{T}#Report(`0)\n  commentId: M:System.Progress`1.System#IProgress{T}#Report(`0)\n  id: System#IProgress{T}#Report(`0)\n  isEii: true\n  parent: System.Progress`1\n  langs:\n  - csharp\n  - vb\n  name: IProgress<T>.Report(T)\n  fullName: System.Progress<T>.System.IProgress<T>.Report(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Progress.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IProgress<T>.Report\n    path: src/mscorlib/src/System/Progress.cs\n    startLine: 95\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Reports a progress change.</p>\\n\"\n  syntax:\n    content: void IProgress<T>.Report(T value)\n    content.vb: Sub System.IProgress<T>.Report(value As T) Implements IProgress(Of T).Report\n    parameters:\n    - id: value\n      type: '{T}'\n      description: \"\\n<p>The value of the updated progress.</p>\\n\"\n  implements:\n  - System.IProgress{{T}}.Report({T})\n  fullName.vb: System.Progress(Of T).System.IProgress<T>.Report(T)\n  name.vb: System.IProgress<T>.Report(T)\n  nameWithType: Progress<T>.IProgress<T>.Report(T)\n  nameWithType.vb: Progress(Of T).System.IProgress<T>.Report(T)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IProgress{{T}}\n  parent: System\n  definition: System.IProgress`1\n  name: IProgress<T>\n  fullName: System.IProgress<T>\n  fullname.vb: System.IProgress(Of T)\n  name.vb: IProgress(Of T)\n  spec.csharp:\n  - uid: System.IProgress`1\n    name: IProgress\n    fullName: System.IProgress\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IProgress`1\n    name: IProgress\n    fullName: System.IProgress\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProgress<T>\n  nameWithType.vb: IProgress(Of T)\n  commentId: T:System.IProgress{`0}\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.IProgress`1\n  isExternal: false\n  name: IProgress<T>\n  fullName: System.IProgress<T>\n  fullname.vb: System.IProgress(Of T)\n  name.vb: IProgress(Of T)\n  spec.csharp:\n  - uid: System.IProgress`1\n    name: IProgress\n    fullName: System.IProgress\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IProgress`1\n    name: IProgress\n    fullName: System.IProgress\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProgress<T>\n  nameWithType.vb: IProgress(Of T)\n  commentId: T:System.IProgress`1\n- uid: System.Action{{T}}\n  parent: System\n  definition: System.Action`1\n  name: Action<T>\n  fullName: System.Action<T>\n  fullname.vb: System.Action(Of T)\n  name.vb: Action(Of T)\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Action<T>\n  nameWithType.vb: Action(Of T)\n  commentId: T:System.Action{`0}\n- uid: System.Action`1\n  isExternal: false\n  name: Action<T>\n  fullName: System.Action<T>\n  fullname.vb: System.Action(Of T)\n  name.vb: Action(Of T)\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Action<T>\n  nameWithType.vb: Action(Of T)\n  commentId: T:System.Action`1\n- uid: System.EventHandler{{T}}\n  parent: System\n  definition: System.EventHandler`1\n  name: EventHandler<T>\n  fullName: System.EventHandler<T>\n  fullname.vb: System.EventHandler(Of T)\n  name.vb: EventHandler(Of T)\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: EventHandler<T>\n  nameWithType.vb: EventHandler(Of T)\n  commentId: T:System.EventHandler{`0}\n- uid: System.EventHandler`1\n  isExternal: false\n  name: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n  fullname.vb: System.EventHandler(Of TEventArgs)\n  name.vb: EventHandler(Of TEventArgs)\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    fullName: <\n  - name: TEventArgs\n    fullName: TEventArgs\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TEventArgs\n    fullName: TEventArgs\n  - name: )\n    fullName: )\n  nameWithType: EventHandler<TEventArgs>\n  nameWithType.vb: EventHandler(Of TEventArgs)\n  commentId: T:System.EventHandler`1\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.IProgress{{T}}.Report({T})\n  parent: System.IProgress{{T}}\n  definition: System.IProgress`1.Report(`0)\n  name: Report(T)\n  fullName: System.IProgress<T>.Report(T)\n  fullname.vb: System.IProgress(Of T).Report(T)\n  spec.csharp:\n  - uid: System.IProgress`1.Report(`0)\n    name: Report\n    fullName: System.IProgress<T>.Report\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IProgress`1.Report(`0)\n    name: Report\n    fullName: System.IProgress(Of T).Report\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProgress<T>.Report(T)\n  nameWithType.vb: IProgress(Of T).Report(T)\n  commentId: M:System.IProgress{`0}.Report(`0)\n- uid: System.IProgress`1.Report(`0)\n  isExternal: true\n  name: Report(T)\n  fullName: System.IProgress<T>.Report(T)\n  fullname.vb: System.IProgress(Of T).Report(T)\n  spec.csharp:\n  - uid: System.IProgress`1.Report(`0)\n    name: Report\n    fullName: System.IProgress<T>.Report\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IProgress`1.Report(`0)\n    name: Report\n    fullName: System.IProgress(Of T).Report\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProgress<T>.Report(T)\n  nameWithType.vb: IProgress(Of T).Report(T)\n  commentId: M:System.IProgress`1.Report(`0)\n"}