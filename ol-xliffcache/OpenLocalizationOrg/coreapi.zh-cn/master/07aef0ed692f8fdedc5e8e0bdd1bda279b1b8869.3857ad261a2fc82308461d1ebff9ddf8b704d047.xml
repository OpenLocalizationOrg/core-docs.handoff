{"nodes":[{"pos":[339,353],"content":"IDbTransaction","needQuote":true,"nodes":[{"content":"IDbTransaction","pos":[0,14]}]},{"pos":[1424,1434],"content":"Connection","needQuote":true,"nodes":[{"content":"Connection","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The Connection object to associate with the transaction.&lt;/p&gt;\\n","pos":[2128,2195],"source":"\\n<p>The Connection object to associate with the transaction.</p>\\n"},{"pos":[2495,2509],"content":"IsolationLevel","needQuote":true,"nodes":[{"content":"IsolationLevel","pos":[0,14]}]},{"pos":[3728,3736],"content":"Commit()","needQuote":true,"nodes":[{"content":"Commit()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;An error occurred while trying to commit the transaction.","pos":[4338,4400],"source":"\\n<p>An error occurred while trying to commit the transaction."},{"content":"&lt;/p&gt;\\n","pos":[4401,4407],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transaction has already been committed or rolled back.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The connection is broken.","pos":[4520,4631],"source":"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken."},{"content":"&lt;/p&gt;\\n","pos":[4632,4638],"source":" </p>\\n"},{"pos":[5265,5275],"content":"Rollback()","needQuote":true,"nodes":[{"content":"Rollback()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;An error occurred while trying to commit the transaction.","pos":[5898,5960],"source":"\\n<p>An error occurred while trying to commit the transaction."},{"content":"&lt;/p&gt;\\n","pos":[5961,5967],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transaction has already been committed or rolled back.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The connection is broken.","pos":[6080,6191],"source":"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken."},{"content":"&lt;/p&gt;\\n","pos":[6192,6198],"source":" </p>\\n"},{"pos":[6520,6531],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[6702,6711],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6814,6821],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[6873,6874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6901,6902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6976,6983],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[7035,7036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7063,7064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7232,7243],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[7379,7385],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[7533,7546],"content":"IDbConnection","needQuote":true,"nodes":[{"content":"IDbConnection","pos":[0,13]}]},{"pos":[7740,7754],"content":"IsolationLevel","needQuote":true,"nodes":[{"content":"IsolationLevel","pos":[0,14]}]},{"pos":[7936,7945],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[8118,8143],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Data.IDbTransaction\n  commentId: T:System.Data.IDbTransaction\n  id: IDbTransaction\n  parent: System.Data\n  children:\n  - System.Data.IDbTransaction.Commit\n  - System.Data.IDbTransaction.Connection\n  - System.Data.IDbTransaction.IsolationLevel\n  - System.Data.IDbTransaction.Rollback\n  langs:\n  - csharp\n  - vb\n  name: IDbTransaction\n  fullName: System.Data.IDbTransaction\n  type: Interface\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IDbTransaction\n    path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n    startLine: 9\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\\n\"\n  syntax:\n    content: 'public interface IDbTransaction : IDisposable'\n    content.vb: >-\n      Public Interface IDbTransaction\n          Inherits IDisposable\n  inheritedMembers:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IDbTransaction\n- uid: System.Data.IDbTransaction.Connection\n  commentId: P:System.Data.IDbTransaction.Connection\n  id: Connection\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Connection\n  fullName: System.Data.IDbTransaction.Connection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connection\n    path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n    startLine: 12\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Specifies the Connection object to associate with the transaction.</p>\\n\"\n  syntax:\n    content: IDbConnection Connection { get; }\n    content.vb: ReadOnly Property Connection As IDbConnection\n    parameters: []\n    return:\n      type: System.Data.IDbConnection\n      description: \"\\n<p>The Connection object to associate with the transaction.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IDbTransaction.Connection\n- uid: System.Data.IDbTransaction.IsolationLevel\n  commentId: P:System.Data.IDbTransaction.IsolationLevel\n  id: IsolationLevel\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  - vb\n  name: IsolationLevel\n  fullName: System.Data.IDbTransaction.IsolationLevel\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsolationLevel\n    path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n    startLine: 17\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Specifies the <xref href=\\\"System.Data.IsolationLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this transaction.</p>\\n\"\n  syntax:\n    content: IsolationLevel IsolationLevel { get; }\n    content.vb: ReadOnly Property IsolationLevel As IsolationLevel\n    parameters: []\n    return:\n      type: System.Data.IsolationLevel\n      description: \"\\n<p>The <xref href=\\\"System.Data.IsolationLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this transaction. The default is <strong>ReadCommitted</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IDbTransaction.IsolationLevel\n- uid: System.Data.IDbTransaction.Commit\n  commentId: M:System.Data.IDbTransaction.Commit\n  id: Commit\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Commit()\n  fullName: System.Data.IDbTransaction.Commit()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Commit\n    path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n    startLine: 22\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Commits the database transaction.</p>\\n\"\n  syntax:\n    content: void Commit()\n    content.vb: Sub Commit\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"\\n<p>An error occurred while trying to commit the transaction. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken. </p>\\n\"\n  seealso:\n  - type: System.Data.SqlClient.SqlConnection.BeginTransaction\n    commentId: M:System.Data.SqlClient.SqlConnection.BeginTransaction\n  - type: System.Data.SqlClient.SqlTransaction.Save(System.String)\n    commentId: M:System.Data.SqlClient.SqlTransaction.Save(System.String)\n  - type: System.Data.SqlClient.SqlTransaction.Rollback\n    commentId: M:System.Data.SqlClient.SqlTransaction.Rollback\n  nameWithType: IDbTransaction.Commit()\n- uid: System.Data.IDbTransaction.Rollback\n  commentId: M:System.Data.IDbTransaction.Rollback\n  id: Rollback\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Rollback()\n  fullName: System.Data.IDbTransaction.Rollback()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Rollback\n    path: src/System.Data.Common/src/System/Data/IDbTransaction.cs\n    startLine: 24\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Rolls back a transaction from a pending state.</p>\\n\"\n  syntax:\n    content: void Rollback()\n    content.vb: Sub Rollback\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"\\n<p>An error occurred while trying to commit the transaction. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken. </p>\\n\"\n  seealso:\n  - type: System.Data.IDbTransaction.Commit\n    commentId: M:System.Data.IDbTransaction.Commit\n  - type: System.Data.IDbConnection.BeginTransaction\n    commentId: M:System.Data.IDbConnection.BeginTransaction\n  nameWithType: IDbTransaction.Rollback()\nreferences:\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Data.IDbConnection\n  parent: System.Data\n  isExternal: false\n  name: IDbConnection\n  fullName: System.Data.IDbConnection\n  nameWithType: IDbConnection\n  commentId: T:System.Data.IDbConnection\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  fullName: System.Data.IsolationLevel\n  nameWithType: IsolationLevel\n  commentId: T:System.Data.IsolationLevel\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}