{"nodes":[{"pos":[619,645],"content":"DecoderReplacementFallback","needQuote":true,"nodes":[{"content":"DecoderReplacementFallback","pos":[0,26]}]},{"pos":[2741,2769],"content":"DecoderReplacementFallback()","needQuote":true,"nodes":[{"content":"DecoderReplacementFallback()","pos":[0,28]}]},{"pos":[3839,3873],"content":"DecoderReplacementFallback(String)","needQuote":true,"nodes":[{"content":"DecoderReplacementFallback(String)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;A string that is emitted in a decoding operation in place of an input byte sequence that cannot be decoded.&lt;/p&gt;\\n","pos":[4732,4850],"source":"\\n<p>A string that is emitted in a decoding operation in place of an input byte sequence that cannot be decoded.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;replacement&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4969,5028],"source":"\\n<p>\\n<em>replacement</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;replacement&lt;/em&gt; contains an invalid surrogate pair.","pos":[5125,5188],"source":"\\n<p>\\n<em>replacement</em> contains an invalid surrogate pair."},{"content":"In other words, the surrogate pair does not consist of one high surrogate component followed by one low surrogate component.&lt;/p&gt;\\n","pos":[5189,5319],"source":" In other words, the surrogate pair does not consist of one high surrogate component followed by one low surrogate component.</p>\\n"},{"pos":[5980,5993],"content":"DefaultString","needQuote":true,"nodes":[{"content":"DefaultString","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A substitute string that is emitted in place of an input byte sequence that cannot be decoded.&lt;/p&gt;\\n","pos":[6799,6904],"source":"\\n<p>A substitute string that is emitted in place of an input byte sequence that cannot be decoded.</p>\\n"},{"pos":[7429,7441],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"pos":[9323,9345],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"pos":[10993,11007],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13039,13052],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The hash code of the value of the object.&lt;/p&gt;\\n","pos":[13823,13875],"source":"\\n<p>The hash code of the value of the object.</p>\\n"},{"pos":[14118,14129],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[14275,14281],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14445,14460],"content":"DecoderFallback","needQuote":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[14695,14712],"content":"ExceptionFallback","needQuote":true,"nodes":[{"content":"ExceptionFallback","pos":[0,17]}]},{"pos":[15003,15022],"content":"ReplacementFallback","needQuote":true,"nodes":[{"content":"ReplacementFallback","pos":[0,19]}]},{"pos":[15279,15289],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15384,15392],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15461,15462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15489,15490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15560,15568],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15637,15638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15665,15666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15863,15885],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16033,16039],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16106,16107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16157,16163],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16224,16225]},{"pos":[16280,16286],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16346,16347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16444,16450],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16517,16518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16568,16574],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16635,16636]},{"pos":[16691,16697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16757,16758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17003,17034],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17200,17215],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17291,17292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17342,17348],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17409,17410]},{"pos":[17465,17471],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17531,17532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17638,17653],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17729,17730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17780,17786],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17847,17848]},{"pos":[17903,17909],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17969,17970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18196,18205],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18298,18305],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18373,18374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18401,18402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18471,18478],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18546,18547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18574,18575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18750,18767],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18876,18891],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18967,18968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18995,18996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19073,19088],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19164,19165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19192,19193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19338,19344],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19475,19481],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19674,19686],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"pos":[19906,19911],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20109,20131],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"pos":[20278,20298],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[20372,20373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20400,20401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20497,20517],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[20591,20592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20619,20620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20847,20868],"content":"DecoderFallbackBuffer","needQuote":true,"nodes":[{"content":"DecoderFallbackBuffer","pos":[0,21]}]},{"pos":[21096,21110],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21229,21235],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21302,21303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21353,21359],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21419,21420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21503,21509],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21576,21577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21627,21633],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21693,21694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21867,21874],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22040,22053],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22154,22165],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22237,22238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22265,22266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22339,22350],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22422,22423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22450,22451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22610,22631],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[22832,22849],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Text.DecoderReplacementFallback\n  commentId: T:System.Text.DecoderReplacementFallback\n  id: DecoderReplacementFallback\n  parent: System.Text\n  children:\n  - System.Text.DecoderReplacementFallback.#ctor\n  - System.Text.DecoderReplacementFallback.#ctor(System.String)\n  - System.Text.DecoderReplacementFallback.CreateFallbackBuffer\n  - System.Text.DecoderReplacementFallback.DefaultString\n  - System.Text.DecoderReplacementFallback.Equals(System.Object)\n  - System.Text.DecoderReplacementFallback.GetHashCode\n  - System.Text.DecoderReplacementFallback.MaxCharCount\n  langs:\n  - csharp\n  - vb\n  name: DecoderReplacementFallback\n  fullName: System.Text.DecoderReplacementFallback\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DecoderReplacementFallback\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 9\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an output character. The fallback emits a user-specified replacement string instead of a decoded input byte sequence. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public sealed class DecoderReplacementFallback : DecoderFallback\n    content.vb: >-\n      <Serializable>\n\n      Public NotInheritable Class DecoderReplacementFallback\n          Inherits DecoderFallback\n  seealso:\n  - type: System.Text.DecoderReplacementFallbackBuffer\n    commentId: T:System.Text.DecoderReplacementFallbackBuffer\n  - type: System.Text.DecoderReplacementFallback.#ctor\n    commentId: M:System.Text.DecoderReplacementFallback.#ctor\n  - type: System.Text.DecoderReplacementFallback.DefaultString\n    commentId: P:System.Text.DecoderReplacementFallback.DefaultString\n  inheritance:\n  - System.Object\n  - System.Text.DecoderFallback\n  inheritedMembers:\n  - System.Text.DecoderFallback.ExceptionFallback\n  - System.Text.DecoderFallback.ReplacementFallback\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DecoderReplacementFallback\n- uid: System.Text.DecoderReplacementFallback.#ctor\n  commentId: M:System.Text.DecoderReplacementFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.DecoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: DecoderReplacementFallback()\n  fullName: System.Text.DecoderReplacementFallback.DecoderReplacementFallback()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 16\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public DecoderReplacementFallback()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DecoderReplacementFallback.DecoderReplacementFallback()\n- uid: System.Text.DecoderReplacementFallback.#ctor(System.String)\n  commentId: M:System.Text.DecoderReplacementFallback.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Text.DecoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: DecoderReplacementFallback(String)\n  fullName: System.Text.DecoderReplacementFallback.DecoderReplacementFallback(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 20\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a specified replacement string.</p>\\n\"\n  syntax:\n    content: public DecoderReplacementFallback(string replacement)\n    content.vb: Public Sub New(replacement As String)\n    parameters:\n    - id: replacement\n      type: System.String\n      description: \"\\n<p>A string that is emitted in a decoding operation in place of an input byte sequence that cannot be decoded.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>replacement</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>replacement</em> contains an invalid surrogate pair. In other words, the surrogate pair does not consist of one high surrogate component followed by one low surrogate component.</p>\\n\"\n  seealso:\n  - type: System.Text.DecoderReplacementFallback.DefaultString\n    commentId: P:System.Text.DecoderReplacementFallback.DefaultString\n  - type: System.Text.DecoderReplacementFallback.#ctor(System.String)\n    commentId: M:System.Text.DecoderReplacementFallback.#ctor(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DecoderReplacementFallback.DecoderReplacementFallback(String)\n- uid: System.Text.DecoderReplacementFallback.DefaultString\n  commentId: P:System.Text.DecoderReplacementFallback.DefaultString\n  id: DefaultString\n  parent: System.Text.DecoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: DefaultString\n  fullName: System.Text.DecoderReplacementFallback.DefaultString\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefaultString\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 65\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets the replacement string that is the value of the <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public string DefaultString { get; }\n    content.vb: Public ReadOnly Property DefaultString As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A substitute string that is emitted in place of an input byte sequence that cannot be decoded.</p>\\n\"\n  seealso:\n  - type: System.Text.DecoderReplacementFallback.#ctor(System.String)\n    commentId: M:System.Text.DecoderReplacementFallback.#ctor(System.String)\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DecoderReplacementFallback.DefaultString\n- uid: System.Text.DecoderReplacementFallback.MaxCharCount\n  commentId: P:System.Text.DecoderReplacementFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.DecoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: MaxCharCount\n  fullName: System.Text.DecoderReplacementFallback.MaxCharCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxCharCount\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 79\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets the number of characters in the replacement string for the <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int MaxCharCount { get; }\n    content.vb: Public Overrides ReadOnly Property MaxCharCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of characters in the string that is emitted in place of a byte sequence that cannot be decoded, that is, the length of the string returned by the <xref href=\\\"System.Text.DecoderReplacementFallback.DefaultString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  overridden: System.Text.DecoderFallback.MaxCharCount\n  seealso:\n  - type: System.Text.DecoderReplacementFallback.DefaultString\n    commentId: P:System.Text.DecoderReplacementFallback.DefaultString\n  - type: System.Text.DecoderReplacementFallback.#ctor(System.String)\n    commentId: M:System.Text.DecoderReplacementFallback.#ctor(System.String)\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DecoderReplacementFallback.MaxCharCount\n- uid: System.Text.DecoderReplacementFallback.CreateFallbackBuffer\n  commentId: M:System.Text.DecoderReplacementFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.DecoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: CreateFallbackBuffer()\n  fullName: System.Text.DecoderReplacementFallback.CreateFallbackBuffer()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateFallbackBuffer\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 73\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Text.DecoderFallbackBuffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is initialized with the replacement string of this <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override DecoderFallbackBuffer CreateFallbackBuffer()\n    content.vb: Public Overrides Function CreateFallbackBuffer As DecoderFallbackBuffer\n    return:\n      type: System.Text.DecoderFallbackBuffer\n      description: \"\\n<p>A <xref href=\\\"System.Text.DecoderFallbackBuffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies a string to use instead of the original decoding operation input.</p>\\n\"\n  overridden: System.Text.DecoderFallback.CreateFallbackBuffer\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DecoderReplacementFallback.CreateFallbackBuffer()\n- uid: System.Text.DecoderReplacementFallback.Equals(System.Object)\n  commentId: M:System.Text.DecoderReplacementFallback.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.DecoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Text.DecoderReplacementFallback.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 87\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Indicates whether the value of a specified object is equal to the <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>A <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>value</em> is a <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object having a <xref href=\\\"System.Text.DecoderReplacementFallback.DefaultString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property that is equal to the <xref href=\\\"System.Text.DecoderReplacementFallback.DefaultString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the current <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>. </p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DecoderReplacementFallback.Equals(Object)\n- uid: System.Text.DecoderReplacementFallback.GetHashCode\n  commentId: M:System.Text.DecoderReplacementFallback.GetHashCode\n  id: GetHashCode\n  parent: System.Text.DecoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Text.DecoderReplacementFallback.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Text/DecoderReplacementFallback.cs\n    startLine: 97\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Retrieves the hash code for the value of the <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code of the value of the object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DecoderReplacementFallback.GetHashCode()\nreferences:\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  fullName: System.Text.DecoderFallback\n  nameWithType: DecoderFallback\n  commentId: T:System.Text.DecoderFallback\n- uid: System.Text.DecoderFallback.ExceptionFallback\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: ExceptionFallback\n  fullName: System.Text.DecoderFallback.ExceptionFallback\n  nameWithType: DecoderFallback.ExceptionFallback\n  commentId: P:System.Text.DecoderFallback.ExceptionFallback\n- uid: System.Text.DecoderFallback.ReplacementFallback\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: ReplacementFallback\n  fullName: System.Text.DecoderFallback.ReplacementFallback\n  nameWithType: DecoderFallback.ReplacementFallback\n  commentId: P:System.Text.DecoderFallback.ReplacementFallback\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Text.DecoderFallback.MaxCharCount\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: MaxCharCount\n  fullName: System.Text.DecoderFallback.MaxCharCount\n  nameWithType: DecoderFallback.MaxCharCount\n  commentId: P:System.Text.DecoderFallback.MaxCharCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Text.DecoderFallback.CreateFallbackBuffer\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: CreateFallbackBuffer()\n  fullName: System.Text.DecoderFallback.CreateFallbackBuffer()\n  spec.csharp:\n  - uid: System.Text.DecoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.DecoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Text.DecoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.DecoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: DecoderFallback.CreateFallbackBuffer()\n  commentId: M:System.Text.DecoderFallback.CreateFallbackBuffer\n- uid: System.Text.DecoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallbackBuffer\n  fullName: System.Text.DecoderFallbackBuffer\n  nameWithType: DecoderFallbackBuffer\n  commentId: T:System.Text.DecoderFallbackBuffer\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}