{"nodes":[{"pos":[2043,2064],"content":"UnmanagedMemoryStream","needQuote":true,"nodes":[{"content":"UnmanagedMemoryStream","pos":[0,21]}]},{"pos":[5072,5095],"content":"UnmanagedMemoryStream()","needQuote":true,"nodes":[{"content":"UnmanagedMemoryStream()","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The user does not have the required permission.&lt;/p&gt;\\n","pos":[5962,6020],"source":"\\n<p>The user does not have the required permission.</p>\\n"},{"pos":[6582,6617],"content":"UnmanagedMemoryStream(Byte*, Int64)","needQuote":true,"nodes":[{"content":"UnmanagedMemoryStream(Byte*, Int64)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;A pointer to an unmanaged memory location.&lt;/p&gt;\\n","pos":[7614,7667],"source":"\\n<p>A pointer to an unmanaged memory location.</p>\\n"},{"content":"\\n&lt;p&gt;The length of the memory to use.&lt;/p&gt;\\n","pos":[7731,7774],"source":"\\n<p>The length of the memory to use.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the required permission.&lt;/p&gt;\\n","pos":[7903,7961],"source":"\\n<p>The user does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;pointer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8066,8129],"source":"\\n<p>The <em>pointer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;length&lt;/em&gt; value is less than zero.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;length&lt;/em&gt; is large enough to cause an overflow.&lt;/p&gt;\\n","pos":[8246,8382],"source":"\\n<p>The <em>length</em> value is less than zero.</p>\\n<p>- or -</p>\\n<p>The <em>length</em> is large enough to cause an overflow.</p>\\n"},{"pos":[9466,9520],"content":"UnmanagedMemoryStream(Byte*, Int64, Int64, FileAccess)","needQuote":true,"nodes":[{"content":"UnmanagedMemoryStream(Byte*, Int64, Int64, FileAccess)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;A pointer to an unmanaged memory location.&lt;/p&gt;\\n","pos":[10672,10725],"source":"\\n<p>A pointer to an unmanaged memory location.</p>\\n"},{"content":"\\n&lt;p&gt;The length of the memory to use.&lt;/p&gt;\\n","pos":[10789,10832],"source":"\\n<p>The length of the memory to use.</p>\\n"},{"content":"\\n&lt;p&gt;The total amount of memory assigned to the stream.&lt;/p&gt;\\n","pos":[10898,10959],"source":"\\n<p>The total amount of memory assigned to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the required permission.&lt;/p&gt;\\n","pos":[11270,11328],"source":"\\n<p>The user does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;pointer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11433,11496],"source":"\\n<p>The <em>pointer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;length&lt;/em&gt; value is less than zero.&lt;/p&gt;\\n&lt;p&gt;- or - &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;capacity&lt;/em&gt; value is less than zero.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;length&lt;/em&gt; value is greater than the &lt;em&gt;capacity&lt;/em&gt; value.&lt;/p&gt;\\n","pos":[11613,11833],"source":"\\n<p>The <em>length</em> value is less than zero.</p>\\n<p>- or - </p>\\n<p>The <em>capacity</em> value is less than zero.</p>\\n<p>- or -</p>\\n<p>The <em>length</em> value is greater than the <em>capacity</em> value.</p>\\n"},{"pos":[12960,13007],"content":"UnmanagedMemoryStream(SafeBuffer, Int64, Int64)","needQuote":true,"nodes":[{"content":"UnmanagedMemoryStream(SafeBuffer, Int64, Int64)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The buffer to contain the unmanaged memory stream.&lt;/p&gt;\\n","pos":[14067,14128],"source":"\\n<p>The buffer to contain the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The byte position in the buffer at which to start the unmanaged memory stream.&lt;/p&gt;\\n","pos":[14192,14281],"source":"\\n<p>The byte position in the buffer at which to start the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The length of the unmanaged memory stream.&lt;/p&gt;\\n","pos":[14345,14398],"source":"\\n<p>The length of the unmanaged memory stream.</p>\\n"},{"pos":[15003,15062],"content":"UnmanagedMemoryStream(SafeBuffer, Int64, Int64, FileAccess)","needQuote":true,"nodes":[{"content":"UnmanagedMemoryStream(SafeBuffer, Int64, Int64, FileAccess)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;The buffer to contain the unmanaged memory stream.&lt;/p&gt;\\n","pos":[16199,16260],"source":"\\n<p>The buffer to contain the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The byte position in the buffer at which to start the unmanaged memory stream.&lt;/p&gt;\\n","pos":[16324,16413],"source":"\\n<p>The byte position in the buffer at which to start the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The length of the unmanaged memory stream.&lt;/p&gt;\\n","pos":[16477,16530],"source":"\\n<p>The length of the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The mode of file access to the unmanaged memory stream.&lt;/p&gt;\\n","pos":[16602,16668],"source":"\\n<p>The mode of file access to the unmanaged memory stream.</p>\\n"},{"pos":[17019,17026],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;false&lt;/strong&gt; if the object was created by a constructor with an &lt;em&gt;access&lt;/em&gt; parameter that did not include reading the stream and if the stream is closed; otherwise, &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17715,17930],"source":"\\n<p>\\n<strong>false</strong> if the object was created by a constructor with an <em>access</em> parameter that did not include reading the stream and if the stream is closed; otherwise, <strong>true</strong>.</p>\\n"},{"pos":[18316,18323],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;false&lt;/strong&gt; if the stream is closed; otherwise, &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19012,19106],"source":"\\n<p>\\n<strong>false</strong> if the stream is closed; otherwise, <strong>true</strong>.</p>\\n"},{"pos":[19495,19503],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;false&lt;/strong&gt; if the object was created by a constructor with an &lt;em&gt;access&lt;/em&gt; parameter value that supports writing or was created by a constructor that had no parameters, or if the stream is closed; otherwise, &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20196,20454],"source":"\\n<p>\\n<strong>false</strong> if the object was created by a constructor with an <em>access</em> parameter value that supports writing or was created by a constructor that had no parameters, or if the stream is closed; otherwise, <strong>true</strong>.</p>\\n"},{"pos":[20845,20853],"content":"Capacity","needQuote":true,"nodes":[{"content":"Capacity","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The size or capacity of the stream.&lt;/p&gt;\\n","pos":[21556,21602],"source":"\\n<p>The size or capacity of the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[21725,21757],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[22075,22081],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The length of the data in the stream.&lt;/p&gt;\\n","pos":[22743,22791],"source":"\\n<p>The length of the data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[22952,22984],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[23333,23341],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The current position in the stream.&lt;/p&gt;\\n","pos":[24088,24134],"source":"\\n<p>The current position in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[24297,24329],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[25049,25064],"content":"PositionPointer","needQuote":true,"nodes":[{"content":"PositionPointer","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A byte pointer.&lt;/p&gt;\\n","pos":[25951,25977],"source":"\\n<p>A byte pointer.</p>\\n"},{"content":"\\n&lt;p&gt;The current position is larger than the capacity of the stream.&lt;/p&gt;\\n","pos":[26102,26176],"source":"\\n<p>The current position is larger than the capacity of the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The position is being set is not a valid position in the current stream.&lt;/p&gt;\\n","pos":[26293,26376],"source":"\\n<p>The position is being set is not a valid position in the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;The pointer is being set to a lower value than the starting position of the stream.&lt;/p&gt;\\n","pos":[26467,26561],"source":"\\n<p>The pointer is being set to a lower value than the starting position of the stream.</p>\\n"},{"pos":[27862,27878],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[28799,28942],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[29332,29339],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[30145,30177],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[30620,30649],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A task that represents the asynchronous flush operation.&lt;/p&gt;\\n","pos":[32116,32183],"source":"\\n<p>A task that represents the asynchronous flush operation.</p>\\n"},{"pos":[32801,32844],"content":"Initialize(Byte*, Int64, Int64, FileAccess)","needQuote":true,"nodes":[{"content":"Initialize(Byte*, Int64, Int64, FileAccess)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;A pointer to an unmanaged memory location.&lt;/p&gt;\\n","pos":[33951,34004],"source":"\\n<p>A pointer to an unmanaged memory location.</p>\\n"},{"content":"\\n&lt;p&gt;The length of the memory to use.&lt;/p&gt;\\n","pos":[34068,34111],"source":"\\n<p>The length of the memory to use.</p>\\n"},{"content":"\\n&lt;p&gt;The total amount of memory assigned to the stream.&lt;/p&gt;\\n","pos":[34177,34238],"source":"\\n<p>The total amount of memory assigned to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the required permission.&lt;/p&gt;\\n","pos":[34549,34607],"source":"\\n<p>The user does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;pointer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[34712,34775],"source":"\\n<p>The <em>pointer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;length&lt;/em&gt; value is less than zero.&lt;/p&gt;\\n&lt;p&gt;- or - &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;capacity&lt;/em&gt; value is less than zero.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;length&lt;/em&gt; value is large enough to cause an overflow.&lt;/p&gt;\\n","pos":[34892,35105],"source":"\\n<p>The <em>length</em> value is less than zero.</p>\\n<p>- or - </p>\\n<p>The <em>capacity</em> value is less than zero.</p>\\n<p>- or -</p>\\n<p>The <em>length</em> value is large enough to cause an overflow.</p>\\n"},{"pos":[36303,36351],"content":"Initialize(SafeBuffer, Int64, Int64, FileAccess)","needQuote":true,"nodes":[{"content":"Initialize(SafeBuffer, Int64, Int64, FileAccess)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The buffer to contain the unmanaged memory stream.&lt;/p&gt;\\n","pos":[37483,37544],"source":"\\n<p>The buffer to contain the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The byte position in the buffer at which to start the unmanaged memory stream.&lt;/p&gt;\\n","pos":[37608,37697],"source":"\\n<p>The byte position in the buffer at which to start the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The length of the unmanaged memory stream.&lt;/p&gt;\\n","pos":[37761,37814],"source":"\\n<p>The length of the unmanaged memory stream.</p>\\n"},{"content":"\\n&lt;p&gt;The mode of file access to the unmanaged memory stream.&lt;/p&gt;\\n","pos":[37886,37952],"source":"\\n<p>The mode of file access to the unmanaged memory stream.</p>\\n"},{"pos":[38412,38438],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the specified byte array with the values between &lt;em&gt;offset&lt;/em&gt; and (&lt;em&gt;offset&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; - 1) replaced by the bytes read from the current source.","pos":[39322,39521],"source":"\\n<p>When this method returns, contains the specified byte array with the values between <em>offset</em> and (<em>offset</em> + <em>count</em> - 1) replaced by the bytes read from the current source."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[39522,39567],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based byte offset in &lt;em&gt;buffer&lt;/em&gt; at which to begin storing the data read from the current stream.&lt;/p&gt;\\n","pos":[39935,40056],"source":"\\n<p>The zero-based byte offset in <em>buffer</em> at which to begin storing the data read from the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to read from the current stream.&lt;/p&gt;\\n","pos":[40119,40190],"source":"\\n<p>The maximum number of bytes to read from the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;The total number of bytes read into the buffer.","pos":[40249,40301],"source":"\\n<p>The total number of bytes read into the buffer."},{"content":"This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.&lt;/p&gt;\\n","pos":[40302,40462],"source":" This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[40662,40694],"source":"\\n<p>The stream is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; parameter is set to &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41134,41207],"source":"\\n<p>The <em>buffer</em> parameter is set to <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; parameter is less than zero.","pos":[41324,41377],"source":"\\n<p>The <em>offset</em> parameter is less than zero."},{"content":"&lt;/p&gt;\\n&lt;p&gt;- or - &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;count&lt;/em&gt; parameter is less than zero.&lt;/p&gt;\\n","pos":[41378,41456],"source":" </p>\\n<p>- or - </p>\\n<p>The <em>count</em> parameter is less than zero.</p>\\n"},{"content":"\\n&lt;p&gt;The length of the buffer array minus the &lt;em&gt;offset&lt;/em&gt; parameter is less than the &lt;em&gt;count&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[41553,41673],"source":"\\n<p>The length of the buffer array minus the <em>offset</em> parameter is less than the <em>count</em> parameter.</p>\\n"},{"pos":[42453,42503],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The buffer to write the data into.&lt;/p&gt;\\n","pos":[43682,43727],"source":"\\n<p>The buffer to write the data into.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;buffer&lt;/em&gt; at which to begin writing data from the stream.&lt;/p&gt;\\n","pos":[43791,43884],"source":"\\n<p>The byte offset in <em>buffer</em> at which to begin writing data from the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to read.&lt;/p&gt;\\n","pos":[43947,43994],"source":"\\n<p>The maximum number of bytes to read.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous read operation.","pos":[44359,44419],"source":"\\n<p>A task that represents the asynchronous read operation."},{"content":"The value of the &lt;em&gt;TResult&lt;/em&gt; parameter contains the total number of bytes read into the buffer.","pos":[44420,44520],"source":" The value of the <em>TResult</em> parameter contains the total number of bytes read into the buffer."},{"content":"The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.&lt;/p&gt;\\n","pos":[44521,44733],"source":" The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</p>\\n"},{"pos":[45512,45522],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[46641,46673],"source":"\\n<p>The stream is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The underlying memory does not support reading.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;The current position is at the end of the stream.&lt;/p&gt;\\n","pos":[46778,46909],"source":"\\n<p>The underlying memory does not support reading.</p>\\n<p>- or -</p>\\n<p>The current position is at the end of the stream.</p>\\n"},{"pos":[47334,47357],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The point relative to &lt;em&gt;origin&lt;/em&gt; to begin seeking from.","pos":[48120,48185],"source":"\\n<p>The point relative to <em>origin</em> to begin seeking from."},{"content":"&lt;/p&gt;\\n","pos":[48186,48192],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The new position in the stream.&lt;/p&gt;\\n","pos":[48535,48577],"source":"\\n<p>The new position in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;An attempt was made to seek before the beginning of the stream.&lt;/p&gt;\\n","pos":[48753,48827],"source":"\\n<p>An attempt was made to seek before the beginning of the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; value is larger than the maximum size of the stream.&lt;/p&gt;\\n","pos":[48944,49027],"source":"\\n<p>The <em>offset</em> value is larger than the maximum size of the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;loc&lt;/em&gt; is invalid.&lt;/p&gt;\\n","pos":[49124,49161],"source":"\\n<p>\\n<em>loc</em> is invalid.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[49270,49302],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[49692,49708],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The length of the stream.&lt;/p&gt;\\n","pos":[50478,50514],"source":"\\n<p>The length of the stream.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error has occurred.","pos":[50674,50705],"source":"\\n<p>An I/O error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[50706,50712],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[50821,50853],"source":"\\n<p>The stream is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The specified &lt;em&gt;value&lt;/em&gt; exceeds the capacity of the stream.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;The specified &lt;em&gt;value&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[51343,51483],"source":"\\n<p>The specified <em>value</em> exceeds the capacity of the stream.</p>\\n<p>- or -</p>\\n<p>The specified <em>value</em> is negative.</p>\\n"},{"pos":[51935,51962],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The byte array from which to copy bytes to the current stream.&lt;/p&gt;\\n","pos":[52835,52908],"source":"\\n<p>The byte array from which to copy bytes to the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;The offset in the buffer at which to begin copying bytes to the current stream.&lt;/p&gt;\\n","pos":[52972,53062],"source":"\\n<p>The offset in the buffer at which to begin copying bytes to the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to write to the current stream.&lt;/p&gt;\\n","pos":[53125,53187],"source":"\\n<p>The number of bytes to write to the current stream.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[53388,53420],"source":"\\n<p>The stream is closed.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurs.","pos":[54051,54076],"source":"\\n<p>An I/O error occurs."},{"content":"&lt;/p&gt;\\n","pos":[54077,54083],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;One of the specified parameters is less than zero.&lt;/p&gt;\\n","pos":[54200,54261],"source":"\\n<p>One of the specified parameters is less than zero.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; parameter minus the length of the &lt;em&gt;buffer&lt;/em&gt; parameter is less than the &lt;em&gt;count&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[54358,54491],"source":"\\n<p>The <em>offset</em> parameter minus the length of the <em>buffer</em> parameter is less than the <em>count</em> parameter.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[54596,54662],"source":"\\n<p>The <em>buffer</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[55449,55500],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The buffer to write data from.&lt;/p&gt;\\n","pos":[56771,56812],"source":"\\n<p>The buffer to write data from.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based byte offset in &lt;em&gt;buffer&lt;/em&gt; from which to begin copying bytes to the stream.&lt;/p&gt;\\n","pos":[56876,56981],"source":"\\n<p>The zero-based byte offset in <em>buffer</em> from which to begin copying bytes to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to write.&lt;/p&gt;\\n","pos":[57044,57092],"source":"\\n<p>The maximum number of bytes to write.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[57443,57510],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"pos":[58336,58351],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A byte value written to the stream.&lt;/p&gt;\\n","pos":[59127,59173],"source":"\\n<p>A byte value written to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[59350,59382],"source":"\\n<p>The stream is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The supplied &lt;em&gt;value&lt;/em&gt; causes the stream exceed its maximum capacity.&lt;/p&gt;\\n","pos":[59936,60021],"source":"\\n<p>The supplied <em>value</em> causes the stream exceed its maximum capacity.</p>\\n"},{"pos":[60219,60228],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[60368,60374],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60530,60548],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[60735,60741],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[60897,60908],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[61286,61305],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[61446,61457],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[61511,61512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61565,61571],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[61613,61614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61708,61719],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[61773,61774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61827,61833],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[61875,61876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62119,62145],"content":"CopyToAsync(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32)","pos":[0,26]}]},{"pos":[62313,62324],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[62378,62379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62432,62438],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[62481,62482]},{"pos":[62536,62541],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62600,62601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62708,62719],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[62773,62774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62827,62833],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[62876,62877]},{"pos":[62931,62936],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62995,62996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63294,63339],"content":"CopyToAsync(Stream, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32, CancellationToken)","pos":[0,45]}]},{"pos":[63578,63589],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[63643,63644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63697,63703],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[63746,63747]},{"pos":[63801,63806],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[63866,63867]},{"pos":[63943,63960],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[64041,64042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64184,64195],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[64249,64250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64303,64309],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[64352,64353]},{"pos":[64407,64412],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[64472,64473]},{"pos":[64549,64566],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[64647,64648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64948,64962],"content":"CopyTo(Stream)","needQuote":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[65093,65099],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[65148,65149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65202,65208],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[65250,65251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65340,65346],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[65395,65396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65449,65455],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[65497,65498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65726,65747],"content":"CopyTo(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Stream, Int32)","pos":[0,21]}]},{"pos":[65905,65911],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[65960,65961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66014,66020],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[66063,66064]},{"pos":[66118,66123],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66182,66183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66285,66291],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[66340,66341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66394,66400],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[66443,66444]},{"pos":[66498,66503],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66562,66563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66779,66786],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[66881,66886],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[66955,66956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66983,66984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67054,67059],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[67128,67129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67156,67157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67330,67339],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[67438,67445],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[67495,67496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67523,67524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67596,67603],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[67653,67654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67681,67682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67862,67874],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[67979,67989],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[68042,68043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68070,68071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68146,68156],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[68209,68210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68237,68238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68429,68447],"content":"CreateWaitHandle()","needQuote":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[68564,68580],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[68660,68661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68688,68689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68770,68786],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[68866,68867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68894,68895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69167,69221],"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,54]}]},{"pos":[69666,69675],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[69748,69749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69797,69801],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[69860,69862]},{"content":",","pos":[69894,69895]},{"pos":[69949,69954],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[70014,70015]},{"pos":[70069,70074],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[70134,70135]},{"pos":[70197,70210],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[70278,70279]},{"pos":[70334,70340],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70400,70401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70551,70560],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[70633,70634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70682,70686],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[70744,70746],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[70775,70776]},{"pos":[70830,70835],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[70895,70896]},{"pos":[70950,70955],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[71015,71016]},{"pos":[71078,71091],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[71159,71160]},{"pos":[71215,71221],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71281,71282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71683,71704],"content":"EndRead(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[71843,71850],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[71921,71922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71978,71990],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[72056,72057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72150,72157],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[72228,72229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72285,72297],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[72363,72364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72616,72647],"content":"ReadAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32)","pos":[0,31]}]},{"pos":[72960,72969],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[73021,73022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73070,73074],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[73133,73135]},{"content":",","pos":[73167,73168]},{"pos":[73222,73227],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[73287,73288]},{"pos":[73342,73347],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73406,73407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73522,73531],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[73583,73584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73632,73636],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[73694,73696],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[73725,73726]},{"pos":[73780,73785],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[73845,73846]},{"pos":[73900,73905],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73964,73965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74343,74398],"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,55]}]},{"pos":[74847,74857],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[74931,74932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74980,74984],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[75043,75045]},{"content":",","pos":[75077,75078]},{"pos":[75132,75137],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[75197,75198]},{"pos":[75252,75257],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[75317,75318]},{"pos":[75380,75393],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[75461,75462]},{"pos":[75517,75523],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75583,75584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75735,75745],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[75819,75820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75868,75872],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[75930,75932],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[75961,75962]},{"pos":[76016,76021],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[76081,76082]},{"pos":[76136,76141],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[76201,76202]},{"pos":[76264,76277],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[76345,76346]},{"pos":[76401,76407],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76467,76468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76873,76895],"content":"EndWrite(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[77036,77044],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[77116,77117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77173,77185],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[77251,77252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77346,77354],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[77426,77427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77483,77495],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[77561,77562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77817,77849],"content":"WriteAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32)","pos":[0,32]}]},{"pos":[78166,78176],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[78229,78230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78278,78282],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[78341,78343]},{"content":",","pos":[78375,78376]},{"pos":[78430,78435],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[78495,78496]},{"pos":[78550,78555],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[78614,78615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78731,78741],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[78794,78795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78843,78847],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[78905,78907],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[78936,78937]},{"pos":[78991,78996],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[79056,79057]},{"pos":[79111,79116],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79175,79176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79501,79521],"content":"Synchronized(Stream)","needQuote":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[79664,79676],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[79752,79753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79806,79812],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[79875,79876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79971,79983],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[80059,80060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80113,80119],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[80182,80183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80401,80418],"content":"ObjectInvariant()","needQuote":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[80533,80548],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[80627,80628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80655,80656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80736,80751],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[80830,80831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80858,80859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81055,81065],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[81274,81285],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[81498,81510],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[81762,81786],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[81949,81964],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[82052,82053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82104,82111],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82172,82173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82278,82293],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[82381,82382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82433,82440],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82501,82502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82767,82787],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[82926,82944],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[83035,83036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83063,83064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83156,83174],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[83265,83266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83293,83294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83549,83576],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[83729,83754],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[83852,83853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83880,83881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83980,84005],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[84103,84104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84131,84132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84401,84419],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[84570,84582],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[84667,84668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84716,84720],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[84778,84779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84878,84890],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[84975,84976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85024,85028],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[85086,85087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85306,85316],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[85411,85419],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[85488,85489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85516,85517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85587,85595],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[85664,85665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85692,85693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85876,85890],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[86009,86015],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[86082,86083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86133,86139],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86199,86200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86283,86289],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[86356,86357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86407,86413],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86473,86474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86688,86710],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[86858,86864],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[86931,86932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86982,86988],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[87049,87050]},{"pos":[87105,87111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87171,87172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87269,87275],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[87342,87343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87393,87399],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[87460,87461]},{"pos":[87516,87522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87582,87583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87828,87859],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[88025,88040],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[88116,88117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88167,88173],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[88234,88235]},{"pos":[88290,88296],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88356,88357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88463,88478],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[88554,88555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88605,88611],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[88672,88673]},{"pos":[88728,88734],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88794,88795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89025,89038],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[89139,89150],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[89222,89223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89250,89251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89324,89335],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[89407,89408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89435,89436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89611,89620],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[89713,89720],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[89788,89789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89816,89817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89886,89893],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[89961,89962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89989,89990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90165,90182],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[90291,90306],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[90382,90383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90410,90411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90488,90503],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[90579,90580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90607,90608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90936,90951],"content":"AsInputStream()","needQuote":true,"nodes":[{"content":"AsInputStream()","pos":[0,15]}]},{"pos":[91110,91123],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[91203,91204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91231,91232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91334,91347],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[91427,91428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91455,91456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91851,91867],"content":"AsOutputStream()","needQuote":true,"nodes":[{"content":"AsOutputStream()","pos":[0,16]}]},{"pos":[92028,92042],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[92123,92124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92151,92152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92255,92269],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[92350,92351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92378,92379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92788,92810],"content":"AsRandomAccessStream()","needQuote":true,"nodes":[{"content":"AsRandomAccessStream()","pos":[0,22]}]},{"pos":[92983,93003],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[93090,93091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93118,93119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93228,93248],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[93335,93336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93363,93364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93588,93594],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[93766,93787],"content":"AsInputStream(Stream)","needQuote":true,"nodes":[{"content":"AsInputStream(Stream)","pos":[0,21]}]},{"pos":[93980,93993],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[94073,94074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94127,94133],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[94196,94197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94317,94330],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[94410,94411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94464,94470],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[94533,94534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94804,94834],"content":"WindowsRuntimeStreamExtensions","needQuote":true,"nodes":[{"content":"WindowsRuntimeStreamExtensions","pos":[0,30]}]},{"pos":[95099,95121],"content":"AsOutputStream(Stream)","needQuote":true,"nodes":[{"content":"AsOutputStream(Stream)","pos":[0,22]}]},{"pos":[95316,95330],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[95411,95412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95465,95471],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[95534,95535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95656,95670],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[95751,95752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95805,95811],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[95874,95875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96165,96193],"content":"AsRandomAccessStream(Stream)","needQuote":true,"nodes":[{"content":"AsRandomAccessStream(Stream)","pos":[0,28]}]},{"pos":[96400,96420],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[96507,96508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96561,96567],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[96630,96631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96758,96778],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[96865,96866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96919,96925],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[96988,96989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97205,97210],"content":"Byte*","needQuote":true,"nodes":[{"content":"Byte*","pos":[0,5]}]},{"pos":[97282,97286],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[97408,97412],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[97579,97584],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[97736,97746],"content":"FileAccess","needQuote":true,"nodes":[{"content":"FileAccess","pos":[0,10]}]},{"pos":[97961,97971],"content":"SafeBuffer","needQuote":true,"nodes":[{"content":"SafeBuffer","pos":[0,10]}]},{"pos":[98176,98206],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[98430,98437],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[98613,98620],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[98789,98796],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[98993,99001],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[99199,99205],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[99399,99407],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[99621,99637],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[99766,99773],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[99823,99824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99875,99882],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[99943,99944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100032,100039],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[100089,100090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100141,100148],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[100209,100210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100408,100415],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[100510,100515],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[100563,100564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100591,100592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100662,100667],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[100715,100716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100743,100744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100955,100984],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[101159,101169],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[101222,101223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101294,101311],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[101392,101393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101504,101514],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[101567,101568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101639,101656],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[101737,101738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101984,102001],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[102229,102233],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[102390,102406],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[102559,102581],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[102818,102844],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"pos":[103137,103141],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[103188,103189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103237,103241],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[103300,103302]},{"content":",","pos":[103334,103335]},{"pos":[103389,103394],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[103454,103455]},{"pos":[103509,103514],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103573,103574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103684,103688],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[103735,103736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103784,103788],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[103846,103848],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[103877,103878]},{"pos":[103932,103937],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[103997,103998]},{"pos":[104052,104057],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104116,104117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104344,104350],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[104470,104474],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[104533,104535]},{"pos":[104598,104602],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[104660,104662],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[104794,104799],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[105039,105089],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[105528,105537],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[105589,105590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105638,105642],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[105701,105703]},{"content":",","pos":[105735,105736]},{"pos":[105790,105795],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[105855,105856]},{"pos":[105910,105915],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[105975,105976]},{"pos":[106052,106069],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[106150,106151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106301,106310],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[106362,106363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106411,106415],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[106473,106475],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[106504,106505]},{"pos":[106559,106564],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[106624,106625]},{"pos":[106679,106684],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[106744,106745]},{"pos":[106821,106838],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[106919,106920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107340,107351],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[107556,107560],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[107634,107635],"content":"<","needQuote":true,"nodes":[]},{"pos":[107684,107689],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[107830,107834],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[107909,107912]},{"pos":[107968,107973],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[108032,108033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108234,108247],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[108444,108448],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[108501,108502],"content":"<","needQuote":true,"nodes":[]},{"pos":[108529,108536],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[108651,108655],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[108709,108712]},{"pos":[108746,108753],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[108786,108787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109003,109013],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[109114,109122],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[109173,109174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109201,109202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109275,109283],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[109334,109335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109362,109363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109573,109596],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"pos":[109758,109762],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[109809,109810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109859,109864],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[109924,109925]},{"pos":[109987,109997],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[110043,110044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110148,110152],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[110199,110200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110249,110254],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[110314,110315]},{"pos":[110377,110387],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[110433,110434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110646,110656],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[110855,110871],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[111000,111009],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[111061,111062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111111,111116],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[111175,111176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111264,111273],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[111325,111326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111375,111380],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[111439,111440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111678,111705],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"pos":[112002,112007],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[112055,112056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112104,112108],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[112167,112169]},{"content":",","pos":[112201,112202]},{"pos":[112256,112261],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[112321,112322]},{"pos":[112376,112381],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[112440,112441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112552,112557],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[112605,112606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112654,112658],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[112716,112718],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[112747,112748]},{"pos":[112802,112807],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[112867,112868]},{"pos":[112922,112927],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[112986,112987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113353,113404],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[113847,113857],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[113910,113911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113959,113963],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[114022,114024]},{"content":",","pos":[114056,114057]},{"pos":[114111,114116],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114176,114177]},{"pos":[114231,114236],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114296,114297]},{"pos":[114373,114390],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[114471,114472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114623,114633],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[114686,114687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114735,114739],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[114797,114799],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[114828,114829]},{"pos":[114883,114888],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114948,114949]},{"pos":[115003,115008],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115068,115069]},{"pos":[115145,115162],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[115243,115244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115634,115649],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[115776,115785],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[115837,115838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115886,115890],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[115948,115949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116036,116045],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[116097,116098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116146,116150],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[116208,116209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116384,116388],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[116530,116547],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[116741,116762],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[116956,116983],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[117191,117214],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[117411,117435],"content":"IndexOutOfRangeException","needQuote":true,"nodes":[{"content":"IndexOutOfRangeException","pos":[0,24]}]},{"pos":[117645,117656],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[117837,117858],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[118059,118076],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.IO.UnmanagedMemoryStream\n  commentId: T:System.IO.UnmanagedMemoryStream\n  id: UnmanagedMemoryStream\n  parent: System.IO\n  children:\n  - System.IO.UnmanagedMemoryStream.#ctor\n  - System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)\n  - System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  - System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.CanRead\n  - System.IO.UnmanagedMemoryStream.CanSeek\n  - System.IO.UnmanagedMemoryStream.CanWrite\n  - System.IO.UnmanagedMemoryStream.Capacity\n  - System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)\n  - System.IO.UnmanagedMemoryStream.Flush\n  - System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.Length\n  - System.IO.UnmanagedMemoryStream.Position\n  - System.IO.UnmanagedMemoryStream.PositionPointer\n  - System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.ReadByte\n  - System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.UnmanagedMemoryStream.SetLength(System.Int64)\n  - System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryStream\n  fullName: System.IO.UnmanagedMemoryStream\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UnmanagedMemoryStream\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 83\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Provides access to unmanaged blocks of memory from managed code.</p>\\n\"\n  syntax:\n    content: 'public class UnmanagedMemoryStream : Stream, IDisposable'\n    content.vb: >-\n      Public Class UnmanagedMemoryStream\n          Inherits Stream\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.Stream.Null\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.Close\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.WriteTimeout\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: UnmanagedMemoryStream\n  extensionMethods:\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n- uid: System.IO.UnmanagedMemoryStream.#ctor\n  commentId: M:System.IO.UnmanagedMemoryStream.#ctor\n  id: '#ctor'\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryStream()\n  fullName: System.IO.UnmanagedMemoryStream.UnmanagedMemoryStream()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 102\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      protected UnmanagedMemoryStream()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Protected Sub New\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the required permission.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n    commentId: F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: UnmanagedMemoryStream.UnmanagedMemoryStream()\n- uid: System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)\n  id: '#ctor(System.Byte*,System.Int64)'\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryStream(Byte*, Int64)\n  fullName: System.IO.UnmanagedMemoryStream.UnmanagedMemoryStream(System.Byte*, System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 187\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified location and memory length.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [CLSCompliant(false)]\n\n      public UnmanagedMemoryStream(byte *pointer, long length)\n    content.vb: >-\n      <SecurityCritical>\n\n      <CLSCompliant(False)>\n\n      Public Sub New(pointer As Byte *, length As Long)\n    parameters:\n    - id: pointer\n      type: System.Byte*\n      description: \"\\n<p>A pointer to an unmanaged memory location.</p>\\n\"\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length of the memory to use.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the required permission.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>pointer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>length</em> value is less than zero.</p>\\n<p>- or -</p>\\n<p>The <em>length</em> is large enough to cause an overflow.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n    commentId: F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryStream.UnmanagedMemoryStream(Byte*, Int64)\n- uid: System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  id: '#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)'\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryStream(Byte*, Int64, Int64, FileAccess)\n  fullName: System.IO.UnmanagedMemoryStream.UnmanagedMemoryStream(System.Byte*, System.Int64, System.Int64, System.IO.FileAccess)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 194\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified location, memory length, total amount of memory, and file access values.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [CLSCompliant(false)]\n\n      public UnmanagedMemoryStream(byte *pointer, long length, long capacity, FileAccess access)\n    content.vb: >-\n      <SecurityCritical>\n\n      <CLSCompliant(False)>\n\n      Public Sub New(pointer As Byte *, length As Long, capacity As Long, access As FileAccess)\n    parameters:\n    - id: pointer\n      type: System.Byte*\n      description: \"\\n<p>A pointer to an unmanaged memory location.</p>\\n\"\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length of the memory to use.</p>\\n\"\n    - id: capacity\n      type: System.Int64\n      description: \"\\n<p>The total amount of memory assigned to the stream.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the required permission.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>pointer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>length</em> value is less than zero.</p>\\n<p>- or - </p>\\n<p>The <em>capacity</em> value is less than zero.</p>\\n<p>- or -</p>\\n<p>The <em>length</em> value is greater than the <em>capacity</em> value.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n    commentId: F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryStream.UnmanagedMemoryStream(Byte*, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  id: '#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)'\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryStream(SafeBuffer, Int64, Int64)\n  fullName: System.IO.UnmanagedMemoryStream.UnmanagedMemoryStream(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 111\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class in a safe buffer with a specified offset and length. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public UnmanagedMemoryStream(SafeBuffer buffer, long offset, long length)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(buffer As SafeBuffer, offset As Long, length As Long)\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: \"\\n<p>The buffer to contain the unmanaged memory stream.</p>\\n\"\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The byte position in the buffer at which to start the unmanaged memory stream.</p>\\n\"\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length of the unmanaged memory stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryStream.UnmanagedMemoryStream(SafeBuffer, Int64, Int64)\n- uid: System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  id: '#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)'\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryStream(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: System.IO.UnmanagedMemoryStream.UnmanagedMemoryStream(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64, System.IO.FileAccess)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 116\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class in a safe buffer with a specified offset, length, and file access. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public UnmanagedMemoryStream(SafeBuffer buffer, long offset, long length, FileAccess access)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(buffer As SafeBuffer, offset As Long, length As Long, access As FileAccess)\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: \"\\n<p>The buffer to contain the unmanaged memory stream.</p>\\n\"\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The byte position in the buffer at which to start the unmanaged memory stream.</p>\\n\"\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length of the unmanaged memory stream.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>The mode of file access to the unmanaged memory stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryStream.UnmanagedMemoryStream(SafeBuffer, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryStream.CanRead\n  commentId: P:System.IO.UnmanagedMemoryStream.CanRead\n  id: CanRead\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.IO.UnmanagedMemoryStream.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanRead\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 248\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether a stream supports reading.</p>\\n\"\n  syntax:\n    content: public override bool CanRead { get; }\n    content.vb: Public Overrides ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>false</strong> if the object was created by a constructor with an <em>access</em> parameter that did not include reading the stream and if the stream is closed; otherwise, <strong>true</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanRead\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: UnmanagedMemoryStream.CanRead\n- uid: System.IO.UnmanagedMemoryStream.CanSeek\n  commentId: P:System.IO.UnmanagedMemoryStream.CanSeek\n  id: CanSeek\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: CanSeek\n  fullName: System.IO.UnmanagedMemoryStream.CanSeek\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanSeek\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 253\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether a stream supports seeking.</p>\\n\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>false</strong> if the stream is closed; otherwise, <strong>true</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanSeek\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: UnmanagedMemoryStream.CanSeek\n- uid: System.IO.UnmanagedMemoryStream.CanWrite\n  commentId: P:System.IO.UnmanagedMemoryStream.CanWrite\n  id: CanWrite\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.IO.UnmanagedMemoryStream.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanWrite\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 258\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether a stream supports writing.</p>\\n\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>false</strong> if the object was created by a constructor with an <em>access</em> parameter value that supports writing or was created by a constructor that had no parameters, or if the stream is closed; otherwise, <strong>true</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanWrite\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: UnmanagedMemoryStream.CanWrite\n- uid: System.IO.UnmanagedMemoryStream.Capacity\n  commentId: P:System.IO.UnmanagedMemoryStream.Capacity\n  id: Capacity\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Capacity\n  fullName: System.IO.UnmanagedMemoryStream.Capacity\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Capacity\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 305\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets the stream length (size) or the total amount of memory assigned to a stream (capacity).</p>\\n\"\n  syntax:\n    content: public long Capacity { get; }\n    content.vb: Public ReadOnly Property Capacity As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The size or capacity of the stream.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UnmanagedMemoryStream.Capacity\n- uid: System.IO.UnmanagedMemoryStream.Length\n  commentId: P:System.IO.UnmanagedMemoryStream.Length\n  id: Length\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.IO.UnmanagedMemoryStream.Length\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Length\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 298\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets the length of the data in a stream.</p>\\n\"\n  syntax:\n    content: public override long Length { get; }\n    content.vb: Public Overrides ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The length of the data in the stream.</p>\\n\"\n  overridden: System.IO.Stream.Length\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: UnmanagedMemoryStream.Length\n- uid: System.IO.UnmanagedMemoryStream.Position\n  commentId: P:System.IO.UnmanagedMemoryStream.Position\n  id: Position\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.IO.UnmanagedMemoryStream.Position\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Position\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 312\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the current position in a stream.</p>\\n\"\n  syntax:\n    content: >-\n      public override long Position\n\n      {\n          get;\n          [SecuritySafeCritical]\n          set;\n      }\n    content.vb: Public Overrides Property Position As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The current position in the stream.</p>\\n\"\n  overridden: System.IO.Stream.Position\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The position is set to a value that is less than zero, or the position is larger than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or results in overflow when added to the current pointer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.Position\n- uid: System.IO.UnmanagedMemoryStream.PositionPointer\n  commentId: P:System.IO.UnmanagedMemoryStream.PositionPointer\n  id: PositionPointer\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: PositionPointer\n  fullName: System.IO.UnmanagedMemoryStream.PositionPointer\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PositionPointer\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 336\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets a byte pointer to a stream based on the current position in the stream.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public byte *PositionPointer\n\n      {\n          [SecurityCritical]\n          get;\n          [SecurityCritical]\n          set;\n      }\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Property PositionPointer As Byte\n    parameters: []\n    return:\n      type: System.Byte*\n      description: \"\\n<p>A byte pointer.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The current position is larger than the capacity of the stream.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The position is being set is not a valid position in the current stream.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The pointer is being set to a lower value than the starting position of the stream.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream was initialized for use with a <xref href=\\\"System.Runtime.InteropServices.SafeBuffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The <xref href=\\\"System.IO.UnmanagedMemoryStream.PositionPointer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is valid only for streams that are initialized with a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> pointer.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryStream.PositionPointer\n- uid: System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)\n  commentId: M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 263\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      protected override void Dispose(bool disposing)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  overridden: System.IO.Stream.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.Dispose(Boolean)\n- uid: System.IO.UnmanagedMemoryStream.Flush\n  commentId: M:System.IO.UnmanagedMemoryStream.Flush\n  id: Flush\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.IO.UnmanagedMemoryStream.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Flush\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 275\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Overrides the <xref href=\\\"System.IO.Stream.Flush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method so that no action is performed.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.Stream.Flush\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.Flush()\n- uid: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)\n  commentId: M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)\n  id: FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FlushAsync\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 279\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Overrides the <xref href=\\\"System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method so that the operation is cancelled if specified, but no other action is performed.</p>\\n<p>Available starting in .NET Framework 4.6</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task FlushAsync(CancellationToken cancellationToken)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function FlushAsync(cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests. The default value is <xref href=\\\"System.Threading.CancellationToken.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous flush operation.</p>\\n\"\n  overridden: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.FlushAsync(CancellationToken)\n- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  id: Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Initialize(Byte*, Int64, Int64, FileAccess)\n  fullName: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*, System.Int64, System.Int64, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Initialize\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 210\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using a pointer to an unmanaged memory location.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [CLSCompliant(false)]\n\n      protected void Initialize(byte *pointer, long length, long capacity, FileAccess access)\n    content.vb: >-\n      <SecurityCritical>\n\n      <CLSCompliant(False)>\n\n      Protected Sub Initialize(pointer As Byte *, length As Long, capacity As Long, access As FileAccess)\n    parameters:\n    - id: pointer\n      type: System.Byte*\n      description: \"\\n<p>A pointer to an unmanaged memory location.</p>\\n\"\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length of the memory to use.</p>\\n\"\n    - id: capacity\n      type: System.Int64\n      description: \"\\n<p>The total amount of memory assigned to the stream.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the required permission.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>pointer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>length</em> value is less than zero.</p>\\n<p>- or - </p>\\n<p>The <em>capacity</em> value is less than zero.</p>\\n<p>- or -</p>\\n<p>The <em>length</em> value is large enough to cause an overflow.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n    commentId: F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: UnmanagedMemoryStream.Initialize(Byte*, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  id: Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Initialize\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 129\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class in a safe buffer with a specified offset, length, and file access.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      protected void Initialize(SafeBuffer buffer, long offset, long length, FileAccess access)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Protected Sub Initialize(buffer As SafeBuffer, offset As Long, length As Long, access As FileAccess)\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: \"\\n<p>The buffer to contain the unmanaged memory stream.</p>\\n\"\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The byte position in the buffer at which to start the unmanaged memory stream.</p>\\n\"\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length of the unmanaged memory stream.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>The mode of file access to the unmanaged memory stream.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: UnmanagedMemoryStream.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.UnmanagedMemoryStream.Read(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Read\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 379\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads the specified number of bytes into the specified array.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int Read([In, Out] byte[] buffer, int offset, int count)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>When this method returns, contains the specified byte array with the values between <em>offset</em> and (<em>offset</em> + <em>count</em> - 1) replaced by the bytes read from the current source. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.InAttribute\n        ctor: System.Runtime.InteropServices.InAttribute.#ctor\n        arguments: []\n      - type: System.Runtime.InteropServices.OutAttribute\n        ctor: System.Runtime.InteropServices.OutAttribute.#ctor\n        arguments: []\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based byte offset in <em>buffer</em> at which to begin storing the data read from the current stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to read from the current stream.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</p>\\n\"\n  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The underlying memory does not support reading.</p>\\n<p>- or - </p>\\n<p>The <xref href=\\\"System.IO.UnmanagedMemoryStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <strong>false</strong>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> parameter is set to <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>offset</em> parameter is less than zero. </p>\\n<p>- or - </p>\\n<p>The <em>count</em> parameter is less than zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of the buffer array minus the <em>offset</em> parameter is less than the <em>count</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.UnmanagedMemoryStream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  nameWithType: UnmanagedMemoryStream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: UnmanagedMemoryStream.Read(Byte(), Int32, Int32)\n- uid: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadAsync\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 433\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Asynchronously reads the specified number of bytes into the specified array.</p>\\n<p>Available starting in .NET Framework 4.6</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer to write the data into.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>buffer</em> at which to begin writing data from the stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to read.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests. The default value is <xref href=\\\"System.Threading.CancellationToken.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>A task that represents the asynchronous read operation. The value of the <em>TResult</em> parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</p>\\n\"\n  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: UnmanagedMemoryStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: UnmanagedMemoryStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.UnmanagedMemoryStream.ReadByte\n  commentId: M:System.IO.UnmanagedMemoryStream.ReadByte\n  id: ReadByte\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: ReadByte()\n  fullName: System.IO.UnmanagedMemoryStream.ReadByte()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadByte\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 462\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a byte from a stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int ReadByte()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ReadByte As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The unsigned byte cast to an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object, or -1 if at the end of the stream.</p>\\n\"\n  overridden: System.IO.Stream.ReadByte\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The underlying memory does not support reading.</p>\\n<p>- or -</p>\\n<p>The current position is at the end of the stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.ReadByte()\n- uid: System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.UnmanagedMemoryStream.Seek(System.Int64, System.IO.SeekOrigin)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Seek\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 496\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Sets the current position of the current stream to the given value.</p>\\n\"\n  syntax:\n    content: public override long Seek(long offset, SeekOrigin loc)\n    content.vb: Public Overrides Function Seek(offset As Long, loc As SeekOrigin) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The point relative to <em>origin</em> to begin seeking from. </p>\\n\"\n    - id: loc\n      type: System.IO.SeekOrigin\n      description: \"\\n<p>Specifies the beginning, the end, or the current position as a reference point for <em>origin</em>, using a value of type <xref href=\\\"System.IO.SeekOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The new position in the stream.</p>\\n\"\n  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An attempt was made to seek before the beginning of the stream.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>offset</em> value is larger than the maximum size of the stream.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>loc</em> is invalid.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.UnmanagedMemoryStream.SetLength(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.IO.UnmanagedMemoryStream.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLength\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 530\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Sets the length of a stream to a specified value.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override void SetLength(long value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The length of the stream.</p>\\n\"\n  overridden: System.IO.Stream.SetLength(System.Int64)\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error has occurred. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The underlying memory does not support writing.</p>\\n<p>- or -</p>\\n<p>An attempt is made to write to the stream and the <xref href=\\\"System.IO.UnmanagedMemoryStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The specified <em>value</em> exceeds the capacity of the stream.</p>\\n<p>- or -</p>\\n<p>The specified <em>value</em> is negative.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.SetLength(Int64)\n- uid: System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.UnmanagedMemoryStream.Write(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 556\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a block of bytes to the current stream using data from a buffer.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override void Write(byte[] buffer, int offset, int count)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The byte array from which to copy bytes to the current stream.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The offset in the buffer at which to begin copying bytes to the current stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to write to the current stream.</p>\\n\"\n  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The underlying memory does not support writing. </p>\\n<p>- or -</p>\\n<p>An attempt is made to write to the stream and the <xref href=\\\"System.IO.UnmanagedMemoryStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n<p>- or -</p>\\n<p>The <em>count</em> value is greater than the capacity of the stream.</p>\\n<p>- or -</p>\\n<p>The position is at the end of the stream capacity.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurs. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>One of the specified parameters is less than zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>offset</em> parameter minus the length of the <em>buffer</em> parameter is less than the <em>count</em> parameter.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.UnmanagedMemoryStream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  nameWithType: UnmanagedMemoryStream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: UnmanagedMemoryStream.Write(Byte(), Int32, Int32)\n- uid: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 627\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</p>\\n<p>Available starting in .NET Framework 4.6</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer to write data from.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based byte offset in <em>buffer</em> from which to begin copying bytes to the stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to write.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests. The default value is <xref href=\\\"System.Threading.CancellationToken.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: UnmanagedMemoryStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: UnmanagedMemoryStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)\n  commentId: M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)\n  id: WriteByte(System.Byte)\n  parent: System.IO.UnmanagedMemoryStream\n  langs:\n  - csharp\n  - vb\n  name: WriteByte(Byte)\n  fullName: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteByte\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryStream.cs\n    startLine: 657\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a byte to the current position in the file stream.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override void WriteByte(byte value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Sub WriteByte(value As Byte)\n    parameters:\n    - id: value\n      type: System.Byte\n      description: \"\\n<p>A byte value written to the stream.</p>\\n\"\n  overridden: System.IO.Stream.WriteByte(System.Byte)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The underlying memory does not support writing.</p>\\n<p>- or -</p>\\n<p>An attempt is made to write to the stream and the <xref href=\\\"System.IO.UnmanagedMemoryStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n<p>- or - </p>\\n<p>The current position is at the end of the capacity of the stream.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The supplied <em>value</em> causes the stream exceed its maximum capacity.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UnmanagedMemoryStream.WriteByte(Byte)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  fullName: System.IO.Stream.Null\n  nameWithType: Stream.Null\n  commentId: F:System.IO.Stream.Null\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyToAsync(Stream)\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyTo(Stream)\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyTo(Stream, Int32)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: true\n  name: Close()\n  fullName: System.IO.Stream.Close()\n  spec.csharp:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.Close()\n  commentId: M:System.IO.Stream.Close\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.Stream.Dispose()\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.Dispose()\n  commentId: M:System.IO.Stream.Dispose\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.FlushAsync()\n  commentId: M:System.IO.Stream.FlushAsync\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: true\n  name: CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  spec.csharp:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.CreateWaitHandle()\n  commentId: M:System.IO.Stream.CreateWaitHandle\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.EndRead(IAsyncResult)\n  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.EndWrite(IAsyncResult)\n  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Synchronized(Stream)\n  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: true\n  name: ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  spec.csharp:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.ObjectInvariant()\n  commentId: M:System.IO.Stream.ObjectInvariant\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  nameWithType: Stream.CanTimeout\n  commentId: P:System.IO.Stream.CanTimeout\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  commentId: P:System.IO.Stream.ReadTimeout\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  commentId: P:System.IO.Stream.WriteTimeout\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  name: AsInputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  name: AsOutputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  name: AsRandomAccessStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  isExternal: true\n  name: AsInputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions\n  parent: System.IO\n  isExternal: false\n  name: WindowsRuntimeStreamExtensions\n  fullName: System.IO.WindowsRuntimeStreamExtensions\n  nameWithType: WindowsRuntimeStreamExtensions\n  commentId: T:System.IO.WindowsRuntimeStreamExtensions\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  isExternal: true\n  name: AsOutputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  isExternal: true\n  name: AsRandomAccessStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n- uid: System.Byte*\n  name: Byte*\n  fullName: System.Byte*\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '*'\n    fullName: '*'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '*'\n    fullName: '*'\n  nameWithType: Byte*\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  fullName: System.IO.FileAccess\n  nameWithType: FileAccess\n  commentId: T:System.IO.FileAccess\n- uid: System.Runtime.InteropServices.SafeBuffer\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeBuffer\n  fullName: System.Runtime.InteropServices.SafeBuffer\n  nameWithType: SafeBuffer\n  commentId: T:System.Runtime.InteropServices.SafeBuffer\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  fullName: System.IO.Stream.CanRead\n  nameWithType: Stream.CanRead\n  commentId: P:System.IO.Stream.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  fullName: System.IO.Stream.CanSeek\n  nameWithType: Stream.CanSeek\n  commentId: P:System.IO.Stream.CanSeek\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  fullName: System.IO.Stream.CanWrite\n  nameWithType: Stream.CanWrite\n  commentId: P:System.IO.Stream.CanWrite\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  fullName: System.IO.Stream.Length\n  nameWithType: Stream.Length\n  commentId: P:System.IO.Stream.Length\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  fullName: System.IO.Stream.Position\n  nameWithType: Stream.Position\n  commentId: P:System.IO.Stream.Position\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Dispose(Boolean)\n  commentId: M:System.IO.Stream.Dispose(System.Boolean)\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.Stream.Flush()\n  spec.csharp:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.Flush()\n  commentId: M:System.IO.Stream.Flush\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  nameWithType: CancellationToken\n  commentId: T:System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  nameWithType: Task\n  commentId: T:System.Threading.Tasks.Task\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n  commentId: T:System.Threading.Tasks.Task`1\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  spec.csharp:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.ReadByte()\n  commentId: M:System.IO.Stream.ReadByte\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)\n  spec.csharp:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  nameWithType: Stream.Seek(Int64, SeekOrigin)\n  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  fullName: System.IO.SeekOrigin\n  nameWithType: SeekOrigin\n  commentId: T:System.IO.SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: true\n  name: SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(System.Int64)\n  spec.csharp:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.SetLength(Int64)\n  commentId: M:System.IO.Stream.SetLength(System.Int64)\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(System.Byte)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.WriteByte(Byte)\n  commentId: M:System.IO.Stream.WriteByte(System.Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.IndexOutOfRangeException\n  isExternal: false\n  name: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  commentId: T:System.IndexOutOfRangeException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}