{"nodes":[{"pos":[332,359],"content":"StatementCompletedEventArgs","needQuote":true,"nodes":[{"content":"StatementCompletedEventArgs","pos":[0,27]}]},{"pos":[1959,1993],"content":"StatementCompletedEventArgs(Int32)","needQuote":true,"nodes":[{"content":"StatementCompletedEventArgs(Int32)","pos":[0,34]}]},{"pos":[3411,3422],"content":"RecordCount","needQuote":true,"nodes":[{"content":"RecordCount","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The number of rows affected.&lt;/p&gt;\\n&lt;p&gt;&lt;/p&gt;\\n","pos":[4279,4327],"source":"\\n<p>The number of rows affected.</p>\\n<p></p>\\n"},{"pos":[4523,4534],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[4680,4686],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4834,4843],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[5015,5020],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[5207,5217],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5312,5320],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5389,5390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5417,5418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5488,5496],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5565,5566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5593,5594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5777,5791],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5910,5916],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5983,5984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6034,6040],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6100,6101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6184,6190],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6257,6258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6308,6314],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6374,6375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6589,6611],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6759,6765],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6832,6833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6883,6889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6950,6951]},{"pos":[7006,7012],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7072,7073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7170,7176],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7243,7244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7294,7300],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7361,7362]},{"pos":[7417,7423],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7483,7484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7729,7760],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7926,7941],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8017,8018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8068,8074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8135,8136]},{"pos":[8191,8197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8257,8258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8364,8379],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8455,8456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8506,8512],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8573,8574]},{"pos":[8629,8635],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8695,8696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8926,8939],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9040,9051],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9123,9124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9151,9152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9225,9236],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9308,9309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9336,9337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9512,9521],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9614,9621],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9689,9690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9717,9718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9787,9794],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9862,9863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9890,9891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10066,10083],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10192,10207],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10283,10284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10311,10312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10389,10404],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10480,10481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10508,10509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10654,10660],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10790,10795],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Data.StatementCompletedEventArgs\n  commentId: T:System.Data.StatementCompletedEventArgs\n  id: StatementCompletedEventArgs\n  parent: System.Data\n  children:\n  - System.Data.StatementCompletedEventArgs.#ctor(System.Int32)\n  - System.Data.StatementCompletedEventArgs.RecordCount\n  langs:\n  - csharp\n  - vb\n  name: StatementCompletedEventArgs\n  fullName: System.Data.StatementCompletedEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/RecordsAffectedEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StatementCompletedEventArgs\n    path: src/System.Data.SqlClient/src/System/Data/RecordsAffectedEventArgs.cs\n    startLine: 11\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data\n  summary: \"\\n<p>Provides additional information for the <xref href=\\\"System.Data.SqlClient.SqlCommand.StatementCompleted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: 'public sealed class StatementCompletedEventArgs : EventArgs'\n    content.vb: >-\n      Public NotInheritable Class StatementCompletedEventArgs\n          Inherits EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: StatementCompletedEventArgs\n- uid: System.Data.StatementCompletedEventArgs.#ctor(System.Int32)\n  commentId: M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Data.StatementCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: StatementCompletedEventArgs(Int32)\n  fullName: System.Data.StatementCompletedEventArgs.StatementCompletedEventArgs(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/RecordsAffectedEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/RecordsAffectedEventArgs.cs\n    startLine: 15\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Data.StatementCompletedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public StatementCompletedEventArgs(int recordCount)\n    content.vb: Public Sub New(recordCount As Integer)\n    parameters:\n    - id: recordCount\n      type: System.Int32\n      description: \"\\n<p>Indicates the number of rows affected by the statement that caused the <xref href=\\\"System.Data.SqlClient.SqlCommand.StatementCompleted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  event to occur.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StatementCompletedEventArgs.StatementCompletedEventArgs(Int32)\n- uid: System.Data.StatementCompletedEventArgs.RecordCount\n  commentId: P:System.Data.StatementCompletedEventArgs.RecordCount\n  id: RecordCount\n  parent: System.Data.StatementCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: RecordCount\n  fullName: System.Data.StatementCompletedEventArgs.RecordCount\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/RecordsAffectedEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecordCount\n    path: src/System.Data.SqlClient/src/System/Data/RecordsAffectedEventArgs.cs\n    startLine: 20\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data\n  summary: \"\\n<p>Indicates the number of rows affected by the statement that caused the <xref href=\\\"System.Data.SqlClient.SqlCommand.StatementCompleted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event to occur.</p>\\n\"\n  syntax:\n    content: public int RecordCount { get; }\n    content.vb: Public ReadOnly Property RecordCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of rows affected.</p>\\n<p></p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: StatementCompletedEventArgs.RecordCount\nreferences:\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}