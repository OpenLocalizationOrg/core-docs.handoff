{"nodes":[{"pos":[654,675],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[2463,2486],"content":"FileNotFoundException()","needQuote":true,"nodes":[{"content":"FileNotFoundException()","pos":[0,23]}]},{"pos":[3577,3606],"content":"FileNotFoundException(String)","needQuote":true,"nodes":[{"content":"FileNotFoundException(String)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A description of the error.","pos":[4460,4492],"source":"\\n<p>A description of the error."},{"content":"The content of &lt;em&gt;message&lt;/em&gt; is intended to be understood by humans.","pos":[4493,4564],"source":" The content of <em>message</em> is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[4565,4685]},{"content":"&lt;/p&gt;\\n","pos":[4686,4692],"source":" </p>\\n"},{"pos":[5105,5145],"content":"FileNotFoundException(String, Exception)","needQuote":true,"nodes":[{"content":"FileNotFoundException(String, Exception)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;A description of the error.","pos":[6088,6120],"source":"\\n<p>A description of the error."},{"content":"The content of &lt;em&gt;message&lt;/em&gt; is intended to be understood by humans.","pos":[6121,6192],"source":" The content of <em>message</em> is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[6193,6313]},{"content":"&lt;/p&gt;\\n","pos":[6314,6320],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[6396,6458],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[6459,6629],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[6630,6636],"source":" </p>\\n"},{"pos":[7123,7160],"content":"FileNotFoundException(String, String)","needQuote":true,"nodes":[{"content":"FileNotFoundException(String, String)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;A description of the error.","pos":[8114,8146],"source":"\\n<p>A description of the error."},{"content":"The content of &lt;em&gt;message&lt;/em&gt; is intended to be understood by humans.","pos":[8147,8218],"source":" The content of <em>message</em> is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[8219,8339]},{"content":"&lt;/p&gt;\\n","pos":[8340,8346],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The full name of the file with the invalid image.","pos":[8413,8467],"source":"\\n<p>The full name of the file with the invalid image."},{"content":"&lt;/p&gt;\\n","pos":[8468,8474],"source":" </p>\\n"},{"pos":[8937,8985],"content":"FileNotFoundException(String, String, Exception)","needQuote":true,"nodes":[{"content":"FileNotFoundException(String, String, Exception)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[9980,10046],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[10047,10053],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The full name of the file with the invalid image.","pos":[10120,10174],"source":"\\n<p>The full name of the file with the invalid image."},{"content":"&lt;/p&gt;\\n","pos":[10175,10181],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[10257,10319],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[10320,10490],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[10491,10497],"source":" </p>\\n"},{"pos":[10912,10920],"content":"FileName","needQuote":true,"nodes":[{"content":"FileName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The name of the file, or &lt;strong&gt;null&lt;/strong&gt; if no file name was passed to the constructor for this instance.&lt;/p&gt;\\n","pos":[11565,11687],"source":"\\n<p>The name of the file, or <strong>null</strong> if no file name was passed to the constructor for this instance.</p>\\n"},{"pos":[12008,12015],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The error message.&lt;/p&gt;\\n","pos":[12694,12723],"source":"\\n<p>The error message.</p>\\n"},{"pos":[13112,13122],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.&lt;/p&gt;\\n","pos":[13840,13979],"source":"\\n<p>The fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</p>\\n"},{"pos":[14212,14221],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[14361,14367],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14515,14524],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[14689,14700],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[14884,14888],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[15079,15087],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[15289,15296],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[15502,15516],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[15735,15741],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[15940,15950],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[16167,16185],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[16302,16318],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[16377,16378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16405,16406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16487,16503],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[16562,16563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16590,16591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16796,16810],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16929,16935],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17002,17003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17053,17059],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17119,17120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17203,17209],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17276,17277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17327,17333],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17393,17394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17608,17630],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17778,17784],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17851,17852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17902,17908],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17969,17970]},{"pos":[18025,18031],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18091,18092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18189,18195],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18262,18263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18313,18319],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18380,18381]},{"pos":[18436,18442],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18502,18503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18748,18779],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18945,18960],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19036,19037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19087,19093],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19154,19155]},{"pos":[19210,19216],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19276,19277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19383,19398],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19474,19475],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19525,19531],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19592,19593]},{"pos":[19648,19654],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19714,19715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19945,19958],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20059,20070],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20142,20143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20170,20171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20244,20255],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20327,20328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20355,20356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20531,20540],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20633,20640],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20708,20709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20736,20737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20806,20813],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20881,20882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20909,20910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21085,21102],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21211,21226],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21302,21303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21330,21331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21408,21423],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21499,21500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21527,21528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21673,21679],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21810,21816],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21982,21989],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[22189,22199],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22300,22308],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22359,22360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22387,22388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22461,22469],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22520,22521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22548,22549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.IO.FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n  id: FileNotFoundException\n  parent: System.IO\n  children:\n  - System.IO.FileNotFoundException.#ctor\n  - System.IO.FileNotFoundException.#ctor(System.String)\n  - System.IO.FileNotFoundException.#ctor(System.String,System.Exception)\n  - System.IO.FileNotFoundException.#ctor(System.String,System.String)\n  - System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)\n  - System.IO.FileNotFoundException.FileName\n  - System.IO.FileNotFoundException.Message\n  - System.IO.FileNotFoundException.ToString\n  langs:\n  - csharp\n  - vb\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FileNotFoundException\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>The exception that is thrown when an attempt to access a file that does not exist on disk fails.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class FileNotFoundException : IOException, ISerializable, _Exception\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class FileNotFoundException\n          Inherits IOException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.IO.IOException\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: FileNotFoundException\n- uid: System.IO.FileNotFoundException.#ctor\n  commentId: M:System.IO.FileNotFoundException.#ctor\n  id: '#ctor'\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: FileNotFoundException()\n  fullName: System.IO.FileNotFoundException.FileNotFoundException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_FILENOTFOUND.</p>\\n\"\n  syntax:\n    content: public FileNotFoundException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileNotFoundException.FileNotFoundException()\n- uid: System.IO.FileNotFoundException.#ctor(System.String)\n  commentId: M:System.IO.FileNotFoundException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: FileNotFoundException(String)\n  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its message string set to <em>message</em> and its HRESULT set to COR_E_FILENOTFOUND.</p>\\n\"\n  syntax:\n    content: public FileNotFoundException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A description of the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileNotFoundException.FileNotFoundException(String)\n- uid: System.IO.FileNotFoundException.#ctor(System.String,System.Exception)\n  commentId: M:System.IO.FileNotFoundException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: FileNotFoundException(String, Exception)\n  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public FileNotFoundException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A description of the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileNotFoundException.FileNotFoundException(String, Exception)\n- uid: System.IO.FileNotFoundException.#ctor(System.String,System.String)\n  commentId: M:System.IO.FileNotFoundException.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: FileNotFoundException(String, String)\n  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 46\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its message string set to <em>message</em>, specifying the file name that cannot be found, and its HRESULT set to COR_E_FILENOTFOUND.</p>\\n\"\n  syntax:\n    content: public FileNotFoundException(string message, string fileName)\n    content.vb: Public Sub New(message As String, fileName As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A description of the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The full name of the file with the invalid image. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileNotFoundException.FileNotFoundException(String, String)\n- uid: System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)\n  commentId: M:System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)\n  id: '#ctor(System.String,System.String,System.Exception)'\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: FileNotFoundException(String, String, Exception)\n  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String, System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public FileNotFoundException(string message, string fileName, Exception innerException)\n    content.vb: Public Sub New(message As String, fileName As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The full name of the file with the invalid image. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileNotFoundException.FileNotFoundException(String, String, Exception)\n- uid: System.IO.FileNotFoundException.FileName\n  commentId: P:System.IO.FileNotFoundException.FileName\n  id: FileName\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: FileName\n  fullName: System.IO.FileNotFoundException.FileName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FileName\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 78\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Gets the name of the file that cannot be found.</p>\\n\"\n  syntax:\n    content: public string FileName { get; }\n    content.vb: Public ReadOnly Property FileName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the file, or <strong>null</strong> if no file name was passed to the constructor for this instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileNotFoundException.FileName\n- uid: System.IO.FileNotFoundException.Message\n  commentId: P:System.IO.FileNotFoundException.Message\n  id: Message\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.IO.FileNotFoundException.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 58\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Gets the error message that explains the reason for the exception.</p>\\n\"\n  syntax:\n    content: public override string Message { get; }\n    content.vb: Public Overrides ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The error message.</p>\\n\"\n  overridden: System.Exception.Message\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: FileNotFoundException.Message\n- uid: System.IO.FileNotFoundException.ToString\n  commentId: M:System.IO.FileNotFoundException.ToString\n  id: ToString\n  parent: System.IO.FileNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.IO.FileNotFoundException.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/IO/FileNotFoundException.cs\n    startLine: 82\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</p>\\n\"\n  overridden: System.Exception.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileNotFoundException.ToString()\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n"}