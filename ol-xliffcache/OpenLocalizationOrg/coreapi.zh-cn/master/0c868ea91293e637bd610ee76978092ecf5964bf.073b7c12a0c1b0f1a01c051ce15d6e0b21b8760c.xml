{"nodes":[{"pos":[4413,4437],"content":"SortedList<TKey, TValue>","needQuote":true,"nodes":[{"content":"SortedList&lt;TKey, TValue&gt;","pos":[0,24],"source":"SortedList<TKey, TValue>"}]},{"content":"\\n&lt;p&gt;The type of keys in the collection.&lt;/p&gt;\\n","pos":[6025,6071],"source":"\\n<p>The type of keys in the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The type of values in the collection.&lt;/p&gt;\\n","pos":[6110,6158],"source":"\\n<p>The type of values in the collection.</p>\\n"},{"pos":[37566,37578],"content":"SortedList()","needQuote":true,"nodes":[{"content":"SortedList()","pos":[0,12]}]},{"pos":[39301,39328],"content":"SortedList(IComparer<TKey>)","needQuote":true,"nodes":[{"content":"SortedList(IComparer&lt;TKey&gt;)","pos":[0,27],"source":"SortedList(IComparer<TKey>)"}]},{"pos":[41849,41886],"content":"SortedList(IDictionary<TKey, TValue>)","needQuote":true,"nodes":[{"content":"SortedList(IDictionary&lt;TKey, TValue&gt;)","pos":[0,37],"source":"SortedList(IDictionary<TKey, TValue>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[43553,43611],"source":"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; contains one or more duplicate keys.&lt;/p&gt;\\n","pos":[43708,43777],"source":"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n"},{"pos":[45044,45098],"content":"SortedList(IDictionary<TKey, TValue>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"SortedList(IDictionary&lt;TKey, TValue&gt;, IComparer&lt;TKey&gt;)","pos":[0,54],"source":"SortedList(IDictionary<TKey, TValue>, IComparer<TKey>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[47310,47368],"source":"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; contains one or more duplicate keys.&lt;/p&gt;\\n","pos":[47465,47534],"source":"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n"},{"pos":[48788,48805],"content":"SortedList(Int32)","needQuote":true,"nodes":[{"content":"SortedList(Int32)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;capacity&lt;/em&gt; is less than zero.&lt;/p&gt;\\n","pos":[50091,50140],"source":"\\n<p>\\n<em>capacity</em> is less than zero.</p>\\n"},{"pos":[51186,51220],"content":"SortedList(Int32, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"SortedList(Int32, IComparer&lt;TKey&gt;)","pos":[0,34],"source":"SortedList(Int32, IComparer<TKey>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;capacity&lt;/em&gt; is less than zero.&lt;/p&gt;\\n","pos":[53052,53101],"source":"\\n<p>\\n<em>capacity</em> is less than zero.</p>\\n"},{"pos":[54227,54235],"content":"Capacity","needQuote":true,"nodes":[{"content":"Capacity","pos":[0,8]}]},{"content":"\\n&lt;p&gt;There is not enough memory available on the system.&lt;/p&gt;\\n","pos":[55709,55771],"source":"\\n<p>There is not enough memory available on the system.</p>\\n"},{"pos":[56511,56519],"content":"Comparer","needQuote":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[58060,58065],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[59921,59931],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The key whose value to get or set.&lt;/p&gt;\\n","pos":[60664,60709],"source":"\\n<p>The key whose value to get or set.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[61175,61226],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The property is retrieved and &lt;em&gt;key&lt;/em&gt; does not exist in the collection.&lt;/p&gt;\\n","pos":[61369,61456],"source":"\\n<p>The property is retrieved and <em>key</em> does not exist in the collection.</p>\\n"},{"pos":[62261,62265],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[64359,64409],"content":"ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.IsReadOnly","pos":[0,50],"source":"ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly"}]},{"pos":[66520,66550],"content":"IDictionary<TKey, TValue>.Keys","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Keys","pos":[0,30],"source":"IDictionary<TKey, TValue>.Keys"}]},{"pos":[68333,68365],"content":"IDictionary<TKey, TValue>.Values","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Values","pos":[0,32],"source":"IDictionary<TKey, TValue>.Values"}]},{"pos":[70192,70230],"content":"IReadOnlyDictionary<TKey, TValue>.Keys","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;.Keys","pos":[0,38],"source":"IReadOnlyDictionary<TKey, TValue>.Keys"}]},{"pos":[72117,72157],"content":"IReadOnlyDictionary<TKey, TValue>.Values","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;.Values","pos":[0,40],"source":"IReadOnlyDictionary<TKey, TValue>.Values"}]},{"pos":[74007,74033],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[76332,76352],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[78545,78568],"content":"IDictionary.IsFixedSize","needQuote":true,"nodes":[{"content":"IDictionary.IsFixedSize","pos":[0,23]}]},{"pos":[80914,80936],"content":"IDictionary.IsReadOnly","needQuote":true,"nodes":[{"content":"IDictionary.IsReadOnly","pos":[0,22]}]},{"pos":[83291,83315],"content":"IDictionary.Item[Object]","needQuote":true,"nodes":[{"content":"IDictionary.Item[Object]","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The key of the element to get or set.&lt;/p&gt;\\n","pos":[84195,84243],"source":"\\n<p>The key of the element to get or set.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[84724,84775],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[86391,86407],"content":"IDictionary.Keys","needQuote":true,"nodes":[{"content":"IDictionary.Keys","pos":[0,16]}]},{"pos":[88724,88742],"content":"IDictionary.Values","needQuote":true,"nodes":[{"content":"IDictionary.Values","pos":[0,18]}]},{"pos":[90976,90982],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[92786,92803],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The key of the element to add.&lt;/p&gt;\\n","pos":[93637,93678],"source":"\\n<p>The key of the element to add.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the element to add.","pos":[93739,93776],"source":"\\n<p>The value of the element to add."},{"content":"The value can be &lt;strong&gt;null&lt;/strong&gt; for reference types.&lt;/p&gt;\\n","pos":[93777,93842],"source":" The value can be <strong>null</strong> for reference types.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[93961,94012],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[95245,95252],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[96996,97013],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[98381,98432],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[99424,99445],"content":"ContainsValue(TValue)","needQuote":true,"nodes":[{"content":"ContainsValue(TValue)","pos":[0,21]}]},{"pos":[101592,101607],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[103523,103539],"content":"IndexOfKey(TKey)","needQuote":true,"nodes":[{"content":"IndexOfKey(TKey)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[104906,104957],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[105761,105781],"content":"IndexOfValue(TValue)","needQuote":true,"nodes":[{"content":"IndexOfValue(TValue)","pos":[0,20]}]},{"pos":[107964,107976],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The key of the element to remove.&lt;/p&gt;\\n","pos":[108793,108837],"source":"\\n<p>The key of the element to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[109322,109373],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[110393,110408],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The zero-based index of the element to remove.&lt;/p&gt;\\n","pos":[111235,111292],"source":"\\n<p>The zero-based index of the element to remove.</p>\\n"},{"pos":[112945,113016],"content":"ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Add(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,71],"source":"ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)"}]},{"pos":[115632,115708],"content":"ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Contains(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,76],"source":"ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)"}]},{"pos":[118468,118551],"content":"ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.CopyTo(KeyValuePair&lt;TKey, TValue&gt;[], Int32)","pos":[0,83],"source":"ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)"}]},{"pos":[121335,121409],"content":"ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Remove(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,74],"source":"ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)"}]},{"pos":[123981,124036],"content":"IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.GetEnumerator()","pos":[0,55],"source":"IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()"}]},{"pos":[126262,126294],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[127944,127997],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;arrayIndex&lt;/em&gt; is less than zero.&lt;/p&gt;\\n","pos":[128114,128165],"source":"\\n<p>\\n<em>arrayIndex</em> is less than zero.</p>\\n"},{"pos":[129874,129905],"content":"IDictionary.Add(Object, Object)","needQuote":true,"nodes":[{"content":"IDictionary.Add(Object, Object)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[131313,131364],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[132986,133014],"content":"IDictionary.Contains(Object)","needQuote":true,"nodes":[{"content":"IDictionary.Contains(Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[134493,134544],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[135603,135630],"content":"IDictionary.GetEnumerator()","needQuote":true,"nodes":[{"content":"IDictionary.GetEnumerator()","pos":[0,27]}]},{"pos":[137920,137946],"content":"IDictionary.Remove(Object)","needQuote":true,"nodes":[{"content":"IDictionary.Remove(Object)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The key of the element to remove.&lt;/p&gt;\\n","pos":[138877,138921],"source":"\\n<p>The key of the element to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[139040,139091],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[140140,140167],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[142055,142067],"content":"TrimExcess()","needQuote":true,"nodes":[{"content":"TrimExcess()","pos":[0,12]}]},{"pos":[143736,143765],"content":"TryGetValue(TKey, out TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, out TValue)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The key whose value to get.&lt;/p&gt;\\n","pos":[144552,144590],"source":"\\n<p>The key whose value to get.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;em&gt;value&lt;/em&gt; parameter.","pos":[144651,144822],"source":"\\n<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <em>value</em> parameter."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[144823,144868],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[145268,145319],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[146509,146535],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[146726,146732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[146974,146999],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[147251,147262],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[147347,147348],"content":"<","needQuote":true,"nodes":[]},{"pos":[147375,147379],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[147410,147411]},{"pos":[147443,147449],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[147574,147585],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[147671,147674]},{"pos":[147708,147712],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[147743,147744]},{"pos":[147776,147782],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[147814,147815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148187,148226],"content":"ICollection<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"ICollection<KeyValuePair<TKey, TValue>>"}]},{"pos":[148580,148591],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[148655,148656],"content":"<","needQuote":true,"nodes":[]},{"pos":[148734,148746],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[148811,148812],"content":"<","needQuote":true,"nodes":[]},{"pos":[148839,148843],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[148874,148875]},{"pos":[148907,148913],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[149070,149081],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[149146,149149]},{"pos":[149234,149246],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[149312,149315]},{"pos":[149349,149353],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[149384,149385]},{"pos":[149417,149423],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[149455,149456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149483,149484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149903,149936],"content":"IReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,33],"source":"IReadOnlyDictionary<TKey, TValue>"}]},{"pos":[150220,150239],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"pos":[150332,150333],"content":"<","needQuote":true,"nodes":[]},{"pos":[150360,150364],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[150395,150396]},{"pos":[150428,150434],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[150567,150586],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"content":"(Of","pos":[150680,150683]},{"pos":[150717,150721],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[150752,150753]},{"pos":[150785,150791],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[150823,150824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151236,151283],"content":"IReadOnlyCollection<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,47],"source":"IReadOnlyCollection<KeyValuePair<TKey, TValue>>"}]},{"pos":[151669,151688],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[151760,151761],"content":"<","needQuote":true,"nodes":[]},{"pos":[151839,151851],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[151916,151917],"content":"<","needQuote":true,"nodes":[]},{"pos":[151944,151948],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[151979,151980]},{"pos":[152012,152018],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[152183,152202],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[152275,152278]},{"pos":[152363,152375],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[152441,152444]},{"pos":[152478,152482],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[152513,152514]},{"pos":[152546,152552],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[152584,152585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152612,152613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153081,153120],"content":"IEnumerable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"IEnumerable<KeyValuePair<TKey, TValue>>"}]},{"pos":[153474,153485],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[153549,153550],"content":"<","needQuote":true,"nodes":[]},{"pos":[153628,153640],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[153705,153706],"content":"<","needQuote":true,"nodes":[]},{"pos":[153733,153737],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[153768,153769]},{"pos":[153801,153807],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[153964,153975],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[154040,154043]},{"pos":[154128,154140],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[154206,154209]},{"pos":[154243,154247],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[154278,154279]},{"pos":[154311,154317],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[154349,154350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154377,154378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154713,154724],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[154937,154948],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[155161,155172],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[155371,155381],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[155476,155484],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[155553,155554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155581,155582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155652,155660],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[155729,155730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155757,155758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155941,155955],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[156074,156080],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[156147,156148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156198,156204],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156264,156265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156348,156354],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[156421,156422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156472,156478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156538,156539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156753,156775],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[156923,156929],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[156996,156997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157047,157053],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[157114,157115]},{"pos":[157170,157176],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157236,157237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157334,157340],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[157407,157408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157458,157464],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[157525,157526]},{"pos":[157581,157587],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157647,157648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157893,157924],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[158090,158105],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[158181,158182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158232,158238],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[158299,158300]},{"pos":[158355,158361],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[158421,158422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158528,158543],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[158619,158620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158670,158676],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[158737,158738]},{"pos":[158793,158799],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[158859,158860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159090,159103],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[159204,159215],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[159287,159288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159315,159316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159389,159400],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[159472,159473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159500,159501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159676,159685],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[159778,159785],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[159853,159854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159881,159882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159951,159958],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[160026,160027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160054,160055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160230,160247],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[160356,160371],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[160447,160448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160475,160476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160553,160568],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[160644,160645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160672,160673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160968,160981],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[161098,161109],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[161168,161169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161196,161197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161278,161289],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[161348,161349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161376,161377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161782,161823],"content":"AsQueryable<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,41],"source":"AsQueryable<KeyValuePair<TKey, TValue>>()"}]},{"pos":[162169,162208],"content":"AsQueryable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"AsQueryable<KeyValuePair<TKey, TValue>>"}]},{"pos":[162322,162323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162350,162351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162435,162480],"content":"AsQueryable(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsQueryable(Of KeyValuePair(Of TKey, TValue))","pos":[0,45]}]},{"pos":[162600,162601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162628,162629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163105,163117],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[163250,163260],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[163327,163328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163355,163356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163445,163455],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[163522,163523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163550,163551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163997,164037],"content":"AsParallel<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,40],"source":"AsParallel<KeyValuePair<TKey, TValue>>()"}]},{"pos":[164406,164444],"content":"AsParallel<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsParallel&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,38],"source":"AsParallel<KeyValuePair<TKey, TValue>>"}]},{"pos":[164566,164567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164594,164595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164687,164731],"content":"AsParallel(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsParallel(Of KeyValuePair(Of TKey, TValue))","pos":[0,44]}]},{"pos":[164859,164860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164887,164888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165647,165774],"content":"Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, KeyValuePair&lt;TKey, TValue&gt;, KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,127],"source":"Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)"}]},{"pos":[166605,166642],"content":"Aggregate<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Aggregate<KeyValuePair<TKey, TValue>>"}]},{"pos":[166755,166756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166806,166810],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[166868,166869],"content":"<","needQuote":true,"nodes":[]},{"pos":[166947,166959],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[167045,167046],"content":"<","needQuote":true,"nodes":[]},{"pos":[167073,167077],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[167108,167109]},{"pos":[167141,167147],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[167212,167213]},{"pos":[167296,167308],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[167394,167395],"content":"<","needQuote":true,"nodes":[]},{"pos":[167422,167426],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[167457,167458]},{"pos":[167490,167496],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[167561,167562]},{"pos":[167645,167657],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[167743,167744],"content":"<","needQuote":true,"nodes":[]},{"pos":[167771,167775],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[167806,167807]},{"pos":[167839,167845],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[167941,167942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168051,168094],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[168213,168214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168264,168268],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[168327,168330]},{"pos":[168415,168427],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[168514,168517]},{"pos":[168551,168555],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[168586,168587]},{"pos":[168619,168625],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[168657,168658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[168686,168687]},{"pos":[168770,168782],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[168869,168872]},{"pos":[168906,168910],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[168941,168942]},{"pos":[168974,168980],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[169012,169013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[169041,169042]},{"pos":[169125,169137],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[169224,169227]},{"pos":[169261,169265],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[169296,169297]},{"pos":[169329,169335],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[169367,169368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169395,169396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169423,169424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170301,170424],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;)","pos":[0,123],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)"}]},{"pos":[171127,171177],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;","pos":[0,50],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>"}]},{"pos":[171303,171304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171331,171342],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[171380,171381]},{"pos":[171436,171440],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[171498,171499],"content":"<","needQuote":true,"nodes":[]},{"pos":[171526,171537],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[171575,171576]},{"pos":[171659,171671],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[171757,171758],"content":"<","needQuote":true,"nodes":[]},{"pos":[171785,171789],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[171820,171821]},{"pos":[171853,171859],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[171924,171925]},{"pos":[171957,171968],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[172037,172038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172151,172207],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)","pos":[0,56]}]},{"pos":[172339,172340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172367,172378],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[172416,172417]},{"pos":[172472,172476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[172535,172538]},{"pos":[172572,172583],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[172621,172622]},{"pos":[172705,172717],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[172804,172807]},{"pos":[172841,172845],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[172876,172877]},{"pos":[172909,172915],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[172947,172948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[172976,172977]},{"pos":[173009,173020],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[173057,173058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173085,173086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174011,174171],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,160],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[175026,175085],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate, TResult&gt;","pos":[0,59],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>"}]},{"pos":[175220,175221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175248,175259],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[175297,175298]},{"pos":[175353,175357],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[175415,175416],"content":"<","needQuote":true,"nodes":[]},{"pos":[175443,175454],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[175492,175493]},{"pos":[175576,175588],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[175674,175675],"content":"<","needQuote":true,"nodes":[]},{"pos":[175702,175706],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[175737,175738]},{"pos":[175770,175776],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[175841,175842]},{"pos":[175874,175885],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[175955,175956]},{"pos":[176011,176015],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[176073,176074],"content":"<","needQuote":true,"nodes":[]},{"pos":[176101,176112],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[176150,176151]},{"pos":[176183,176190],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[176255,176256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176390,176455],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)","pos":[0,65]}]},{"pos":[176596,176597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176624,176635],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[176673,176674]},{"pos":[176729,176733],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[176792,176795]},{"pos":[176829,176840],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[176878,176879]},{"pos":[176962,176974],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[177061,177064]},{"pos":[177098,177102],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[177133,177134]},{"pos":[177166,177172],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[177204,177205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[177233,177234]},{"pos":[177266,177277],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[177314,177315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[177343,177344]},{"pos":[177399,177403],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[177462,177465]},{"pos":[177499,177510],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[177548,177549]},{"pos":[177581,177588],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[177621,177622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177649,177650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178579,178653],"content":"All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,74],"source":"All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[179220,179251],"content":"All<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"All&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"All<KeyValuePair<TKey, TValue>>"}]},{"pos":[179358,179359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179409,179413],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[179471,179472],"content":"<","needQuote":true,"nodes":[]},{"pos":[179550,179562],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[179648,179649],"content":"<","needQuote":true,"nodes":[]},{"pos":[179676,179680],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[179711,179712]},{"pos":[179744,179750],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[179815,179816]},{"pos":[179872,179879],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[179972,179973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180083,180120],"content":"All(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"All(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[180233,180234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180284,180288],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[180347,180350]},{"pos":[180435,180447],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[180534,180537]},{"pos":[180571,180575],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[180606,180607]},{"pos":[180639,180645],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[180677,180678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[180706,180707]},{"pos":[180763,180770],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[180831,180832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180859,180860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181472,181505],"content":"Any<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Any<KeyValuePair<TKey, TValue>>()"}]},{"pos":[181822,181853],"content":"Any<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Any<KeyValuePair<TKey, TValue>>"}]},{"pos":[181960,181961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181988,181989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182066,182103],"content":"Any(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Any(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[182216,182217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182244,182245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182855,182929],"content":"Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,74],"source":"Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[183496,183527],"content":"Any<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Any<KeyValuePair<TKey, TValue>>"}]},{"pos":[183634,183635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183685,183689],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[183747,183748],"content":"<","needQuote":true,"nodes":[]},{"pos":[183826,183838],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[183924,183925],"content":"<","needQuote":true,"nodes":[]},{"pos":[183952,183956],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[183987,183988]},{"pos":[184020,184026],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[184091,184092]},{"pos":[184148,184155],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[184248,184249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184359,184396],"content":"Any(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Any(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[184509,184510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184560,184564],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[184623,184626]},{"pos":[184711,184723],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[184810,184813]},{"pos":[184847,184851],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[184882,184883]},{"pos":[184915,184921],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[184953,184954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[184982,184983]},{"pos":[185039,185046],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[185107,185108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185135,185136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185766,185808],"content":"AsEnumerable<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,42],"source":"AsEnumerable<KeyValuePair<TKey, TValue>>()"}]},{"pos":[186161,186201],"content":"AsEnumerable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,40],"source":"AsEnumerable<KeyValuePair<TKey, TValue>>"}]},{"pos":[186317,186318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186345,186346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186432,186478],"content":"AsEnumerable(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsEnumerable(Of KeyValuePair(Of TKey, TValue))","pos":[0,46]}]},{"pos":[186600,186601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186628,186629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187274,187352],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,78],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[187935,187970],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[188081,188082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188132,188136],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[188194,188195],"content":"<","needQuote":true,"nodes":[]},{"pos":[188273,188285],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[188371,188372],"content":"<","needQuote":true,"nodes":[]},{"pos":[188399,188403],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[188434,188435]},{"pos":[188467,188473],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[188538,188539]},{"pos":[188595,188602],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[188695,188696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188810,188851],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[188968,188969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189019,189023],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[189082,189085]},{"pos":[189170,189182],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[189269,189272]},{"pos":[189306,189310],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[189341,189342]},{"pos":[189374,189380],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[189412,189413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[189441,189442]},{"pos":[189498,189505],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[189566,189567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189594,189595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190343,190420],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,77],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[190999,191034],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[191145,191146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191196,191200],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[191258,191259],"content":"<","needQuote":true,"nodes":[]},{"pos":[191337,191349],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[191435,191436],"content":"<","needQuote":true,"nodes":[]},{"pos":[191463,191467],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[191498,191499]},{"pos":[191531,191537],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[191602,191603]},{"pos":[191658,191664],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[191756,191757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191870,191911],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[192028,192029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192079,192083],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[192142,192145]},{"pos":[192230,192242],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[192329,192332]},{"pos":[192366,192370],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[192401,192402]},{"pos":[192434,192440],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[192472,192473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[192501,192502]},{"pos":[192557,192563],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[192623,192624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192651,192652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193395,193471],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,76],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[194046,194081],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[194192,194193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194243,194247],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[194305,194306],"content":"<","needQuote":true,"nodes":[]},{"pos":[194384,194396],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[194482,194483],"content":"<","needQuote":true,"nodes":[]},{"pos":[194510,194514],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[194545,194546]},{"pos":[194578,194584],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[194649,194650]},{"pos":[194704,194709],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[194800,194801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194913,194954],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[195071,195072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195122,195126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[195185,195188]},{"pos":[195273,195285],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[195372,195375]},{"pos":[195409,195413],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[195444,195445]},{"pos":[195477,195483],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[195515,195516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[195544,195545]},{"pos":[195599,195604],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[195663,195664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195691,195692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196432,196508],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,76],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[197083,197118],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[197229,197230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197280,197284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[197342,197343],"content":"<","needQuote":true,"nodes":[]},{"pos":[197421,197433],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[197519,197520],"content":"<","needQuote":true,"nodes":[]},{"pos":[197547,197551],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[197582,197583]},{"pos":[197615,197621],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[197686,197687]},{"pos":[197741,197746],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[197837,197838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197950,197991],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[198108,198109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198159,198163],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[198222,198225]},{"pos":[198310,198322],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[198409,198412]},{"pos":[198446,198450],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[198481,198482]},{"pos":[198514,198520],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[198552,198553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[198581,198582]},{"pos":[198636,198641],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[198700,198701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198728,198729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199507,199595],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,88],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[200245,200280],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[200391,200392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200442,200446],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[200504,200505],"content":"<","needQuote":true,"nodes":[]},{"pos":[200583,200595],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[200681,200682],"content":"<","needQuote":true,"nodes":[]},{"pos":[200709,200713],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[200744,200745]},{"pos":[200777,200783],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[200848,200849]},{"pos":[200908,200916],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[200978,200979],"content":"<","needQuote":true,"nodes":[]},{"pos":[201030,201037],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[201162,201163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201294,201335],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[201452,201453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201503,201507],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[201566,201569]},{"pos":[201654,201666],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[201753,201756]},{"pos":[201790,201794],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[201825,201826]},{"pos":[201858,201864],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[201896,201897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[201925,201926]},{"pos":[201985,201993],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[202056,202059]},{"pos":[202117,202124],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[202185,202186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202213,202214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202241,202242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203064,203151],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,87],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[203797,203832],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[203943,203944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203994,203998],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[204056,204057],"content":"<","needQuote":true,"nodes":[]},{"pos":[204135,204147],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[204233,204234],"content":"<","needQuote":true,"nodes":[]},{"pos":[204261,204265],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[204296,204297]},{"pos":[204329,204335],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[204400,204401]},{"pos":[204460,204468],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[204530,204531],"content":"<","needQuote":true,"nodes":[]},{"pos":[204581,204587],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[204711,204712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204842,204883],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[205000,205001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205051,205055],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[205114,205117]},{"pos":[205202,205214],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[205301,205304]},{"pos":[205338,205342],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[205373,205374]},{"pos":[205406,205412],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[205444,205445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[205473,205474]},{"pos":[205533,205541],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[205604,205607]},{"pos":[205664,205670],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[205730,205731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205758,205759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205786,205787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206604,206690],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,86],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[207332,207367],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[207478,207479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207529,207533],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207591,207592],"content":"<","needQuote":true,"nodes":[]},{"pos":[207670,207682],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[207768,207769],"content":"<","needQuote":true,"nodes":[]},{"pos":[207796,207800],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[207831,207832]},{"pos":[207864,207870],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[207935,207936]},{"pos":[207995,208003],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[208065,208066],"content":"<","needQuote":true,"nodes":[]},{"pos":[208115,208120],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[208243,208244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208373,208414],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[208531,208532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208582,208586],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[208645,208648]},{"pos":[208733,208745],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[208832,208835]},{"pos":[208869,208873],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[208904,208905]},{"pos":[208937,208943],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[208975,208976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[209004,209005]},{"pos":[209064,209072],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[209135,209138]},{"pos":[209194,209199],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[209258,209259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209286,209287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209314,209315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210129,210215],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,86],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[210857,210892],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[211003,211004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211054,211058],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[211116,211117],"content":"<","needQuote":true,"nodes":[]},{"pos":[211195,211207],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[211293,211294],"content":"<","needQuote":true,"nodes":[]},{"pos":[211321,211325],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[211356,211357]},{"pos":[211389,211395],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[211460,211461]},{"pos":[211520,211528],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[211590,211591],"content":"<","needQuote":true,"nodes":[]},{"pos":[211640,211645],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[211768,211769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211898,211939],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[212056,212057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212107,212111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[212170,212173]},{"pos":[212258,212270],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[212357,212360]},{"pos":[212394,212398],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[212429,212430]},{"pos":[212462,212468],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[212500,212501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[212529,212530]},{"pos":[212589,212597],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[212660,212663]},{"pos":[212719,212724],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[212783,212784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212811,212812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212839,212840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213656,213743],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,87],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[214389,214424],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[214535,214536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214586,214590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[214648,214649],"content":"<","needQuote":true,"nodes":[]},{"pos":[214727,214739],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[214825,214826],"content":"<","needQuote":true,"nodes":[]},{"pos":[214853,214857],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[214888,214889]},{"pos":[214921,214927],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[214992,214993]},{"pos":[215052,215060],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[215122,215123],"content":"<","needQuote":true,"nodes":[]},{"pos":[215173,215179],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[215303,215304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215434,215475],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[215592,215593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[215643,215647],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[215706,215709]},{"pos":[215794,215806],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[215893,215896]},{"pos":[215930,215934],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[215965,215966]},{"pos":[215998,216004],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[216036,216037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[216065,216066]},{"pos":[216125,216133],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[216196,216199]},{"pos":[216256,216262],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[216322,216323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216350,216351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216378,216379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217164,217241],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,77],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[217820,217855],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[217966,217967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218017,218021],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[218079,218080],"content":"<","needQuote":true,"nodes":[]},{"pos":[218158,218170],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[218256,218257],"content":"<","needQuote":true,"nodes":[]},{"pos":[218284,218288],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[218319,218320]},{"pos":[218352,218358],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[218423,218424]},{"pos":[218479,218485],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[218577,218578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218691,218732],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[218849,218850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218900,218904],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[218963,218966]},{"pos":[219051,219063],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[219150,219153]},{"pos":[219187,219191],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[219222,219223]},{"pos":[219255,219261],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[219293,219294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[219322,219323]},{"pos":[219378,219384],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[219444,219445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219472,219473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220027,220042],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[220246,220259],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[220321,220322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220349,220350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220428,220444],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[220509,220510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220537,220538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221127,221202],"content":"Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Concat&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,75],"source":"Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[221813,221847],"content":"Concat<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Concat&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Concat<KeyValuePair<TKey, TValue>>"}]},{"pos":[221957,221958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222035,222046],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[222131,222132],"content":"<","needQuote":true,"nodes":[]},{"pos":[222210,222222],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[222308,222309],"content":"<","needQuote":true,"nodes":[]},{"pos":[222336,222340],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[222371,222372]},{"pos":[222404,222410],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[222506,222507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222632,222672],"content":"Concat(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Concat(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[222788,222789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222866,222877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[222963,222966]},{"pos":[223051,223063],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[223150,223153]},{"pos":[223187,223191],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[223222,223223]},{"pos":[223255,223261],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[223293,223294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223321,223322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223349,223350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224047,224109],"content":"Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Append&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,62],"source":"Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[224581,224615],"content":"Append<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Append&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Append<KeyValuePair<TKey, TValue>>"}]},{"pos":[224725,224726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224804,224816],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[224902,224903],"content":"<","needQuote":true,"nodes":[]},{"pos":[224930,224934],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[224965,224966]},{"pos":[224998,225004],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[225068,225069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225154,225194],"content":"Append(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Append(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[225310,225311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225389,225401],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[225488,225491]},{"pos":[225525,225529],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[225560,225561]},{"pos":[225593,225599],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[225631,225632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225659,225660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226290,226353],"content":"Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Prepend&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,63],"source":"Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[226829,226864],"content":"Prepend<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Prepend&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Prepend<KeyValuePair<TKey, TValue>>"}]},{"pos":[226975,226976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227054,227066],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[227152,227153],"content":"<","needQuote":true,"nodes":[]},{"pos":[227180,227184],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[227215,227216]},{"pos":[227248,227254],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[227318,227319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227405,227446],"content":"Prepend(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Prepend(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[227563,227564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227642,227654],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[227741,227744]},{"pos":[227778,227782],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[227813,227814]},{"pos":[227846,227852],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[227884,227885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227912,227913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228548,228612],"content":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,64],"source":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[229092,229128],"content":"Contains<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Contains<KeyValuePair<TKey, TValue>>"}]},{"pos":[229240,229241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229319,229331],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[229417,229418],"content":"<","needQuote":true,"nodes":[]},{"pos":[229445,229449],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[229480,229481]},{"pos":[229513,229519],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[229583,229584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229671,229713],"content":"Contains(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Contains(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[229831,229832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229910,229922],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[230009,230012]},{"pos":[230046,230050],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[230081,230082]},{"pos":[230114,230120],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[230152,230153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230180,230181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230972,231083],"content":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,111],"source":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[231874,231910],"content":"Contains<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Contains<KeyValuePair<TKey, TValue>>"}]},{"pos":[232022,232023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232101,232113],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[232199,232200],"content":"<","needQuote":true,"nodes":[]},{"pos":[232227,232231],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[232262,232263]},{"pos":[232295,232301],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[232366,232367]},{"pos":[232455,232472],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[232563,232564],"content":"<","needQuote":true,"nodes":[]},{"pos":[232642,232654],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[232740,232741],"content":"<","needQuote":true,"nodes":[]},{"pos":[232768,232772],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[232803,232804]},{"pos":[232836,232842],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[232938,232939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233076,233118],"content":"Contains(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Contains(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[233236,233237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233315,233327],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[233414,233417]},{"pos":[233451,233455],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[233486,233487]},{"pos":[233519,233525],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[233557,233558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[233586,233587]},{"pos":[233675,233692],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[233784,233787]},{"pos":[233872,233884],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[233971,233974]},{"pos":[234008,234012],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[234043,234044]},{"pos":[234076,234082],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[234114,234115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234142,234143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234170,234171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234891,234926],"content":"Count<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,35],"source":"Count<KeyValuePair<TKey, TValue>>()"}]},{"pos":[235251,235284],"content":"Count<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Count<KeyValuePair<TKey, TValue>>"}]},{"pos":[235393,235394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235421,235422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235501,235540],"content":"Count(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Count(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[235655,235656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235683,235684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236304,236380],"content":"Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[236955,236988],"content":"Count<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Count<KeyValuePair<TKey, TValue>>"}]},{"pos":[237097,237098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237148,237152],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[237210,237211],"content":"<","needQuote":true,"nodes":[]},{"pos":[237289,237301],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[237387,237388],"content":"<","needQuote":true,"nodes":[]},{"pos":[237415,237419],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[237450,237451]},{"pos":[237483,237489],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[237554,237555]},{"pos":[237611,237618],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[237711,237712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237824,237863],"content":"Count(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Count(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[237978,237979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238029,238033],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[238092,238095]},{"pos":[238180,238192],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[238279,238282]},{"pos":[238316,238320],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[238351,238352]},{"pos":[238384,238390],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[238422,238423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[238451,238452]},{"pos":[238508,238515],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[238576,238577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238604,238605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239245,239289],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,44],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>()"}]},{"pos":[239650,239692],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>"}]},{"pos":[239810,239811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239838,239839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239927,239975],"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[240099,240100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240127,240128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240737,240807],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,70],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[241311,241353],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>"}]},{"pos":[241471,241472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241550,241562],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[241648,241649],"content":"<","needQuote":true,"nodes":[]},{"pos":[241676,241680],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[241711,241712]},{"pos":[241744,241750],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[241814,241815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241908,241956],"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[242080,242081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242159,242171],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[242258,242261]},{"pos":[242295,242299],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[242330,242331]},{"pos":[242363,242369],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[242401,242402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242429,242430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243024,243062],"content":"Distinct<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,38],"source":"Distinct<KeyValuePair<TKey, TValue>>()"}]},{"pos":[243399,243435],"content":"Distinct<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Distinct<KeyValuePair<TKey, TValue>>"}]},{"pos":[243547,243548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243575,243576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243658,243700],"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[243818,243819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243846,243847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244518,244601],"content":"Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,83],"source":"Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[245244,245280],"content":"Distinct<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Distinct<KeyValuePair<TKey, TValue>>"}]},{"pos":[245392,245393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245476,245493],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[245584,245585],"content":"<","needQuote":true,"nodes":[]},{"pos":[245663,245675],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[245761,245762],"content":"<","needQuote":true,"nodes":[]},{"pos":[245789,245793],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[245824,245825]},{"pos":[245857,245863],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[245959,245960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246093,246135],"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[246253,246254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246337,246354],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[246446,246449]},{"pos":[246534,246546],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[246633,246636]},{"pos":[246670,246674],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[246705,246706]},{"pos":[246738,246744],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[246776,246777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246804,246805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246832,246833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247525,247569],"content":"ElementAt<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,44],"source":"ElementAt<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[247953,247990],"content":"ElementAt<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ElementAt&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"ElementAt<KeyValuePair<TKey, TValue>>"}]},{"pos":[248103,248104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248153,248158],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[248217,248218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248315,248358],"content":"ElementAt(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ElementAt(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[248477,248478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248527,248532],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[248591,248592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249182,249235],"content":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,53],"source":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[249655,249701],"content":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,46],"source":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[249823,249824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249873,249878],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[249937,249938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250044,250096],"content":"ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,52]}]},{"pos":[250224,250225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250274,250279],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[250338,250339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251047,251122],"content":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,75],"source":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[251733,251767],"content":"Except<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Except<KeyValuePair<TKey, TValue>>"}]},{"pos":[251877,251878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251955,251966],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[252051,252052],"content":"<","needQuote":true,"nodes":[]},{"pos":[252130,252142],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[252228,252229],"content":"<","needQuote":true,"nodes":[]},{"pos":[252256,252260],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[252291,252292]},{"pos":[252324,252330],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[252426,252427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252552,252592],"content":"Except(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Except(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[252708,252709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252786,252797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[252883,252886]},{"pos":[252971,252983],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[253070,253073]},{"pos":[253107,253111],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[253142,253143]},{"pos":[253175,253181],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[253213,253214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253241,253242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253269,253270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254200,254322],"content":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,122],"source":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[255244,255278],"content":"Except<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Except<KeyValuePair<TKey, TValue>>"}]},{"pos":[255388,255389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255466,255477],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[255562,255563],"content":"<","needQuote":true,"nodes":[]},{"pos":[255641,255653],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[255739,255740],"content":"<","needQuote":true,"nodes":[]},{"pos":[255767,255771],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[255802,255803]},{"pos":[255835,255841],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[255938,255939]},{"pos":[256027,256044],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[256135,256136],"content":"<","needQuote":true,"nodes":[]},{"pos":[256214,256226],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[256312,256313],"content":"<","needQuote":true,"nodes":[]},{"pos":[256340,256344],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[256375,256376]},{"pos":[256408,256414],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[256510,256511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256686,256726],"content":"Except(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Except(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[256842,256843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256920,256931],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[257017,257020]},{"pos":[257105,257117],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[257204,257207]},{"pos":[257241,257245],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[257276,257277]},{"pos":[257309,257315],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[257347,257348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257375,257376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[257404,257405]},{"pos":[257493,257510],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[257602,257605]},{"pos":[257690,257702],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[257789,257792]},{"pos":[257826,257830],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[257861,257862]},{"pos":[257894,257900],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[257932,257933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257960,257961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257988,257989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258772,258807],"content":"First<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,35],"source":"First<KeyValuePair<TKey, TValue>>()"}]},{"pos":[259132,259165],"content":"First<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"First<KeyValuePair<TKey, TValue>>"}]},{"pos":[259274,259275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259302,259303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259382,259421],"content":"First(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"First(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[259536,259537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259564,259565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260185,260261],"content":"First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[260836,260869],"content":"First<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"First<KeyValuePair<TKey, TValue>>"}]},{"pos":[260978,260979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261029,261033],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[261091,261092],"content":"<","needQuote":true,"nodes":[]},{"pos":[261170,261182],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[261268,261269],"content":"<","needQuote":true,"nodes":[]},{"pos":[261296,261300],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[261331,261332]},{"pos":[261364,261370],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[261435,261436]},{"pos":[261492,261499],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[261592,261593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261705,261744],"content":"First(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"First(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[261859,261860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261910,261914],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[261973,261976]},{"pos":[262061,262073],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[262160,262163]},{"pos":[262197,262201],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[262232,262233]},{"pos":[262265,262271],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[262303,262304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[262332,262333]},{"pos":[262389,262396],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[262457,262458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262485,262486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263126,263170],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,44],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[263531,263573],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[263691,263692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263719,263720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263808,263856],"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[263980,263981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264008,264009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264674,264759],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,85],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[265370,265412],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[265530,265531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265581,265585],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[265643,265644],"content":"<","needQuote":true,"nodes":[]},{"pos":[265722,265734],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[265820,265821],"content":"<","needQuote":true,"nodes":[]},{"pos":[265848,265852],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[265883,265884]},{"pos":[265916,265922],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[265987,265988]},{"pos":[266044,266051],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[266144,266145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266266,266314],"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[266438,266439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266489,266493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266552,266555]},{"pos":[266640,266652],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[266739,266742]},{"pos":[266776,266780],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[266811,266812]},{"pos":[266844,266850],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[266882,266883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[266911,266912]},{"pos":[266968,266975],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[267036,267037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267064,267065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267817,267898],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,81],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[268465,268506],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[268623,268624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268674,268678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[268736,268737],"content":"<","needQuote":true,"nodes":[]},{"pos":[268815,268827],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[268913,268914],"content":"<","needQuote":true,"nodes":[]},{"pos":[268941,268945],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[268976,268977]},{"pos":[269009,269015],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[269080,269081]},{"pos":[269113,269117],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[269179,269180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269283,269330],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[269453,269454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269504,269508],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[269567,269570]},{"pos":[269655,269667],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[269754,269757]},{"pos":[269791,269795],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[269826,269827]},{"pos":[269859,269865],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[269897,269898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[269926,269927]},{"pos":[269959,269963],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[269993,269994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270021,270022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270851,270957],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,106],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[271709,271750],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[271867,271868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271918,271922],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[271980,271981],"content":"<","needQuote":true,"nodes":[]},{"pos":[272059,272071],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[272157,272158],"content":"<","needQuote":true,"nodes":[]},{"pos":[272185,272189],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[272220,272221]},{"pos":[272253,272259],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[272324,272325]},{"pos":[272357,272361],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[272424,272425]},{"pos":[272513,272530],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[272621,272622],"content":"<","needQuote":true,"nodes":[]},{"pos":[272649,272653],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[272715,272716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272869,272916],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[273039,273040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273090,273094],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[273153,273156]},{"pos":[273241,273253],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[273340,273343]},{"pos":[273377,273381],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[273412,273413]},{"pos":[273445,273451],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[273483,273484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[273512,273513]},{"pos":[273545,273549],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[273579,273580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[273608,273609]},{"pos":[273697,273714],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[273806,273809]},{"pos":[273843,273847],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[273877,273878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273905,273906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274837,274972],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,135],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[275802,275853],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,51],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[275980,275981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276031,276035],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[276093,276094],"content":"<","needQuote":true,"nodes":[]},{"pos":[276172,276184],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[276270,276271],"content":"<","needQuote":true,"nodes":[]},{"pos":[276298,276302],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[276333,276334]},{"pos":[276366,276372],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[276437,276438]},{"pos":[276470,276474],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[276537,276538]},{"pos":[276593,276597],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[276655,276656],"content":"<","needQuote":true,"nodes":[]},{"pos":[276734,276746],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[276832,276833],"content":"<","needQuote":true,"nodes":[]},{"pos":[276860,276864],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[276895,276896]},{"pos":[276928,276934],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[276999,277000]},{"pos":[277032,277040],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[277106,277107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277231,277288],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,57]}]},{"pos":[277421,277422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277472,277476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[277535,277538]},{"pos":[277623,277635],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[277722,277725]},{"pos":[277759,277763],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[277794,277795]},{"pos":[277827,277833],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[277865,277866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[277894,277895]},{"pos":[277927,277931],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[277961,277962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[277990,277991]},{"pos":[278046,278050],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[278109,278112]},{"pos":[278197,278209],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[278296,278299]},{"pos":[278333,278337],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[278368,278369]},{"pos":[278401,278407],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[278439,278440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[278468,278469]},{"pos":[278501,278509],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[278543,278544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278571,278572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279638,279798],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,160],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[280813,280864],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,51],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[280991,280992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281042,281046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[281104,281105],"content":"<","needQuote":true,"nodes":[]},{"pos":[281183,281195],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[281281,281282],"content":"<","needQuote":true,"nodes":[]},{"pos":[281309,281313],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[281344,281345]},{"pos":[281377,281383],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[281448,281449]},{"pos":[281481,281485],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[281548,281549]},{"pos":[281604,281608],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[281666,281667],"content":"<","needQuote":true,"nodes":[]},{"pos":[281745,281757],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[281843,281844],"content":"<","needQuote":true,"nodes":[]},{"pos":[281871,281875],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[281906,281907]},{"pos":[281939,281945],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[282010,282011]},{"pos":[282043,282051],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[282118,282119]},{"pos":[282207,282224],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[282315,282316],"content":"<","needQuote":true,"nodes":[]},{"pos":[282343,282347],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[282409,282410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282584,282641],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,57]}]},{"pos":[282774,282775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282825,282829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[282888,282891]},{"pos":[282976,282988],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[283075,283078]},{"pos":[283112,283116],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[283147,283148]},{"pos":[283180,283186],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[283218,283219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[283247,283248]},{"pos":[283280,283284],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[283314,283315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[283343,283344]},{"pos":[283399,283403],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[283462,283465]},{"pos":[283550,283562],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[283649,283652]},{"pos":[283686,283690],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[283721,283722]},{"pos":[283754,283760],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[283792,283793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[283821,283822]},{"pos":[283854,283862],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[283896,283897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[283925,283926]},{"pos":[284014,284031],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[284123,284126]},{"pos":[284160,284164],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[284194,284195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284222,284223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285379,285531],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TKey, IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, TResult&gt;)","pos":[0,152],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)"}]},{"pos":[286516,286566],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;","pos":[0,50],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>"}]},{"pos":[286692,286693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286743,286747],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[286805,286806],"content":"<","needQuote":true,"nodes":[]},{"pos":[286884,286896],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[286982,286983],"content":"<","needQuote":true,"nodes":[]},{"pos":[287010,287014],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[287045,287046]},{"pos":[287078,287084],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[287149,287150]},{"pos":[287182,287186],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[287249,287250]},{"pos":[287305,287309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[287367,287368],"content":"<","needQuote":true,"nodes":[]},{"pos":[287395,287399],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[287430,287431]},{"pos":[287513,287524],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[287609,287610],"content":"<","needQuote":true,"nodes":[]},{"pos":[287688,287700],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[287786,287787],"content":"<","needQuote":true,"nodes":[]},{"pos":[287814,287818],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[287849,287850]},{"pos":[287882,287888],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[287985,287986]},{"pos":[288018,288025],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[288090,288091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288259,288315],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","pos":[0,56]}]},{"pos":[288447,288448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288498,288502],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[288561,288564]},{"pos":[288649,288661],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[288748,288751]},{"pos":[288785,288789],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[288820,288821]},{"pos":[288853,288859],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[288891,288892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[288920,288921]},{"pos":[288953,288957],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[288987,288988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[289016,289017]},{"pos":[289072,289076],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289135,289138]},{"pos":[289172,289176],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[289207,289208]},{"pos":[289290,289301],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[289387,289390]},{"pos":[289475,289487],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[289574,289577]},{"pos":[289611,289615],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[289646,289647]},{"pos":[289679,289685],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[289717,289718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289745,289746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[289774,289775]},{"pos":[289807,289814],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[289847,289848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289875,289876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291113,291290],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TKey, IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,177],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[292460,292510],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;","pos":[0,50],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>"}]},{"pos":[292636,292637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292687,292691],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[292749,292750],"content":"<","needQuote":true,"nodes":[]},{"pos":[292828,292840],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[292926,292927],"content":"<","needQuote":true,"nodes":[]},{"pos":[292954,292958],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[292989,292990]},{"pos":[293022,293028],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[293093,293094]},{"pos":[293126,293130],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[293193,293194]},{"pos":[293249,293253],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[293311,293312],"content":"<","needQuote":true,"nodes":[]},{"pos":[293339,293343],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[293374,293375]},{"pos":[293457,293468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[293553,293554],"content":"<","needQuote":true,"nodes":[]},{"pos":[293632,293644],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[293730,293731],"content":"<","needQuote":true,"nodes":[]},{"pos":[293758,293762],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[293793,293794]},{"pos":[293826,293832],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[293929,293930]},{"pos":[293962,293969],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[294035,294036]},{"pos":[294124,294141],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[294232,294233],"content":"<","needQuote":true,"nodes":[]},{"pos":[294260,294264],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[294326,294327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294545,294601],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","pos":[0,56]}]},{"pos":[294733,294734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294784,294788],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[294847,294850]},{"pos":[294935,294947],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[295034,295037]},{"pos":[295071,295075],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[295106,295107]},{"pos":[295139,295145],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[295177,295178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[295206,295207]},{"pos":[295239,295243],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[295273,295274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[295302,295303]},{"pos":[295358,295362],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[295421,295424]},{"pos":[295458,295462],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[295493,295494]},{"pos":[295576,295587],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[295673,295676]},{"pos":[295761,295773],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[295860,295863]},{"pos":[295897,295901],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[295932,295933]},{"pos":[295965,295971],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[296003,296004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296031,296032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[296060,296061]},{"pos":[296093,296100],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[296133,296134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[296162,296163]},{"pos":[296251,296268],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[296360,296363]},{"pos":[296397,296401],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[296431,296432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296459,296460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297753,297941],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,188],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[299075,299135],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;","pos":[0,60],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>"}]},{"pos":[299271,299272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299322,299326],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[299384,299385],"content":"<","needQuote":true,"nodes":[]},{"pos":[299463,299475],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[299561,299562],"content":"<","needQuote":true,"nodes":[]},{"pos":[299589,299593],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[299624,299625]},{"pos":[299657,299663],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[299728,299729]},{"pos":[299761,299765],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[299828,299829]},{"pos":[299884,299888],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[299946,299947],"content":"<","needQuote":true,"nodes":[]},{"pos":[300025,300037],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[300123,300124],"content":"<","needQuote":true,"nodes":[]},{"pos":[300151,300155],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[300186,300187]},{"pos":[300219,300225],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[300290,300291]},{"pos":[300323,300331],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[300398,300399]},{"pos":[300454,300458],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[300516,300517],"content":"<","needQuote":true,"nodes":[]},{"pos":[300544,300548],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[300579,300580]},{"pos":[300662,300673],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[300758,300759],"content":"<","needQuote":true,"nodes":[]},{"pos":[300786,300794],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[300861,300862]},{"pos":[300894,300901],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[300966,300967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301156,301222],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[301364,301365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301415,301419],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[301478,301481]},{"pos":[301566,301578],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[301665,301668]},{"pos":[301702,301706],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[301737,301738]},{"pos":[301770,301776],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[301808,301809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[301837,301838]},{"pos":[301870,301874],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[301904,301905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[301933,301934]},{"pos":[301989,301993],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[302052,302055]},{"pos":[302140,302152],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[302239,302242]},{"pos":[302276,302280],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[302311,302312]},{"pos":[302344,302350],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[302382,302383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[302411,302412]},{"pos":[302444,302452],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[302486,302487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[302515,302516]},{"pos":[302571,302575],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[302634,302637]},{"pos":[302671,302675],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[302706,302707]},{"pos":[302789,302800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[302886,302889]},{"pos":[302923,302931],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[302965,302966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[302994,302995]},{"pos":[303027,303034],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[303067,303068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303095,303096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304485,304698],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,213],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[306017,306077],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;","pos":[0,60],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>"}]},{"pos":[306213,306214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306264,306268],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306326,306327],"content":"<","needQuote":true,"nodes":[]},{"pos":[306405,306417],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[306503,306504],"content":"<","needQuote":true,"nodes":[]},{"pos":[306531,306535],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[306566,306567]},{"pos":[306599,306605],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[306670,306671]},{"pos":[306703,306707],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[306770,306771]},{"pos":[306826,306830],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306888,306889],"content":"<","needQuote":true,"nodes":[]},{"pos":[306967,306979],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[307065,307066],"content":"<","needQuote":true,"nodes":[]},{"pos":[307093,307097],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[307128,307129]},{"pos":[307161,307167],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[307232,307233]},{"pos":[307265,307273],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[307340,307341]},{"pos":[307396,307400],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[307458,307459],"content":"<","needQuote":true,"nodes":[]},{"pos":[307486,307490],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[307521,307522]},{"pos":[307604,307615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[307700,307701],"content":"<","needQuote":true,"nodes":[]},{"pos":[307728,307736],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[307803,307804]},{"pos":[307836,307843],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[307909,307910]},{"pos":[307998,308015],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[308106,308107],"content":"<","needQuote":true,"nodes":[]},{"pos":[308134,308138],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[308200,308201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308440,308506],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[308648,308649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308699,308703],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[308762,308765]},{"pos":[308850,308862],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[308949,308952]},{"pos":[308986,308990],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[309021,309022]},{"pos":[309054,309060],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[309092,309093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309121,309122]},{"pos":[309154,309158],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[309188,309189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309217,309218]},{"pos":[309273,309277],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[309336,309339]},{"pos":[309424,309436],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[309523,309526]},{"pos":[309560,309564],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[309595,309596]},{"pos":[309628,309634],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[309666,309667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309695,309696]},{"pos":[309728,309736],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[309770,309771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309799,309800]},{"pos":[309855,309859],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[309918,309921]},{"pos":[309955,309959],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[309990,309991]},{"pos":[310073,310084],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[310170,310173]},{"pos":[310207,310215],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[310249,310250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[310278,310279]},{"pos":[310311,310318],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[310351,310352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[310380,310381]},{"pos":[310469,310486],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[310578,310581]},{"pos":[310615,310619],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[310649,310650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310677,310678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312160,312365],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,205],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)"}]},{"pos":[313656,313716],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,60],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[313852,313853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313930,313941],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[314026,314027],"content":"<","needQuote":true,"nodes":[]},{"pos":[314054,314060],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[314125,314126]},{"pos":[314181,314185],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[314243,314244],"content":"<","needQuote":true,"nodes":[]},{"pos":[314322,314334],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[314420,314421],"content":"<","needQuote":true,"nodes":[]},{"pos":[314448,314452],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[314483,314484]},{"pos":[314516,314522],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[314587,314588]},{"pos":[314620,314624],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[314687,314688]},{"pos":[314743,314747],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[314805,314806],"content":"<","needQuote":true,"nodes":[]},{"pos":[314833,314839],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[314872,314873]},{"pos":[314905,314909],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[314972,314973]},{"pos":[315028,315032],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[315090,315091],"content":"<","needQuote":true,"nodes":[]},{"pos":[315169,315181],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[315267,315268],"content":"<","needQuote":true,"nodes":[]},{"pos":[315295,315299],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[315330,315331]},{"pos":[315363,315369],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[315434,315435]},{"pos":[315517,315528],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[315613,315614],"content":"<","needQuote":true,"nodes":[]},{"pos":[315641,315647],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[315712,315713]},{"pos":[315745,315752],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[315817,315818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316053,316119],"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[316261,316262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316339,316350],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[316436,316439]},{"pos":[316473,316479],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[316511,316512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[316540,316541]},{"pos":[316596,316600],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[316659,316662]},{"pos":[316747,316759],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[316846,316849]},{"pos":[316883,316887],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[316918,316919]},{"pos":[316951,316957],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[316989,316990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[317018,317019]},{"pos":[317051,317055],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[317085,317086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[317114,317115]},{"pos":[317170,317174],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[317233,317236]},{"pos":[317270,317276],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[317309,317310]},{"pos":[317342,317346],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[317376,317377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[317405,317406]},{"pos":[317461,317465],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[317524,317527]},{"pos":[317612,317624],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[317711,317714]},{"pos":[317748,317752],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[317783,317784]},{"pos":[317816,317822],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[317854,317855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[317883,317884]},{"pos":[317966,317977],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[318063,318066]},{"pos":[318100,318106],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[318138,318139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[318167,318168]},{"pos":[318200,318207],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[318240,318241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318268,318269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319834,320064],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,230],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[321540,321600],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,60],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[321736,321737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321814,321825],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[321910,321911],"content":"<","needQuote":true,"nodes":[]},{"pos":[321938,321944],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[322009,322010]},{"pos":[322065,322069],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322127,322128],"content":"<","needQuote":true,"nodes":[]},{"pos":[322206,322218],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[322304,322305],"content":"<","needQuote":true,"nodes":[]},{"pos":[322332,322336],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[322367,322368]},{"pos":[322400,322406],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[322471,322472]},{"pos":[322504,322508],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[322571,322572]},{"pos":[322627,322631],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322689,322690],"content":"<","needQuote":true,"nodes":[]},{"pos":[322717,322723],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[322756,322757]},{"pos":[322789,322793],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[322856,322857]},{"pos":[322912,322916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322974,322975],"content":"<","needQuote":true,"nodes":[]},{"pos":[323053,323065],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[323151,323152],"content":"<","needQuote":true,"nodes":[]},{"pos":[323179,323183],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[323214,323215]},{"pos":[323247,323253],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[323318,323319]},{"pos":[323401,323412],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[323497,323498],"content":"<","needQuote":true,"nodes":[]},{"pos":[323525,323531],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[323596,323597]},{"pos":[323629,323636],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[323702,323703]},{"pos":[323791,323808],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[323899,323900],"content":"<","needQuote":true,"nodes":[]},{"pos":[323927,323931],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[323993,323994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324279,324345],"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[324487,324488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324565,324576],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[324662,324665]},{"pos":[324699,324705],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[324737,324738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[324766,324767]},{"pos":[324822,324826],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[324885,324888]},{"pos":[324973,324985],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[325072,325075]},{"pos":[325109,325113],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[325144,325145]},{"pos":[325177,325183],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[325215,325216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[325244,325245]},{"pos":[325277,325281],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[325311,325312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[325340,325341]},{"pos":[325396,325400],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[325459,325462]},{"pos":[325496,325502],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[325535,325536]},{"pos":[325568,325572],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[325602,325603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[325631,325632]},{"pos":[325687,325691],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[325750,325753]},{"pos":[325838,325850],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[325937,325940]},{"pos":[325974,325978],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[326009,326010]},{"pos":[326042,326048],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[326080,326081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326109,326110]},{"pos":[326192,326203],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[326289,326292]},{"pos":[326326,326332],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[326364,326365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326393,326394]},{"pos":[326426,326433],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[326466,326467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326495,326496]},{"pos":[326584,326601],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[326693,326696]},{"pos":[326730,326734],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[326764,326765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326792,326793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328064,328142],"content":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,78],"source":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[328765,328802],"content":"Intersect<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Intersect<KeyValuePair<TKey, TValue>>"}]},{"pos":[328915,328916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328993,329004],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[329089,329090],"content":"<","needQuote":true,"nodes":[]},{"pos":[329168,329180],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[329266,329267],"content":"<","needQuote":true,"nodes":[]},{"pos":[329294,329298],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[329329,329330]},{"pos":[329362,329368],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[329464,329465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329593,329636],"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[329755,329756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329833,329844],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[329930,329933]},{"pos":[330018,330030],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[330117,330120]},{"pos":[330154,330158],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[330189,330190]},{"pos":[330222,330228],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[330260,330261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330288,330289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330316,330317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331262,331387],"content":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,125],"source":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[332321,332358],"content":"Intersect<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Intersect<KeyValuePair<TKey, TValue>>"}]},{"pos":[332471,332472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332549,332560],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[332645,332646],"content":"<","needQuote":true,"nodes":[]},{"pos":[332724,332736],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[332822,332823],"content":"<","needQuote":true,"nodes":[]},{"pos":[332850,332854],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[332885,332886]},{"pos":[332918,332924],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[333021,333022]},{"pos":[333110,333127],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[333218,333219],"content":"<","needQuote":true,"nodes":[]},{"pos":[333297,333309],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[333395,333396],"content":"<","needQuote":true,"nodes":[]},{"pos":[333423,333427],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[333458,333459]},{"pos":[333491,333497],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[333593,333594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333772,333815],"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[333934,333935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334012,334023],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[334109,334112]},{"pos":[334197,334209],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[334296,334299]},{"pos":[334333,334337],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[334368,334369]},{"pos":[334401,334407],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[334439,334440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334467,334468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[334496,334497]},{"pos":[334585,334602],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[334694,334697]},{"pos":[334782,334794],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[334881,334884]},{"pos":[334918,334922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[334953,334954]},{"pos":[334986,334992],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[335024,335025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335052,335053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335080,335081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336227,336414],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TResult&gt;)","pos":[0,187],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)"}]},{"pos":[337546,337601],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,55],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[337732,337733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337810,337821],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[337906,337907],"content":"<","needQuote":true,"nodes":[]},{"pos":[337934,337940],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[338005,338006]},{"pos":[338061,338065],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[338123,338124],"content":"<","needQuote":true,"nodes":[]},{"pos":[338202,338214],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[338300,338301],"content":"<","needQuote":true,"nodes":[]},{"pos":[338328,338332],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[338363,338364]},{"pos":[338396,338402],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[338467,338468]},{"pos":[338500,338504],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[338567,338568]},{"pos":[338623,338627],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[338685,338686],"content":"<","needQuote":true,"nodes":[]},{"pos":[338713,338719],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[338752,338753]},{"pos":[338785,338789],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[338852,338853]},{"pos":[338908,338912],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[338970,338971],"content":"<","needQuote":true,"nodes":[]},{"pos":[339049,339061],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[339147,339148],"content":"<","needQuote":true,"nodes":[]},{"pos":[339175,339179],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[339210,339211]},{"pos":[339243,339249],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[339314,339315]},{"pos":[339347,339353],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[339386,339387]},{"pos":[339419,339426],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[339491,339492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339682,339743],"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[339880,339881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339958,339969],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[340055,340058]},{"pos":[340092,340098],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[340130,340131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[340159,340160]},{"pos":[340215,340219],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[340278,340281]},{"pos":[340366,340378],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[340465,340468]},{"pos":[340502,340506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[340537,340538]},{"pos":[340570,340576],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[340608,340609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[340637,340638]},{"pos":[340670,340674],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[340704,340705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[340733,340734]},{"pos":[340789,340793],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[340852,340855]},{"pos":[340889,340895],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[340928,340929]},{"pos":[340961,340965],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[340995,340996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[341024,341025]},{"pos":[341080,341084],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[341143,341146]},{"pos":[341231,341243],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[341330,341333]},{"pos":[341367,341371],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[341402,341403]},{"pos":[341435,341441],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[341473,341474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[341502,341503]},{"pos":[341535,341541],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[341574,341575]},{"pos":[341607,341614],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[341647,341648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341675,341676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343067,343279],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,212],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[344596,344651],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,55],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[344782,344783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344860,344871],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[344956,344957],"content":"<","needQuote":true,"nodes":[]},{"pos":[344984,344990],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[345055,345056]},{"pos":[345111,345115],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[345173,345174],"content":"<","needQuote":true,"nodes":[]},{"pos":[345252,345264],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[345350,345351],"content":"<","needQuote":true,"nodes":[]},{"pos":[345378,345382],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[345413,345414]},{"pos":[345446,345452],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[345517,345518]},{"pos":[345550,345554],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[345617,345618]},{"pos":[345673,345677],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[345735,345736],"content":"<","needQuote":true,"nodes":[]},{"pos":[345763,345769],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[345802,345803]},{"pos":[345835,345839],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[345902,345903]},{"pos":[345958,345962],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[346020,346021],"content":"<","needQuote":true,"nodes":[]},{"pos":[346099,346111],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[346197,346198],"content":"<","needQuote":true,"nodes":[]},{"pos":[346225,346229],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[346260,346261]},{"pos":[346293,346299],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[346364,346365]},{"pos":[346397,346403],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[346436,346437]},{"pos":[346469,346476],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[346542,346543]},{"pos":[346631,346648],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[346739,346740],"content":"<","needQuote":true,"nodes":[]},{"pos":[346767,346771],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[346833,346834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347074,347135],"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[347272,347273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347350,347361],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[347447,347450]},{"pos":[347484,347490],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[347522,347523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[347551,347552]},{"pos":[347607,347611],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[347670,347673]},{"pos":[347758,347770],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[347857,347860]},{"pos":[347894,347898],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[347929,347930]},{"pos":[347962,347968],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[348000,348001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[348029,348030]},{"pos":[348062,348066],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[348096,348097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[348125,348126]},{"pos":[348181,348185],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[348244,348247]},{"pos":[348281,348287],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[348320,348321]},{"pos":[348353,348357],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[348387,348388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[348416,348417]},{"pos":[348472,348476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[348535,348538]},{"pos":[348623,348635],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[348722,348725]},{"pos":[348759,348763],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[348794,348795]},{"pos":[348827,348833],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[348865,348866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[348894,348895]},{"pos":[348927,348933],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[348966,348967]},{"pos":[348999,349006],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[349039,349040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[349068,349069]},{"pos":[349157,349174],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[349266,349269]},{"pos":[349303,349307],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[349337,349338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349365,349366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350401,350435],"content":"Last<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,34],"source":"Last<KeyValuePair<TKey, TValue>>()"}]},{"pos":[350756,350788],"content":"Last<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Last<KeyValuePair<TKey, TValue>>"}]},{"pos":[350896,350897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350924,350925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351003,351041],"content":"Last(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Last(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[351155,351156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351183,351184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351799,351874],"content":"Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,75],"source":"Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[352445,352477],"content":"Last<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Last<KeyValuePair<TKey, TValue>>"}]},{"pos":[352585,352586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352636,352640],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[352698,352699],"content":"<","needQuote":true,"nodes":[]},{"pos":[352777,352789],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[352875,352876],"content":"<","needQuote":true,"nodes":[]},{"pos":[352903,352907],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[352938,352939]},{"pos":[352971,352977],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[353042,353043]},{"pos":[353099,353106],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[353199,353200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353311,353349],"content":"Last(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Last(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[353463,353464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353514,353518],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[353577,353580]},{"pos":[353665,353677],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[353764,353767]},{"pos":[353801,353805],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[353836,353837]},{"pos":[353869,353875],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[353907,353908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[353936,353937]},{"pos":[353993,354000],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[354061,354062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354089,354090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354725,354768],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,43],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[355125,355166],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[355283,355284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355311,355312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355399,355446],"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[355569,355570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355597,355598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356258,356342],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,84],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[356949,356990],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[357107,357108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357158,357162],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[357220,357221],"content":"<","needQuote":true,"nodes":[]},{"pos":[357299,357311],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[357397,357398],"content":"<","needQuote":true,"nodes":[]},{"pos":[357425,357429],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[357460,357461]},{"pos":[357493,357499],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[357564,357565]},{"pos":[357621,357628],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[357721,357722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357842,357889],"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[358012,358013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358063,358067],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[358126,358129]},{"pos":[358214,358226],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[358313,358316]},{"pos":[358350,358354],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[358385,358386]},{"pos":[358418,358424],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[358456,358457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[358485,358486]},{"pos":[358542,358549],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[358610,358611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358638,358639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359293,359332],"content":"LongCount<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,39],"source":"LongCount<KeyValuePair<TKey, TValue>>()"}]},{"pos":[359673,359710],"content":"LongCount<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"LongCount<KeyValuePair<TKey, TValue>>"}]},{"pos":[359823,359824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359851,359852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359935,359978],"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[360097,360098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360125,360126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360766,360846],"content":"LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[361437,361474],"content":"LongCount<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"LongCount<KeyValuePair<TKey, TValue>>"}]},{"pos":[361587,361588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361638,361642],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[361700,361701],"content":"<","needQuote":true,"nodes":[]},{"pos":[361779,361791],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[361877,361878],"content":"<","needQuote":true,"nodes":[]},{"pos":[361905,361909],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[361940,361941]},{"pos":[361973,361979],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[362044,362045]},{"pos":[362101,362108],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[362201,362202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362318,362361],"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[362480,362481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362531,362535],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[362594,362597]},{"pos":[362682,362694],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[362781,362784]},{"pos":[362818,362822],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[362853,362854]},{"pos":[362886,362892],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[362924,362925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[362953,362954]},{"pos":[363010,363017],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[363078,363079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363106,363107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363737,363770],"content":"Max<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Max<KeyValuePair<TKey, TValue>>()"}]},{"pos":[364087,364118],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[364225,364226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364253,364254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364331,364368],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[364481,364482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364509,364510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365120,365194],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[365761,365792],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[365899,365900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365950,365954],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[366012,366013],"content":"<","needQuote":true,"nodes":[]},{"pos":[366091,366103],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[366189,366190],"content":"<","needQuote":true,"nodes":[]},{"pos":[366217,366221],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[366252,366253]},{"pos":[366285,366291],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[366356,366357]},{"pos":[366413,366420],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[366513,366514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366624,366661],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[366774,366775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[366825,366829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[366888,366891]},{"pos":[366976,366988],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[367075,367078]},{"pos":[367112,367116],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[367147,367148]},{"pos":[367180,367186],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[367218,367219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[367247,367248]},{"pos":[367304,367311],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[367372,367373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367400,367401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368129,368202],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[368765,368796],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[368903,368904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368954,368958],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[369016,369017],"content":"<","needQuote":true,"nodes":[]},{"pos":[369095,369107],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[369193,369194],"content":"<","needQuote":true,"nodes":[]},{"pos":[369221,369225],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[369256,369257]},{"pos":[369289,369295],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[369360,369361]},{"pos":[369416,369422],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[369514,369515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369624,369661],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[369774,369775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369825,369829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[369888,369891]},{"pos":[369976,369988],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[370075,370078]},{"pos":[370112,370116],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[370147,370148]},{"pos":[370180,370186],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[370218,370219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[370247,370248]},{"pos":[370303,370309],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[370369,370370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370397,370398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371121,371193],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[371752,371783],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[371890,371891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371941,371945],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[372003,372004],"content":"<","needQuote":true,"nodes":[]},{"pos":[372082,372094],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[372180,372181],"content":"<","needQuote":true,"nodes":[]},{"pos":[372208,372212],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[372243,372244]},{"pos":[372276,372282],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[372347,372348]},{"pos":[372402,372407],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[372498,372499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372607,372644],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[372757,372758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372808,372812],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[372871,372874]},{"pos":[372959,372971],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[373058,373061]},{"pos":[373095,373099],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[373130,373131]},{"pos":[373163,373169],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[373201,373202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[373230,373231]},{"pos":[373285,373290],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[373349,373350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373377,373378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374098,374170],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[374729,374760],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[374867,374868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374918,374922],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[374980,374981],"content":"<","needQuote":true,"nodes":[]},{"pos":[375059,375071],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[375157,375158],"content":"<","needQuote":true,"nodes":[]},{"pos":[375185,375189],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[375220,375221]},{"pos":[375253,375259],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[375324,375325]},{"pos":[375379,375384],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[375475,375476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375584,375621],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[375734,375735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375785,375789],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[375848,375851]},{"pos":[375936,375948],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[376035,376038]},{"pos":[376072,376076],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[376107,376108]},{"pos":[376140,376146],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[376178,376179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[376207,376208]},{"pos":[376262,376267],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[376326,376327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376354,376355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377113,377197],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[377831,377862],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[377969,377970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378020,378024],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[378082,378083],"content":"<","needQuote":true,"nodes":[]},{"pos":[378161,378173],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[378259,378260],"content":"<","needQuote":true,"nodes":[]},{"pos":[378287,378291],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[378322,378323]},{"pos":[378355,378361],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[378426,378427]},{"pos":[378486,378494],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[378556,378557],"content":"<","needQuote":true,"nodes":[]},{"pos":[378608,378615],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[378740,378741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378868,378905],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[379018,379019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379069,379073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[379132,379135]},{"pos":[379220,379232],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[379319,379322]},{"pos":[379356,379360],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[379391,379392]},{"pos":[379424,379430],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[379462,379463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[379491,379492]},{"pos":[379551,379559],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[379622,379625]},{"pos":[379683,379690],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[379751,379752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379779,379780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379807,379808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380610,380693],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[381323,381354],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[381461,381462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381512,381516],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[381574,381575],"content":"<","needQuote":true,"nodes":[]},{"pos":[381653,381665],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[381751,381752],"content":"<","needQuote":true,"nodes":[]},{"pos":[381779,381783],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[381814,381815]},{"pos":[381847,381853],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[381918,381919]},{"pos":[381978,381986],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[382048,382049],"content":"<","needQuote":true,"nodes":[]},{"pos":[382099,382105],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[382229,382230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382356,382393],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[382506,382507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382557,382561],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[382620,382623]},{"pos":[382708,382720],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[382807,382810]},{"pos":[382844,382848],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[382879,382880]},{"pos":[382912,382918],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[382950,382951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[382979,382980]},{"pos":[383039,383047],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[383110,383113]},{"pos":[383170,383176],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[383236,383237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383264,383265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383292,383293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384090,384172],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[384798,384829],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[384936,384937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384987,384991],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[385049,385050],"content":"<","needQuote":true,"nodes":[]},{"pos":[385128,385140],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[385226,385227],"content":"<","needQuote":true,"nodes":[]},{"pos":[385254,385258],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[385289,385290]},{"pos":[385322,385328],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[385393,385394]},{"pos":[385453,385461],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[385523,385524],"content":"<","needQuote":true,"nodes":[]},{"pos":[385573,385578],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[385701,385702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385827,385864],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[385977,385978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386028,386032],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[386091,386094]},{"pos":[386179,386191],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[386278,386281]},{"pos":[386315,386319],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[386350,386351]},{"pos":[386383,386389],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[386421,386422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[386450,386451]},{"pos":[386510,386518],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[386581,386584]},{"pos":[386640,386645],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[386704,386705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386732,386733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386760,386761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387555,387637],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[388263,388294],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[388401,388402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[388452,388456],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[388514,388515],"content":"<","needQuote":true,"nodes":[]},{"pos":[388593,388605],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[388691,388692],"content":"<","needQuote":true,"nodes":[]},{"pos":[388719,388723],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[388754,388755]},{"pos":[388787,388793],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[388858,388859]},{"pos":[388918,388926],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[388988,388989],"content":"<","needQuote":true,"nodes":[]},{"pos":[389038,389043],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[389166,389167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389292,389329],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[389442,389443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389493,389497],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[389556,389559]},{"pos":[389644,389656],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[389743,389746]},{"pos":[389780,389784],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[389815,389816]},{"pos":[389848,389854],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[389886,389887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[389915,389916]},{"pos":[389975,389983],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[390046,390049]},{"pos":[390105,390110],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[390169,390170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390197,390198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390225,390226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391022,391105],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[391735,391766],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[391873,391874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[391924,391928],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[391986,391987],"content":"<","needQuote":true,"nodes":[]},{"pos":[392065,392077],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[392163,392164],"content":"<","needQuote":true,"nodes":[]},{"pos":[392191,392195],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[392226,392227]},{"pos":[392259,392265],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[392330,392331]},{"pos":[392390,392398],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[392460,392461],"content":"<","needQuote":true,"nodes":[]},{"pos":[392511,392517],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[392641,392642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392768,392805],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[392918,392919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392969,392973],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[393032,393035]},{"pos":[393120,393132],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[393219,393222]},{"pos":[393256,393260],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[393291,393292]},{"pos":[393324,393330],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[393362,393363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[393391,393392]},{"pos":[393451,393459],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[393522,393525]},{"pos":[393582,393588],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[393648,393649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393676,393677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393704,393705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394470,394543],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[395106,395137],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[395244,395245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395295,395299],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[395357,395358],"content":"<","needQuote":true,"nodes":[]},{"pos":[395436,395448],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[395534,395535],"content":"<","needQuote":true,"nodes":[]},{"pos":[395562,395566],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[395597,395598]},{"pos":[395630,395636],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[395701,395702]},{"pos":[395757,395763],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[395855,395856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395965,396002],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[396115,396116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396166,396170],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[396229,396232]},{"pos":[396317,396329],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[396416,396419]},{"pos":[396453,396457],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[396488,396489]},{"pos":[396521,396527],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[396559,396560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[396588,396589]},{"pos":[396644,396650],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[396710,396711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396738,396739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397450,397533],"content":"Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[398102,398142],"content":"Max<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,40],"source":"Max<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[398258,398259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398309,398313],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[398371,398372],"content":"<","needQuote":true,"nodes":[]},{"pos":[398450,398462],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[398548,398549],"content":"<","needQuote":true,"nodes":[]},{"pos":[398576,398580],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[398611,398612]},{"pos":[398644,398650],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[398715,398716]},{"pos":[398748,398755],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[398820,398821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398920,398966],"content":"Max(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,46]}]},{"pos":[399088,399089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399139,399143],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[399202,399205]},{"pos":[399290,399302],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[399389,399392]},{"pos":[399426,399430],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[399461,399462]},{"pos":[399494,399500],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[399532,399533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[399561,399562]},{"pos":[399594,399601],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[399634,399635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399662,399663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400282,400315],"content":"Min<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Min<KeyValuePair<TKey, TValue>>()"}]},{"pos":[400632,400663],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[400770,400771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[400798,400799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400876,400913],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[401026,401027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401054,401055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401665,401739],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[402306,402337],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[402444,402445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402495,402499],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[402557,402558],"content":"<","needQuote":true,"nodes":[]},{"pos":[402636,402648],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[402734,402735],"content":"<","needQuote":true,"nodes":[]},{"pos":[402762,402766],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[402797,402798]},{"pos":[402830,402836],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[402901,402902]},{"pos":[402958,402965],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[403058,403059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403169,403206],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[403319,403320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403370,403374],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[403433,403436]},{"pos":[403521,403533],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[403620,403623]},{"pos":[403657,403661],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[403692,403693]},{"pos":[403725,403731],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[403763,403764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[403792,403793]},{"pos":[403849,403856],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[403917,403918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403945,403946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404674,404747],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[405310,405341],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[405448,405449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405499,405503],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[405561,405562],"content":"<","needQuote":true,"nodes":[]},{"pos":[405640,405652],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[405738,405739],"content":"<","needQuote":true,"nodes":[]},{"pos":[405766,405770],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[405801,405802]},{"pos":[405834,405840],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[405905,405906]},{"pos":[405961,405967],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[406059,406060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406169,406206],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[406319,406320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406370,406374],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[406433,406436]},{"pos":[406521,406533],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[406620,406623]},{"pos":[406657,406661],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[406692,406693]},{"pos":[406725,406731],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[406763,406764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[406792,406793]},{"pos":[406848,406854],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[406914,406915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406942,406943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407666,407738],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[408297,408328],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[408435,408436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408486,408490],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[408548,408549],"content":"<","needQuote":true,"nodes":[]},{"pos":[408627,408639],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[408725,408726],"content":"<","needQuote":true,"nodes":[]},{"pos":[408753,408757],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[408788,408789]},{"pos":[408821,408827],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[408892,408893]},{"pos":[408947,408952],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[409043,409044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409152,409189],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[409302,409303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409353,409357],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[409416,409419]},{"pos":[409504,409516],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[409603,409606]},{"pos":[409640,409644],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[409675,409676]},{"pos":[409708,409714],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[409746,409747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[409775,409776]},{"pos":[409830,409835],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[409894,409895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409922,409923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410643,410715],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[411274,411305],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[411412,411413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411463,411467],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[411525,411526],"content":"<","needQuote":true,"nodes":[]},{"pos":[411604,411616],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[411702,411703],"content":"<","needQuote":true,"nodes":[]},{"pos":[411730,411734],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[411765,411766]},{"pos":[411798,411804],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[411869,411870]},{"pos":[411924,411929],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[412020,412021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412129,412166],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[412279,412280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412330,412334],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[412393,412396]},{"pos":[412481,412493],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[412580,412583]},{"pos":[412617,412621],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[412652,412653]},{"pos":[412685,412691],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[412723,412724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[412752,412753]},{"pos":[412807,412812],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[412871,412872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412899,412900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413658,413742],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[414376,414407],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[414514,414515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414565,414569],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[414627,414628],"content":"<","needQuote":true,"nodes":[]},{"pos":[414706,414718],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[414804,414805],"content":"<","needQuote":true,"nodes":[]},{"pos":[414832,414836],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[414867,414868]},{"pos":[414900,414906],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[414971,414972]},{"pos":[415031,415039],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[415101,415102],"content":"<","needQuote":true,"nodes":[]},{"pos":[415153,415160],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[415285,415286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415413,415450],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[415563,415564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415614,415618],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[415677,415680]},{"pos":[415765,415777],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[415864,415867]},{"pos":[415901,415905],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[415936,415937]},{"pos":[415969,415975],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[416007,416008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[416036,416037]},{"pos":[416096,416104],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[416167,416170]},{"pos":[416228,416235],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[416296,416297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416324,416325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416352,416353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417155,417238],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[417868,417899],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[418006,418007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418057,418061],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[418119,418120],"content":"<","needQuote":true,"nodes":[]},{"pos":[418198,418210],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[418296,418297],"content":"<","needQuote":true,"nodes":[]},{"pos":[418324,418328],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[418359,418360]},{"pos":[418392,418398],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[418463,418464]},{"pos":[418523,418531],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[418593,418594],"content":"<","needQuote":true,"nodes":[]},{"pos":[418644,418650],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[418774,418775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418901,418938],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[419051,419052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419102,419106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[419165,419168]},{"pos":[419253,419265],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[419352,419355]},{"pos":[419389,419393],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[419424,419425]},{"pos":[419457,419463],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[419495,419496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[419524,419525]},{"pos":[419584,419592],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[419655,419658]},{"pos":[419715,419721],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[419781,419782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419809,419810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419837,419838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420635,420717],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[421343,421374],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[421481,421482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421532,421536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[421594,421595],"content":"<","needQuote":true,"nodes":[]},{"pos":[421673,421685],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[421771,421772],"content":"<","needQuote":true,"nodes":[]},{"pos":[421799,421803],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[421834,421835]},{"pos":[421867,421873],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[421938,421939]},{"pos":[421998,422006],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[422068,422069],"content":"<","needQuote":true,"nodes":[]},{"pos":[422118,422123],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[422246,422247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422372,422409],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[422522,422523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422573,422577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[422636,422639]},{"pos":[422724,422736],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[422823,422826]},{"pos":[422860,422864],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[422895,422896]},{"pos":[422928,422934],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[422966,422967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[422995,422996]},{"pos":[423055,423063],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[423126,423129]},{"pos":[423185,423190],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[423249,423250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423277,423278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423305,423306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424100,424182],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[424808,424839],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[424946,424947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424997,425001],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[425059,425060],"content":"<","needQuote":true,"nodes":[]},{"pos":[425138,425150],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[425236,425237],"content":"<","needQuote":true,"nodes":[]},{"pos":[425264,425268],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[425299,425300]},{"pos":[425332,425338],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[425403,425404]},{"pos":[425463,425471],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[425533,425534],"content":"<","needQuote":true,"nodes":[]},{"pos":[425583,425588],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[425711,425712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425837,425874],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[425987,425988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426038,426042],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[426101,426104]},{"pos":[426189,426201],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[426288,426291]},{"pos":[426325,426329],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[426360,426361]},{"pos":[426393,426399],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[426431,426432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[426460,426461]},{"pos":[426520,426528],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[426591,426594]},{"pos":[426650,426655],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[426714,426715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426742,426743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426770,426771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427567,427650],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[428280,428311],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[428418,428419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428469,428473],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[428531,428532],"content":"<","needQuote":true,"nodes":[]},{"pos":[428610,428622],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[428708,428709],"content":"<","needQuote":true,"nodes":[]},{"pos":[428736,428740],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[428771,428772]},{"pos":[428804,428810],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[428875,428876]},{"pos":[428935,428943],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[429005,429006],"content":"<","needQuote":true,"nodes":[]},{"pos":[429056,429062],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[429186,429187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429313,429350],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[429463,429464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429514,429518],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[429577,429580]},{"pos":[429665,429677],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[429764,429767]},{"pos":[429801,429805],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[429836,429837]},{"pos":[429869,429875],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[429907,429908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[429936,429937]},{"pos":[429996,430004],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[430067,430070]},{"pos":[430127,430133],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[430193,430194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430221,430222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430249,430250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431015,431088],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[431651,431682],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[431789,431790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431840,431844],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[431902,431903],"content":"<","needQuote":true,"nodes":[]},{"pos":[431981,431993],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[432079,432080],"content":"<","needQuote":true,"nodes":[]},{"pos":[432107,432111],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[432142,432143]},{"pos":[432175,432181],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[432246,432247]},{"pos":[432302,432308],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[432400,432401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432510,432547],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[432660,432661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432711,432715],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[432774,432777]},{"pos":[432862,432874],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[432961,432964]},{"pos":[432998,433002],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[433033,433034]},{"pos":[433066,433072],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[433104,433105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[433133,433134]},{"pos":[433189,433195],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[433255,433256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433283,433284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433995,434078],"content":"Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[434647,434687],"content":"Min<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,40],"source":"Min<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[434803,434804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434854,434858],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[434916,434917],"content":"<","needQuote":true,"nodes":[]},{"pos":[434995,435007],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[435093,435094],"content":"<","needQuote":true,"nodes":[]},{"pos":[435121,435125],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[435156,435157]},{"pos":[435189,435195],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[435260,435261]},{"pos":[435293,435300],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[435365,435366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435465,435511],"content":"Min(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,46]}]},{"pos":[435633,435634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435684,435688],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[435747,435750]},{"pos":[435835,435847],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[435934,435937]},{"pos":[435971,435975],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[436006,436007]},{"pos":[436039,436045],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[436077,436078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[436106,436107]},{"pos":[436139,436146],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[436179,436180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436207,436208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436764,436781],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[436993,437008],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[437072,437073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437100,437101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437181,437199],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[437266,437267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437294,437295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437849,437930],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,81],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[438497,438538],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[438655,438656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438706,438710],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[438768,438769],"content":"<","needQuote":true,"nodes":[]},{"pos":[438847,438859],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[438945,438946],"content":"<","needQuote":true,"nodes":[]},{"pos":[438973,438977],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[439008,439009]},{"pos":[439041,439047],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[439112,439113]},{"pos":[439145,439149],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[439211,439212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439315,439362],"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[439485,439486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439536,439540],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[439599,439602]},{"pos":[439687,439699],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[439786,439789]},{"pos":[439823,439827],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[439858,439859]},{"pos":[439891,439897],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[439929,439930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[439958,439959]},{"pos":[439991,439995],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[440025,440026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440053,440054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440867,440965],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,98],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)"}]},{"pos":[441685,441726],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[441843,441844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441894,441898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[441956,441957],"content":"<","needQuote":true,"nodes":[]},{"pos":[442035,442047],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[442133,442134],"content":"<","needQuote":true,"nodes":[]},{"pos":[442161,442165],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[442196,442197]},{"pos":[442229,442235],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[442300,442301]},{"pos":[442333,442337],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[442400,442401]},{"pos":[442481,442490],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[442573,442574],"content":"<","needQuote":true,"nodes":[]},{"pos":[442601,442605],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[442667,442668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442813,442860],"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[442983,442984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443034,443038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[443097,443100]},{"pos":[443185,443197],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[443284,443287]},{"pos":[443321,443325],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[443356,443357]},{"pos":[443389,443395],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[443427,443428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[443456,443457]},{"pos":[443489,443493],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[443523,443524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[443552,443553]},{"pos":[443633,443642],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[443726,443729]},{"pos":[443763,443767],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[443797,443798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443825,443826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444651,444742],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,91],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[445349,445400],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,51],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[445527,445528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445578,445582],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[445640,445641],"content":"<","needQuote":true,"nodes":[]},{"pos":[445719,445731],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[445817,445818],"content":"<","needQuote":true,"nodes":[]},{"pos":[445845,445849],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[445880,445881]},{"pos":[445913,445919],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[445984,445985]},{"pos":[446017,446021],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[446083,446084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446197,446254],"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,57]}]},{"pos":[446387,446388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446438,446442],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[446501,446504]},{"pos":[446589,446601],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[446688,446691]},{"pos":[446725,446729],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[446760,446761]},{"pos":[446793,446799],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[446831,446832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[446860,446861]},{"pos":[446893,446897],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[446927,446928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446955,446956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447819,447927],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,108],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)"}]},{"pos":[448687,448738],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,51],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[448865,448866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448916,448920],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[448978,448979],"content":"<","needQuote":true,"nodes":[]},{"pos":[449057,449069],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[449155,449156],"content":"<","needQuote":true,"nodes":[]},{"pos":[449183,449187],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[449218,449219]},{"pos":[449251,449257],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[449322,449323]},{"pos":[449355,449359],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[449422,449423]},{"pos":[449503,449512],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[449595,449596],"content":"<","needQuote":true,"nodes":[]},{"pos":[449623,449627],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[449689,449690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449845,449902],"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,57]}]},{"pos":[450035,450036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450086,450090],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[450149,450152]},{"pos":[450237,450249],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[450336,450339]},{"pos":[450373,450377],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[450408,450409]},{"pos":[450441,450447],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[450479,450480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[450508,450509]},{"pos":[450541,450545],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[450575,450576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[450604,450605]},{"pos":[450685,450694],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[450778,450781]},{"pos":[450815,450819],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[450849,450850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450877,450878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451614,451651],"content":"Reverse<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Reverse&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,37],"source":"Reverse<KeyValuePair<TKey, TValue>>()"}]},{"pos":[451984,452019],"content":"Reverse<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Reverse&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Reverse<KeyValuePair<TKey, TValue>>"}]},{"pos":[452130,452131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452158,452159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452240,452281],"content":"Reverse(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Reverse(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[452398,452399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452426,452427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453039,453125],"content":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,86],"source":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[453706,453749],"content":"Select<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,43],"source":"Select<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[453868,453869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453919,453923],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[453981,453982],"content":"<","needQuote":true,"nodes":[]},{"pos":[454060,454072],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[454158,454159],"content":"<","needQuote":true,"nodes":[]},{"pos":[454186,454190],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[454221,454222]},{"pos":[454254,454260],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[454325,454326]},{"pos":[454358,454365],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[454430,454431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454533,454582],"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,49]}]},{"pos":[454707,454708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454758,454762],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[454821,454824]},{"pos":[454909,454921],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[455008,455011]},{"pos":[455045,455049],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[455080,455081]},{"pos":[455113,455119],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[455151,455152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[455180,455181]},{"pos":[455213,455220],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[455253,455254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455281,455282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456044,456137],"content":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, TResult&gt;)","pos":[0,93],"source":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)"}]},{"pos":[456766,456809],"content":"Select<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,43],"source":"Select<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[456928,456929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456979,456983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[457041,457042],"content":"<","needQuote":true,"nodes":[]},{"pos":[457120,457132],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[457218,457219],"content":"<","needQuote":true,"nodes":[]},{"pos":[457246,457250],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[457281,457282]},{"pos":[457314,457320],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[457385,457386]},{"pos":[457440,457445],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[457505,457506]},{"pos":[457538,457545],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[457610,457611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457726,457775],"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,49]}]},{"pos":[457900,457901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457951,457955],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[458014,458017]},{"pos":[458102,458114],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[458201,458204]},{"pos":[458238,458242],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[458273,458274]},{"pos":[458306,458312],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[458344,458345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[458373,458374]},{"pos":[458428,458433],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[458493,458494]},{"pos":[458526,458533],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[458566,458567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458594,458595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459446,459549],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,103],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)"}]},{"pos":[460285,460332],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,47],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[460455,460456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460506,460510],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[460568,460569],"content":"<","needQuote":true,"nodes":[]},{"pos":[460647,460659],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[460745,460746],"content":"<","needQuote":true,"nodes":[]},{"pos":[460773,460777],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[460808,460809]},{"pos":[460841,460847],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[460912,460913]},{"pos":[460995,461006],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[461091,461092],"content":"<","needQuote":true,"nodes":[]},{"pos":[461119,461126],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[461223,461224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461370,461423],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,53]}]},{"pos":[461552,461553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461603,461607],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[461666,461669]},{"pos":[461754,461766],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[461853,461856]},{"pos":[461890,461894],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[461925,461926]},{"pos":[461958,461964],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[461996,461997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[462025,462026]},{"pos":[462108,462119],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[462205,462208]},{"pos":[462242,462249],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[462282,462283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462310,462311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462338,462339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463270,463380],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,110],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)"}]},{"pos":[464164,464211],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,47],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[464334,464335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464385,464389],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[464447,464448],"content":"<","needQuote":true,"nodes":[]},{"pos":[464526,464538],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[464624,464625],"content":"<","needQuote":true,"nodes":[]},{"pos":[464652,464656],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[464687,464688]},{"pos":[464720,464726],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[464791,464792]},{"pos":[464846,464851],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[464911,464912]},{"pos":[464994,465005],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[465090,465091],"content":"<","needQuote":true,"nodes":[]},{"pos":[465118,465125],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[465222,465223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465382,465435],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,53]}]},{"pos":[465564,465565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465615,465619],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[465678,465681]},{"pos":[465766,465778],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[465865,465868]},{"pos":[465902,465906],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[465937,465938]},{"pos":[465970,465976],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[466008,466009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[466037,466038]},{"pos":[466092,466097],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[466157,466158]},{"pos":[466240,466251],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[466337,466340]},{"pos":[466374,466381],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[466414,466415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466442,466443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466470,466471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467526,467702],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;)","pos":[0,176],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)"}]},{"pos":[468762,468822],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;","pos":[0,60],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>"}]},{"pos":[468958,468959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469009,469013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[469071,469072],"content":"<","needQuote":true,"nodes":[]},{"pos":[469150,469162],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[469248,469249],"content":"<","needQuote":true,"nodes":[]},{"pos":[469276,469280],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[469311,469312]},{"pos":[469344,469350],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[469415,469416]},{"pos":[469498,469509],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[469594,469595],"content":"<","needQuote":true,"nodes":[]},{"pos":[469622,469633],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[469735,469736]},{"pos":[469791,469795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[469853,469854],"content":"<","needQuote":true,"nodes":[]},{"pos":[469932,469944],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[470030,470031],"content":"<","needQuote":true,"nodes":[]},{"pos":[470058,470062],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[470093,470094]},{"pos":[470126,470132],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[470197,470198]},{"pos":[470230,470241],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[470279,470280]},{"pos":[470312,470319],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[470384,470385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470556,470622],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","pos":[0,66]}]},{"pos":[470764,470765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470815,470819],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[470878,470881]},{"pos":[470966,470978],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[471065,471068]},{"pos":[471102,471106],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[471137,471138]},{"pos":[471170,471176],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[471208,471209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[471237,471238]},{"pos":[471320,471331],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[471417,471420]},{"pos":[471454,471465],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[471502,471503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471530,471531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[471559,471560]},{"pos":[471615,471619],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[471678,471681]},{"pos":[471766,471778],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[471865,471868]},{"pos":[471902,471906],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[471937,471938]},{"pos":[471970,471976],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[472008,472009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[472037,472038]},{"pos":[472070,472081],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[472119,472120]},{"pos":[472152,472159],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[472192,472193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472220,472221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473452,473635],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;)","pos":[0,183],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)"}]},{"pos":[474743,474803],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;","pos":[0,60],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>"}]},{"pos":[474939,474940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474990,474994],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[475052,475053],"content":"<","needQuote":true,"nodes":[]},{"pos":[475131,475143],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[475229,475230],"content":"<","needQuote":true,"nodes":[]},{"pos":[475257,475261],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[475292,475293]},{"pos":[475325,475331],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[475396,475397]},{"pos":[475451,475456],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[475516,475517]},{"pos":[475599,475610],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[475695,475696],"content":"<","needQuote":true,"nodes":[]},{"pos":[475723,475734],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[475836,475837]},{"pos":[475892,475896],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[475954,475955],"content":"<","needQuote":true,"nodes":[]},{"pos":[476033,476045],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[476131,476132],"content":"<","needQuote":true,"nodes":[]},{"pos":[476159,476163],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[476194,476195]},{"pos":[476227,476233],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[476298,476299]},{"pos":[476331,476342],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[476380,476381]},{"pos":[476413,476420],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[476485,476486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476670,476736],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","pos":[0,66]}]},{"pos":[476878,476879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476929,476933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[476992,476995]},{"pos":[477080,477092],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[477179,477182]},{"pos":[477216,477220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[477251,477252]},{"pos":[477284,477290],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[477322,477323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[477351,477352]},{"pos":[477406,477411],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[477471,477472]},{"pos":[477554,477565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[477651,477654]},{"pos":[477688,477699],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[477736,477737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477764,477765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[477793,477794]},{"pos":[477849,477853],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[477912,477915]},{"pos":[478000,478012],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[478099,478102]},{"pos":[478136,478140],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[478171,478172]},{"pos":[478204,478210],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[478242,478243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[478271,478272]},{"pos":[478304,478315],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[478353,478354]},{"pos":[478386,478393],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[478426,478427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478454,478455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479530,479612],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,82],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[480251,480292],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>"}]},{"pos":[480409,480410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480487,480498],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[480583,480584],"content":"<","needQuote":true,"nodes":[]},{"pos":[480662,480674],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[480760,480761],"content":"<","needQuote":true,"nodes":[]},{"pos":[480788,480792],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[480823,480824]},{"pos":[480856,480862],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[480958,480959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481091,481138],"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[481261,481262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481339,481350],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[481436,481439]},{"pos":[481524,481536],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[481623,481626]},{"pos":[481660,481664],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[481695,481696]},{"pos":[481728,481734],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[481766,481767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481794,481795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481822,481823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482788,482917],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,129],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[483867,483908],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>"}]},{"pos":[484025,484026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484103,484114],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[484199,484200],"content":"<","needQuote":true,"nodes":[]},{"pos":[484278,484290],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[484376,484377],"content":"<","needQuote":true,"nodes":[]},{"pos":[484404,484408],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[484439,484440]},{"pos":[484472,484478],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[484575,484576]},{"pos":[484664,484681],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[484772,484773],"content":"<","needQuote":true,"nodes":[]},{"pos":[484851,484863],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[484949,484950],"content":"<","needQuote":true,"nodes":[]},{"pos":[484977,484981],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[485012,485013]},{"pos":[485045,485051],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[485147,485148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485330,485377],"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[485500,485501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485578,485589],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[485675,485678]},{"pos":[485763,485775],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[485862,485865]},{"pos":[485899,485903],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[485934,485935]},{"pos":[485967,485973],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[486005,486006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486033,486034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[486062,486063]},{"pos":[486151,486168],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[486260,486263]},{"pos":[486348,486360],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[486447,486450]},{"pos":[486484,486488],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[486519,486520]},{"pos":[486552,486558],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[486590,486591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486618,486619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486646,486647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487453,487489],"content":"Single<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,36],"source":"Single<KeyValuePair<TKey, TValue>>()"}]},{"pos":[487818,487852],"content":"Single<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Single<KeyValuePair<TKey, TValue>>"}]},{"pos":[487962,487963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487990,487991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488071,488111],"content":"Single(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Single(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[488227,488228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488255,488256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488881,488958],"content":"Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,77],"source":"Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[489537,489571],"content":"Single<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Single<KeyValuePair<TKey, TValue>>"}]},{"pos":[489681,489682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489732,489736],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[489794,489795],"content":"<","needQuote":true,"nodes":[]},{"pos":[489873,489885],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[489971,489972],"content":"<","needQuote":true,"nodes":[]},{"pos":[489999,490003],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[490034,490035]},{"pos":[490067,490073],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[490138,490139]},{"pos":[490195,490202],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[490295,490296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490409,490449],"content":"Single(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Single(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[490565,490566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490616,490620],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[490679,490682]},{"pos":[490767,490779],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[490866,490869]},{"pos":[490903,490907],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[490938,490939]},{"pos":[490971,490977],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[491009,491010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[491038,491039]},{"pos":[491095,491102],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[491163,491164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491191,491192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491837,491882],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,45],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[492247,492290],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,43],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[492409,492410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492437,492438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492527,492576],"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,49]}]},{"pos":[492701,492702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492729,492730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493400,493486],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,86],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[494101,494144],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,43],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[494263,494264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494314,494318],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[494376,494377],"content":"<","needQuote":true,"nodes":[]},{"pos":[494455,494467],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[494553,494554],"content":"<","needQuote":true,"nodes":[]},{"pos":[494581,494585],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[494616,494617]},{"pos":[494649,494655],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[494720,494721]},{"pos":[494777,494784],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[494877,494878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495000,495049],"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,49]}]},{"pos":[495174,495175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495225,495229],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[495288,495291]},{"pos":[495376,495388],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[495475,495478]},{"pos":[495512,495516],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[495547,495548]},{"pos":[495580,495586],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[495618,495619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[495647,495648]},{"pos":[495704,495711],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[495772,495773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495800,495801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496478,496517],"content":"Skip<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,39],"source":"Skip<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[496881,496913],"content":"Skip<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Skip&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Skip<KeyValuePair<TKey, TValue>>"}]},{"pos":[497021,497022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497071,497076],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[497135,497136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497228,497266],"content":"Skip(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Skip(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[497380,497381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497430,497435],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[497494,497495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498143,498223],"content":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[498814,498851],"content":"SkipWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"SkipWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[498964,498965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499015,499019],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[499077,499078],"content":"<","needQuote":true,"nodes":[]},{"pos":[499156,499168],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[499254,499255],"content":"<","needQuote":true,"nodes":[]},{"pos":[499282,499286],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[499317,499318]},{"pos":[499350,499356],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[499421,499422]},{"pos":[499478,499485],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[499578,499579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499695,499738],"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[499857,499858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499908,499912],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[499971,499974]},{"pos":[500059,500071],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[500158,500161]},{"pos":[500195,500199],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[500230,500231]},{"pos":[500263,500269],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[500301,500302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[500330,500331]},{"pos":[500387,500394],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[500455,500456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500483,500484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501270,501357],"content":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,87],"source":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[501996,502033],"content":"SkipWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"SkipWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[502146,502147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502197,502201],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[502259,502260],"content":"<","needQuote":true,"nodes":[]},{"pos":[502338,502350],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[502436,502437],"content":"<","needQuote":true,"nodes":[]},{"pos":[502464,502468],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[502499,502500]},{"pos":[502532,502538],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[502603,502604]},{"pos":[502658,502663],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[502723,502724]},{"pos":[502780,502787],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[502880,502881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503010,503053],"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[503172,503173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503223,503227],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[503286,503289]},{"pos":[503374,503386],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[503473,503476]},{"pos":[503510,503514],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[503545,503546]},{"pos":[503578,503584],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[503616,503617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[503645,503646]},{"pos":[503700,503705],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[503765,503766]},{"pos":[503822,503829],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[503890,503891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503918,503919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504694,504768],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[505335,505366],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[505473,505474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505524,505528],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[505586,505587],"content":"<","needQuote":true,"nodes":[]},{"pos":[505665,505677],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[505763,505764],"content":"<","needQuote":true,"nodes":[]},{"pos":[505791,505795],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[505826,505827]},{"pos":[505859,505865],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[505930,505931]},{"pos":[505987,505994],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[506087,506088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506198,506235],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[506348,506349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506399,506403],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[506462,506465]},{"pos":[506550,506562],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[506649,506652]},{"pos":[506686,506690],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[506721,506722]},{"pos":[506754,506760],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[506792,506793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[506821,506822]},{"pos":[506878,506885],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[506946,506947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506974,506975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507703,507776],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[508339,508370],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[508477,508478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508528,508532],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[508590,508591],"content":"<","needQuote":true,"nodes":[]},{"pos":[508669,508681],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[508767,508768],"content":"<","needQuote":true,"nodes":[]},{"pos":[508795,508799],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[508830,508831]},{"pos":[508863,508869],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[508934,508935]},{"pos":[508990,508996],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[509088,509089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509198,509235],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[509348,509349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509399,509403],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[509462,509465]},{"pos":[509550,509562],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[509649,509652]},{"pos":[509686,509690],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[509721,509722]},{"pos":[509754,509760],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[509792,509793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[509821,509822]},{"pos":[509877,509883],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[509943,509944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509971,509972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510695,510767],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[511326,511357],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[511464,511465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511515,511519],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[511577,511578],"content":"<","needQuote":true,"nodes":[]},{"pos":[511656,511668],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[511754,511755],"content":"<","needQuote":true,"nodes":[]},{"pos":[511782,511786],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[511817,511818]},{"pos":[511850,511856],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[511921,511922]},{"pos":[511976,511981],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[512072,512073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512181,512218],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[512331,512332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512382,512386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[512445,512448]},{"pos":[512533,512545],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[512632,512635]},{"pos":[512669,512673],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[512704,512705]},{"pos":[512737,512743],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[512775,512776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[512804,512805]},{"pos":[512859,512864],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[512923,512924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512951,512952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513672,513744],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[514303,514334],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[514441,514442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514492,514496],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[514554,514555],"content":"<","needQuote":true,"nodes":[]},{"pos":[514633,514645],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[514731,514732],"content":"<","needQuote":true,"nodes":[]},{"pos":[514759,514763],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[514794,514795]},{"pos":[514827,514833],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[514898,514899]},{"pos":[514953,514958],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[515049,515050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515158,515195],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[515308,515309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515359,515363],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[515422,515425]},{"pos":[515510,515522],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[515609,515612]},{"pos":[515646,515650],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[515681,515682]},{"pos":[515714,515720],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[515752,515753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[515781,515782]},{"pos":[515836,515841],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[515900,515901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515928,515929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516687,516771],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[517405,517436],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[517543,517544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517594,517598],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[517656,517657],"content":"<","needQuote":true,"nodes":[]},{"pos":[517735,517747],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[517833,517834],"content":"<","needQuote":true,"nodes":[]},{"pos":[517861,517865],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[517896,517897]},{"pos":[517929,517935],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[518000,518001]},{"pos":[518060,518068],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[518130,518131],"content":"<","needQuote":true,"nodes":[]},{"pos":[518182,518189],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[518314,518315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518442,518479],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[518592,518593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518643,518647],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[518706,518709]},{"pos":[518794,518806],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[518893,518896]},{"pos":[518930,518934],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[518965,518966]},{"pos":[518998,519004],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[519036,519037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[519065,519066]},{"pos":[519125,519133],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[519196,519199]},{"pos":[519257,519264],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[519325,519326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519353,519354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519381,519382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520184,520267],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[520897,520928],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[521035,521036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521086,521090],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[521148,521149],"content":"<","needQuote":true,"nodes":[]},{"pos":[521227,521239],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[521325,521326],"content":"<","needQuote":true,"nodes":[]},{"pos":[521353,521357],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[521388,521389]},{"pos":[521421,521427],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[521492,521493]},{"pos":[521552,521560],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[521622,521623],"content":"<","needQuote":true,"nodes":[]},{"pos":[521673,521679],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[521803,521804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521930,521967],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[522080,522081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522131,522135],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[522194,522197]},{"pos":[522282,522294],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[522381,522384]},{"pos":[522418,522422],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[522453,522454]},{"pos":[522486,522492],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[522524,522525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[522553,522554]},{"pos":[522613,522621],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[522684,522687]},{"pos":[522744,522750],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[522810,522811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522838,522839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522866,522867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523664,523746],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[524372,524403],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[524510,524511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524561,524565],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[524623,524624],"content":"<","needQuote":true,"nodes":[]},{"pos":[524702,524714],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[524800,524801],"content":"<","needQuote":true,"nodes":[]},{"pos":[524828,524832],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[524863,524864]},{"pos":[524896,524902],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[524967,524968]},{"pos":[525027,525035],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[525097,525098],"content":"<","needQuote":true,"nodes":[]},{"pos":[525147,525152],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[525275,525276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525401,525438],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[525551,525552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525602,525606],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[525665,525668]},{"pos":[525753,525765],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[525852,525855]},{"pos":[525889,525893],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[525924,525925]},{"pos":[525957,525963],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[525995,525996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526024,526025]},{"pos":[526084,526092],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[526155,526158]},{"pos":[526214,526219],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[526278,526279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526306,526307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526334,526335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527129,527211],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[527837,527868],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[527975,527976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528026,528030],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[528088,528089],"content":"<","needQuote":true,"nodes":[]},{"pos":[528167,528179],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[528265,528266],"content":"<","needQuote":true,"nodes":[]},{"pos":[528293,528297],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[528328,528329]},{"pos":[528361,528367],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[528432,528433]},{"pos":[528492,528500],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[528562,528563],"content":"<","needQuote":true,"nodes":[]},{"pos":[528612,528617],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[528740,528741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528866,528903],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[529016,529017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529067,529071],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[529130,529133]},{"pos":[529218,529230],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[529317,529320]},{"pos":[529354,529358],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[529389,529390]},{"pos":[529422,529428],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[529460,529461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[529489,529490]},{"pos":[529549,529557],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[529620,529623]},{"pos":[529679,529684],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[529743,529744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529771,529772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529799,529800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530596,530679],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[531309,531340],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[531447,531448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531498,531502],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[531560,531561],"content":"<","needQuote":true,"nodes":[]},{"pos":[531639,531651],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[531737,531738],"content":"<","needQuote":true,"nodes":[]},{"pos":[531765,531769],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[531800,531801]},{"pos":[531833,531839],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[531904,531905]},{"pos":[531964,531972],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[532034,532035],"content":"<","needQuote":true,"nodes":[]},{"pos":[532085,532091],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[532215,532216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532342,532379],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[532492,532493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532543,532547],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[532606,532609]},{"pos":[532694,532706],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[532793,532796]},{"pos":[532830,532834],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[532865,532866]},{"pos":[532898,532904],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[532936,532937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[532965,532966]},{"pos":[533025,533033],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[533096,533099]},{"pos":[533156,533162],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[533222,533223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533250,533251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533278,533279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534044,534117],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[534680,534711],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[534818,534819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534869,534873],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[534931,534932],"content":"<","needQuote":true,"nodes":[]},{"pos":[535010,535022],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[535108,535109],"content":"<","needQuote":true,"nodes":[]},{"pos":[535136,535140],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[535171,535172]},{"pos":[535204,535210],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[535275,535276]},{"pos":[535331,535337],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[535429,535430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535539,535576],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[535689,535690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535740,535744],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[535803,535806]},{"pos":[535891,535903],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[535990,535993]},{"pos":[536027,536031],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[536062,536063]},{"pos":[536095,536101],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[536133,536134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[536162,536163]},{"pos":[536218,536224],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[536284,536285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536312,536313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536951,536990],"content":"Take<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,39],"source":"Take<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[537354,537386],"content":"Take<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Take&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Take<KeyValuePair<TKey, TValue>>"}]},{"pos":[537494,537495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537544,537549],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[537608,537609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537701,537739],"content":"Take(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Take(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[537853,537854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537903,537908],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[537967,537968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538616,538696],"content":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[539287,539324],"content":"TakeWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"TakeWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[539437,539438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539488,539492],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[539550,539551],"content":"<","needQuote":true,"nodes":[]},{"pos":[539629,539641],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[539727,539728],"content":"<","needQuote":true,"nodes":[]},{"pos":[539755,539759],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[539790,539791]},{"pos":[539823,539829],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[539894,539895]},{"pos":[539951,539958],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[540051,540052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540168,540211],"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[540330,540331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540381,540385],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[540444,540447]},{"pos":[540532,540544],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[540631,540634]},{"pos":[540668,540672],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[540703,540704]},{"pos":[540736,540742],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[540774,540775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[540803,540804]},{"pos":[540860,540867],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[540928,540929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540956,540957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541743,541830],"content":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,87],"source":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[542469,542506],"content":"TakeWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"TakeWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[542619,542620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542670,542674],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[542732,542733],"content":"<","needQuote":true,"nodes":[]},{"pos":[542811,542823],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[542909,542910],"content":"<","needQuote":true,"nodes":[]},{"pos":[542937,542941],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[542972,542973]},{"pos":[543005,543011],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[543076,543077]},{"pos":[543131,543136],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[543196,543197]},{"pos":[543253,543260],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[543353,543354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543483,543526],"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[543645,543646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543696,543700],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[543759,543762]},{"pos":[543847,543859],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[543946,543949]},{"pos":[543983,543987],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[544018,544019]},{"pos":[544051,544057],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[544089,544090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[544118,544119]},{"pos":[544173,544178],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[544238,544239]},{"pos":[544295,544302],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[544363,544364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544391,544392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545057,545094],"content":"ToArray<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"ToArray&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,37],"source":"ToArray<KeyValuePair<TKey, TValue>>()"}]},{"pos":[545427,545462],"content":"ToArray<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ToArray&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"ToArray<KeyValuePair<TKey, TValue>>"}]},{"pos":[545573,545574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545601,545602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545683,545724],"content":"ToArray(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ToArray(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[545841,545842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545869,545870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546491,546577],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,86],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[547164,547210],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,46],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[547332,547333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547383,547387],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[547445,547446],"content":"<","needQuote":true,"nodes":[]},{"pos":[547524,547536],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[547622,547623],"content":"<","needQuote":true,"nodes":[]},{"pos":[547650,547654],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[547685,547686]},{"pos":[547718,547724],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[547789,547790]},{"pos":[547822,547826],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[547888,547889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547997,548049],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,52]}]},{"pos":[548177,548178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548228,548232],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[548291,548294]},{"pos":[548379,548391],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[548478,548481]},{"pos":[548515,548519],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[548550,548551]},{"pos":[548583,548589],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[548621,548622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[548650,548651]},{"pos":[548683,548687],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[548717,548718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548745,548746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549600,549711],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,111],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[550483,550529],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,46],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[550651,550652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550702,550706],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[550764,550765],"content":"<","needQuote":true,"nodes":[]},{"pos":[550843,550855],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[550941,550942],"content":"<","needQuote":true,"nodes":[]},{"pos":[550969,550973],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[551004,551005]},{"pos":[551037,551043],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[551108,551109]},{"pos":[551141,551145],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[551208,551209]},{"pos":[551297,551314],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[551405,551406],"content":"<","needQuote":true,"nodes":[]},{"pos":[551433,551437],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[551499,551500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551658,551710],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,52]}]},{"pos":[551838,551839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551889,551893],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[551952,551955]},{"pos":[552040,552052],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[552139,552142]},{"pos":[552176,552180],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[552211,552212]},{"pos":[552244,552250],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[552282,552283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[552311,552312]},{"pos":[552344,552348],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[552378,552379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[552407,552408]},{"pos":[552496,552513],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[552605,552608]},{"pos":[552642,552646],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[552676,552677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552704,552705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553661,553801],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,140],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[554651,554707],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,56],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[554839,554840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554890,554894],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[554952,554953],"content":"<","needQuote":true,"nodes":[]},{"pos":[555031,555043],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[555129,555130],"content":"<","needQuote":true,"nodes":[]},{"pos":[555157,555161],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[555192,555193]},{"pos":[555225,555231],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[555296,555297]},{"pos":[555329,555333],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[555396,555397]},{"pos":[555452,555456],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[555514,555515],"content":"<","needQuote":true,"nodes":[]},{"pos":[555593,555605],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[555691,555692],"content":"<","needQuote":true,"nodes":[]},{"pos":[555719,555723],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[555754,555755]},{"pos":[555787,555793],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[555858,555859]},{"pos":[555891,555899],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[555965,555966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556095,556157],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,62]}]},{"pos":[556295,556296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556346,556350],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[556409,556412]},{"pos":[556497,556509],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[556596,556599]},{"pos":[556633,556637],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[556668,556669]},{"pos":[556701,556707],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[556739,556740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[556768,556769]},{"pos":[556801,556805],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[556835,556836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[556864,556865]},{"pos":[556920,556924],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[556983,556986]},{"pos":[557071,557083],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[557170,557173]},{"pos":[557207,557211],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[557242,557243]},{"pos":[557275,557281],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[557313,557314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[557342,557343]},{"pos":[557375,557383],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[557417,557418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557445,557446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558537,558702],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,165],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[559737,559793],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,56],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[559925,559926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559976,559980],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[560038,560039],"content":"<","needQuote":true,"nodes":[]},{"pos":[560117,560129],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[560215,560216],"content":"<","needQuote":true,"nodes":[]},{"pos":[560243,560247],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[560278,560279]},{"pos":[560311,560317],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[560382,560383]},{"pos":[560415,560419],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[560482,560483]},{"pos":[560538,560542],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[560600,560601],"content":"<","needQuote":true,"nodes":[]},{"pos":[560679,560691],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[560777,560778],"content":"<","needQuote":true,"nodes":[]},{"pos":[560805,560809],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[560840,560841]},{"pos":[560873,560879],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[560944,560945]},{"pos":[560977,560985],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[561052,561053]},{"pos":[561141,561158],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[561249,561250],"content":"<","needQuote":true,"nodes":[]},{"pos":[561277,561281],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[561343,561344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561523,561585],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,62]}]},{"pos":[561723,561724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561774,561778],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[561837,561840]},{"pos":[561925,561937],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[562024,562027]},{"pos":[562061,562065],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[562096,562097]},{"pos":[562129,562135],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[562167,562168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[562196,562197]},{"pos":[562229,562233],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[562263,562264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[562292,562293]},{"pos":[562348,562352],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[562411,562414]},{"pos":[562499,562511],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[562598,562601]},{"pos":[562635,562639],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[562670,562671]},{"pos":[562703,562709],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[562741,562742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[562770,562771]},{"pos":[562803,562811],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[562845,562846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[562874,562875]},{"pos":[562963,562980],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[563072,563075]},{"pos":[563109,563113],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[563143,563144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563171,563172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564050,564086],"content":"ToList<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"ToList&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,36],"source":"ToList<KeyValuePair<TKey, TValue>>()"}]},{"pos":[564415,564449],"content":"ToList<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ToList&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"ToList<KeyValuePair<TKey, TValue>>"}]},{"pos":[564559,564560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564587,564588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564668,564708],"content":"ToList(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ToList(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[564824,564825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564852,564853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565463,565545],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,82],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[566116,566158],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,42],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[566276,566277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566327,566331],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[566389,566390],"content":"<","needQuote":true,"nodes":[]},{"pos":[566468,566480],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[566566,566567],"content":"<","needQuote":true,"nodes":[]},{"pos":[566594,566598],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[566629,566630]},{"pos":[566662,566668],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[566733,566734]},{"pos":[566766,566770],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[566832,566833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566937,566985],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,48]}]},{"pos":[567109,567110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567160,567164],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[567223,567226]},{"pos":[567311,567323],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[567410,567413]},{"pos":[567447,567451],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[567482,567483]},{"pos":[567515,567521],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[567553,567554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[567582,567583]},{"pos":[567615,567619],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[567649,567650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567677,567678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568512,568619],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,107],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[569375,569417],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,42],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[569535,569536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569586,569590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[569648,569649],"content":"<","needQuote":true,"nodes":[]},{"pos":[569727,569739],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[569825,569826],"content":"<","needQuote":true,"nodes":[]},{"pos":[569853,569857],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[569888,569889]},{"pos":[569921,569927],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[569992,569993]},{"pos":[570025,570029],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[570092,570093]},{"pos":[570181,570198],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[570289,570290],"content":"<","needQuote":true,"nodes":[]},{"pos":[570317,570321],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[570383,570384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570538,570586],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,48]}]},{"pos":[570710,570711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570761,570765],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[570824,570827]},{"pos":[570912,570924],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[571011,571014]},{"pos":[571048,571052],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[571083,571084]},{"pos":[571116,571122],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[571154,571155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[571183,571184]},{"pos":[571216,571220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[571250,571251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[571279,571280]},{"pos":[571368,571385],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[571477,571480]},{"pos":[571514,571518],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[571548,571549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571576,571577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572513,572649],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,136],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[573483,573535],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,52],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[573663,573664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573714,573718],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[573776,573777],"content":"<","needQuote":true,"nodes":[]},{"pos":[573855,573867],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[573953,573954],"content":"<","needQuote":true,"nodes":[]},{"pos":[573981,573985],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[574016,574017]},{"pos":[574049,574055],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[574120,574121]},{"pos":[574153,574157],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[574220,574221]},{"pos":[574276,574280],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[574338,574339],"content":"<","needQuote":true,"nodes":[]},{"pos":[574417,574429],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[574515,574516],"content":"<","needQuote":true,"nodes":[]},{"pos":[574543,574547],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[574578,574579]},{"pos":[574611,574617],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[574682,574683]},{"pos":[574715,574723],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[574789,574790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574915,574973],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,58]}]},{"pos":[575107,575108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575158,575162],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[575221,575224]},{"pos":[575309,575321],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[575408,575411]},{"pos":[575445,575449],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[575480,575481]},{"pos":[575513,575519],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[575551,575552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[575580,575581]},{"pos":[575613,575617],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[575647,575648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[575676,575677]},{"pos":[575732,575736],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[575795,575798]},{"pos":[575883,575895],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[575982,575985]},{"pos":[576019,576023],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[576054,576055]},{"pos":[576087,576093],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[576125,576126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[576154,576155]},{"pos":[576187,576195],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[576229,576230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576257,576258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577329,577490],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,161],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[578509,578561],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,52],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[578689,578690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578740,578744],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[578802,578803],"content":"<","needQuote":true,"nodes":[]},{"pos":[578881,578893],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[578979,578980],"content":"<","needQuote":true,"nodes":[]},{"pos":[579007,579011],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[579042,579043]},{"pos":[579075,579081],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[579146,579147]},{"pos":[579179,579183],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[579246,579247]},{"pos":[579302,579306],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[579364,579365],"content":"<","needQuote":true,"nodes":[]},{"pos":[579443,579455],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[579541,579542],"content":"<","needQuote":true,"nodes":[]},{"pos":[579569,579573],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[579604,579605]},{"pos":[579637,579643],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[579708,579709]},{"pos":[579741,579749],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[579816,579817]},{"pos":[579905,579922],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[580013,580014],"content":"<","needQuote":true,"nodes":[]},{"pos":[580041,580045],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[580107,580108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580283,580341],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,58]}]},{"pos":[580475,580476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580526,580530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[580589,580592]},{"pos":[580677,580689],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[580776,580779]},{"pos":[580813,580817],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[580848,580849]},{"pos":[580881,580887],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[580919,580920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[580948,580949]},{"pos":[580981,580985],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[581015,581016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[581044,581045]},{"pos":[581100,581104],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[581163,581166]},{"pos":[581251,581263],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[581350,581353]},{"pos":[581387,581391],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[581422,581423]},{"pos":[581455,581461],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[581493,581494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[581522,581523]},{"pos":[581555,581563],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[581597,581598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[581626,581627]},{"pos":[581715,581732],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[581824,581827]},{"pos":[581861,581865],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[581895,581896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581923,581924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582930,583004],"content":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,74],"source":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[583611,583644],"content":"Union<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Union<KeyValuePair<TKey, TValue>>"}]},{"pos":[583753,583754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583831,583842],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[583927,583928],"content":"<","needQuote":true,"nodes":[]},{"pos":[584006,584018],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[584104,584105],"content":"<","needQuote":true,"nodes":[]},{"pos":[584132,584136],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[584167,584168]},{"pos":[584200,584206],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[584302,584303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584427,584466],"content":"Union(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Union(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[584581,584582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584659,584670],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[584756,584759]},{"pos":[584844,584856],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[584943,584946]},{"pos":[584980,584984],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[585015,585016]},{"pos":[585048,585054],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[585086,585087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585114,585115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585142,585143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586068,586189],"content":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,121],"source":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[587107,587140],"content":"Union<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Union<KeyValuePair<TKey, TValue>>"}]},{"pos":[587249,587250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587327,587338],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[587423,587424],"content":"<","needQuote":true,"nodes":[]},{"pos":[587502,587514],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[587600,587601],"content":"<","needQuote":true,"nodes":[]},{"pos":[587628,587632],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[587663,587664]},{"pos":[587696,587702],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[587799,587800]},{"pos":[587888,587905],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[587996,587997],"content":"<","needQuote":true,"nodes":[]},{"pos":[588075,588087],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[588173,588174],"content":"<","needQuote":true,"nodes":[]},{"pos":[588201,588205],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[588236,588237]},{"pos":[588269,588275],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[588371,588372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588546,588585],"content":"Union(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Union(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[588700,588701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[588778,588789],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[588875,588878]},{"pos":[588963,588975],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[589062,589065]},{"pos":[589099,589103],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[589134,589135]},{"pos":[589167,589173],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[589205,589206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589233,589234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[589262,589263]},{"pos":[589351,589368],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[589460,589463]},{"pos":[589548,589560],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[589647,589650]},{"pos":[589684,589688],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[589719,589720]},{"pos":[589752,589758],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[589790,589791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589818,589819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589846,589847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590745,590821],"content":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[591396,591429],"content":"Where<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Where<KeyValuePair<TKey, TValue>>"}]},{"pos":[591538,591539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591589,591593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[591651,591652],"content":"<","needQuote":true,"nodes":[]},{"pos":[591730,591742],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[591828,591829],"content":"<","needQuote":true,"nodes":[]},{"pos":[591856,591860],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[591891,591892]},{"pos":[591924,591930],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[591995,591996]},{"pos":[592052,592059],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[592152,592153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592265,592304],"content":"Where(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Where(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[592419,592420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592470,592474],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[592533,592536]},{"pos":[592621,592633],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[592720,592723]},{"pos":[592757,592761],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[592792,592793]},{"pos":[592825,592831],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[592863,592864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[592892,592893]},{"pos":[592949,592956],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[593017,593018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593045,593046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593812,593895],"content":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,83],"source":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[594518,594551],"content":"Where<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Where<KeyValuePair<TKey, TValue>>"}]},{"pos":[594660,594661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594711,594715],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[594773,594774],"content":"<","needQuote":true,"nodes":[]},{"pos":[594852,594864],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[594950,594951],"content":"<","needQuote":true,"nodes":[]},{"pos":[594978,594982],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[595013,595014]},{"pos":[595046,595052],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[595117,595118]},{"pos":[595172,595177],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[595237,595238]},{"pos":[595294,595301],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[595394,595395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595520,595559],"content":"Where(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Where(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[595674,595675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[595725,595729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[595788,595791]},{"pos":[595876,595888],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[595975,595978]},{"pos":[596012,596016],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[596047,596048]},{"pos":[596080,596086],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[596118,596119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[596147,596148]},{"pos":[596202,596207],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[596267,596268]},{"pos":[596324,596331],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[596392,596393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[596420,596421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597276,597399],"content":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;)","pos":[0,123],"source":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)"}]},{"pos":[598196,598245],"content":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;","pos":[0,49],"source":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>"}]},{"pos":[598370,598371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[598448,598459],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[598544,598545],"content":"<","needQuote":true,"nodes":[]},{"pos":[598572,598579],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[598645,598646]},{"pos":[598701,598705],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[598763,598764],"content":"<","needQuote":true,"nodes":[]},{"pos":[598842,598854],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[598940,598941],"content":"<","needQuote":true,"nodes":[]},{"pos":[598968,598972],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[599003,599004]},{"pos":[599036,599042],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[599107,599108]},{"pos":[599140,599147],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[599181,599182]},{"pos":[599214,599221],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[599286,599287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599434,599489],"content":"Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)","pos":[0,55]}]},{"pos":[599620,599621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599698,599709],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[599795,599798]},{"pos":[599832,599839],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[599872,599873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[599901,599902]},{"pos":[599957,599961],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[600020,600023]},{"pos":[600108,600120],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[600207,600210]},{"pos":[600244,600248],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[600279,600280]},{"pos":[600312,600318],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[600350,600351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[600379,600380]},{"pos":[600412,600419],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[600453,600454]},{"pos":[600486,600493],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[600526,600527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600554,600555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601093,601099],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[601240,601265],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[601517,601528],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[601592,601593],"content":"<","needQuote":true,"nodes":[]},{"pos":[601620,601624],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[601655,601656]},{"pos":[601688,601694],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[601819,601830],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[601895,601898]},{"pos":[601932,601936],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[601967,601968]},{"pos":[602000,602006],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[602038,602039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602278,602292],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[602511,602522],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[602586,602587],"content":"<","needQuote":true,"nodes":[]},{"pos":[602614,602615],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[602735,602746],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[602811,602814]},{"pos":[602848,602849],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[602876,602877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603102,603135],"content":"IReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,33],"source":"IReadOnlyDictionary<TKey, TValue>"}]},{"pos":[603419,603438],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"pos":[603510,603511],"content":"<","needQuote":true,"nodes":[]},{"pos":[603538,603542],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[603573,603574]},{"pos":[603606,603612],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[603745,603764],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"content":"(Of","pos":[603837,603840]},{"pos":[603874,603878],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[603909,603910]},{"pos":[603942,603948],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[603980,603981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604252,604274],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[604525,604544],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[604616,604617],"content":"<","needQuote":true,"nodes":[]},{"pos":[604644,604645],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[604773,604792],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[604865,604868]},{"pos":[604902,604903],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[604930,604931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605172,605186],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[605405,605416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[605480,605481],"content":"<","needQuote":true,"nodes":[]},{"pos":[605508,605509],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[605629,605640],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[605705,605708]},{"pos":[605742,605743],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[605770,605771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605966,605984],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[606185,606209],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[606388,606399],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[606458,606459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[606526,606537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[606614,606615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606728,606739],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[606798,606799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[606866,606877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[606954,606955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607183,607192],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[607406,607450],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[607850,607871],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[607940,607941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608018,608029],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[608114,608115],"content":"<","needQuote":true,"nodes":[]},{"pos":[608142,608150],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[608216,608217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608346,608370],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[608442,608443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608520,608531],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[608617,608620]},{"pos":[608654,608662],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[608696,608697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608724,608725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609098,609121],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[609316,609326],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[609393,609394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609461,609472],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609549,609550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609671,609681],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[609748,609749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609816,609827],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609904,609905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610158,610176],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[610425,610466],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[610883,610902],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[610978,610979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611056,611067],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[611152,611153],"content":"<","needQuote":true,"nodes":[]},{"pos":[611180,611187],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[611252,611253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611390,611412],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[611491,611492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611569,611580],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[611666,611669]},{"pos":[611703,611710],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[611743,611744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611771,611772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612197,612270],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[612803,612821],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[612888,612889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612966,612977],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[613062,613063],"content":"<","needQuote":true,"nodes":[]},{"pos":[613090,613097],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[613163,613164]},{"pos":[613219,613223],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[613281,613282],"content":"<","needQuote":true,"nodes":[]},{"pos":[613309,613316],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[613350,613351]},{"pos":[613383,613390],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[613424,613425]},{"pos":[613457,613464],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[613529,613530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613683,613704],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[613774,613775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613852,613863],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[613949,613952]},{"pos":[613986,613993],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[614026,614027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[614055,614056]},{"pos":[614111,614115],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[614174,614177]},{"pos":[614211,614218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[614252,614253]},{"pos":[614285,614292],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[614326,614327]},{"pos":[614359,614366],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[614399,614400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614427,614428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614860,614870],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[615115,615222],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[615861,615892],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[615972,615973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616050,616061],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[616146,616147],"content":"<","needQuote":true,"nodes":[]},{"pos":[616174,616181],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[616247,616248]},{"pos":[616280,616291],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[616329,616330]},{"pos":[616385,616389],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[616447,616448],"content":"<","needQuote":true,"nodes":[]},{"pos":[616475,616486],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[616524,616525]},{"pos":[616557,616564],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[616598,616599]},{"pos":[616631,616642],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[616711,616712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616869,616903],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[616986,616987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617064,617075],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[617161,617164]},{"pos":[617198,617205],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[617238,617239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617267,617268]},{"pos":[617300,617311],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[617349,617350]},{"pos":[617405,617409],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617468,617471]},{"pos":[617505,617516],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[617554,617555]},{"pos":[617587,617594],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[617628,617629]},{"pos":[617661,617672],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[617709,617710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617737,617738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618327,618471],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[619262,619302],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[619391,619392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619469,619480],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[619565,619566],"content":"<","needQuote":true,"nodes":[]},{"pos":[619593,619600],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[619666,619667]},{"pos":[619699,619710],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[619748,619749]},{"pos":[619804,619808],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[619866,619867],"content":"<","needQuote":true,"nodes":[]},{"pos":[619894,619905],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[619943,619944]},{"pos":[619976,619983],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620017,620018]},{"pos":[620050,620061],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[620131,620132]},{"pos":[620187,620191],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[620249,620250],"content":"<","needQuote":true,"nodes":[]},{"pos":[620277,620288],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[620326,620327]},{"pos":[620359,620366],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[620431,620432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620610,620653],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[620745,620746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620823,620834],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[620920,620923]},{"pos":[620957,620964],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[620997,620998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[621026,621027]},{"pos":[621059,621070],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[621108,621109]},{"pos":[621164,621168],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[621227,621230]},{"pos":[621264,621275],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[621313,621314]},{"pos":[621346,621353],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[621387,621388]},{"pos":[621420,621431],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[621468,621469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[621497,621498]},{"pos":[621553,621557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[621616,621619]},{"pos":[621653,621664],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[621702,621703]},{"pos":[621735,621742],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[621775,621776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621803,621804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622467,622525],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[623028,623040],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[623101,623102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623179,623190],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623275,623276],"content":"<","needQuote":true,"nodes":[]},{"pos":[623303,623310],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623376,623377]},{"pos":[623432,623436],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[623494,623495],"content":"<","needQuote":true,"nodes":[]},{"pos":[623522,623529],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623563,623564]},{"pos":[623620,623627],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[623720,623721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623875,623890],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[623954,623955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624032,624043],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624129,624132]},{"pos":[624166,624173],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624206,624207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624235,624236]},{"pos":[624291,624295],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[624354,624357]},{"pos":[624391,624398],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[624432,624433]},{"pos":[624489,624496],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[624557,624558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624585,624586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625018,625052],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[625417,625429],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[625490,625491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625568,625579],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[625664,625665],"content":"<","needQuote":true,"nodes":[]},{"pos":[625692,625699],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[625764,625765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625887,625902],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[625966,625967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626044,626055],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[626141,626144]},{"pos":[626178,626185],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[626218,626219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626246,626247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626628,626686],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[627189,627201],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[627262,627263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627340,627351],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627436,627437],"content":"<","needQuote":true,"nodes":[]},{"pos":[627464,627471],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[627537,627538]},{"pos":[627593,627597],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[627655,627656],"content":"<","needQuote":true,"nodes":[]},{"pos":[627683,627690],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[627724,627725]},{"pos":[627781,627788],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[627881,627882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628036,628051],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[628115,628116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628193,628204],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[628290,628293]},{"pos":[628327,628334],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[628367,628368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[628396,628397]},{"pos":[628452,628456],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[628515,628518]},{"pos":[628552,628559],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[628593,628594]},{"pos":[628650,628657],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[628718,628719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628746,628747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629188,629231],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[629632,629653],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[629723,629724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629801,629812],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[629897,629898],"content":"<","needQuote":true,"nodes":[]},{"pos":[629925,629932],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[629997,629998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630129,630153],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[630226,630227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630304,630315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[630401,630404]},{"pos":[630438,630445],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[630478,630479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630506,630507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630919,630981],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[631500,631516],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[631581,631582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631659,631670],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[631755,631756],"content":"<","needQuote":true,"nodes":[]},{"pos":[631783,631790],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[631856,631857]},{"pos":[631912,631916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[631974,631975],"content":"<","needQuote":true,"nodes":[]},{"pos":[632002,632009],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[632043,632044]},{"pos":[632100,632107],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[632200,632201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632359,632378],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[632446,632447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632524,632535],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632621,632624]},{"pos":[632658,632665],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632698,632699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[632727,632728]},{"pos":[632783,632787],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[632846,632849]},{"pos":[632883,632890],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[632924,632925]},{"pos":[632981,632988],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[633049,633050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633077,633078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633557,633618],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[634133,634149],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[634214,634215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634292,634303],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[634388,634389],"content":"<","needQuote":true,"nodes":[]},{"pos":[634416,634423],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634489,634490]},{"pos":[634545,634549],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[634607,634608],"content":"<","needQuote":true,"nodes":[]},{"pos":[634635,634642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634676,634677]},{"pos":[634732,634738],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[634830,634831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634988,635007],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[635075,635076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635153,635164],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[635250,635253]},{"pos":[635287,635294],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[635327,635328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635356,635357]},{"pos":[635412,635416],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[635475,635478]},{"pos":[635512,635519],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[635553,635554]},{"pos":[635609,635615],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[635675,635676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635703,635704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636179,636239],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[636750,636766],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[636831,636832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636909,636920],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[637005,637006],"content":"<","needQuote":true,"nodes":[]},{"pos":[637033,637040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[637106,637107]},{"pos":[637162,637166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[637224,637225],"content":"<","needQuote":true,"nodes":[]},{"pos":[637252,637259],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[637293,637294]},{"pos":[637348,637353],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[637444,637445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637601,637620],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[637688,637689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637766,637777],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[637863,637866]},{"pos":[637900,637907],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[637940,637941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[637969,637970]},{"pos":[638025,638029],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[638088,638091]},{"pos":[638125,638132],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[638166,638167]},{"pos":[638221,638226],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[638285,638286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638313,638314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638786,638846],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[639357,639373],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[639438,639439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639516,639527],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[639612,639613],"content":"<","needQuote":true,"nodes":[]},{"pos":[639640,639647],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639713,639714]},{"pos":[639769,639773],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[639831,639832],"content":"<","needQuote":true,"nodes":[]},{"pos":[639859,639866],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639900,639901]},{"pos":[639955,639960],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[640051,640052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640208,640227],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[640295,640296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640373,640384],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[640470,640473]},{"pos":[640507,640514],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[640547,640548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[640576,640577]},{"pos":[640632,640636],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[640695,640698]},{"pos":[640732,640739],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640773,640774]},{"pos":[640828,640833],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[640892,640893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640920,640921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641412,641484],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[642070,642086],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[642151,642152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642229,642240],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[642325,642326],"content":"<","needQuote":true,"nodes":[]},{"pos":[642353,642360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[642426,642427]},{"pos":[642482,642486],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[642544,642545],"content":"<","needQuote":true,"nodes":[]},{"pos":[642572,642579],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[642613,642614]},{"pos":[642673,642681],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[642743,642744],"content":"<","needQuote":true,"nodes":[]},{"pos":[642795,642802],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[642927,642928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643103,643122],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[643190,643191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643268,643279],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[643365,643368]},{"pos":[643402,643409],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[643442,643443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[643471,643472]},{"pos":[643527,643531],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[643590,643593]},{"pos":[643627,643634],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[643668,643669]},{"pos":[643728,643736],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[643799,643802]},{"pos":[643860,643867],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[643928,643929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643956,643957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643984,643985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644521,644592],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[645174,645190],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[645255,645256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645333,645344],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[645429,645430],"content":"<","needQuote":true,"nodes":[]},{"pos":[645457,645464],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645530,645531]},{"pos":[645586,645590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[645648,645649],"content":"<","needQuote":true,"nodes":[]},{"pos":[645676,645683],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645717,645718]},{"pos":[645777,645785],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[645847,645848],"content":"<","needQuote":true,"nodes":[]},{"pos":[645898,645904],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[646028,646029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646203,646222],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[646290,646291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646368,646379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[646465,646468]},{"pos":[646502,646509],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[646542,646543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[646571,646572]},{"pos":[646627,646631],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[646690,646693]},{"pos":[646727,646734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[646768,646769]},{"pos":[646828,646836],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[646899,646902]},{"pos":[646959,646965],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[647025,647026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647053,647054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647081,647082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647614,647684],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[648262,648278],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[648343,648344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648421,648432],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[648517,648518],"content":"<","needQuote":true,"nodes":[]},{"pos":[648545,648552],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648618,648619]},{"pos":[648674,648678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[648736,648737],"content":"<","needQuote":true,"nodes":[]},{"pos":[648764,648771],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648805,648806]},{"pos":[648865,648873],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[648935,648936],"content":"<","needQuote":true,"nodes":[]},{"pos":[648985,648990],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[649113,649114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649287,649306],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[649374,649375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649452,649463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649549,649552]},{"pos":[649586,649593],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649626,649627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[649655,649656]},{"pos":[649711,649715],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[649774,649777]},{"pos":[649811,649818],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[649852,649853]},{"pos":[649912,649920],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[649983,649986]},{"pos":[650042,650047],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[650106,650107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650134,650135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650162,650163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650692,650762],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[651340,651356],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[651421,651422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651499,651510],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[651595,651596],"content":"<","needQuote":true,"nodes":[]},{"pos":[651623,651630],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651696,651697]},{"pos":[651752,651756],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[651814,651815],"content":"<","needQuote":true,"nodes":[]},{"pos":[651842,651849],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651883,651884]},{"pos":[651943,651951],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[652013,652014],"content":"<","needQuote":true,"nodes":[]},{"pos":[652063,652068],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[652191,652192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652365,652384],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[652452,652453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652530,652541],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[652627,652630]},{"pos":[652664,652671],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[652704,652705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[652733,652734]},{"pos":[652789,652793],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[652852,652855]},{"pos":[652889,652896],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[652930,652931]},{"pos":[652990,652998],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[653061,653064]},{"pos":[653120,653125],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[653184,653185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653212,653213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653240,653241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653771,653842],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[654424,654440],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[654505,654506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654583,654594],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[654679,654680],"content":"<","needQuote":true,"nodes":[]},{"pos":[654707,654714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[654780,654781]},{"pos":[654836,654840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[654898,654899],"content":"<","needQuote":true,"nodes":[]},{"pos":[654926,654933],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[654967,654968]},{"pos":[655027,655035],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[655097,655098],"content":"<","needQuote":true,"nodes":[]},{"pos":[655148,655154],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[655278,655279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655453,655472],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[655540,655541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655618,655629],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[655715,655718]},{"pos":[655752,655759],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[655792,655793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[655821,655822]},{"pos":[655877,655881],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[655940,655943]},{"pos":[655977,655984],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[656018,656019]},{"pos":[656078,656086],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[656149,656152]},{"pos":[656209,656215],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[656275,656276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656303,656304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656331,656332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656848,656909],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[657424,657440],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[657505,657506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657583,657594],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[657679,657680],"content":"<","needQuote":true,"nodes":[]},{"pos":[657707,657714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657780,657781]},{"pos":[657836,657840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[657898,657899],"content":"<","needQuote":true,"nodes":[]},{"pos":[657926,657933],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657967,657968]},{"pos":[658023,658029],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[658121,658122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658279,658298],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[658366,658367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658444,658455],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[658541,658544]},{"pos":[658578,658585],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[658618,658619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[658647,658648]},{"pos":[658703,658707],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[658766,658769]},{"pos":[658803,658810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658844,658845]},{"pos":[658900,658906],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[658966,658967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658994,658995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659424,659450],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[659757,659770],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[659832,659833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659900,659911],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[659988,659989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660099,660115],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[660180,660181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660248,660259],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[660336,660337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660702,660761],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[661308,661323],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[661387,661388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[661465,661476],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[661561,661562],"content":"<","needQuote":true,"nodes":[]},{"pos":[661589,661596],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661662,661663]},{"pos":[661745,661756],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[661841,661842],"content":"<","needQuote":true,"nodes":[]},{"pos":[661869,661876],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[661941,661942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662111,662129],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[662196,662197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662274,662285],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[662371,662374]},{"pos":[662408,662415],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[662448,662449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[662477,662478]},{"pos":[662560,662571],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[662657,662660]},{"pos":[662694,662701],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[662734,662735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662762,662763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663219,663265],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[663673,663688],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[663752,663753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[663830,663841],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[663926,663927],"content":"<","needQuote":true,"nodes":[]},{"pos":[663954,663961],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[664027,664028]},{"pos":[664060,664067],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664100,664101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664230,664248],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[664315,664316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[664393,664404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[664490,664493]},{"pos":[664527,664534],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664567,664568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[664596,664597]},{"pos":[664629,664636],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664669,664670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665058,665105],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[665517,665533],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[665598,665599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665676,665687],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[665772,665773],"content":"<","needQuote":true,"nodes":[]},{"pos":[665800,665807],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665873,665874]},{"pos":[665906,665913],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[665946,665947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666077,666096],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[666164,666165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[666242,666253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[666339,666342]},{"pos":[666376,666383],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[666416,666417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[666445,666446]},{"pos":[666478,666485],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[666518,666519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666911,666959],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[667375,667392],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[667458,667459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667536,667547],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[667632,667633],"content":"<","needQuote":true,"nodes":[]},{"pos":[667660,667667],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667733,667734]},{"pos":[667766,667773],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[667806,667807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667938,667958],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[668027,668028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[668105,668116],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[668202,668205]},{"pos":[668239,668246],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[668279,668280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[668308,668309]},{"pos":[668341,668348],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[668381,668382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668827,668903],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[669513,669530],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[669596,669597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[669674,669685],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[669770,669771],"content":"<","needQuote":true,"nodes":[]},{"pos":[669798,669805],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669871,669872]},{"pos":[669904,669911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669945,669946]},{"pos":[670034,670051],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[670142,670143],"content":"<","needQuote":true,"nodes":[]},{"pos":[670170,670177],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[670242,670243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670424,670444],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[670513,670514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670591,670602],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[670688,670691]},{"pos":[670725,670732],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[670765,670766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[670794,670795]},{"pos":[670827,670834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670868,670869]},{"pos":[670957,670974],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[671066,671069]},{"pos":[671103,671110],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[671143,671144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671171,671172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671669,671705],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[672078,672092],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[672155,672156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[672233,672244],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[672329,672330],"content":"<","needQuote":true,"nodes":[]},{"pos":[672357,672364],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[672429,672430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672554,672571],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[672637,672638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[672715,672726],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[672812,672815]},{"pos":[672849,672856],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[672889,672890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672917,672918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673307,673367],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[673878,673892],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[673955,673956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[674033,674044],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[674129,674130],"content":"<","needQuote":true,"nodes":[]},{"pos":[674157,674164],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674230,674231]},{"pos":[674286,674290],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[674348,674349],"content":"<","needQuote":true,"nodes":[]},{"pos":[674376,674383],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674417,674418]},{"pos":[674474,674481],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[674574,674575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674731,674748],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[674814,674815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[674892,674903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[674989,674992]},{"pos":[675026,675033],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[675066,675067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[675095,675096]},{"pos":[675151,675155],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[675214,675217]},{"pos":[675251,675258],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675292,675293]},{"pos":[675349,675356],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[675417,675418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675445,675446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675895,675940],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[676349,676372],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[676444,676445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[676522,676533],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[676618,676619],"content":"<","needQuote":true,"nodes":[]},{"pos":[676646,676653],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[676718,676719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676852,676878],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[676953,676954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[677031,677042],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[677128,677131]},{"pos":[677165,677172],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[677205,677206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677233,677234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677631,677685],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[678125,678148],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[678220,678221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678298,678309],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[678394,678395],"content":"<","needQuote":true,"nodes":[]},{"pos":[678422,678429],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678495,678496]},{"pos":[678528,678535],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[678568,678569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678706,678732],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[678807,678808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678885,678896],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[678982,678985]},{"pos":[679019,679026],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[679059,679060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[679088,679089]},{"pos":[679121,679128],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[679161,679162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679571,679610],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[679995,680012],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[680078,680079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680156,680167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[680252,680253],"content":"<","needQuote":true,"nodes":[]},{"pos":[680280,680287],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[680352,680353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680480,680500],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[680569,680570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680647,680658],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[680744,680747]},{"pos":[680781,680788],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[680821,680822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680849,680850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681269,681336],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[681915,681932],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[681998,681999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682076,682087],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[682172,682173],"content":"<","needQuote":true,"nodes":[]},{"pos":[682200,682207],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[682273,682274]},{"pos":[682362,682379],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[682470,682471],"content":"<","needQuote":true,"nodes":[]},{"pos":[682498,682505],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[682570,682571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682748,682768],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[682837,682838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682915,682926],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[683012,683015]},{"pos":[683049,683056],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683089,683090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[683118,683119]},{"pos":[683207,683224],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[683316,683319]},{"pos":[683353,683360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683393,683394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683421,683422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683914,683961],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[684398,684416],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[684483,684484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[684561,684572],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[684657,684658],"content":"<","needQuote":true,"nodes":[]},{"pos":[684685,684692],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684758,684759]},{"pos":[684813,684818],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[684877,684878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685019,685040],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[685110,685111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[685188,685199],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[685285,685288]},{"pos":[685322,685329],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[685362,685363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[685391,685392]},{"pos":[685446,685451],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[685510,685511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685933,685989],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[686462,686489],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[686565,686566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[686643,686654],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[686739,686740],"content":"<","needQuote":true,"nodes":[]},{"pos":[686767,686774],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[686840,686841]},{"pos":[686895,686900],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[686959,686960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687110,687140],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[687219,687220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687297,687308],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[687394,687397]},{"pos":[687431,687438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[687471,687472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[687500,687501]},{"pos":[687555,687560],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[687619,687620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688088,688147],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[688694,688709],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[688773,688774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688851,688862],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[688947,688948],"content":"<","needQuote":true,"nodes":[]},{"pos":[688975,688982],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[689048,689049]},{"pos":[689131,689142],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[689227,689228],"content":"<","needQuote":true,"nodes":[]},{"pos":[689255,689262],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[689327,689328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[689497,689515],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[689582,689583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[689660,689671],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[689757,689760]},{"pos":[689794,689801],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[689834,689835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[689863,689864]},{"pos":[689946,689957],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[690043,690046]},{"pos":[690080,690087],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690120,690121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690148,690149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690695,690782],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[691523,691538],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[691602,691603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[691680,691691],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[691776,691777],"content":"<","needQuote":true,"nodes":[]},{"pos":[691804,691811],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[691877,691878]},{"pos":[691960,691971],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[692056,692057],"content":"<","needQuote":true,"nodes":[]},{"pos":[692084,692091],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692157,692158]},{"pos":[692246,692263],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[692354,692355],"content":"<","needQuote":true,"nodes":[]},{"pos":[692382,692389],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[692454,692455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[692674,692692],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[692759,692760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692837,692848],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[692934,692937]},{"pos":[692971,692978],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[693011,693012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[693040,693041]},{"pos":[693123,693134],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[693220,693223]},{"pos":[693257,693264],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[693297,693298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[693326,693327]},{"pos":[693415,693432],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[693524,693527]},{"pos":[693561,693568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[693601,693602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693629,693630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694190,694226],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[694599,694613],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[694676,694677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[694754,694765],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[694850,694851],"content":"<","needQuote":true,"nodes":[]},{"pos":[694878,694885],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[694950,694951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695075,695092],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[695158,695159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[695236,695247],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[695333,695336]},{"pos":[695370,695377],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[695410,695411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695438,695439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695828,695888],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[696399,696413],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[696476,696477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[696554,696565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[696650,696651],"content":"<","needQuote":true,"nodes":[]},{"pos":[696678,696685],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696751,696752]},{"pos":[696807,696811],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[696869,696870],"content":"<","needQuote":true,"nodes":[]},{"pos":[696897,696904],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696938,696939]},{"pos":[696995,697002],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[697095,697096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697252,697269],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[697335,697336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[697413,697424],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[697510,697513]},{"pos":[697547,697554],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[697587,697588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[697616,697617]},{"pos":[697672,697676],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[697735,697738]},{"pos":[697772,697779],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697813,697814]},{"pos":[697870,697877],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[697938,697939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697966,697967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698416,698461],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[698870,698893],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[698965,698966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699043,699054],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[699139,699140],"content":"<","needQuote":true,"nodes":[]},{"pos":[699167,699174],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[699239,699240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699373,699399],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[699474,699475],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699552,699563],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[699649,699652]},{"pos":[699686,699693],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[699726,699727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699754,699755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700180,700249],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[700796,700819],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[700891,700892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[700969,700980],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[701065,701066],"content":"<","needQuote":true,"nodes":[]},{"pos":[701093,701100],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701166,701167]},{"pos":[701222,701226],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[701284,701285],"content":"<","needQuote":true,"nodes":[]},{"pos":[701312,701319],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701353,701354]},{"pos":[701410,701417],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[701510,701511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[701676,701702],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[701777,701778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[701855,701866],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[701952,701955]},{"pos":[701989,701996],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[702029,702030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[702058,702059]},{"pos":[702114,702118],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[702177,702180]},{"pos":[702214,702221],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702255,702256]},{"pos":[702312,702319],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[702380,702381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702408,702409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702899,702964],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[703467,703489],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[703560,703561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[703638,703649],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[703734,703735],"content":"<","needQuote":true,"nodes":[]},{"pos":[703762,703769],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[703835,703836]},{"pos":[703891,703895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[703953,703954],"content":"<","needQuote":true,"nodes":[]},{"pos":[703981,703988],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704022,704023]},{"pos":[704055,704059],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[704121,704122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704269,704294],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[704368,704369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[704446,704457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[704543,704546]},{"pos":[704580,704587],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[704620,704621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[704649,704650]},{"pos":[704705,704709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[704768,704771]},{"pos":[704805,704812],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704846,704847]},{"pos":[704879,704883],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[704913,704914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704941,704942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705456,705546],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[706234,706256],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[706327,706328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[706405,706416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[706501,706502],"content":"<","needQuote":true,"nodes":[]},{"pos":[706529,706536],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706602,706603]},{"pos":[706658,706662],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[706720,706721],"content":"<","needQuote":true,"nodes":[]},{"pos":[706748,706755],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706789,706790]},{"pos":[706822,706826],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[706889,706890]},{"pos":[706978,706995],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[707086,707087],"content":"<","needQuote":true,"nodes":[]},{"pos":[707114,707118],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[707180,707181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[707378,707403],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[707477,707478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[707555,707566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[707652,707655]},{"pos":[707689,707696],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[707729,707730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[707758,707759]},{"pos":[707814,707818],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[707877,707880]},{"pos":[707914,707921],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707955,707956]},{"pos":[707988,707992],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[708022,708023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708051,708052]},{"pos":[708140,708157],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[708249,708252]},{"pos":[708286,708290],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[708320,708321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708348,708349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708937,709037],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[709686,709718],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[709799,709800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[709877,709888],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[709973,709974],"content":"<","needQuote":true,"nodes":[]},{"pos":[710001,710008],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710074,710075]},{"pos":[710130,710134],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[710192,710193],"content":"<","needQuote":true,"nodes":[]},{"pos":[710220,710227],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710261,710262]},{"pos":[710294,710298],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[710361,710362]},{"pos":[710417,710421],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[710479,710480],"content":"<","needQuote":true,"nodes":[]},{"pos":[710507,710514],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710548,710549]},{"pos":[710581,710589],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[710655,710656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[710824,710859],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[710943,710944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[711021,711032],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[711118,711121]},{"pos":[711155,711162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[711195,711196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711224,711225]},{"pos":[711280,711284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[711343,711346]},{"pos":[711380,711387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711421,711422]},{"pos":[711454,711458],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[711488,711489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711517,711518]},{"pos":[711573,711577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[711636,711639]},{"pos":[711673,711680],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711714,711715]},{"pos":[711747,711755],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[711789,711790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711817,711818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712447,712572],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[713406,713438],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[713519,713520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[713597,713608],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[713693,713694],"content":"<","needQuote":true,"nodes":[]},{"pos":[713721,713728],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713794,713795]},{"pos":[713850,713854],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[713912,713913],"content":"<","needQuote":true,"nodes":[]},{"pos":[713940,713947],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713981,713982]},{"pos":[714014,714018],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[714081,714082]},{"pos":[714137,714141],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[714199,714200],"content":"<","needQuote":true,"nodes":[]},{"pos":[714227,714234],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714268,714269]},{"pos":[714301,714309],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[714376,714377]},{"pos":[714465,714482],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[714573,714574],"content":"<","needQuote":true,"nodes":[]},{"pos":[714601,714605],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[714667,714668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714886,714921],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[715005,715006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[715083,715094],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[715180,715183]},{"pos":[715217,715224],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[715257,715258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715286,715287]},{"pos":[715342,715346],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[715405,715408]},{"pos":[715442,715449],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[715483,715484]},{"pos":[715516,715520],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[715550,715551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715579,715580]},{"pos":[715635,715639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[715698,715701]},{"pos":[715735,715742],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[715776,715777]},{"pos":[715809,715817],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[715851,715852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715880,715881]},{"pos":[715969,715986],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[716078,716081]},{"pos":[716115,716119],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[716149,716150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[716177,716178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[716904,717021],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[717825,717856],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[717936,717937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[718014,718025],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[718110,718111],"content":"<","needQuote":true,"nodes":[]},{"pos":[718138,718145],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[718211,718212]},{"pos":[718267,718271],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[718329,718330],"content":"<","needQuote":true,"nodes":[]},{"pos":[718357,718364],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[718398,718399]},{"pos":[718431,718435],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[718498,718499]},{"pos":[718554,718558],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[718616,718617],"content":"<","needQuote":true,"nodes":[]},{"pos":[718644,718648],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[718679,718680]},{"pos":[718762,718773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[718858,718859],"content":"<","needQuote":true,"nodes":[]},{"pos":[718886,718893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[718959,718960]},{"pos":[718992,718999],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[719064,719065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[719277,719311],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[719394,719395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[719472,719483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[719569,719572]},{"pos":[719606,719613],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[719646,719647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719675,719676]},{"pos":[719731,719735],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719794,719797]},{"pos":[719831,719838],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719872,719873]},{"pos":[719905,719909],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[719939,719940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719968,719969]},{"pos":[720024,720028],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[720087,720090]},{"pos":[720124,720128],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[720159,720160]},{"pos":[720242,720253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[720339,720342]},{"pos":[720376,720383],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[720416,720417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720445,720446]},{"pos":[720478,720485],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[720518,720519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720546,720547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721301,721443],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[722432,722463],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[722543,722544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[722621,722632],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[722717,722718],"content":"<","needQuote":true,"nodes":[]},{"pos":[722745,722752],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[722818,722819]},{"pos":[722874,722878],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[722936,722937],"content":"<","needQuote":true,"nodes":[]},{"pos":[722964,722971],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723005,723006]},{"pos":[723038,723042],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[723105,723106]},{"pos":[723161,723165],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[723223,723224],"content":"<","needQuote":true,"nodes":[]},{"pos":[723251,723255],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[723286,723287]},{"pos":[723369,723380],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[723465,723466],"content":"<","needQuote":true,"nodes":[]},{"pos":[723493,723500],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723566,723567]},{"pos":[723599,723606],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[723672,723673]},{"pos":[723761,723778],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[723869,723870],"content":"<","needQuote":true,"nodes":[]},{"pos":[723897,723901],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[723963,723964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724226,724260],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[724343,724344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[724421,724432],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[724518,724521]},{"pos":[724555,724562],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[724595,724596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[724624,724625]},{"pos":[724680,724684],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[724743,724746]},{"pos":[724780,724787],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[724821,724822]},{"pos":[724854,724858],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[724888,724889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[724917,724918]},{"pos":[724973,724977],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[725036,725039]},{"pos":[725073,725077],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[725108,725109]},{"pos":[725191,725202],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[725288,725291]},{"pos":[725325,725332],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[725365,725366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725394,725395]},{"pos":[725427,725434],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[725467,725468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725496,725497]},{"pos":[725585,725602],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[725694,725697]},{"pos":[725731,725735],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[725765,725766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[725793,725794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726622,726775],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[727728,727769],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[727859,727860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[727937,727948],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[728033,728034],"content":"<","needQuote":true,"nodes":[]},{"pos":[728061,728068],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[728134,728135]},{"pos":[728190,728194],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[728252,728253],"content":"<","needQuote":true,"nodes":[]},{"pos":[728280,728287],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[728321,728322]},{"pos":[728354,728358],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[728421,728422]},{"pos":[728477,728481],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[728539,728540],"content":"<","needQuote":true,"nodes":[]},{"pos":[728567,728574],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[728608,728609]},{"pos":[728641,728649],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[728716,728717]},{"pos":[728772,728776],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[728834,728835],"content":"<","needQuote":true,"nodes":[]},{"pos":[728862,728866],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[728897,728898]},{"pos":[728980,728991],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729076,729077],"content":"<","needQuote":true,"nodes":[]},{"pos":[729104,729112],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[729179,729180]},{"pos":[729212,729219],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[729284,729285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[729518,729562],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[729655,729656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[729733,729744],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[729830,729833]},{"pos":[729867,729874],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[729907,729908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[729936,729937]},{"pos":[729992,729996],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[730055,730058]},{"pos":[730092,730099],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730133,730134]},{"pos":[730166,730170],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[730200,730201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[730229,730230]},{"pos":[730285,730289],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[730348,730351]},{"pos":[730385,730392],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730426,730427]},{"pos":[730459,730467],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[730501,730502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[730530,730531]},{"pos":[730586,730590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[730649,730652]},{"pos":[730686,730690],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[730721,730722]},{"pos":[730804,730815],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[730901,730904]},{"pos":[730938,730946],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[730980,730981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731009,731010]},{"pos":[731042,731049],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[731082,731083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731110,731111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731982,732160],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[733298,733339],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[733429,733430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[733507,733518],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[733603,733604],"content":"<","needQuote":true,"nodes":[]},{"pos":[733631,733638],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733704,733705]},{"pos":[733760,733764],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[733822,733823],"content":"<","needQuote":true,"nodes":[]},{"pos":[733850,733857],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733891,733892]},{"pos":[733924,733928],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[733991,733992]},{"pos":[734047,734051],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[734109,734110],"content":"<","needQuote":true,"nodes":[]},{"pos":[734137,734144],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[734178,734179]},{"pos":[734211,734219],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[734286,734287]},{"pos":[734342,734346],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[734404,734405],"content":"<","needQuote":true,"nodes":[]},{"pos":[734432,734436],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[734467,734468]},{"pos":[734550,734561],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[734646,734647],"content":"<","needQuote":true,"nodes":[]},{"pos":[734674,734682],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[734749,734750]},{"pos":[734782,734789],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[734855,734856]},{"pos":[734944,734961],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[735052,735053],"content":"<","needQuote":true,"nodes":[]},{"pos":[735080,735084],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[735146,735147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[735430,735474],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[735567,735568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[735645,735656],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[735742,735745]},{"pos":[735779,735786],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[735819,735820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[735848,735849]},{"pos":[735904,735908],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[735967,735970]},{"pos":[736004,736011],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736045,736046]},{"pos":[736078,736082],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[736112,736113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[736141,736142]},{"pos":[736197,736201],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[736260,736263]},{"pos":[736297,736304],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736338,736339]},{"pos":[736371,736379],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[736413,736414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[736442,736443]},{"pos":[736498,736502],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[736561,736564]},{"pos":[736598,736602],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[736633,736634]},{"pos":[736716,736727],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[736813,736816]},{"pos":[736850,736858],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[736892,736893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[736921,736922]},{"pos":[736954,736961],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[736994,736995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[737023,737024]},{"pos":[737112,737129],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[737221,737224]},{"pos":[737258,737262],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[737292,737293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737320,737321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738291,738457],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[739555,739595],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[739684,739685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739762,739773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[739858,739859],"content":"<","needQuote":true,"nodes":[]},{"pos":[739886,739892],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[739957,739958]},{"pos":[740040,740051],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[740136,740137],"content":"<","needQuote":true,"nodes":[]},{"pos":[740164,740170],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[740235,740236]},{"pos":[740291,740295],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[740353,740354],"content":"<","needQuote":true,"nodes":[]},{"pos":[740381,740387],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[740420,740421]},{"pos":[740453,740457],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[740520,740521]},{"pos":[740576,740580],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[740638,740639],"content":"<","needQuote":true,"nodes":[]},{"pos":[740666,740672],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[740705,740706]},{"pos":[740738,740742],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[740805,740806]},{"pos":[740861,740865],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[740923,740924],"content":"<","needQuote":true,"nodes":[]},{"pos":[740951,740957],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[740990,740991]},{"pos":[741073,741084],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[741169,741170],"content":"<","needQuote":true,"nodes":[]},{"pos":[741197,741203],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[741268,741269]},{"pos":[741301,741308],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[741373,741374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741653,741696],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[741788,741789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[741866,741877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741963,741966]},{"pos":[742000,742006],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[742038,742039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[742067,742068]},{"pos":[742150,742161],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[742247,742250]},{"pos":[742284,742290],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[742322,742323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[742351,742352]},{"pos":[742407,742411],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[742470,742473]},{"pos":[742507,742513],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[742546,742547]},{"pos":[742579,742583],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[742613,742614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[742642,742643]},{"pos":[742698,742702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[742761,742764]},{"pos":[742798,742804],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[742837,742838]},{"pos":[742870,742874],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[742904,742905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[742933,742934]},{"pos":[742989,742993],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[743052,743055]},{"pos":[743089,743095],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[743128,743129]},{"pos":[743211,743222],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[743308,743311]},{"pos":[743345,743351],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[743383,743384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[743412,743413]},{"pos":[743445,743452],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[743485,743486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[743513,743514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744506,744697],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[745980,746020],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[746109,746110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[746187,746198],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[746283,746284],"content":"<","needQuote":true,"nodes":[]},{"pos":[746311,746317],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[746382,746383]},{"pos":[746465,746476],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[746561,746562],"content":"<","needQuote":true,"nodes":[]},{"pos":[746589,746595],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[746660,746661]},{"pos":[746716,746720],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[746778,746779],"content":"<","needQuote":true,"nodes":[]},{"pos":[746806,746812],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[746845,746846]},{"pos":[746878,746882],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[746945,746946]},{"pos":[747001,747005],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[747063,747064],"content":"<","needQuote":true,"nodes":[]},{"pos":[747091,747097],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[747130,747131]},{"pos":[747163,747167],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[747230,747231]},{"pos":[747286,747290],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[747348,747349],"content":"<","needQuote":true,"nodes":[]},{"pos":[747376,747382],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[747415,747416]},{"pos":[747498,747509],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[747594,747595],"content":"<","needQuote":true,"nodes":[]},{"pos":[747622,747628],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[747693,747694]},{"pos":[747726,747733],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[747799,747800]},{"pos":[747888,747905],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[747996,747997],"content":"<","needQuote":true,"nodes":[]},{"pos":[748024,748028],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[748090,748091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[748420,748463],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[748555,748556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[748633,748644],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[748730,748733]},{"pos":[748767,748773],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[748805,748806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[748834,748835]},{"pos":[748917,748928],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[749014,749017]},{"pos":[749051,749057],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[749089,749090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[749118,749119]},{"pos":[749174,749178],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[749237,749240]},{"pos":[749274,749280],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[749313,749314]},{"pos":[749346,749350],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[749380,749381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[749409,749410]},{"pos":[749465,749469],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[749528,749531]},{"pos":[749565,749571],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[749604,749605]},{"pos":[749637,749641],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[749671,749672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[749700,749701]},{"pos":[749756,749760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[749819,749822]},{"pos":[749856,749862],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[749895,749896]},{"pos":[749978,749989],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[750075,750078]},{"pos":[750112,750118],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[750150,750151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750179,750180]},{"pos":[750212,750219],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[750252,750253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750281,750282]},{"pos":[750370,750387],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[750479,750482]},{"pos":[750516,750520],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[750550,750551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750578,750579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751517,751579],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[752138,752156],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[752223,752224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[752301,752312],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[752397,752398],"content":"<","needQuote":true,"nodes":[]},{"pos":[752425,752432],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[752498,752499]},{"pos":[752581,752592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[752677,752678],"content":"<","needQuote":true,"nodes":[]},{"pos":[752705,752712],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[752777,752778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752950,752971],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[753041,753042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753119,753130],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[753216,753219]},{"pos":[753253,753260],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[753293,753294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[753322,753323]},{"pos":[753405,753416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[753502,753505]},{"pos":[753539,753546],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[753579,753580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753607,753608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754166,754256],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[755009,755027],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[755094,755095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[755172,755183],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755268,755269],"content":"<","needQuote":true,"nodes":[]},{"pos":[755296,755303],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755369,755370]},{"pos":[755452,755463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755548,755549],"content":"<","needQuote":true,"nodes":[]},{"pos":[755576,755583],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755649,755650]},{"pos":[755738,755755],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[755846,755847],"content":"<","needQuote":true,"nodes":[]},{"pos":[755874,755881],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[755946,755947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[756169,756190],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[756260,756261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756338,756349],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756435,756438]},{"pos":[756472,756479],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756512,756513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756541,756542]},{"pos":[756624,756635],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756721,756724]},{"pos":[756758,756765],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756798,756799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756827,756828]},{"pos":[756916,756933],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[757025,757028]},{"pos":[757062,757069],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[757102,757103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757130,757131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757810,757958],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[758897,758932],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[759016,759017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[759094,759105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[759190,759191],"content":"<","needQuote":true,"nodes":[]},{"pos":[759218,759224],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[759289,759290]},{"pos":[759372,759383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[759468,759469],"content":"<","needQuote":true,"nodes":[]},{"pos":[759496,759502],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[759567,759568]},{"pos":[759623,759627],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[759685,759686],"content":"<","needQuote":true,"nodes":[]},{"pos":[759713,759719],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[759752,759753]},{"pos":[759785,759789],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[759852,759853]},{"pos":[759908,759912],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[759970,759971],"content":"<","needQuote":true,"nodes":[]},{"pos":[759998,760004],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[760037,760038]},{"pos":[760070,760074],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[760137,760138]},{"pos":[760193,760197],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[760255,760256],"content":"<","needQuote":true,"nodes":[]},{"pos":[760283,760289],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[760322,760323]},{"pos":[760355,760361],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[760394,760395]},{"pos":[760427,760434],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[760499,760500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760734,760772],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[760859,760860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760937,760948],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[761034,761037]},{"pos":[761071,761077],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[761109,761110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[761138,761139]},{"pos":[761221,761232],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[761318,761321]},{"pos":[761355,761361],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[761393,761394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[761422,761423]},{"pos":[761478,761482],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[761541,761544]},{"pos":[761578,761584],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[761617,761618]},{"pos":[761650,761654],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[761684,761685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[761713,761714]},{"pos":[761769,761773],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[761832,761835]},{"pos":[761869,761875],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[761908,761909]},{"pos":[761941,761945],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[761975,761976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[762004,762005]},{"pos":[762060,762064],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[762123,762126]},{"pos":[762160,762166],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[762199,762200]},{"pos":[762232,762238],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[762271,762272]},{"pos":[762304,762311],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[762344,762345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762372,762373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763236,763409],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[764533,764568],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[764652,764653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[764730,764741],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[764826,764827],"content":"<","needQuote":true,"nodes":[]},{"pos":[764854,764860],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[764925,764926]},{"pos":[765008,765019],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[765104,765105],"content":"<","needQuote":true,"nodes":[]},{"pos":[765132,765138],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[765203,765204]},{"pos":[765259,765263],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[765321,765322],"content":"<","needQuote":true,"nodes":[]},{"pos":[765349,765355],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[765388,765389]},{"pos":[765421,765425],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[765488,765489]},{"pos":[765544,765548],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[765606,765607],"content":"<","needQuote":true,"nodes":[]},{"pos":[765634,765640],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[765673,765674]},{"pos":[765706,765710],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[765773,765774]},{"pos":[765829,765833],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[765891,765892],"content":"<","needQuote":true,"nodes":[]},{"pos":[765919,765925],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[765958,765959]},{"pos":[765991,765997],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[766030,766031]},{"pos":[766063,766070],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[766136,766137]},{"pos":[766225,766242],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[766333,766334],"content":"<","needQuote":true,"nodes":[]},{"pos":[766361,766365],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[766427,766428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766712,766750],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[766837,766838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[766915,766926],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[767012,767015]},{"pos":[767049,767055],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[767087,767088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[767116,767117]},{"pos":[767199,767210],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[767296,767299]},{"pos":[767333,767339],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[767371,767372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[767400,767401]},{"pos":[767456,767460],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[767519,767522]},{"pos":[767556,767562],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[767595,767596]},{"pos":[767628,767632],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[767662,767663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[767691,767692]},{"pos":[767747,767751],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[767810,767813]},{"pos":[767847,767853],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[767886,767887]},{"pos":[767919,767923],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[767953,767954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[767982,767983]},{"pos":[768038,768042],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[768101,768104]},{"pos":[768138,768144],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[768177,768178]},{"pos":[768210,768216],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[768249,768250]},{"pos":[768282,768289],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[768322,768323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[768351,768352]},{"pos":[768440,768457],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[768549,768552]},{"pos":[768586,768590],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[768620,768621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768648,768649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769454,769489],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[769858,769871],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[769933,769934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[770011,770022],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[770107,770108],"content":"<","needQuote":true,"nodes":[]},{"pos":[770135,770142],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[770207,770208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770331,770347],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[770412,770413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[770490,770501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[770587,770590]},{"pos":[770624,770631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[770664,770665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770692,770693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771078,771137],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[771644,771657],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[771719,771720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771797,771808],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[771893,771894],"content":"<","needQuote":true,"nodes":[]},{"pos":[771921,771928],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771994,771995]},{"pos":[772050,772054],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[772112,772113],"content":"<","needQuote":true,"nodes":[]},{"pos":[772140,772147],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772181,772182]},{"pos":[772238,772245],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[772338,772339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772494,772510],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[772575,772576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[772653,772664],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[772750,772753]},{"pos":[772787,772794],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[772827,772828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[772856,772857]},{"pos":[772912,772916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[772975,772978]},{"pos":[773012,773019],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[773053,773054]},{"pos":[773110,773117],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[773178,773179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773206,773207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773652,773696],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[774101,774123],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[774194,774195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774272,774283],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[774368,774369],"content":"<","needQuote":true,"nodes":[]},{"pos":[774396,774403],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[774468,774469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[774601,774626],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[774700,774701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774778,774789],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[774875,774878]},{"pos":[774912,774919],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[774952,774953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[774980,774981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775402,775470],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[776013,776035],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[776106,776107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[776184,776195],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[776280,776281],"content":"<","needQuote":true,"nodes":[]},{"pos":[776308,776315],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776381,776382]},{"pos":[776437,776441],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[776499,776500],"content":"<","needQuote":true,"nodes":[]},{"pos":[776527,776534],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776568,776569]},{"pos":[776625,776632],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[776725,776726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776890,776915],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[776989,776990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[777067,777078],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[777164,777167]},{"pos":[777201,777208],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[777241,777242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[777270,777271]},{"pos":[777326,777330],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[777389,777392]},{"pos":[777426,777433],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777467,777468]},{"pos":[777524,777531],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[777592,777593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[777620,777621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778089,778129],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[778518,778536],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[778603,778604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[778681,778692],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[778777,778778],"content":"<","needQuote":true,"nodes":[]},{"pos":[778805,778812],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[778877,778878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779006,779027],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[779097,779098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[779175,779186],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[779272,779275]},{"pos":[779309,779316],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[779349,779350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779377,779378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779783,779847],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[780374,780392],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[780459,780460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[780537,780548],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[780633,780634],"content":"<","needQuote":true,"nodes":[]},{"pos":[780661,780668],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[780734,780735]},{"pos":[780790,780794],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[780852,780853],"content":"<","needQuote":true,"nodes":[]},{"pos":[780880,780887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[780921,780922]},{"pos":[780978,780985],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[781078,781079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781239,781260],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[781330,781331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[781408,781419],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[781505,781508]},{"pos":[781542,781549],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[781582,781583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[781611,781612]},{"pos":[781667,781671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[781730,781733]},{"pos":[781767,781774],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781808,781809]},{"pos":[781865,781872],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[781933,781934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781961,781962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[782412,782446],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[782811,782823],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[782884,782885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[782962,782973],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[783058,783059],"content":"<","needQuote":true,"nodes":[]},{"pos":[783086,783093],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[783158,783159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783281,783296],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[783360,783361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[783438,783449],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[783535,783538]},{"pos":[783572,783579],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[783612,783613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783640,783641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[784022,784080],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[784583,784595],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[784656,784657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[784734,784745],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[784830,784831],"content":"<","needQuote":true,"nodes":[]},{"pos":[784858,784865],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[784931,784932]},{"pos":[784987,784991],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[785049,785050],"content":"<","needQuote":true,"nodes":[]},{"pos":[785077,785084],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785118,785119]},{"pos":[785175,785182],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[785275,785276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[785430,785445],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[785509,785510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[785587,785598],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[785684,785687]},{"pos":[785721,785728],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[785761,785762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[785790,785791]},{"pos":[785846,785850],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[785909,785912]},{"pos":[785946,785953],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785987,785988]},{"pos":[786044,786051],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[786112,786113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786140,786141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786604,786661],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[787160,787172],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[787233,787234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[787311,787322],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[787407,787408],"content":"<","needQuote":true,"nodes":[]},{"pos":[787435,787442],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[787508,787509]},{"pos":[787564,787568],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[787626,787627],"content":"<","needQuote":true,"nodes":[]},{"pos":[787654,787661],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[787695,787696]},{"pos":[787751,787757],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[787849,787850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[788003,788018],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[788082,788083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[788160,788171],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[788257,788260]},{"pos":[788294,788301],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[788334,788335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[788363,788364]},{"pos":[788419,788423],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[788482,788485]},{"pos":[788519,788526],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788560,788561]},{"pos":[788616,788622],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[788682,788683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[788710,788711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789170,789226],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[789721,789733],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[789794,789795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[789872,789883],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[789968,789969],"content":"<","needQuote":true,"nodes":[]},{"pos":[789996,790003],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790069,790070]},{"pos":[790125,790129],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[790187,790188],"content":"<","needQuote":true,"nodes":[]},{"pos":[790215,790222],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790256,790257]},{"pos":[790311,790316],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[790407,790408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790560,790575],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[790639,790640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[790717,790728],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[790814,790817]},{"pos":[790851,790858],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[790891,790892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[790920,790921]},{"pos":[790976,790980],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[791039,791042]},{"pos":[791076,791083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[791117,791118]},{"pos":[791172,791177],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[791236,791237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[791264,791265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[791721,791777],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[792272,792284],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[792345,792346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[792423,792434],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[792519,792520],"content":"<","needQuote":true,"nodes":[]},{"pos":[792547,792554],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792620,792621]},{"pos":[792676,792680],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[792738,792739],"content":"<","needQuote":true,"nodes":[]},{"pos":[792766,792773],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792807,792808]},{"pos":[792862,792867],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[792958,792959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793111,793126],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[793190,793191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[793268,793279],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[793365,793368]},{"pos":[793402,793409],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[793442,793443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[793471,793472]},{"pos":[793527,793531],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[793590,793593]},{"pos":[793627,793634],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[793668,793669]},{"pos":[793723,793728],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[793787,793788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793815,793816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794291,794359],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[794929,794941],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[795002,795003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[795080,795091],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[795176,795177],"content":"<","needQuote":true,"nodes":[]},{"pos":[795204,795211],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[795277,795278]},{"pos":[795333,795337],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[795395,795396],"content":"<","needQuote":true,"nodes":[]},{"pos":[795423,795430],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[795464,795465]},{"pos":[795524,795532],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[795594,795595],"content":"<","needQuote":true,"nodes":[]},{"pos":[795646,795653],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[795778,795779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[795950,795965],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[796029,796030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[796107,796118],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[796204,796207]},{"pos":[796241,796248],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[796281,796282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[796310,796311]},{"pos":[796366,796370],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[796429,796432]},{"pos":[796466,796473],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[796507,796508]},{"pos":[796567,796575],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[796638,796641]},{"pos":[796699,796706],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[796767,796768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796795,796796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796823,796824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[797344,797411],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[797977,797989],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[798050,798051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[798128,798139],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[798224,798225],"content":"<","needQuote":true,"nodes":[]},{"pos":[798252,798259],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798325,798326]},{"pos":[798381,798385],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[798443,798444],"content":"<","needQuote":true,"nodes":[]},{"pos":[798471,798478],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798512,798513]},{"pos":[798572,798580],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[798642,798643],"content":"<","needQuote":true,"nodes":[]},{"pos":[798693,798699],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[798823,798824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[798994,799009],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[799073,799074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[799151,799162],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[799248,799251]},{"pos":[799285,799292],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[799325,799326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[799354,799355]},{"pos":[799410,799414],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[799473,799476]},{"pos":[799510,799517],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[799551,799552]},{"pos":[799611,799619],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[799682,799685]},{"pos":[799742,799748],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[799808,799809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799836,799837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799864,799865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800381,800447],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[801009,801021],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[801082,801083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[801160,801171],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[801256,801257],"content":"<","needQuote":true,"nodes":[]},{"pos":[801284,801291],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801357,801358]},{"pos":[801413,801417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[801475,801476],"content":"<","needQuote":true,"nodes":[]},{"pos":[801503,801510],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801544,801545]},{"pos":[801604,801612],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[801674,801675],"content":"<","needQuote":true,"nodes":[]},{"pos":[801724,801729],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[801852,801853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802022,802037],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[802101,802102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[802179,802190],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[802276,802279]},{"pos":[802313,802320],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[802353,802354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[802382,802383]},{"pos":[802438,802442],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[802501,802504]},{"pos":[802538,802545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[802579,802580]},{"pos":[802639,802647],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[802710,802713]},{"pos":[802769,802774],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[802833,802834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802861,802862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802889,802890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803403,803469],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[804031,804043],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[804104,804105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[804182,804193],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[804278,804279],"content":"<","needQuote":true,"nodes":[]},{"pos":[804306,804313],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[804379,804380]},{"pos":[804435,804439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[804497,804498],"content":"<","needQuote":true,"nodes":[]},{"pos":[804525,804532],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[804566,804567]},{"pos":[804626,804634],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[804696,804697],"content":"<","needQuote":true,"nodes":[]},{"pos":[804746,804751],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[804874,804875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805044,805059],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[805123,805124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[805201,805212],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[805298,805301]},{"pos":[805335,805342],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[805375,805376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[805404,805405]},{"pos":[805460,805464],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[805523,805526]},{"pos":[805560,805567],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805601,805602]},{"pos":[805661,805669],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[805732,805735]},{"pos":[805791,805796],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[805855,805856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805883,805884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805911,805912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806426,806493],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[807059,807071],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[807132,807133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[807210,807221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[807306,807307],"content":"<","needQuote":true,"nodes":[]},{"pos":[807334,807341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807407,807408]},{"pos":[807463,807467],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[807525,807526],"content":"<","needQuote":true,"nodes":[]},{"pos":[807553,807560],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807594,807595]},{"pos":[807654,807662],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[807724,807725],"content":"<","needQuote":true,"nodes":[]},{"pos":[807775,807781],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[807905,807906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808076,808091],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[808155,808156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[808233,808244],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[808330,808333]},{"pos":[808367,808374],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[808407,808408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[808436,808437]},{"pos":[808492,808496],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[808555,808558]},{"pos":[808592,808599],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808633,808634]},{"pos":[808693,808701],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[808764,808767]},{"pos":[808824,808830],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[808890,808891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808918,808919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808946,808947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809447,809504],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[810003,810015],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[810076,810077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[810154,810165],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[810250,810251],"content":"<","needQuote":true,"nodes":[]},{"pos":[810278,810285],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[810351,810352]},{"pos":[810407,810411],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[810469,810470],"content":"<","needQuote":true,"nodes":[]},{"pos":[810497,810504],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[810538,810539]},{"pos":[810594,810600],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[810692,810693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810846,810861],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[810925,810926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[811003,811014],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[811100,811103]},{"pos":[811137,811144],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[811177,811178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[811206,811207]},{"pos":[811262,811266],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[811325,811328]},{"pos":[811362,811369],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[811403,811404]},{"pos":[811459,811465],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[811525,811526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[811553,811554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812004,812071],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[812576,812597],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[812667,812668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[812745,812756],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[812841,812842],"content":"<","needQuote":true,"nodes":[]},{"pos":[812869,812876],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812942,812943]},{"pos":[812998,813002],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[813060,813061],"content":"<","needQuote":true,"nodes":[]},{"pos":[813088,813095],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813129,813130]},{"pos":[813162,813169],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[813234,813235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[813378,813402],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[813475,813476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[813553,813564],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[813650,813653]},{"pos":[813687,813694],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[813727,813728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813756,813757]},{"pos":[813812,813816],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[813875,813878]},{"pos":[813912,813919],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813953,813954]},{"pos":[813986,813993],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[814026,814027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814054,814055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814494,814528],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[814893,814905],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[814966,814967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[815044,815055],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[815140,815141],"content":"<","needQuote":true,"nodes":[]},{"pos":[815168,815175],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[815240,815241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815363,815378],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[815442,815443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[815520,815531],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[815617,815620]},{"pos":[815654,815661],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[815694,815695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815722,815723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816104,816162],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[816665,816677],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[816738,816739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[816816,816827],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[816912,816913],"content":"<","needQuote":true,"nodes":[]},{"pos":[816940,816947],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[817013,817014]},{"pos":[817069,817073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[817131,817132],"content":"<","needQuote":true,"nodes":[]},{"pos":[817159,817166],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[817200,817201]},{"pos":[817257,817264],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[817357,817358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[817512,817527],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[817591,817592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[817669,817680],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[817766,817769]},{"pos":[817803,817810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[817843,817844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[817872,817873]},{"pos":[817928,817932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[817991,817994]},{"pos":[818028,818035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818069,818070]},{"pos":[818126,818133],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[818194,818195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818222,818223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818686,818743],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[819242,819254],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[819315,819316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[819393,819404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[819489,819490],"content":"<","needQuote":true,"nodes":[]},{"pos":[819517,819524],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819590,819591]},{"pos":[819646,819650],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[819708,819709],"content":"<","needQuote":true,"nodes":[]},{"pos":[819736,819743],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819777,819778]},{"pos":[819833,819839],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[819931,819932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820085,820100],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[820164,820165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[820242,820253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[820339,820342]},{"pos":[820376,820383],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[820416,820417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[820445,820446]},{"pos":[820501,820505],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[820564,820567]},{"pos":[820601,820608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820642,820643]},{"pos":[820698,820704],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[820764,820765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820792,820793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[821252,821308],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[821803,821815],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[821876,821877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[821954,821965],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[822050,822051],"content":"<","needQuote":true,"nodes":[]},{"pos":[822078,822085],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822151,822152]},{"pos":[822207,822211],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[822269,822270],"content":"<","needQuote":true,"nodes":[]},{"pos":[822297,822304],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822338,822339]},{"pos":[822393,822398],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[822489,822490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[822642,822657],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[822721,822722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[822799,822810],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[822896,822899]},{"pos":[822933,822940],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[822973,822974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[823002,823003]},{"pos":[823058,823062],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[823121,823124]},{"pos":[823158,823165],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[823199,823200]},{"pos":[823254,823259],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[823318,823319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823346,823347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823803,823859],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[824354,824366],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[824427,824428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[824505,824516],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[824601,824602],"content":"<","needQuote":true,"nodes":[]},{"pos":[824629,824636],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824702,824703]},{"pos":[824758,824762],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[824820,824821],"content":"<","needQuote":true,"nodes":[]},{"pos":[824848,824855],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824889,824890]},{"pos":[824944,824949],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[825040,825041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825193,825208],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[825272,825273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[825350,825361],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[825447,825450]},{"pos":[825484,825491],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[825524,825525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[825553,825554]},{"pos":[825609,825613],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[825672,825675]},{"pos":[825709,825716],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[825750,825751]},{"pos":[825805,825810],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[825869,825870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825897,825898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826373,826441],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[827011,827023],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[827084,827085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[827162,827173],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[827258,827259],"content":"<","needQuote":true,"nodes":[]},{"pos":[827286,827293],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[827359,827360]},{"pos":[827415,827419],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[827477,827478],"content":"<","needQuote":true,"nodes":[]},{"pos":[827505,827512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[827546,827547]},{"pos":[827606,827614],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[827676,827677],"content":"<","needQuote":true,"nodes":[]},{"pos":[827728,827735],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[827860,827861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828032,828047],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[828111,828112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[828189,828200],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[828286,828289]},{"pos":[828323,828330],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[828363,828364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[828392,828393]},{"pos":[828448,828452],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[828511,828514]},{"pos":[828548,828555],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[828589,828590]},{"pos":[828649,828657],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[828720,828723]},{"pos":[828781,828788],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[828849,828850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828877,828878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828905,828906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829426,829493],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[830059,830071],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[830132,830133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[830210,830221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[830306,830307],"content":"<","needQuote":true,"nodes":[]},{"pos":[830334,830341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[830407,830408]},{"pos":[830463,830467],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[830525,830526],"content":"<","needQuote":true,"nodes":[]},{"pos":[830553,830560],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[830594,830595]},{"pos":[830654,830662],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[830724,830725],"content":"<","needQuote":true,"nodes":[]},{"pos":[830775,830781],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[830905,830906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[831076,831091],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[831155,831156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[831233,831244],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[831330,831333]},{"pos":[831367,831374],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[831407,831408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[831436,831437]},{"pos":[831492,831496],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[831555,831558]},{"pos":[831592,831599],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[831633,831634]},{"pos":[831693,831701],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[831764,831767]},{"pos":[831824,831830],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[831890,831891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[831918,831919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[831946,831947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[832463,832529],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[833091,833103],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[833164,833165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[833242,833253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[833338,833339],"content":"<","needQuote":true,"nodes":[]},{"pos":[833366,833373],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[833439,833440]},{"pos":[833495,833499],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[833557,833558],"content":"<","needQuote":true,"nodes":[]},{"pos":[833585,833592],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[833626,833627]},{"pos":[833686,833694],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[833756,833757],"content":"<","needQuote":true,"nodes":[]},{"pos":[833806,833811],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[833934,833935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834104,834119],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[834183,834184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[834261,834272],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[834358,834361]},{"pos":[834395,834402],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[834435,834436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[834464,834465]},{"pos":[834520,834524],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[834583,834586]},{"pos":[834620,834627],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834661,834662]},{"pos":[834721,834729],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[834792,834795]},{"pos":[834851,834856],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[834915,834916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834943,834944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834971,834972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[835485,835551],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[836113,836125],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[836186,836187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[836264,836275],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[836360,836361],"content":"<","needQuote":true,"nodes":[]},{"pos":[836388,836395],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[836461,836462]},{"pos":[836517,836521],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[836579,836580],"content":"<","needQuote":true,"nodes":[]},{"pos":[836607,836614],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[836648,836649]},{"pos":[836708,836716],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[836778,836779],"content":"<","needQuote":true,"nodes":[]},{"pos":[836828,836833],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[836956,836957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837126,837141],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[837205,837206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[837283,837294],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[837380,837383]},{"pos":[837417,837424],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[837457,837458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[837486,837487]},{"pos":[837542,837546],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[837605,837608]},{"pos":[837642,837649],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[837683,837684]},{"pos":[837743,837751],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[837814,837817]},{"pos":[837873,837878],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[837937,837938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837965,837966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837993,837994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[838508,838575],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[839141,839153],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[839214,839215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[839292,839303],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[839388,839389],"content":"<","needQuote":true,"nodes":[]},{"pos":[839416,839423],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839489,839490]},{"pos":[839545,839549],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[839607,839608],"content":"<","needQuote":true,"nodes":[]},{"pos":[839635,839642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839676,839677]},{"pos":[839736,839744],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[839806,839807],"content":"<","needQuote":true,"nodes":[]},{"pos":[839857,839863],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[839987,839988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[840158,840173],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[840237,840238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[840315,840326],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[840412,840415]},{"pos":[840449,840456],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[840489,840490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[840518,840519]},{"pos":[840574,840578],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[840637,840640]},{"pos":[840674,840681],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[840715,840716]},{"pos":[840775,840783],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[840846,840849]},{"pos":[840906,840912],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[840972,840973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[841000,841001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[841028,841029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[841529,841586],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[842085,842097],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[842158,842159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[842236,842247],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[842332,842333],"content":"<","needQuote":true,"nodes":[]},{"pos":[842360,842367],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842433,842434]},{"pos":[842489,842493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[842551,842552],"content":"<","needQuote":true,"nodes":[]},{"pos":[842579,842586],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842620,842621]},{"pos":[842676,842682],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[842774,842775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842928,842943],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[843007,843008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[843085,843096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[843182,843185]},{"pos":[843219,843226],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[843259,843260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[843288,843289]},{"pos":[843344,843348],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[843407,843410]},{"pos":[843444,843451],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[843485,843486]},{"pos":[843541,843547],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[843607,843608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843635,843636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[844086,844153],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[844658,844679],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[844749,844750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[844827,844838],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[844923,844924],"content":"<","needQuote":true,"nodes":[]},{"pos":[844951,844958],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845024,845025]},{"pos":[845080,845084],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[845142,845143],"content":"<","needQuote":true,"nodes":[]},{"pos":[845170,845177],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845211,845212]},{"pos":[845244,845251],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[845316,845317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[845460,845484],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[845557,845558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[845635,845646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[845732,845735]},{"pos":[845769,845776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[845809,845810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[845838,845839]},{"pos":[845894,845898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[845957,845960]},{"pos":[845994,846001],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[846035,846036]},{"pos":[846068,846075],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[846108,846109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846136,846137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846566,846594],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[846909,846924],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[846988,846989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[847056,847067],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[847144,847145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847257,847275],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[847342,847343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[847410,847421],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[847498,847499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847848,847913],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[848416,848438],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[848509,848510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848587,848598],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[848683,848684],"content":"<","needQuote":true,"nodes":[]},{"pos":[848711,848718],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848784,848785]},{"pos":[848840,848844],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[848902,848903],"content":"<","needQuote":true,"nodes":[]},{"pos":[848930,848937],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848971,848972]},{"pos":[849004,849008],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[849070,849071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849218,849243],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[849317,849318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[849395,849406],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[849492,849495]},{"pos":[849529,849536],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849569,849570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[849598,849599]},{"pos":[849654,849658],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[849717,849720]},{"pos":[849754,849761],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[849795,849796]},{"pos":[849828,849832],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[849862,849863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849890,849891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[850397,850479],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[851135,851157],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[851228,851229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851306,851317],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[851402,851403],"content":"<","needQuote":true,"nodes":[]},{"pos":[851430,851437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[851503,851504]},{"pos":[851559,851563],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[851621,851622],"content":"<","needQuote":true,"nodes":[]},{"pos":[851649,851656],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[851690,851691]},{"pos":[851723,851727],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[851790,851791]},{"pos":[851871,851880],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[851963,851964],"content":"<","needQuote":true,"nodes":[]},{"pos":[851991,851995],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[852057,852058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852247,852272],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[852346,852347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[852424,852435],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[852521,852524]},{"pos":[852558,852565],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[852598,852599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[852627,852628]},{"pos":[852683,852687],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[852746,852749]},{"pos":[852783,852790],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[852824,852825]},{"pos":[852857,852861],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[852891,852892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[852920,852921]},{"pos":[853001,853010],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[853094,853097]},{"pos":[853131,853135],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[853165,853166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853193,853194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853747,853822],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[854365,854397],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[854478,854479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[854556,854567],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[854652,854653],"content":"<","needQuote":true,"nodes":[]},{"pos":[854680,854687],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[854753,854754]},{"pos":[854809,854813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[854871,854872],"content":"<","needQuote":true,"nodes":[]},{"pos":[854899,854906],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[854940,854941]},{"pos":[854973,854977],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[855039,855040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855197,855232],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[855316,855317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[855394,855405],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[855491,855494]},{"pos":[855528,855535],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[855568,855569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[855597,855598]},{"pos":[855653,855657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[855716,855719]},{"pos":[855753,855760],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[855794,855795]},{"pos":[855827,855831],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[855861,855862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855889,855890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856436,856528],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[857224,857256],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[857337,857338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[857415,857426],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[857511,857512],"content":"<","needQuote":true,"nodes":[]},{"pos":[857539,857546],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[857612,857613]},{"pos":[857668,857672],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[857730,857731],"content":"<","needQuote":true,"nodes":[]},{"pos":[857758,857765],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[857799,857800]},{"pos":[857832,857836],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[857899,857900]},{"pos":[857980,857989],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[858072,858073],"content":"<","needQuote":true,"nodes":[]},{"pos":[858100,858104],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[858166,858167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[858366,858401],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[858485,858486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[858563,858574],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[858660,858663]},{"pos":[858697,858704],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[858737,858738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[858766,858767]},{"pos":[858822,858826],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[858885,858888]},{"pos":[858922,858929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[858963,858964]},{"pos":[858996,859000],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[859030,859031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[859059,859060]},{"pos":[859140,859149],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[859233,859236]},{"pos":[859270,859274],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[859304,859305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[859332,859333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[859885,859923],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[860304,860320],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[860385,860386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[860463,860474],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[860559,860560],"content":"<","needQuote":true,"nodes":[]},{"pos":[860587,860594],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[860659,860660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[860786,860805],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[860873,860874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[860951,860962],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[861048,861051]},{"pos":[861085,861092],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[861125,861126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[861153,861154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[861539,861609],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[862126,862150],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[862223,862224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[862301,862312],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[862397,862398],"content":"<","needQuote":true,"nodes":[]},{"pos":[862425,862432],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[862498,862499]},{"pos":[862554,862558],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[862616,862617],"content":"<","needQuote":true,"nodes":[]},{"pos":[862644,862651],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[862685,862686]},{"pos":[862718,862725],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[862790,862791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862937,862964],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[863040,863041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[863118,863129],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[863215,863218]},{"pos":[863252,863259],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[863292,863293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[863321,863322]},{"pos":[863377,863381],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[863440,863443]},{"pos":[863477,863484],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[863518,863519]},{"pos":[863551,863558],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[863591,863592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863619,863620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[864105,864182],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[864747,864771],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[864844,864845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[864922,864933],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[865018,865019],"content":"<","needQuote":true,"nodes":[]},{"pos":[865046,865053],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[865119,865120]},{"pos":[865175,865179],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[865237,865238],"content":"<","needQuote":true,"nodes":[]},{"pos":[865265,865272],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[865306,865307]},{"pos":[865361,865366],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[865426,865427]},{"pos":[865459,865466],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[865531,865532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[865691,865718],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[865794,865795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[865872,865883],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[865969,865972]},{"pos":[866006,866013],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[866046,866047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[866075,866076]},{"pos":[866131,866135],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[866194,866197]},{"pos":[866231,866238],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[866272,866273]},{"pos":[866327,866332],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[866392,866393]},{"pos":[866425,866432],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[866465,866466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[866493,866494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[867037,867124],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[867796,867824],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[867901,867902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[867979,867990],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[868075,868076],"content":"<","needQuote":true,"nodes":[]},{"pos":[868103,868110],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[868176,868177]},{"pos":[868232,868236],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[868294,868295],"content":"<","needQuote":true,"nodes":[]},{"pos":[868322,868329],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[868363,868364]},{"pos":[868446,868457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[868542,868543],"content":"<","needQuote":true,"nodes":[]},{"pos":[868570,868577],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[868674,868675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[868865,868896],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[868976,868977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[869054,869065],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[869151,869154]},{"pos":[869188,869195],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[869228,869229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[869257,869258]},{"pos":[869313,869317],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[869376,869379]},{"pos":[869413,869420],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[869454,869455]},{"pos":[869537,869548],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[869634,869637]},{"pos":[869671,869678],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[869711,869712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869739,869740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869767,869768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[870378,870472],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[871192,871220],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[871297,871298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871375,871386],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[871471,871472],"content":"<","needQuote":true,"nodes":[]},{"pos":[871499,871506],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[871572,871573]},{"pos":[871628,871632],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[871690,871691],"content":"<","needQuote":true,"nodes":[]},{"pos":[871718,871725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[871759,871760]},{"pos":[871814,871819],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[871879,871880]},{"pos":[871962,871973],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[872058,872059],"content":"<","needQuote":true,"nodes":[]},{"pos":[872086,872093],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[872190,872191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[872394,872425],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[872505,872506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[872583,872594],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[872680,872683]},{"pos":[872717,872724],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[872757,872758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[872786,872787]},{"pos":[872842,872846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[872905,872908]},{"pos":[872942,872949],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[872983,872984]},{"pos":[873038,873043],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[873103,873104]},{"pos":[873186,873197],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[873283,873286]},{"pos":[873320,873327],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[873360,873361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873388,873389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873416,873417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[874066,874207],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[875086,875127],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[875217,875218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[875295,875306],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[875391,875392],"content":"<","needQuote":true,"nodes":[]},{"pos":[875419,875426],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[875492,875493]},{"pos":[875548,875552],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[875610,875611],"content":"<","needQuote":true,"nodes":[]},{"pos":[875638,875645],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[875679,875680]},{"pos":[875762,875773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[875858,875859],"content":"<","needQuote":true,"nodes":[]},{"pos":[875886,875897],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[875999,876000]},{"pos":[876055,876059],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[876117,876118],"content":"<","needQuote":true,"nodes":[]},{"pos":[876145,876152],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[876186,876187]},{"pos":[876219,876230],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[876268,876269]},{"pos":[876301,876308],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[876373,876374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[876589,876633],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[876726,876727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[876804,876815],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[876901,876904]},{"pos":[876938,876945],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[876978,876979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[877007,877008]},{"pos":[877063,877067],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[877126,877129]},{"pos":[877163,877170],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[877204,877205]},{"pos":[877287,877298],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[877384,877387]},{"pos":[877421,877432],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[877469,877470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877497,877498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[877526,877527]},{"pos":[877582,877586],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[877645,877648]},{"pos":[877682,877689],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[877723,877724]},{"pos":[877756,877767],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[877805,877806]},{"pos":[877838,877845],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[877878,877879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877906,877907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[878678,878826],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[879753,879794],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[879884,879885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[879962,879973],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[880058,880059],"content":"<","needQuote":true,"nodes":[]},{"pos":[880086,880093],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[880159,880160]},{"pos":[880215,880219],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[880277,880278],"content":"<","needQuote":true,"nodes":[]},{"pos":[880305,880312],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[880346,880347]},{"pos":[880401,880406],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[880466,880467]},{"pos":[880549,880560],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[880645,880646],"content":"<","needQuote":true,"nodes":[]},{"pos":[880673,880684],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[880786,880787]},{"pos":[880842,880846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[880904,880905],"content":"<","needQuote":true,"nodes":[]},{"pos":[880932,880939],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[880973,880974]},{"pos":[881006,881017],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[881055,881056]},{"pos":[881088,881095],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[881160,881161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[881389,881433],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[881526,881527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[881604,881615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[881701,881704]},{"pos":[881738,881745],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[881778,881779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[881807,881808]},{"pos":[881863,881867],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[881926,881929]},{"pos":[881963,881970],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[882004,882005]},{"pos":[882059,882064],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[882124,882125]},{"pos":[882207,882218],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[882304,882307]},{"pos":[882341,882352],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[882389,882390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[882417,882418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[882446,882447]},{"pos":[882502,882506],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[882565,882568]},{"pos":[882602,882609],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[882643,882644]},{"pos":[882676,882687],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[882725,882726]},{"pos":[882758,882765],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[882798,882799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[882826,882827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883573,883639],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[884214,884236],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[884307,884308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[884385,884396],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[884481,884482],"content":"<","needQuote":true,"nodes":[]},{"pos":[884509,884516],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[884582,884583]},{"pos":[884665,884676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[884761,884762],"content":"<","needQuote":true,"nodes":[]},{"pos":[884789,884796],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[884861,884862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[885038,885063],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[885137,885138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[885215,885226],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[885312,885315]},{"pos":[885349,885356],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[885389,885390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[885418,885419]},{"pos":[885501,885512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[885598,885601]},{"pos":[885635,885642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[885675,885676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[885703,885704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[886278,886372],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[887141,887163],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[887234,887235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[887312,887323],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[887408,887409],"content":"<","needQuote":true,"nodes":[]},{"pos":[887436,887443],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[887509,887510]},{"pos":[887592,887603],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[887688,887689],"content":"<","needQuote":true,"nodes":[]},{"pos":[887716,887723],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[887789,887790]},{"pos":[887878,887895],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[887986,887987],"content":"<","needQuote":true,"nodes":[]},{"pos":[888014,888021],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[888086,888087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[888313,888338],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[888412,888413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[888490,888501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[888587,888590]},{"pos":[888624,888631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[888664,888665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[888693,888694]},{"pos":[888776,888787],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[888873,888876]},{"pos":[888910,888917],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[888950,888951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[888979,888980]},{"pos":[889068,889085],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[889177,889180]},{"pos":[889214,889221],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[889254,889255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[889282,889283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[889865,889902],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[890279,890294],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[890358,890359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[890436,890447],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[890532,890533],"content":"<","needQuote":true,"nodes":[]},{"pos":[890560,890567],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[890632,890633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[890758,890776],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[890843,890844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[890921,890932],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[891018,891021]},{"pos":[891055,891062],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[891095,891096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[891123,891124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[891517,891578],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[892093,892108],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[892172,892173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[892250,892261],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[892346,892347],"content":"<","needQuote":true,"nodes":[]},{"pos":[892374,892381],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[892447,892448]},{"pos":[892503,892507],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[892565,892566],"content":"<","needQuote":true,"nodes":[]},{"pos":[892593,892600],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[892634,892635]},{"pos":[892691,892698],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[892791,892792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[892949,892967],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[893034,893035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[893112,893123],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[893209,893212]},{"pos":[893246,893253],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[893286,893287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[893315,893316]},{"pos":[893371,893375],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[893434,893437]},{"pos":[893471,893478],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[893512,893513]},{"pos":[893569,893576],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[893637,893638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[893665,893666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[894119,894165],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[894578,894602],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[894675,894676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[894753,894764],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[894849,894850],"content":"<","needQuote":true,"nodes":[]},{"pos":[894877,894884],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[894949,894950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[895084,895111],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[895187,895188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[895265,895276],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[895362,895365]},{"pos":[895399,895406],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[895439,895440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[895467,895468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[895897,895967],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[896518,896542],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[896615,896616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[896693,896704],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[896789,896790],"content":"<","needQuote":true,"nodes":[]},{"pos":[896817,896824],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[896890,896891]},{"pos":[896946,896950],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[897008,897009],"content":"<","needQuote":true,"nodes":[]},{"pos":[897036,897043],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[897077,897078]},{"pos":[897134,897141],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[897234,897235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[897401,897428],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[897504,897505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[897582,897593],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[897679,897682]},{"pos":[897716,897723],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[897756,897757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[897785,897786]},{"pos":[897841,897845],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[897904,897907]},{"pos":[897941,897948],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[897982,897983]},{"pos":[898039,898046],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[898107,898108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[898135,898136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[898618,898660],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[899077,899090],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[899152,899153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[899230,899241],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[899326,899327],"content":"<","needQuote":true,"nodes":[]},{"pos":[899354,899361],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[899427,899428]},{"pos":[899482,899487],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[899546,899547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[899683,899699],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[899764,899765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[899842,899853],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[899939,899942]},{"pos":[899976,899983],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[900016,900017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[900045,900046]},{"pos":[900100,900105],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[900164,900165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[900582,900646],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[901173,901191],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[901258,901259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[901336,901347],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[901432,901433],"content":"<","needQuote":true,"nodes":[]},{"pos":[901460,901467],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[901533,901534]},{"pos":[901589,901593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[901651,901652],"content":"<","needQuote":true,"nodes":[]},{"pos":[901679,901686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[901720,901721]},{"pos":[901777,901784],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[901877,901878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[902038,902059],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[902129,902130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[902207,902218],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[902304,902307]},{"pos":[902341,902348],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[902381,902382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[902410,902411]},{"pos":[902466,902470],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[902529,902532]},{"pos":[902566,902573],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[902607,902608]},{"pos":[902664,902671],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[902732,902733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[902760,902761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[903262,903333],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[903908,903926],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[903993,903994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[904071,904082],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[904167,904168],"content":"<","needQuote":true,"nodes":[]},{"pos":[904195,904202],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[904268,904269]},{"pos":[904324,904328],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[904386,904387],"content":"<","needQuote":true,"nodes":[]},{"pos":[904414,904421],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[904455,904456]},{"pos":[904510,904515],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[904575,904576]},{"pos":[904632,904639],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[904732,904733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[904906,904927],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[904997,904998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[905075,905086],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[905172,905175]},{"pos":[905209,905216],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[905249,905250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[905278,905279]},{"pos":[905334,905338],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[905397,905400]},{"pos":[905434,905441],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[905475,905476]},{"pos":[905530,905535],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[905595,905596]},{"pos":[905652,905659],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[905720,905721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[905748,905749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[906258,906316],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[906819,906831],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[906892,906893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[906970,906981],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[907066,907067],"content":"<","needQuote":true,"nodes":[]},{"pos":[907094,907101],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[907167,907168]},{"pos":[907223,907227],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[907285,907286],"content":"<","needQuote":true,"nodes":[]},{"pos":[907313,907320],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[907354,907355]},{"pos":[907411,907418],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[907511,907512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[907666,907681],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[907745,907746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[907823,907834],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[907920,907923]},{"pos":[907957,907964],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[907997,907998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[908026,908027]},{"pos":[908082,908086],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[908145,908148]},{"pos":[908182,908189],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[908223,908224]},{"pos":[908280,908287],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[908348,908349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[908376,908377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[908840,908897],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[909396,909408],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[909469,909470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[909547,909558],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[909643,909644],"content":"<","needQuote":true,"nodes":[]},{"pos":[909671,909678],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[909744,909745]},{"pos":[909800,909804],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[909862,909863],"content":"<","needQuote":true,"nodes":[]},{"pos":[909890,909897],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[909931,909932]},{"pos":[909987,909993],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[910085,910086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[910239,910254],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[910318,910319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[910396,910407],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[910493,910496]},{"pos":[910530,910537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[910570,910571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[910599,910600]},{"pos":[910655,910659],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[910718,910721]},{"pos":[910755,910762],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[910796,910797]},{"pos":[910852,910858],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[910918,910919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[910946,910947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[911406,911462],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[911957,911969],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[912030,912031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[912108,912119],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[912204,912205],"content":"<","needQuote":true,"nodes":[]},{"pos":[912232,912239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[912305,912306]},{"pos":[912361,912365],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[912423,912424],"content":"<","needQuote":true,"nodes":[]},{"pos":[912451,912458],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[912492,912493]},{"pos":[912547,912552],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[912643,912644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[912796,912811],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[912875,912876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[912953,912964],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[913050,913053]},{"pos":[913087,913094],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[913127,913128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[913156,913157]},{"pos":[913212,913216],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[913275,913278]},{"pos":[913312,913319],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[913353,913354]},{"pos":[913408,913413],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[913472,913473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[913500,913501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[913957,914013],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[914508,914520],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[914581,914582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[914659,914670],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[914755,914756],"content":"<","needQuote":true,"nodes":[]},{"pos":[914783,914790],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[914856,914857]},{"pos":[914912,914916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[914974,914975],"content":"<","needQuote":true,"nodes":[]},{"pos":[915002,915009],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[915043,915044]},{"pos":[915098,915103],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[915194,915195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[915347,915362],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[915426,915427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[915504,915515],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[915601,915604]},{"pos":[915638,915645],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[915678,915679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[915707,915708]},{"pos":[915763,915767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[915826,915829]},{"pos":[915863,915870],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[915904,915905]},{"pos":[915959,915964],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[916023,916024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[916051,916052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[916527,916595],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[917165,917177],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[917238,917239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[917316,917327],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[917412,917413],"content":"<","needQuote":true,"nodes":[]},{"pos":[917440,917447],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[917513,917514]},{"pos":[917569,917573],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[917631,917632],"content":"<","needQuote":true,"nodes":[]},{"pos":[917659,917666],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[917700,917701]},{"pos":[917760,917768],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[917830,917831],"content":"<","needQuote":true,"nodes":[]},{"pos":[917882,917889],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[918014,918015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[918186,918201],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[918265,918266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[918343,918354],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[918440,918443]},{"pos":[918477,918484],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[918517,918518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[918546,918547]},{"pos":[918602,918606],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[918665,918668]},{"pos":[918702,918709],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[918743,918744]},{"pos":[918803,918811],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[918874,918877]},{"pos":[918935,918942],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[919003,919004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[919031,919032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[919059,919060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[919580,919647],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[920213,920225],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[920286,920287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[920364,920375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[920460,920461],"content":"<","needQuote":true,"nodes":[]},{"pos":[920488,920495],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[920561,920562]},{"pos":[920617,920621],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[920679,920680],"content":"<","needQuote":true,"nodes":[]},{"pos":[920707,920714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[920748,920749]},{"pos":[920808,920816],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[920878,920879],"content":"<","needQuote":true,"nodes":[]},{"pos":[920929,920935],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[921059,921060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[921230,921245],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[921309,921310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[921387,921398],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[921484,921487]},{"pos":[921521,921528],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[921561,921562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[921590,921591]},{"pos":[921646,921650],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[921709,921712]},{"pos":[921746,921753],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[921787,921788]},{"pos":[921847,921855],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[921918,921921]},{"pos":[921978,921984],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[922044,922045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[922072,922073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[922100,922101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[922617,922683],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[923245,923257],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[923318,923319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[923396,923407],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[923492,923493],"content":"<","needQuote":true,"nodes":[]},{"pos":[923520,923527],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[923593,923594]},{"pos":[923649,923653],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[923711,923712],"content":"<","needQuote":true,"nodes":[]},{"pos":[923739,923746],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[923780,923781]},{"pos":[923840,923848],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[923910,923911],"content":"<","needQuote":true,"nodes":[]},{"pos":[923960,923965],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[924088,924089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[924258,924273],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[924337,924338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[924415,924426],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[924512,924515]},{"pos":[924549,924556],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[924589,924590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[924618,924619]},{"pos":[924674,924678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[924737,924740]},{"pos":[924774,924781],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[924815,924816]},{"pos":[924875,924883],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[924946,924949]},{"pos":[925005,925010],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[925069,925070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[925097,925098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[925125,925126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[925639,925705],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[926267,926279],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[926340,926341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[926418,926429],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[926514,926515],"content":"<","needQuote":true,"nodes":[]},{"pos":[926542,926549],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[926615,926616]},{"pos":[926671,926675],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[926733,926734],"content":"<","needQuote":true,"nodes":[]},{"pos":[926761,926768],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[926802,926803]},{"pos":[926862,926870],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[926932,926933],"content":"<","needQuote":true,"nodes":[]},{"pos":[926982,926987],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[927110,927111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[927280,927295],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[927359,927360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[927437,927448],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[927534,927537]},{"pos":[927571,927578],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[927611,927612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[927640,927641]},{"pos":[927696,927700],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[927759,927762]},{"pos":[927796,927803],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[927837,927838]},{"pos":[927897,927905],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[927968,927971]},{"pos":[928027,928032],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[928091,928092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[928119,928120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[928147,928148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[928662,928729],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[929295,929307],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[929368,929369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[929446,929457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[929542,929543],"content":"<","needQuote":true,"nodes":[]},{"pos":[929570,929577],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[929643,929644]},{"pos":[929699,929703],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[929761,929762],"content":"<","needQuote":true,"nodes":[]},{"pos":[929789,929796],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[929830,929831]},{"pos":[929890,929898],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[929960,929961],"content":"<","needQuote":true,"nodes":[]},{"pos":[930011,930017],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[930141,930142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[930312,930327],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[930391,930392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[930469,930480],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[930566,930569]},{"pos":[930603,930610],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[930643,930644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[930672,930673]},{"pos":[930728,930732],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[930791,930794]},{"pos":[930828,930835],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[930869,930870]},{"pos":[930929,930937],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[931000,931003]},{"pos":[931060,931066],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[931126,931127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[931154,931155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[931182,931183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[931683,931740],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[932239,932251],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[932312,932313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[932390,932401],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[932486,932487],"content":"<","needQuote":true,"nodes":[]},{"pos":[932514,932521],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[932587,932588]},{"pos":[932643,932647],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[932705,932706],"content":"<","needQuote":true,"nodes":[]},{"pos":[932733,932740],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[932774,932775]},{"pos":[932830,932836],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[932928,932929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[933082,933097],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[933161,933162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[933239,933250],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[933336,933339]},{"pos":[933373,933380],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[933413,933414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[933442,933443]},{"pos":[933498,933502],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[933561,933564]},{"pos":[933598,933605],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[933639,933640]},{"pos":[933695,933701],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[933761,933762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[933789,933790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[934233,934275],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[934692,934705],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[934767,934768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[934845,934856],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[934941,934942],"content":"<","needQuote":true,"nodes":[]},{"pos":[934969,934976],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[935042,935043]},{"pos":[935097,935102],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[935161,935162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[935298,935314],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[935379,935380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[935457,935468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[935554,935557]},{"pos":[935591,935598],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[935631,935632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[935660,935661]},{"pos":[935715,935720],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[935779,935780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[936197,936261],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[936788,936806],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[936873,936874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[936951,936962],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[937047,937048],"content":"<","needQuote":true,"nodes":[]},{"pos":[937075,937082],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[937148,937149]},{"pos":[937204,937208],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[937266,937267],"content":"<","needQuote":true,"nodes":[]},{"pos":[937294,937301],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[937335,937336]},{"pos":[937392,937399],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[937492,937493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[937653,937674],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[937744,937745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[937822,937833],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[937919,937922]},{"pos":[937956,937963],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[937996,937997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[938025,938026]},{"pos":[938081,938085],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[938144,938147]},{"pos":[938181,938188],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[938222,938223]},{"pos":[938279,938286],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[938347,938348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[938375,938376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[938877,938948],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[939523,939541],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[939608,939609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[939686,939697],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[939782,939783],"content":"<","needQuote":true,"nodes":[]},{"pos":[939810,939817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[939883,939884]},{"pos":[939939,939943],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[940001,940002],"content":"<","needQuote":true,"nodes":[]},{"pos":[940029,940036],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[940070,940071]},{"pos":[940125,940130],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[940190,940191]},{"pos":[940247,940254],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[940347,940348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[940521,940542],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[940612,940613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[940690,940701],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[940787,940790]},{"pos":[940824,940831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[940864,940865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[940893,940894]},{"pos":[940949,940953],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[941012,941015]},{"pos":[941049,941056],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[941090,941091]},{"pos":[941145,941150],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[941210,941211]},{"pos":[941267,941274],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[941335,941336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[941363,941364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[941845,941883],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[942264,942280],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[942345,942346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[942423,942434],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[942519,942520],"content":"<","needQuote":true,"nodes":[]},{"pos":[942547,942554],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[942619,942620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[942746,942765],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[942833,942834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[942911,942922],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[943008,943011]},{"pos":[943045,943052],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[943085,943086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[943113,943114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[943505,943575],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[944098,944125],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[944201,944202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[944279,944290],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[944375,944376],"content":"<","needQuote":true,"nodes":[]},{"pos":[944403,944410],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[944476,944477]},{"pos":[944532,944536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[944594,944595],"content":"<","needQuote":true,"nodes":[]},{"pos":[944622,944629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[944663,944664]},{"pos":[944696,944700],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[944762,944763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[944915,944945],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[945024,945025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[945102,945113],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[945199,945202]},{"pos":[945236,945243],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[945276,945277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[945305,945306]},{"pos":[945361,945365],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[945424,945427]},{"pos":[945461,945468],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[945502,945503]},{"pos":[945535,945539],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[945569,945570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[945597,945598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[946132,946227],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[946935,946962],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[947038,947039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[947116,947127],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[947212,947213],"content":"<","needQuote":true,"nodes":[]},{"pos":[947240,947247],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[947313,947314]},{"pos":[947369,947373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[947431,947432],"content":"<","needQuote":true,"nodes":[]},{"pos":[947459,947466],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[947500,947501]},{"pos":[947533,947537],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[947600,947601]},{"pos":[947689,947706],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[947797,947798],"content":"<","needQuote":true,"nodes":[]},{"pos":[947825,947829],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[947891,947892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[948094,948124],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[948203,948204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[948281,948292],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[948378,948381]},{"pos":[948415,948422],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[948455,948456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[948484,948485]},{"pos":[948540,948544],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[948603,948606]},{"pos":[948640,948647],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[948681,948682]},{"pos":[948714,948718],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[948748,948749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[948777,948778]},{"pos":[948866,948883],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[948975,948978]},{"pos":[949012,949016],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[949046,949047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[949074,949075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[949683,949788],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[950457,950494],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[950580,950581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[950658,950669],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[950754,950755],"content":"<","needQuote":true,"nodes":[]},{"pos":[950782,950789],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[950855,950856]},{"pos":[950911,950915],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[950973,950974],"content":"<","needQuote":true,"nodes":[]},{"pos":[951001,951008],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[951042,951043]},{"pos":[951075,951079],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[951142,951143]},{"pos":[951198,951202],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[951260,951261],"content":"<","needQuote":true,"nodes":[]},{"pos":[951288,951295],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[951329,951330]},{"pos":[951362,951370],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[951436,951437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[951610,951650],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[951739,951740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[951817,951828],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[951914,951917]},{"pos":[951951,951958],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[951991,951992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[952020,952021]},{"pos":[952076,952080],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[952139,952142]},{"pos":[952176,952183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[952217,952218]},{"pos":[952250,952254],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[952284,952285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[952313,952314]},{"pos":[952369,952373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[952432,952435]},{"pos":[952469,952476],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[952510,952511]},{"pos":[952543,952551],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[952585,952586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[952613,952614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[953263,953393],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[954247,954284],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[954370,954371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[954448,954459],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[954544,954545],"content":"<","needQuote":true,"nodes":[]},{"pos":[954572,954579],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[954645,954646]},{"pos":[954701,954705],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[954763,954764],"content":"<","needQuote":true,"nodes":[]},{"pos":[954791,954798],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[954832,954833]},{"pos":[954865,954869],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[954932,954933]},{"pos":[954988,954992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[955050,955051],"content":"<","needQuote":true,"nodes":[]},{"pos":[955078,955085],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[955119,955120]},{"pos":[955152,955160],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[955227,955228]},{"pos":[955316,955333],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[955424,955425],"content":"<","needQuote":true,"nodes":[]},{"pos":[955452,955456],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[955518,955519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[955742,955782],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[955871,955872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[955949,955960],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[956046,956049]},{"pos":[956083,956090],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[956123,956124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[956152,956153]},{"pos":[956208,956212],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[956271,956274]},{"pos":[956308,956315],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[956349,956350]},{"pos":[956382,956386],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[956416,956417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[956445,956446]},{"pos":[956501,956505],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[956564,956567]},{"pos":[956601,956608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[956642,956643]},{"pos":[956675,956683],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[956717,956718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[956746,956747]},{"pos":[956835,956852],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[956944,956947]},{"pos":[956981,956985],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[957015,957016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[957043,957044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[957698,957735],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[958112,958127],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[958191,958192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[958269,958280],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[958365,958366],"content":"<","needQuote":true,"nodes":[]},{"pos":[958393,958400],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[958465,958466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[958591,958609],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[958676,958677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[958754,958765],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[958851,958854]},{"pos":[958888,958895],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[958928,958929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[958956,958957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[959341,959407],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[959914,959937],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[960009,960010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[960087,960098],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[960183,960184],"content":"<","needQuote":true,"nodes":[]},{"pos":[960211,960218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[960284,960285]},{"pos":[960340,960344],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[960402,960403],"content":"<","needQuote":true,"nodes":[]},{"pos":[960430,960437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[960471,960472]},{"pos":[960504,960508],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[960570,960571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[960719,960745],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[960820,960821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[960898,960909],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[960995,960998]},{"pos":[961032,961039],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[961072,961073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[961101,961102]},{"pos":[961157,961161],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[961220,961223]},{"pos":[961257,961264],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[961298,961299]},{"pos":[961331,961335],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[961365,961366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[961393,961394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[961912,962003],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[962695,962718],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[962790,962791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[962868,962879],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[962964,962965],"content":"<","needQuote":true,"nodes":[]},{"pos":[962992,962999],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[963065,963066]},{"pos":[963121,963125],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[963183,963184],"content":"<","needQuote":true,"nodes":[]},{"pos":[963211,963218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[963252,963253]},{"pos":[963285,963289],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[963352,963353]},{"pos":[963441,963458],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[963549,963550],"content":"<","needQuote":true,"nodes":[]},{"pos":[963577,963581],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[963643,963644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[963842,963868],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[963943,963944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[964021,964032],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[964118,964121]},{"pos":[964155,964162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[964195,964196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[964224,964225]},{"pos":[964280,964284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[964343,964346]},{"pos":[964380,964387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[964421,964422]},{"pos":[964454,964458],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[964488,964489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[964517,964518]},{"pos":[964606,964623],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[964715,964718]},{"pos":[964752,964756],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[964786,964787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[964814,964815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[965407,965508],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[966161,966194],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[966276,966277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[966354,966365],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[966450,966451],"content":"<","needQuote":true,"nodes":[]},{"pos":[966478,966485],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[966551,966552]},{"pos":[966607,966611],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[966669,966670],"content":"<","needQuote":true,"nodes":[]},{"pos":[966697,966704],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[966738,966739]},{"pos":[966771,966775],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[966838,966839]},{"pos":[966894,966898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[966956,966957],"content":"<","needQuote":true,"nodes":[]},{"pos":[966984,966991],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[967025,967026]},{"pos":[967058,967066],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[967132,967133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[967302,967338],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[967423,967424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[967501,967512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[967598,967601]},{"pos":[967635,967642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[967675,967676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[967704,967705]},{"pos":[967760,967764],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[967823,967826]},{"pos":[967860,967867],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[967901,967902]},{"pos":[967934,967938],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[967968,967969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[967997,967998]},{"pos":[968053,968057],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[968116,968119]},{"pos":[968153,968160],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[968194,968195]},{"pos":[968227,968235],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[968269,968270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[968297,968298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[968931,969057],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[969895,969928],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[970010,970011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[970088,970099],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[970184,970185],"content":"<","needQuote":true,"nodes":[]},{"pos":[970212,970219],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[970285,970286]},{"pos":[970341,970345],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[970403,970404],"content":"<","needQuote":true,"nodes":[]},{"pos":[970431,970438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[970472,970473]},{"pos":[970505,970509],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[970572,970573]},{"pos":[970628,970632],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[970690,970691],"content":"<","needQuote":true,"nodes":[]},{"pos":[970718,970725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[970759,970760]},{"pos":[970792,970800],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[970867,970868]},{"pos":[970956,970973],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[971064,971065],"content":"<","needQuote":true,"nodes":[]},{"pos":[971092,971096],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[971158,971159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[971378,971414],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[971499,971500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[971577,971588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[971674,971677]},{"pos":[971711,971718],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[971751,971752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[971780,971781]},{"pos":[971836,971840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[971899,971902]},{"pos":[971936,971943],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[971977,971978]},{"pos":[972010,972014],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[972044,972045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[972073,972074]},{"pos":[972129,972133],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[972192,972195]},{"pos":[972229,972236],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[972270,972271]},{"pos":[972303,972311],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[972345,972346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[972374,972375]},{"pos":[972463,972480],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[972572,972575]},{"pos":[972609,972613],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[972643,972644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[972671,972672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[973357,973415],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[973958,973972],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[974035,974036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[974113,974124],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[974209,974210],"content":"<","needQuote":true,"nodes":[]},{"pos":[974237,974244],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[974310,974311]},{"pos":[974393,974404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[974489,974490],"content":"<","needQuote":true,"nodes":[]},{"pos":[974517,974524],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[974589,974590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[974758,974775],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[974841,974842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[974919,974930],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[975016,975019]},{"pos":[975053,975060],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[975093,975094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[975122,975123]},{"pos":[975205,975216],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[975302,975305]},{"pos":[975339,975346],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[975379,975380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[975407,975408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[975950,976036],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[976773,976787],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[976850,976851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[976928,976939],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[977024,977025],"content":"<","needQuote":true,"nodes":[]},{"pos":[977052,977059],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[977125,977126]},{"pos":[977208,977219],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[977304,977305],"content":"<","needQuote":true,"nodes":[]},{"pos":[977332,977339],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[977405,977406]},{"pos":[977494,977511],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[977602,977603],"content":"<","needQuote":true,"nodes":[]},{"pos":[977630,977637],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[977702,977703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[977921,977938],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[978004,978005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[978082,978093],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[978179,978182]},{"pos":[978216,978223],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[978256,978257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[978285,978286]},{"pos":[978368,978379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[978465,978468]},{"pos":[978502,978509],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[978542,978543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[978571,978572]},{"pos":[978660,978677],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[978769,978772]},{"pos":[978806,978813],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[978846,978847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[978874,978875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[979464,979524],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[980035,980049],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[980112,980113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[980190,980201],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[980286,980287],"content":"<","needQuote":true,"nodes":[]},{"pos":[980314,980321],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[980387,980388]},{"pos":[980443,980447],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[980505,980506],"content":"<","needQuote":true,"nodes":[]},{"pos":[980533,980540],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[980574,980575]},{"pos":[980631,980638],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[980731,980732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[980888,980905],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[980971,980972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[981049,981060],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[981146,981149]},{"pos":[981183,981190],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[981223,981224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[981252,981253]},{"pos":[981308,981312],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[981371,981374]},{"pos":[981408,981415],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[981449,981450]},{"pos":[981506,981513],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[981574,981575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[981602,981603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[982088,982155],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[982714,982728],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[982791,982792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[982869,982880],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[982965,982966],"content":"<","needQuote":true,"nodes":[]},{"pos":[982993,983000],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[983066,983067]},{"pos":[983122,983126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[983184,983185],"content":"<","needQuote":true,"nodes":[]},{"pos":[983212,983219],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[983253,983254]},{"pos":[983308,983313],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[983373,983374]},{"pos":[983430,983437],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[983530,983531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[983700,983717],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[983783,983784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[983861,983872],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[983958,983961]},{"pos":[983995,984002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[984035,984036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[984064,984065]},{"pos":[984120,984124],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[984183,984186]},{"pos":[984220,984227],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[984261,984262]},{"pos":[984316,984321],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[984381,984382]},{"pos":[984438,984445],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[984506,984507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[984534,984535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[985069,985173],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[985897,985926],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[986004,986005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[986082,986093],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[986178,986179],"content":"<","needQuote":true,"nodes":[]},{"pos":[986206,986212],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[986277,986278]},{"pos":[986360,986371],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[986456,986457],"content":"<","needQuote":true,"nodes":[]},{"pos":[986484,986491],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[986557,986558]},{"pos":[986613,986617],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[986675,986676],"content":"<","needQuote":true,"nodes":[]},{"pos":[986703,986709],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[986742,986743]},{"pos":[986775,986782],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[986816,986817]},{"pos":[986849,986856],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[986921,986922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[987113,987145],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[987226,987227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[987304,987315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[987401,987404]},{"pos":[987438,987444],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[987476,987477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[987505,987506]},{"pos":[987588,987599],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[987685,987688]},{"pos":[987722,987729],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[987762,987763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[987791,987792]},{"pos":[987847,987851],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[987910,987913]},{"pos":[987947,987953],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[987986,987987]},{"pos":[988019,988026],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[988060,988061]},{"pos":[988093,988100],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[988133,988134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[988161,988162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[988664,988675],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[988905,988920],"content":"IComparer<TKey>","needQuote":true,"nodes":[{"content":"IComparer&lt;TKey&gt;","pos":[0,15],"source":"IComparer<TKey>"}]},{"pos":[989140,989149],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[989211,989212],"content":"<","needQuote":true,"nodes":[]},{"pos":[989239,989243],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[989364,989373],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[989436,989439]},{"pos":[989473,989477],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[989507,989508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[989726,989738],"content":"IComparer<T>","needQuote":true,"nodes":[{"content":"IComparer&lt;T&gt;","pos":[0,12],"source":"IComparer<T>"}]},{"pos":[989949,989958],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[990020,990021],"content":"<","needQuote":true,"nodes":[]},{"pos":[990048,990049],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[990167,990176],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[990239,990242]},{"pos":[990276,990277],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[990304,990305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[990505,990510],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[990872,990877],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[991662,991667],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[992295,992300],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[992518,992523],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[992882,992887],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[993410,993420],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[993685,993689],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[993794,993795]},{"pos":[993825,993829],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[993860,993861]},{"pos":[993961,993965],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[994072,994073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[994100,994104],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[994134,994135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[994572,994582],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[994871,994875],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[994988,994989]},{"pos":[995019,995023],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[995054,995055]},{"pos":[995163,995167],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[995282,995283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[995310,995314],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[995344,995345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[995611,995615],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[995723,995729],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[995880,995890],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[996155,996159],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[996264,996265]},{"pos":[996295,996299],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[996330,996331]},{"pos":[996431,996435],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[996542,996543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[996570,996574],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[996604,996605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[996891,996901],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[997190,997194],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[997307,997308]},{"pos":[997338,997342],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[997373,997374]},{"pos":[997482,997486],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[997601,997602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[997629,997633],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[997663,997664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[997922,997926],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[998007,998013],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[998198,998209],"content":"IList<TKey>","needQuote":true,"nodes":[{"content":"IList&lt;TKey&gt;","pos":[0,11],"source":"IList<TKey>"}]},{"pos":[998413,998418],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[998497,998498],"content":"<","needQuote":true,"nodes":[]},{"pos":[998525,998529],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[998646,998651],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[998731,998734]},{"pos":[998768,998772],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[998802,998803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[999004,999012],"content":"IList<T>","needQuote":true,"nodes":[{"content":"IList&lt;T&gt;","pos":[0,8],"source":"IList<T>"}]},{"pos":[999207,999212],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[999270,999271],"content":"<","needQuote":true,"nodes":[]},{"pos":[999298,999299],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[999413,999418],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[999477,999480]},{"pos":[999514,999515],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[999542,999543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[999962,999972],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[1000539,1000546],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[1000715,1000725],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[1001221,1001225],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[1001692,1001709],"content":"ICollection<TKey>","needQuote":true,"nodes":[{"content":"ICollection&lt;TKey&gt;","pos":[0,17],"source":"ICollection<TKey>"}]},{"pos":[1001937,1001948],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[1002012,1002013],"content":"<","needQuote":true,"nodes":[]},{"pos":[1002040,1002044],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1002167,1002178],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[1002243,1002246]},{"pos":[1002280,1002284],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1002314,1002315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1002544,1002548],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[1003062,1003068],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[1003547,1003566],"content":"ICollection<TValue>","needQuote":true,"nodes":[{"content":"ICollection&lt;TValue&gt;","pos":[0,19],"source":"ICollection<TValue>"}]},{"pos":[1003800,1003811],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[1003875,1003876],"content":"<","needQuote":true,"nodes":[]},{"pos":[1003903,1003909],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1004034,1004045],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[1004110,1004113]},{"pos":[1004147,1004153],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1004185,1004186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1004421,1004427],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[1004971,1004975],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[1005482,1005499],"content":"IEnumerable<TKey>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;TKey&gt;","pos":[0,17],"source":"IEnumerable<TKey>"}]},{"pos":[1005727,1005738],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[1005802,1005803],"content":"<","needQuote":true,"nodes":[]},{"pos":[1005830,1005834],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1005957,1005968],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[1006033,1006036]},{"pos":[1006070,1006074],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1006104,1006105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1006342,1006346],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[1006924,1006930],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[1007449,1007468],"content":"IEnumerable<TValue>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;TValue&gt;","pos":[0,19],"source":"IEnumerable<TValue>"}]},{"pos":[1007702,1007713],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[1007777,1007778],"content":"<","needQuote":true,"nodes":[]},{"pos":[1007805,1007811],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1007936,1007947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[1008012,1008015]},{"pos":[1008049,1008055],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1008087,1008088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1008331,1008337],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[1008817,1008831],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[1009110,1009118],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[1009381,1009392],"content":"IsFixedSize","needQuote":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[1009663,1009673],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[1009950,1009962],"content":"Item[Object]","needQuote":true,"nodes":[{"content":"Item[Object]","pos":[0,12]}]},{"pos":[1010201,1010205],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[1010288,1010289]},{"pos":[1010342,1010348],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"]","pos":[1010409,1010410]},{"pos":[1010511,1010515],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[1010597,1010598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1010648,1010654],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1010714,1010715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1010994,1010998],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[1011244,1011250],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[1011533,1011546],"content":"IList<TValue>","needQuote":true,"nodes":[{"content":"IList&lt;TValue&gt;","pos":[0,13],"source":"IList<TValue>"}]},{"pos":[1011756,1011761],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[1011840,1011841],"content":"<","needQuote":true,"nodes":[]},{"pos":[1011868,1011874],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1011993,1011998],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[1012078,1012081]},{"pos":[1012115,1012121],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1012153,1012154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1012513,1012530],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"pos":[1012789,1012792],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1012895,1012896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1012923,1012927],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1012958,1012959]},{"pos":[1012991,1012997],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1013029,1013030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1013129,1013132],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1013238,1013239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1013266,1013270],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1013301,1013302]},{"pos":[1013334,1013340],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1013372,1013373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1013674,1013691],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"pos":[1013950,1013953],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1014056,1014057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1014084,1014088],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1014119,1014120]},{"pos":[1014152,1014158],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1014190,1014191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1014290,1014293],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1014399,1014400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1014427,1014431],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1014462,1014463]},{"pos":[1014495,1014501],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1014533,1014534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1015030,1015037],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[1015356,1015361],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1015486,1015487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1015514,1015515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1015609,1015614],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1015745,1015746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1015773,1015774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1016148,1016155],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[1016278,1016283],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1016366,1016367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1016394,1016395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1016479,1016484],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1016567,1016568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1016595,1016596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1016783,1016790],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[1017002,1017007],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1017080,1017081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1017108,1017109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1017203,1017208],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1017284,1017285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1017312,1017313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1017704,1017721],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1017985,1017996],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1018107,1018108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1018135,1018139],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1018169,1018170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1018274,1018285],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1018399,1018400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1018427,1018431],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1018461,1018462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1018934,1018951],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1019239,1019250],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1019369,1019370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1019397,1019401],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1019431,1019432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1019544,1019555],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1019677,1019678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1019705,1019709],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1019739,1019740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1020075,1020092],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1020356,1020367],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1020478,1020479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1020506,1020510],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1020540,1020541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1020645,1020656],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1020770,1020771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1020798,1020802],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1020832,1020833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1021147,1021164],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1021452,1021463],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1021582,1021583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1021610,1021614],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1021644,1021645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1021757,1021768],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1021890,1021891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1021918,1021922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1021952,1021953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1022396,1022435],"content":"IEnumerator<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"IEnumerator<KeyValuePair<TKey, TValue>>"}]},{"pos":[1022789,1022800],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1022885,1022886],"content":"<","needQuote":true,"nodes":[]},{"pos":[1022964,1022976],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1023062,1023063],"content":"<","needQuote":true,"nodes":[]},{"pos":[1023090,1023094],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1023125,1023126]},{"pos":[1023158,1023164],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1023321,1023332],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[1023418,1023421]},{"pos":[1023506,1023518],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1023605,1023608]},{"pos":[1023642,1023646],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1023677,1023678]},{"pos":[1023710,1023716],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1023748,1023749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1023776,1023777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1024093,1024107],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[1024326,1024337],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1024401,1024402],"content":"<","needQuote":true,"nodes":[]},{"pos":[1024429,1024430],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1024550,1024561],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[1024626,1024629]},{"pos":[1024663,1024664],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1024691,1024692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1025051,1025063],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[1025312,1025318],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1025424,1025425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1025452,1025456],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1025486,1025487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1025586,1025592],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1025701,1025702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1025729,1025733],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1025763,1025764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1026055,1026067],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[1026316,1026322],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1026428,1026429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1026456,1026460],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1026490,1026491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1026590,1026596],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1026705,1026706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1026733,1026737],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1026767,1026768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1027312,1027343],"content":"Add(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Add(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,31],"source":"Add(KeyValuePair<TKey, TValue>)"}]},{"pos":[1027815,1027818],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1027941,1027942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1028020,1028032],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1028097,1028098],"content":"<","needQuote":true,"nodes":[]},{"pos":[1028125,1028129],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1028160,1028161]},{"pos":[1028193,1028199],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1028263,1028264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1028360,1028363],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1028492,1028493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1028571,1028583],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1028649,1028652]},{"pos":[1028686,1028690],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1028721,1028722]},{"pos":[1028754,1028760],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1028792,1028793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1028820,1028821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1029345,1029371],"content":"KeyValuePair<TKey, TValue>","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;","pos":[0,26],"source":"KeyValuePair<TKey, TValue>"}]},{"pos":[1029627,1029639],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1029725,1029726],"content":"<","needQuote":true,"nodes":[]},{"pos":[1029753,1029757],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1029788,1029789]},{"pos":[1029821,1029827],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1029953,1029965],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1030052,1030055]},{"pos":[1030089,1030093],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1030124,1030125]},{"pos":[1030157,1030163],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1030195,1030196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1030451,1030457],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[1030669,1030672],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1030743,1030744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1030771,1030772],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1030799,1030800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1030896,1030899],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1030973,1030974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1031001,1031002],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1031029,1031030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1031270,1031296],"content":"KeyValuePair<TKey, TValue>","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;","pos":[0,26],"source":"KeyValuePair<TKey, TValue>"}]},{"pos":[1031552,1031564],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1031629,1031630],"content":"<","needQuote":true,"nodes":[]},{"pos":[1031657,1031661],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1031692,1031693]},{"pos":[1031725,1031731],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1031857,1031869],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1031935,1031938]},{"pos":[1031972,1031976],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1032007,1032008]},{"pos":[1032040,1032046],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1032078,1032079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1032599,1032635],"content":"Contains(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Contains(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,36],"source":"Contains(KeyValuePair<TKey, TValue>)"}]},{"pos":[1033127,1033135],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1033263,1033264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1033342,1033354],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1033419,1033420],"content":"<","needQuote":true,"nodes":[]},{"pos":[1033447,1033451],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1033482,1033483]},{"pos":[1033515,1033521],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1033585,1033586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1033687,1033695],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1033829,1033830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1033908,1033920],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1033986,1033989]},{"pos":[1034023,1034027],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1034058,1034059]},{"pos":[1034091,1034097],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1034129,1034130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1034157,1034158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1034621,1034632],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[1034859,1034867],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1034943,1034944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1034971,1034972],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1034999,1035000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1035101,1035109],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1035188,1035189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1035216,1035217],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1035244,1035245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1035803,1035846],"content":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(KeyValuePair&lt;TKey, TValue&gt;[], Int32)","pos":[0,43],"source":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)"}]},{"pos":[1036386,1036392],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1036518,1036519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1036597,1036609],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1036674,1036675],"content":"<","needQuote":true,"nodes":[]},{"pos":[1036702,1036706],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1036737,1036738]},{"pos":[1036770,1036776],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":"[]","pos":[1036841,1036843]},{"content":",","pos":[1036875,1036876]},{"pos":[1036930,1036935],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1036994,1036995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1037109,1037115],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1037247,1037248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1037326,1037338],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1037404,1037407]},{"pos":[1037441,1037445],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1037476,1037477]},{"pos":[1037509,1037515],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1037547,1037548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1037575,1037577],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[1037606,1037607]},{"pos":[1037661,1037666],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1037725,1037726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1038201,1038229],"content":"KeyValuePair<TKey, TValue>[]","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;[]","pos":[0,28],"source":"KeyValuePair<TKey, TValue>[]"}]},{"pos":[1038491,1038503],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1038589,1038590],"content":"<","needQuote":true,"nodes":[]},{"pos":[1038617,1038621],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1038652,1038653]},{"pos":[1038685,1038691],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":"[]","pos":[1038756,1038758]},{"pos":[1038851,1038863],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1038950,1038953]},{"pos":[1038987,1038991],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1039022,1039023]},{"pos":[1039055,1039061],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1039093,1039094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1039121,1039123],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[1039338,1039356],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[1039654,1039660],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1039734,1039735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1039762,1039763],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[1039791,1039793]},{"content":",","pos":[1039825,1039826]},{"pos":[1039880,1039885],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1039944,1039945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1040059,1040065],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1040142,1040143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1040170,1040171],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1040198,1040200],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[1040229,1040230]},{"pos":[1040284,1040289],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1040348,1040349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1040904,1040938],"content":"Remove(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Remove(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,34],"source":"Remove(KeyValuePair<TKey, TValue>)"}]},{"pos":[1041422,1041428],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1041554,1041555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1041633,1041645],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1041710,1041711],"content":"<","needQuote":true,"nodes":[]},{"pos":[1041738,1041742],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1041773,1041774]},{"pos":[1041806,1041812],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1041876,1041877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1041976,1041982],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1042114,1042115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1042193,1042205],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1042271,1042274]},{"pos":[1042308,1042312],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1042343,1042344]},{"pos":[1042376,1042382],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1042414,1042415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1042442,1042443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1042898,1042907],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[1043128,1043134],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1043208,1043209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1043236,1043237],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1043264,1043265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1043364,1043370],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1043447,1043448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1043475,1043476],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1043503,1043504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1043978,1043993],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1044336,1044349],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1044482,1044483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1044510,1044511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1044613,1044626],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1044765,1044766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1044793,1044794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1045170,1045185],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1045421,1045434],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1045515,1045516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1045543,1045544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1045646,1045659],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1045743,1045744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1045771,1045772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1046099,1046119],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[1046297,1046303],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1046366,1046367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1046416,1046421],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[1046460,1046461]},{"pos":[1046515,1046520],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1046579,1046580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1046692,1046698],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1046761,1046762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1046811,1046816],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[1046855,1046856]},{"pos":[1046910,1046915],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1046974,1046975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1047186,1047191],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[1047406,1047425],"content":"Add(Object, Object)","needQuote":true,"nodes":[{"content":"Add(Object, Object)","pos":[0,19]}]},{"pos":[1047601,1047604],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1047685,1047686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1047736,1047742],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[1047803,1047804]},{"pos":[1047859,1047865],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1047925,1047926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1048037,1048040],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1048121,1048122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1048172,1048178],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[1048239,1048240]},{"pos":[1048295,1048301],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1048361,1048362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1048636,1048652],"content":"Contains(Object)","needQuote":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[1048809,1048817],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1048903,1048904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1048954,1048960],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1049020,1049021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1049123,1049131],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1049217,1049218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1049268,1049274],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1049334,1049335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1049587,1049602],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1049741,1049754],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1049845,1049846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1049873,1049874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1049966,1049979],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1050070,1050071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1050098,1050099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1050325,1050346],"content":"IDictionaryEnumerator","needQuote":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[1050622,1050636],"content":"Remove(Object)","needQuote":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[1050789,1050795],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1050879,1050880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1050930,1050936],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1050996,1050997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1051097,1051103],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1051187,1051188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1051238,1051244],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1051304,1051305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1051554,1051569],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1051708,1051721],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1051791,1051792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1051819,1051820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1051912,1051925],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1051995,1051996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1052023,1052024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1052240,1052251],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1052611,1052636],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1052920,1052931],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1053042,1053043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1053070,1053074],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1053105,1053106]},{"pos":[1053138,1053144],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1053176,1053177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1053285,1053296],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1053410,1053411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1053438,1053442],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1053473,1053474]},{"pos":[1053506,1053512],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1053544,1053545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1054051,1054076],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1054384,1054395],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1054514,1054515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1054542,1054546],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1054577,1054578]},{"pos":[1054610,1054616],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1054648,1054649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1054765,1054776],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1054898,1054899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1054926,1054930],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1054961,1054962]},{"pos":[1054994,1055000],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1055032,1055033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1055392,1055417],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1055701,1055712],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1055823,1055824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1055851,1055855],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1055886,1055887]},{"pos":[1055919,1055925],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1055957,1055958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1056066,1056077],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1056191,1056192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1056219,1056223],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1056254,1056255]},{"pos":[1056287,1056293],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1056325,1056326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1056664,1056689],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1056997,1057008],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1057127,1057128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1057155,1057159],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1057190,1057191]},{"pos":[1057223,1057229],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1057261,1057262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1057378,1057389],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1057511,1057512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1057539,1057543],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1057574,1057575]},{"pos":[1057607,1057613],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1057645,1057646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1057969,1057990],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[1058191,1058208],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[1058390,1058417],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[1058622,1058642],"content":"OutOfMemoryException","needQuote":true,"nodes":[{"content":"OutOfMemoryException","pos":[0,20]}]},{"pos":[1058846,1058866],"content":"KeyNotFoundException","needQuote":true,"nodes":[{"content":"KeyNotFoundException","pos":[0,20]}]}],"content":"items:\n- uid: System.Collections.Generic.SortedList`2\n  commentId: T:System.Collections.Generic.SortedList`2\n  id: SortedList`2\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.SortedList`2.#ctor\n  - System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  - System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.SortedList`2.#ctor(System.Int32)\n  - System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.SortedList`2.Add(`0,`1)\n  - System.Collections.Generic.SortedList`2.Capacity\n  - System.Collections.Generic.SortedList`2.Clear\n  - System.Collections.Generic.SortedList`2.Comparer\n  - System.Collections.Generic.SortedList`2.ContainsKey(`0)\n  - System.Collections.Generic.SortedList`2.ContainsValue(`1)\n  - System.Collections.Generic.SortedList`2.Count\n  - System.Collections.Generic.SortedList`2.GetEnumerator\n  - System.Collections.Generic.SortedList`2.IndexOfKey(`0)\n  - System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n  - System.Collections.Generic.SortedList`2.Item(`0)\n  - System.Collections.Generic.SortedList`2.Keys\n  - System.Collections.Generic.SortedList`2.Remove(`0)\n  - System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  - System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  - System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values\n  - System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.SortedList`2.TrimExcess\n  - System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)\n  - System.Collections.Generic.SortedList`2.Values\n  langs:\n  - csharp\n  - vb\n  name: SortedList<TKey, TValue>\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>\n  type: Class\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SortedList\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 49\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Represents a collection of key/value pairs that are sorted by key based on the associated <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation. </p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerTypeProxy(typeof (IDictionaryDebugView<, >))]\n\n      [DebuggerDisplay(\"Count = {Count}\")]\n\n      public class SortedList<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable\n    content.vb: >-\n      <DebuggerTypeProxy(GetType(IDictionaryDebugView(Of , )))>\n\n      <DebuggerDisplay(\"Count = {Count}\")>\n\n      Public Class SortedList(Of TKey, TValue)\n          Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable\n    typeParameters:\n    - id: TKey\n      description: \"\\n<p>The type of keys in the collection.</p>\\n\"\n    - id: TValue\n      description: \"\\n<p>The type of values in the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IDictionary`2\n    commentId: T:System.Collections.Generic.IDictionary`2\n  - type: System.Collections.Generic.Dictionary`2\n    commentId: T:System.Collections.Generic.Dictionary`2\n  - type: System.Collections.Generic.SortedDictionary`2\n    commentId: T:System.Collections.Generic.SortedDictionary`2\n  - type: System.Collections.Generic.KeyValuePair`2\n    commentId: T:System.Collections.Generic.KeyValuePair`2\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.IDictionary\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue)\n  name.vb: SortedList(Of TKey, TValue)\n  nameWithType: SortedList<TKey, TValue>\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})\n  nameWithType.vb: SortedList(Of TKey, TValue)\n- uid: System.Collections.Generic.SortedList`2.#ctor\n  commentId: M:System.Collections.Generic.SortedList`2.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: SortedList()\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.SortedList()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 71\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty, has the default initial capacity, and uses the default <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedList()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).SortedList()\n  nameWithType: SortedList<TKey, TValue>.SortedList()\n  nameWithType.vb: SortedList(Of TKey, TValue).SortedList()\n- uid: System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})\n  commentId: M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})\n  id: '#ctor(System.Collections.Generic.IComparer{`0})'\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: SortedList(IComparer<TKey>)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.SortedList(System.Collections.Generic.IComparer<TKey>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 105\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedList(IComparer<TKey> comparer)\n    content.vb: Public Sub New(comparer As IComparer(Of TKey))\n    parameters:\n    - id: comparer\n      type: System.Collections.Generic.IComparer{{TKey}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to use when comparing keys.</p>\\n<p>-or-</p>\\n<p>\\n<strong>null</strong> to use the default <xref href=\\\"System.Collections.Generic.Comparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the type of the key.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).SortedList(System.Collections.Generic.IComparer(Of TKey))\n  name.vb: SortedList(IComparer(Of TKey))\n  nameWithType: SortedList<TKey, TValue>.SortedList(IComparer<TKey>)\n  nameWithType.vb: SortedList(Of TKey, TValue).SortedList(IComparer(Of TKey))\n- uid: System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  commentId: M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: SortedList(IDictionary<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.SortedList(System.Collections.Generic.IDictionary<TKey, TValue>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 135\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that contains elements copied from the specified <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, has sufficient capacity to accommodate the number of elements copied, and uses the default <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedList(IDictionary<TKey, TValue> dictionary)\n    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue))\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose elements are copied to the new <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IDictionary`2\n    commentId: T:System.Collections.Generic.IDictionary`2\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).SortedList(System.Collections.Generic.IDictionary(Of TKey, TValue))\n  name.vb: SortedList(IDictionary(Of TKey, TValue))\n  nameWithType: SortedList<TKey, TValue>.SortedList(IDictionary<TKey, TValue>)\n  nameWithType.vb: SortedList(Of TKey, TValue).SortedList(IDictionary(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})\n  commentId: M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})\n  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})'\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: SortedList(IDictionary<TKey, TValue>, IComparer<TKey>)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.SortedList(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IComparer<TKey>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 148\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that contains elements copied from the specified <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, has sufficient capacity to accommodate the number of elements copied, and uses the specified <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedList(IDictionary<TKey, TValue> dictionary, IComparer<TKey> comparer)\n    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose elements are copied to the new <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: comparer\n      type: System.Collections.Generic.IComparer{{TKey}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to use when comparing keys.</p>\\n<p>-or-</p>\\n<p>\\n<strong>null</strong> to use the default <xref href=\\\"System.Collections.Generic.Comparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the type of the key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IDictionary`2\n    commentId: T:System.Collections.Generic.IDictionary`2\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).SortedList(System.Collections.Generic.IDictionary(Of TKey, TValue), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: SortedList(IDictionary(Of TKey, TValue), IComparer(Of TKey))\n  nameWithType: SortedList<TKey, TValue>.SortedList(IDictionary<TKey, TValue>, IComparer<TKey>)\n  nameWithType.vb: SortedList(Of TKey, TValue).SortedList(IDictionary(Of TKey, TValue), IComparer(Of TKey))\n- uid: System.Collections.Generic.SortedList`2.#ctor(System.Int32)\n  commentId: M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: SortedList(Int32)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.SortedList(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 86\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty, has the specified initial capacity, and uses the default <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedList(int capacity)\n    content.vb: Public Sub New(capacity As Integer)\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: \"\\n<p>The initial number of elements that the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can contain.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>capacity</em> is less than zero.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Capacity\n    commentId: P:System.Collections.Generic.SortedList`2.Capacity\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).SortedList(System.Int32)\n  nameWithType: SortedList<TKey, TValue>.SortedList(Int32)\n  nameWithType.vb: SortedList(Of TKey, TValue).SortedList(Int32)\n- uid: System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})\n  commentId: M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})\n  id: '#ctor(System.Int32,System.Collections.Generic.IComparer{`0})'\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: SortedList(Int32, IComparer<TKey>)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.SortedList(System.Int32, System.Collections.Generic.IComparer<TKey>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 123\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedList(int capacity, IComparer<TKey> comparer)\n    content.vb: Public Sub New(capacity As Integer, comparer As IComparer(Of TKey))\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: \"\\n<p>The initial number of elements that the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can contain.</p>\\n\"\n    - id: comparer\n      type: System.Collections.Generic.IComparer{{TKey}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to use when comparing keys.</p>\\n<p>-or-</p>\\n<p>\\n<strong>null</strong> to use the default <xref href=\\\"System.Collections.Generic.Comparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the type of the key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>capacity</em> is less than zero.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Capacity\n    commentId: P:System.Collections.Generic.SortedList`2.Capacity\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).SortedList(System.Int32, System.Collections.Generic.IComparer(Of TKey))\n  name.vb: SortedList(Int32, IComparer(Of TKey))\n  nameWithType: SortedList<TKey, TValue>.SortedList(Int32, IComparer<TKey>)\n  nameWithType.vb: SortedList(Of TKey, TValue).SortedList(Int32, IComparer(Of TKey))\n- uid: System.Collections.Generic.SortedList`2.Capacity\n  commentId: P:System.Collections.Generic.SortedList`2.Capacity\n  id: Capacity\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Capacity\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Capacity\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Capacity\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 222\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets or sets the number of elements that the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can contain.</p>\\n\"\n  syntax:\n    content: public int Capacity { get; set; }\n    content.vb: Public Property Capacity As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of elements that the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can contain.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<xref href=\\\"System.Collections.Generic.SortedList`2.Capacity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set to a value that is less than <xref href=\\\"System.Collections.Generic.SortedList`2.Count\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: \"\\n<p>There is not enough memory available on the system.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Count\n    commentId: P:System.Collections.Generic.SortedList`2.Count\n  - type: System.Collections.Generic.SortedList`2.TrimExcess\n    commentId: M:System.Collections.Generic.SortedList`2.TrimExcess\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Capacity\n  nameWithType: SortedList<TKey, TValue>.Capacity\n  nameWithType.vb: SortedList(Of TKey, TValue).Capacity\n- uid: System.Collections.Generic.SortedList`2.Comparer\n  commentId: P:System.Collections.Generic.SortedList`2.Comparer\n  id: Comparer\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Comparer\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Comparer\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Comparer\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 258\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the sorted list. </p>\\n\"\n  syntax:\n    content: public IComparer<TKey> Comparer { get; }\n    content.vb: Public ReadOnly Property Comparer As IComparer(Of TKey)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IComparer{{TKey}}\n      description: \"\\n<p>The <xref href=\\\"System.IComparable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the current <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Comparer\n  nameWithType: SortedList<TKey, TValue>.Comparer\n  nameWithType.vb: SortedList(Of TKey, TValue).Comparer\n- uid: System.Collections.Generic.SortedList`2.Count\n  commentId: P:System.Collections.Generic.SortedList`2.Count\n  id: Count\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 285\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the number of key/value pairs contained in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of key/value pairs contained in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Capacity\n    commentId: P:System.Collections.Generic.SortedList`2.Capacity\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Count\n  nameWithType: SortedList<TKey, TValue>.Count\n  nameWithType.vb: SortedList(Of TKey, TValue).Count\n- uid: System.Collections.Generic.SortedList`2.Item(`0)\n  commentId: P:System.Collections.Generic.SortedList`2.Item(`0)\n  id: Item(`0)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Item[TKey]\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Item[TKey]\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 593\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets or sets the value associated with the specified key.</p>\\n\"\n  syntax:\n    content: public TValue this[TKey key] { get; set; }\n    content.vb: Public Property Item(key As TKey) As TValue\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key whose value to get or set.</p>\\n\"\n    return:\n      type: '{TValue}'\n      description: \"\\n<p>The value associated with the specified key. If the specified key is not found, a get operation throws a <xref href=\\\"System.Collections.Generic.KeyNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and a set operation creates a new element using the specified key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: \"\\n<p>The property is retrieved and <em>key</em> does not exist in the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Add(`0,`1)\n    commentId: M:System.Collections.Generic.SortedList`2.Add(`0,`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  nameWithType: SortedList<TKey, TValue>.Item[TKey]\n  nameWithType.vb: SortedList(Of TKey, TValue).Item(TKey)\n- uid: System.Collections.Generic.SortedList`2.Keys\n  commentId: P:System.Collections.Generic.SortedList`2.Keys\n  id: Keys\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Keys\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 297\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a collection containing the keys in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, in sorted order.</p>\\n\"\n  syntax:\n    content: public IList<TKey> Keys { get; }\n    content.vb: Public ReadOnly Property Keys As IList(Of TKey)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{{TKey}}\n      description: \"\\n<p>A <xref href=\\\"System.Collections.Generic.IList`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the keys in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IList`1\n    commentId: T:System.Collections.Generic.IList`1\n  - type: System.Collections.Generic.SortedList`2.Values\n    commentId: P:System.Collections.Generic.SortedList`2.Values\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Keys\n  nameWithType: SortedList<TKey, TValue>.Keys\n  nameWithType.vb: SortedList(Of TKey, TValue).Keys\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 379\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n  nameWithType: SortedList<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Keys\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 305\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: ICollection<TKey> IDictionary<TKey, TValue>.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{{TKey}}\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n  nameWithType: SortedList<TKey, TValue>.IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Values\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 341\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: ICollection<TValue> IDictionary<TKey, TValue>.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{{TValue}}\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n  nameWithType: SortedList<TKey, TValue>.IDictionary<TKey, TValue>.Values\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IReadOnlyDictionary<TKey, TValue>.Keys\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 321\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: IEnumerable<TKey> IReadOnlyDictionary<TKey, TValue>.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{{TKey}}\n  implements:\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n  nameWithType: SortedList<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IReadOnlyDictionary<TKey, TValue>.Values\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 357\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: IEnumerable<TValue> IReadOnlyDictionary<TKey, TValue>.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{{TValue}}\n  implements:\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n  nameWithType: SortedList<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n- uid: System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 394\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a value indicating whether access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is synchronized (thread safe).</p>\\n\"\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is synchronized (thread safe); otherwise, <strong>false</strong>.  In the default implementation of <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection.SyncRoot\n    commentId: P:System.Collections.ICollection.SyncRoot\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.ICollection.IsSynchronized\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: SortedList<TKey, TValue>.ICollection.IsSynchronized\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 400\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets an object that can be used to synchronize access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An object that can be used to synchronize access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.  In the default implementation of <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns the current instance.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection.IsSynchronized\n    commentId: P:System.Collections.ICollection.IsSynchronized\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.ICollection.SyncRoot\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: SortedList<TKey, TValue>.ICollection.SyncRoot\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.IsFixedSize\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.IsFixedSize\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 389\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a value indicating whether the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has a fixed size.</p>\\n\"\n  syntax:\n    content: bool IDictionary.IsFixedSize { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has a fixed size; otherwise, <strong>false</strong>.  In the default implementation of <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.IDictionary.IsFixedSize\n    commentId: P:System.Collections.IDictionary.IsFixedSize\n  - type: System.Collections.IDictionary.IsReadOnly\n    commentId: P:System.Collections.IDictionary.IsReadOnly\n  implements:\n  - System.Collections.IDictionary.IsFixedSize\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize\n  name.vb: System.Collections.IDictionary.IsFixedSize\n  nameWithType: SortedList<TKey, TValue>.IDictionary.IsFixedSize\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.IsReadOnly\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.IsReadOnly\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 384\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a value indicating whether the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only.</p>\\n\"\n  syntax:\n    content: bool IDictionary.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only; otherwise, <strong>false</strong>.  In the default implementation of <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.IDictionary.IsReadOnly\n    commentId: P:System.Collections.IDictionary.IsReadOnly\n  - type: System.Collections.IDictionary.IsFixedSize\n    commentId: P:System.Collections.IDictionary.IsFixedSize\n  implements:\n  - System.Collections.IDictionary.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly\n  name.vb: System.Collections.IDictionary.IsReadOnly\n  nameWithType: SortedList<TKey, TValue>.IDictionary.IsReadOnly\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Item[Object]\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.this[]\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 618\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets or sets the element with the specified key.</p>\\n\"\n  syntax:\n    content: object IDictionary.this[object key] { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key of the element to get or set.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The element with the specified key, or <strong>null</strong> if <em>key</em> is not in the dictionary or <em>key</em> is of a type that is not assignable to the key type <em>TKey</em> of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A value is being assigned, and <em>key</em> is of a type that is not assignable to the key type <em>TKey</em> of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>A value is being assigned, and <em>value</em> is of a type that is not assignable to the value type <em>TValue</em> of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Item(`0)\n    commentId: P:System.Collections.Generic.SortedList`2.Item(`0)\n  - type: System.Collections.IDictionary.Add(System.Object,System.Object)\n    commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)\n  implements:\n  - System.Collections.IDictionary.Item(System.Object)\n  modifiers.csharp:\n  - get\n  - set\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)\n  name.vb: System.Collections.IDictionary.Item(Object)\n  nameWithType: SortedList<TKey, TValue>.IDictionary.Item[Object]\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.Item(Object)\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Keys\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 313\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets an <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the keys of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: ICollection IDictionary.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: \"\\n<p>An <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the keys of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection\n    commentId: T:System.Collections.ICollection\n  - type: System.Collections.Generic.SortedList`2.Keys\n    commentId: P:System.Collections.Generic.SortedList`2.Keys\n  - type: System.Collections.Generic.SortedList`2.Values\n    commentId: P:System.Collections.Generic.SortedList`2.Values\n  implements:\n  - System.Collections.IDictionary.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.Keys\n  name.vb: System.Collections.IDictionary.Keys\n  nameWithType: SortedList<TKey, TValue>.IDictionary.Keys\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.Keys\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values\n  commentId: P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values\n  id: System#Collections#IDictionary#Values\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Values\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 349\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets an <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the values in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: ICollection IDictionary.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: \"\\n<p>An <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the values in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection\n    commentId: T:System.Collections.ICollection\n  - type: System.Collections.Generic.SortedList`2.Keys\n    commentId: P:System.Collections.Generic.SortedList`2.Keys\n  - type: System.Collections.Generic.SortedList`2.Values\n    commentId: P:System.Collections.Generic.SortedList`2.Values\n  implements:\n  - System.Collections.IDictionary.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.Values\n  name.vb: System.Collections.IDictionary.Values\n  nameWithType: SortedList<TKey, TValue>.IDictionary.Values\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.Values\n- uid: System.Collections.Generic.SortedList`2.Values\n  commentId: P:System.Collections.Generic.SortedList`2.Values\n  id: Values\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Values\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 333\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a collection containing the values in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public IList<TValue> Values { get; }\n    content.vb: Public ReadOnly Property Values As IList(Of TValue)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{{TValue}}\n      description: \"\\n<p>A <xref href=\\\"System.Collections.Generic.IList`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the values in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IList`1\n    commentId: T:System.Collections.Generic.IList`1\n  - type: System.Collections.Generic.SortedList`2.Keys\n    commentId: P:System.Collections.Generic.SortedList`2.Keys\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Values\n  nameWithType: SortedList<TKey, TValue>.Values\n  nameWithType.vb: SortedList(Of TKey, TValue).Values\n- uid: System.Collections.Generic.SortedList`2.Add(`0,`1)\n  commentId: M:System.Collections.Generic.SortedList`2.Add(`0,`1)\n  id: Add(`0,`1)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Add(TKey, TValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 181\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Adds an element with the specified key and value into the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Add(TKey key, TValue value)\n    content.vb: Public Sub Add(key As TKey, value As TValue)\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key of the element to add.</p>\\n\"\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>The value of the element to add. The value can be <strong>null</strong> for reference types.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element with the same key already exists in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Remove(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.Remove(`0)\n  - type: System.Collections.Generic.SortedList`2.Item(`0)\n    commentId: P:System.Collections.Generic.SortedList`2.Item(`0)\n  - type: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Add(TKey, TValue)\n  nameWithType: SortedList<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: SortedList(Of TKey, TValue).Add(TKey, TValue)\n- uid: System.Collections.Generic.SortedList`2.Clear\n  commentId: M:System.Collections.Generic.SortedList`2.Clear\n  id: Clear\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 413\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes all elements from the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Clear()\n    content.vb: Public Sub Clear\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.TrimExcess\n    commentId: M:System.Collections.Generic.SortedList`2.TrimExcess\n  - type: System.Collections.Generic.SortedList`2.Remove(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.Remove(`0)\n  - type: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n    commentId: M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear\n  - System.Collections.IDictionary.Clear\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Clear()\n  nameWithType: SortedList<TKey, TValue>.Clear()\n  nameWithType.vb: SortedList(Of TKey, TValue).Clear()\n- uid: System.Collections.Generic.SortedList`2.ContainsKey(`0)\n  commentId: M:System.Collections.Generic.SortedList`2.ContainsKey(`0)\n  id: ContainsKey(`0)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.ContainsKey(TKey)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContainsKey\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 435\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains a specific key.</p>\\n\"\n  syntax:\n    content: public bool ContainsKey(TKey key)\n    content.vb: Public Function ContainsKey(key As TKey) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key to locate in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.IndexOfKey(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)\n  - type: System.Collections.Generic.SortedList`2.ContainsValue(`1)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsValue(`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).ContainsKey(TKey)\n  nameWithType: SortedList<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: SortedList(Of TKey, TValue).ContainsKey(TKey)\n- uid: System.Collections.Generic.SortedList`2.ContainsValue(`1)\n  commentId: M:System.Collections.Generic.SortedList`2.ContainsValue(`1)\n  id: ContainsValue(`1)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ContainsValue(TValue)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.ContainsValue(TValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContainsValue\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 446\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains a specific value.</p>\\n\"\n  syntax:\n    content: public bool ContainsValue(TValue value)\n    content.vb: Public Function ContainsValue(value As TValue) As Boolean\n    parameters:\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>The value to locate in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The value can be <strong>null</strong> for reference types.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified value; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n    commentId: M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n  - type: System.Collections.Generic.SortedList`2.ContainsKey(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsKey(`0)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).ContainsValue(TValue)\n  nameWithType: SortedList<TKey, TValue>.ContainsValue(TValue)\n  nameWithType.vb: SortedList(Of TKey, TValue).ContainsValue(TValue)\n- uid: System.Collections.Generic.SortedList`2.GetEnumerator\n  commentId: M:System.Collections.Generic.SortedList`2.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 559\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()\n    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue))\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerator`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of type <xref href=\\\"System.Collections.Generic.KeyValuePair`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).GetEnumerator()\n  nameWithType: SortedList<TKey, TValue>.GetEnumerator()\n  nameWithType.vb: SortedList(Of TKey, TValue).GetEnumerator()\n- uid: System.Collections.Generic.SortedList`2.IndexOfKey(`0)\n  commentId: M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)\n  id: IndexOfKey(`0)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IndexOfKey(TKey)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.IndexOfKey(TKey)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexOfKey\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 662\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Searches for the specified key and returns the zero-based index within the entire <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int IndexOfKey(TKey key)\n    content.vb: Public Function IndexOfKey(key As TKey) As Integer\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key to locate in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of <em>key</em> within the entire <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if found; otherwise, -1.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.ContainsKey(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsKey(`0)\n  - type: System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n    commentId: M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).IndexOfKey(TKey)\n  nameWithType: SortedList<TKey, TValue>.IndexOfKey(TKey)\n  nameWithType.vb: SortedList(Of TKey, TValue).IndexOfKey(TKey)\n- uid: System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n  commentId: M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n  id: IndexOfValue(`1)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IndexOfValue(TValue)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.IndexOfValue(TValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexOfValue\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 676\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Searches for the specified value and returns the zero-based index of the first occurrence within the entire <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int IndexOfValue(TValue value)\n    content.vb: Public Function IndexOfValue(value As TValue) As Integer\n    parameters:\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>The value to locate in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.  The value can be <strong>null</strong> for reference types.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the first occurrence of <em>value</em> within the entire <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if found; otherwise, -1.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.ContainsValue(`1)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsValue(`1)\n  - type: System.Collections.Generic.SortedList`2.IndexOfKey(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).IndexOfValue(TValue)\n  nameWithType: SortedList<TKey, TValue>.IndexOfValue(TValue)\n  nameWithType.vb: SortedList(Of TKey, TValue).IndexOfValue(TValue)\n- uid: System.Collections.Generic.SortedList`2.Remove(`0)\n  commentId: M:System.Collections.Generic.SortedList`2.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Remove(TKey)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 731\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes the element with the specified key from the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool Remove(TKey key)\n    content.vb: Public Function Remove(key As TKey) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key of the element to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the element is successfully removed; otherwise, <strong>false</strong>.  This method also returns <strong>false</strong> if <em>key</em> was not found in the original <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n    commentId: M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n  - type: System.Collections.Generic.SortedList`2.Clear\n    commentId: M:System.Collections.Generic.SortedList`2.Clear\n  - type: System.Collections.Generic.SortedList`2.Add(`0,`1)\n    commentId: M:System.Collections.Generic.SortedList`2.Add(`0,`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Remove(TKey)\n  nameWithType: SortedList<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: SortedList(Of TKey, TValue).Remove(TKey)\n- uid: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n  commentId: M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: RemoveAt(Int32)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.RemoveAt(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAt\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 712\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes the element at the specified index of the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void RemoveAt(int index)\n    content.vb: Public Sub RemoveAt(index As Integer)\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the element to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>index</em> is equal to or greater than <xref href=\\\"System.Collections.Generic.SortedList`2.Count\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Remove(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.Remove(`0)\n  - type: System.Collections.Generic.SortedList`2.Clear\n    commentId: M:System.Collections.Generic.SortedList`2.Clear\n  - type: System.Collections.Generic.SortedList`2.Add(`0,`1)\n    commentId: M:System.Collections.Generic.SortedList`2.Add(`0,`1)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).RemoveAt(System.Int32)\n  nameWithType: SortedList<TKey, TValue>.RemoveAt(Int32)\n  nameWithType.vb: SortedList(Of TKey, TValue).RemoveAt(Int32)\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 190\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> keyValuePair)\n    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))\n  nameWithType: SortedList<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 195\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue> keyValuePair)\n    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))\n  nameWithType: SortedList<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 452\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)\n    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]\n    - id: arrayIndex\n      type: System.Int32\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  nameWithType: SortedList<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 205\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> keyValuePair)\n    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))\n  nameWithType: SortedList<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 564\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: IEnumerator<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()\n  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()\n  nameWithType: SortedList<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()\n- uid: System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 476\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Copies the elements of the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, starting at a particular <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> index.</p>\\n\"\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n      description: \"\\n<p>The one-dimensional <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the destination of the elements copied from <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> must have zero-based indexing.</p>\\n\"\n    - id: index\n      type: System.Int32\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>arrayIndex</em> is less than zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or-</p>\\n<p>\\n<em>array</em> does not have zero-based indexing.</p>\\n<p>-or-</p>\\n<p>The number of elements in the source <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>arrayIndex</em> to the end of the destination <em>array</em>.</p>\\n<p>-or-</p>\\n<p>The type of the source <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be cast automatically to the type of the destination <em>array</em>.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: SortedList<TKey, TValue>.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Add(Object, Object)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Add\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 266\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Adds an element with the provided key and value to the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void IDictionary.Add(object key, object value)\n    content.vb: Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use as the key of the element to add.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use as the value of the element to add.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>key</em> is of a type that is not assignable to the key type <em>TKey</em> of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is of a type that is not assignable to the value type <em>TValue</em> of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>An element with the same key already exists in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.IDictionary.Item(System.Object)\n    commentId: P:System.Collections.IDictionary.Item(System.Object)\n  implements:\n  - System.Collections.IDictionary.Add(System.Object,System.Object)\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)\n  name.vb: System.Collections.IDictionary.Add(Object, Object)\n  nameWithType: SortedList<TKey, TValue>.IDictionary.Add(Object, Object)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Contains(Object)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Contains\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 424\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key.</p>\\n\"\n  syntax:\n    content: bool IDictionary.Contains(object key)\n    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key to locate in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the key; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.ContainsKey(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsKey(`0)\n  - type: System.Collections.Generic.SortedList`2.ContainsValue(`1)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsValue(`1)\n  implements:\n  - System.Collections.IDictionary.Contains(System.Object)\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)\n  name.vb: System.Collections.IDictionary.Contains(Object)\n  nameWithType: SortedList<TKey, TValue>.IDictionary.Contains(Object)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator\n  id: System#Collections#IDictionary#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.GetEnumerator()\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 569\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an <xref href=\\\"System.Collections.IDictionaryEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: IDictionaryEnumerator IDictionary.GetEnumerator()\n    content.vb: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IDictionaryEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.GetEnumerator\n    commentId: M:System.Collections.Generic.SortedList`2.GetEnumerator\n  - type: System.Collections.IDictionaryEnumerator\n    commentId: T:System.Collections.IDictionaryEnumerator\n  implements:\n  - System.Collections.IDictionary.GetEnumerator\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()\n  name.vb: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: SortedList<TKey, TValue>.IDictionary.GetEnumerator()\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Remove(Object)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Remove\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 739\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes the element with the specified key from the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void IDictionary.Remove(object key)\n    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key of the element to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Remove(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.Remove(`0)\n  - type: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n    commentId: M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)\n  implements:\n  - System.Collections.IDictionary.Remove(System.Object)\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)\n  name.vb: System.Collections.IDictionary.Remove(Object)\n  nameWithType: SortedList<TKey, TValue>.IDictionary.Remove(Object)\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)\n- uid: System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 574\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through a collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to iterate through the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.GetEnumerator\n    commentId: M:System.Collections.Generic.SortedList`2.GetEnumerator\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SortedList<TKey, TValue>.IEnumerable.GetEnumerator()\n  nameWithType.vb: SortedList(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.Generic.SortedList`2.TrimExcess\n  commentId: M:System.Collections.Generic.SortedList`2.TrimExcess\n  id: TrimExcess\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: TrimExcess()\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.TrimExcess()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TrimExcess\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 756\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Sets the capacity to the actual number of elements in the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if that number is less than 90 percent of current capacity.</p>\\n\"\n  syntax:\n    content: public void TrimExcess()\n    content.vb: Public Sub TrimExcess\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.Clear\n    commentId: M:System.Collections.Generic.SortedList`2.Clear\n  - type: System.Collections.Generic.SortedList`2.Capacity\n    commentId: P:System.Collections.Generic.SortedList`2.Capacity\n  - type: System.Collections.Generic.SortedList`2.Count\n    commentId: P:System.Collections.Generic.SortedList`2.Count\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).TrimExcess()\n  nameWithType: SortedList<TKey, TValue>.TrimExcess()\n  nameWithType.vb: SortedList(Of TKey, TValue).TrimExcess()\n- uid: System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)\n  commentId: M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)\n  id: TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.SortedList`2\n  langs:\n  - csharp\n  - vb\n  name: TryGetValue(TKey, out TValue)\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>.TryGetValue(TKey, out TValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryGetValue\n    path: src/System.Collections/src/System/Collections/Generic/SortedList.cs\n    startLine: 696\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the value associated with the specified key.</p>\\n\"\n  syntax:\n    content: public bool TryGetValue(TKey key, out TValue value)\n    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key whose value to get.</p>\\n\"\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <em>value</em> parameter. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.SortedList`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedList`2.ContainsKey(`0)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsKey(`0)\n  - type: System.Collections.Generic.SortedList`2.Item(`0)\n    commentId: P:System.Collections.Generic.SortedList`2.Item(`0)\n  - type: System.Collections.Generic.SortedList`2.ContainsValue(`1)\n    commentId: M:System.Collections.Generic.SortedList`2.ContainsValue(`1)\n  - type: System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n    commentId: M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)\n  name.vb: TryGetValue(TKey, ByRef TValue)\n  nameWithType: SortedList<TKey, TValue>.TryGetValue(TKey, out TValue)\n  nameWithType.vb: SortedList(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IDictionary{`0,`1}\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyDictionary`2\n  name: IReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)\n  name.vb: IReadOnlyDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,`1}\n- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyCollection`1\n  name: IReadOnlyCollection<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  fullName: System.Collections.IDictionary\n  nameWithType: IDictionary\n  commentId: T:System.Collections.IDictionary\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  nameWithType: ICollection\n  commentId: T:System.Collections.ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  nameWithType: IEnumerable\n  commentId: T:System.Collections.IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable()\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsQueryable(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Queryable.AsQueryable(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsParallel(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Any(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsEnumerable(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Count(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: First(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult))\n  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Last(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Reverse(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Reverse(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, TResult))\n  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Single(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: Skip(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: Take(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.Take(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: ToArray(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.ToArray(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: ToList(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.ToList(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  name.vb: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IDictionary`2\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n  commentId: T:System.Collections.Generic.ICollection`1\n- uid: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: IReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)\n  name.vb: IReadOnlyDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  commentId: T:System.Collections.Generic.IReadOnlyCollection`1\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  nameWithType: Queryable\n  commentId: T:System.Linq.Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  nameWithType: Enumerable\n  commentId: T:System.Linq.Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  nameWithType: System.Linq\n  commentId: N:System.Linq\n- uid: System.Collections.Generic.IComparer{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IComparer`1\n  name: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n  fullname.vb: System.Collections.Generic.IComparer(Of TKey)\n  name.vb: IComparer(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IComparer<TKey>\n  nameWithType.vb: IComparer(Of TKey)\n  commentId: T:System.Collections.Generic.IComparer{``1}\n- uid: System.Collections.Generic.IComparer`1\n  isExternal: false\n  name: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n  fullname.vb: System.Collections.Generic.IComparer(Of T)\n  name.vb: IComparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparer<T>\n  nameWithType.vb: IComparer(Of T)\n  commentId: T:System.Collections.Generic.IComparer`1\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count\n  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count\n- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  parent: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.IReadOnlyCollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count\n  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>.Count\n  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n- uid: System.Collections.Generic.IReadOnlyCollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count\n  nameWithType: IReadOnlyCollection<T>.Count\n  nameWithType.vb: IReadOnlyCollection(Of T).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Item(`0)\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Item(`0)\n- uid: '{TKey}'\n  definition: TKey\n  name: TKey\n  fullName: TKey\n  nameWithType: TKey\n  commentId: '!:TKey'\n- uid: '{TValue}'\n  definition: TValue\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n  commentId: '!:TValue'\n- uid: System.Collections.Generic.IDictionary`2.Item(`0)\n  isExternal: true\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  isExternal: true\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n- uid: TKey\n  isExternal: false\n  name: TKey\n  fullName: TKey\n  nameWithType: TKey\n- uid: TValue\n  isExternal: false\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n- uid: System.Collections.Generic.IList{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IList`1\n  name: IList<TKey>\n  fullName: System.Collections.Generic.IList<TKey>\n  fullname.vb: System.Collections.Generic.IList(Of TKey)\n  name.vb: IList(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IList<TKey>\n  nameWithType.vb: IList(Of TKey)\n  commentId: T:System.Collections.Generic.IList{`0}\n- uid: System.Collections.Generic.IList`1\n  isExternal: false\n  name: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n  fullname.vb: System.Collections.Generic.IList(Of T)\n  name.vb: IList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IList<T>\n  nameWithType.vb: IList(Of T)\n  commentId: T:System.Collections.Generic.IList`1\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Keys\n  name: Keys\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys\n  nameWithType: IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys\n- uid: System.Collections.Generic.ICollection{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<TKey>\n  fullName: System.Collections.Generic.ICollection<TKey>\n  fullname.vb: System.Collections.Generic.ICollection(Of TKey)\n  name.vb: ICollection(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: ICollection<TKey>\n  nameWithType.vb: ICollection(Of TKey)\n  commentId: T:System.Collections.Generic.ICollection{`0}\n- uid: System.Collections.Generic.IDictionary`2.Keys\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys\n  nameWithType: IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IDictionary`2.Keys\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Values\n  name: Values\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values\n  nameWithType: IDictionary<TKey, TValue>.Values\n  nameWithType.vb: IDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values\n- uid: System.Collections.Generic.ICollection{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<TValue>\n  fullName: System.Collections.Generic.ICollection<TValue>\n  fullname.vb: System.Collections.Generic.ICollection(Of TValue)\n  name.vb: ICollection(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: ICollection<TValue>\n  nameWithType.vb: ICollection(Of TValue)\n  commentId: T:System.Collections.Generic.ICollection{`1}\n- uid: System.Collections.Generic.IDictionary`2.Values\n  isExternal: true\n  name: Values\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values\n  nameWithType: IDictionary<TKey, TValue>.Values\n  nameWithType.vb: IDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IDictionary`2.Values\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  name: Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Keys\n- uid: System.Collections.Generic.IEnumerable{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<TKey>\n  fullName: System.Collections.Generic.IEnumerable<TKey>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of TKey)\n  name.vb: IEnumerable(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<TKey>\n  nameWithType.vb: IEnumerable(Of TKey)\n  commentId: T:System.Collections.Generic.IEnumerable{`0}\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Keys\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  name: Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Values\n- uid: System.Collections.Generic.IEnumerable{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<TValue>\n  fullName: System.Collections.Generic.IEnumerable<TValue>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue)\n  name.vb: IEnumerable(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<TValue>\n  nameWithType.vb: IEnumerable(Of TValue)\n  commentId: T:System.Collections.Generic.IEnumerable{`1}\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  isExternal: true\n  name: Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Values\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n- uid: System.Collections.IDictionary.IsFixedSize\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: IsFixedSize\n  fullName: System.Collections.IDictionary.IsFixedSize\n  nameWithType: IDictionary.IsFixedSize\n  commentId: P:System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.IDictionary.IsReadOnly\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: IsReadOnly\n  fullName: System.Collections.IDictionary.IsReadOnly\n  nameWithType: IDictionary.IsReadOnly\n  commentId: P:System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.IDictionary.Item(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Item[Object]\n  fullName: System.Collections.IDictionary.Item[System.Object]\n  fullname.vb: System.Collections.IDictionary.Item(System.Object)\n  name.vb: Item(Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Item(System.Object)\n    name: Item\n    fullName: System.Collections.IDictionary.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.IDictionary.Item(System.Object)\n    name: Item\n    fullName: System.Collections.IDictionary.Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Item[Object]\n  nameWithType.vb: IDictionary.Item(Object)\n  commentId: P:System.Collections.IDictionary.Item(System.Object)\n- uid: System.Collections.IDictionary.Keys\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.IDictionary.Keys\n  nameWithType: IDictionary.Keys\n  commentId: P:System.Collections.IDictionary.Keys\n- uid: System.Collections.IDictionary.Values\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Values\n  fullName: System.Collections.IDictionary.Values\n  nameWithType: IDictionary.Values\n  commentId: P:System.Collections.IDictionary.Values\n- uid: System.Collections.Generic.IList{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IList`1\n  name: IList<TValue>\n  fullName: System.Collections.Generic.IList<TValue>\n  fullname.vb: System.Collections.Generic.IList(Of TValue)\n  name.vb: IList(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IList<TValue>\n  nameWithType.vb: IList(Of TValue)\n  commentId: T:System.Collections.Generic.IList{`1}\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)\n- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  isExternal: true\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear()\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear()\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear\n- uid: System.Collections.IDictionary.Clear\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Clear()\n  fullName: System.Collections.IDictionary.Clear()\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Clear\n    name: Clear\n    fullName: System.Collections.IDictionary.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Clear\n    name: Clear\n    fullName: System.Collections.IDictionary.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Clear()\n  commentId: M:System.Collections.IDictionary.Clear\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.ContainsKey(`0)\n- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  isExternal: true\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  isExternal: true\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Remove(`0)\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)\n- uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n  isExternal: true\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)\n  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Add(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Add(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey, TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)\n  name.vb: KeyValuePair(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: KeyValuePair<TKey, TValue>\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n- uid: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: KeyValuePair<TKey, TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)\n  name.vb: KeyValuePair(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: KeyValuePair<TKey, TValue>\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.KeyValuePair`2\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Contains(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)\n  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]\n  name: KeyValuePair<TKey, TValue>[]\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()\n  name.vb: KeyValuePair(Of TKey, TValue)()\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ()\n    fullName: ()\n  nameWithType: KeyValuePair<TKey, TValue>[]\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)()\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Remove(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection.CopyTo(Array, Int32)\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  nameWithType: Array\n  commentId: T:System.Array\n- uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Add(Object, Object)\n  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n    name: Add\n    fullName: System.Collections.IDictionary.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n    name: Add\n    fullName: System.Collections.IDictionary.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Add(Object, Object)\n  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)\n- uid: System.Collections.IDictionary.Contains(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Contains(Object)\n  fullName: System.Collections.IDictionary.Contains(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IDictionary.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IDictionary.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Contains(Object)\n  commentId: M:System.Collections.IDictionary.Contains(System.Object)\n- uid: System.Collections.IDictionary.GetEnumerator\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: GetEnumerator()\n  fullName: System.Collections.IDictionary.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IDictionary.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IDictionary.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IDictionary.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.GetEnumerator()\n  commentId: M:System.Collections.IDictionary.GetEnumerator\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  commentId: T:System.Collections.IDictionaryEnumerator\n- uid: System.Collections.IDictionary.Remove(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Remove(Object)\n  fullName: System.Collections.IDictionary.Remove(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IDictionary.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IDictionary.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Remove(Object)\n  commentId: M:System.Collections.IDictionary.Remove(System.Object)\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable.GetEnumerator()\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  isExternal: true\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  isExternal: true\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.OutOfMemoryException\n  isExternal: false\n  name: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  commentId: T:System.OutOfMemoryException\n- uid: System.Collections.Generic.KeyNotFoundException\n  isExternal: false\n  name: KeyNotFoundException\n  fullName: System.Collections.Generic.KeyNotFoundException\n  nameWithType: KeyNotFoundException\n  commentId: T:System.Collections.Generic.KeyNotFoundException\n"}