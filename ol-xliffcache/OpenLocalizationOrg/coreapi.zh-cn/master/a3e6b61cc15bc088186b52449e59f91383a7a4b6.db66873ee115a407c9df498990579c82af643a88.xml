{"nodes":[{"pos":[1239,1262],"content":"ContentRangeHeaderValue","needQuote":true,"nodes":[{"content":"ContentRangeHeaderValue","pos":[0,23]}]},{"pos":[2473,2503],"content":"ContentRangeHeaderValue(Int64)","needQuote":true,"nodes":[{"content":"ContentRangeHeaderValue(Int64)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The starting or ending point of the range, in bytes.&lt;/p&gt;\\n","pos":[3291,3354],"source":"\\n<p>The starting or ending point of the range, in bytes.</p>\\n"},{"pos":[3803,3840],"content":"ContentRangeHeaderValue(Int64, Int64)","needQuote":true,"nodes":[{"content":"ContentRangeHeaderValue(Int64, Int64)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The position, in bytes, at which to start sending data.&lt;/p&gt;\\n","pos":[4657,4723],"source":"\\n<p>The position, in bytes, at which to start sending data.</p>\\n"},{"content":"\\n&lt;p&gt;The position, in bytes, at which to stop sending data.&lt;/p&gt;\\n","pos":[4783,4848],"source":"\\n<p>The position, in bytes, at which to stop sending data.</p>\\n"},{"pos":[5343,5387],"content":"ContentRangeHeaderValue(Int64, Int64, Int64)","needQuote":true,"nodes":[{"content":"ContentRangeHeaderValue(Int64, Int64, Int64)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The position, in bytes, at which to start sending data.&lt;/p&gt;\\n","pos":[6247,6313],"source":"\\n<p>The position, in bytes, at which to start sending data.</p>\\n"},{"content":"\\n&lt;p&gt;The position, in bytes, at which to stop sending data.&lt;/p&gt;\\n","pos":[6373,6438],"source":"\\n<p>The position, in bytes, at which to stop sending data.</p>\\n"},{"content":"\\n&lt;p&gt;The starting or ending point of the range, in bytes.&lt;/p&gt;\\n","pos":[6502,6565],"source":"\\n<p>The starting or ending point of the range, in bytes.</p>\\n"},{"pos":[6942,6946],"content":"From","needQuote":true,"nodes":[{"content":"From","pos":[0,4]}]},{"pos":[8134,8143],"content":"HasLength","needQuote":true,"nodes":[{"content":"HasLength","pos":[0,9]}]},{"pos":[9400,9408],"content":"HasRange","needQuote":true,"nodes":[{"content":"HasRange","pos":[0,8]}]},{"pos":[10646,10652],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[11800,11802],"content":"To","needQuote":true,"nodes":[{"content":"To","pos":[0,2]}]},{"pos":[12952,12956],"content":"Unit","needQuote":true,"nodes":[{"content":"Unit","pos":[0,4]}]},{"pos":[14177,14191],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[15012,15069],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[15859,15872],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17221,17234],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents content range header value information.&lt;/p&gt;\\n","pos":[18049,18124],"source":"\\n<p>A string that represents content range header value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[18593,18658],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid content range header value information.&lt;/p&gt;\\n","pos":[18751,18831],"source":"\\n<p>\\n<em>input</em> is not valid content range header value information.</p>\\n"},{"pos":[19211,19221],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20733,20778],"content":"TryParse(String, out ContentRangeHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out ContentRangeHeaderValue)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[21726,21760],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[22910,22933],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[23115,23121],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23308,23330],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23478,23484],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23551,23552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23602,23608],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23669,23670]},{"pos":[23725,23731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23791,23792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23889,23895],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23962,23963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24013,24019],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24080,24081]},{"pos":[24136,24142],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24202,24203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24448,24479],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[24645,24660],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24736,24737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24787,24793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24854,24855]},{"pos":[24910,24916],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24976,24977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25083,25098],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25174,25175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25225,25231],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25292,25293]},{"pos":[25348,25354],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25414,25415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25641,25650],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[25743,25750],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25818,25819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25846,25847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25916,25923],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25991,25992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26019,26020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26195,26212],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26321,26336],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26412,26413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26440,26441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26518,26533],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26609,26610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26637,26638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26783,26789],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26919,26924],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[27094,27109],"content":"Nullable<Int64>","needQuote":true,"nodes":[{"content":"Nullable&lt;Int64&gt;","pos":[0,15],"source":"Nullable<Int64>"}]},{"pos":[27282,27290],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[27352,27353],"content":"<","needQuote":true,"nodes":[]},{"pos":[27402,27407],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[27536,27544],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[27607,27610]},{"pos":[27666,27671],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[27730,27731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27933,27944],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[28091,28099],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[28140,28141],"content":"<","needQuote":true,"nodes":[]},{"pos":[28168,28169],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28266,28274],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[28316,28319]},{"pos":[28353,28354],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28381,28382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28561,28568],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28716,28722],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28895,28909],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[29028,29034],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29101,29102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29152,29158],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29218,29219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29302,29308],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29375,29376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29426,29432],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29492,29493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29683,29696],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[29797,29808],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[29880,29881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29908,29909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29982,29993],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30065,30066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30093,30094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30254,30259],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30452,30475],"content":"ContentRangeHeaderValue","needQuote":true,"nodes":[{"content":"ContentRangeHeaderValue","pos":[0,23]}]},{"pos":[30720,30730],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[30825,30833],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30902,30903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30930,30931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31001,31009],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[31078,31079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31106,31107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31260,31281],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[31480,31495],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue\n  commentId: T:System.Net.Http.Headers.ContentRangeHeaderValue\n  id: ContentRangeHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)\n  - System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)\n  - System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)\n  - System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.ContentRangeHeaderValue.From\n  - System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode\n  - System.Net.Http.Headers.ContentRangeHeaderValue.HasLength\n  - System.Net.Http.Headers.ContentRangeHeaderValue.HasRange\n  - System.Net.Http.Headers.ContentRangeHeaderValue.Length\n  - System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.ContentRangeHeaderValue.To\n  - System.Net.Http.Headers.ContentRangeHeaderValue.ToString\n  - System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)\n  - System.Net.Http.Headers.ContentRangeHeaderValue.Unit\n  langs:\n  - csharp\n  - vb\n  name: ContentRangeHeaderValue\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContentRangeHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 300\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents the value of the Content-Range header.</p>\\n\"\n  syntax:\n    content: public class ContentRangeHeaderValue\n    content.vb: Public Class ContentRangeHeaderValue\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ContentRangeHeaderValue\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ContentRangeHeaderValue(Int64)\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.ContentRangeHeaderValue(System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 302\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ContentRangeHeaderValue(long length)\n    content.vb: Public Sub New(length As Long)\n    parameters:\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The starting or ending point of the range, in bytes.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ContentRangeHeaderValue.ContentRangeHeaderValue(Int64)\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)\n  id: '#ctor(System.Int64,System.Int64)'\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ContentRangeHeaderValue(Int64, Int64)\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.ContentRangeHeaderValue(System.Int64, System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 303\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ContentRangeHeaderValue(long from, long to)\n    content.vb: Public Sub New(from As Long, to As Long)\n    parameters:\n    - id: from\n      type: System.Int64\n      description: \"\\n<p>The position, in bytes, at which to start sending data.</p>\\n\"\n    - id: to\n      type: System.Int64\n      description: \"\\n<p>The position, in bytes, at which to stop sending data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ContentRangeHeaderValue.ContentRangeHeaderValue(Int64, Int64)\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)\n  id: '#ctor(System.Int64,System.Int64,System.Int64)'\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ContentRangeHeaderValue(Int64, Int64, Int64)\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.ContentRangeHeaderValue(System.Int64, System.Int64, System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 304\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ContentRangeHeaderValue(long from, long to, long length)\n    content.vb: Public Sub New(from As Long, to As Long, length As Long)\n    parameters:\n    - id: from\n      type: System.Int64\n      description: \"\\n<p>The position, in bytes, at which to start sending data.</p>\\n\"\n    - id: to\n      type: System.Int64\n      description: \"\\n<p>The position, in bytes, at which to stop sending data.</p>\\n\"\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The starting or ending point of the range, in bytes.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ContentRangeHeaderValue.ContentRangeHeaderValue(Int64, Int64, Int64)\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.From\n  commentId: P:System.Net.Http.Headers.ContentRangeHeaderValue.From\n  id: From\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: From\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.From\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: From\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 305\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the position at which to start sending data.</p>\\n\"\n  syntax:\n    content: public long ? From { get; }\n    content.vb: Public ReadOnly Property From As Long?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>Returns <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The position, in bytes, at which to start sending data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContentRangeHeaderValue.From\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.HasLength\n  commentId: P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength\n  id: HasLength\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: HasLength\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.HasLength\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasLength\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 306\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets whether the Content-Range header has a length specified.</p>\\n\"\n  syntax:\n    content: public bool HasLength { get; }\n    content.vb: Public ReadOnly Property HasLength As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the Content-Range has a length specified; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContentRangeHeaderValue.HasLength\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.HasRange\n  commentId: P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange\n  id: HasRange\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: HasRange\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.HasRange\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasRange\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 307\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets whether the Content-Range has a range specified. </p>\\n\"\n  syntax:\n    content: public bool HasRange { get; }\n    content.vb: Public ReadOnly Property HasRange As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the Content-Range has a range specified; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContentRangeHeaderValue.HasRange\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.Length\n  commentId: P:System.Net.Http.Headers.ContentRangeHeaderValue.Length\n  id: Length\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 308\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the length of the full entity-body.</p>\\n\"\n  syntax:\n    content: public long ? Length { get; }\n    content.vb: Public ReadOnly Property Length As Long?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>Returns <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The length of the full entity-body.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContentRangeHeaderValue.Length\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.To\n  commentId: P:System.Net.Http.Headers.ContentRangeHeaderValue.To\n  id: To\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: To\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.To\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: To\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 309\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the position at which to stop sending data.</p>\\n\"\n  syntax:\n    content: public long ? To { get; }\n    content.vb: Public ReadOnly Property To As Long?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>Returns <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The position at which to stop sending data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ContentRangeHeaderValue.To\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.Unit\n  commentId: P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit\n  id: Unit\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Unit\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.Unit\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Unit\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 310\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>The range units used.</p>\\n\"\n  syntax:\n    content: public string Unit { get; set; }\n    content.vb: Public Property Unit As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains range units. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ContentRangeHeaderValue.Unit\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 311\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified Object is equal to the current <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ContentRangeHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 312\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ContentRangeHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 313\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static ContentRangeHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As ContentRangeHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents content range header value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.ContentRangeHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid content range header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ContentRangeHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 314\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ContentRangeHeaderValue.ToString()\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)\n  commentId: M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)\n  parent: System.Net.Http.Headers.ContentRangeHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out ContentRangeHeaderValue)\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String, out System.Net.Http.Headers.ContentRangeHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 315\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out ContentRangeHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As ContentRangeHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.ContentRangeHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.ContentRangeHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.ContentRangeHeaderValue)\n  name.vb: TryParse(String, ByRef ContentRangeHeaderValue)\n  nameWithType: ContentRangeHeaderValue.TryParse(String, out ContentRangeHeaderValue)\n  nameWithType.vb: ContentRangeHeaderValue.TryParse(String, ByRef ContentRangeHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Nullable{System.Int64}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n  fullname.vb: System.Nullable(Of System.Int64)\n  name.vb: Nullable(Of Int64)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Int64}\n  nameWithType: Nullable<Int64>\n  nameWithType.vb: Nullable(Of Int64)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Net.Http.Headers.ContentRangeHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: ContentRangeHeaderValue\n  fullName: System.Net.Http.Headers.ContentRangeHeaderValue\n  commentId: T:System.Net.Http.Headers.ContentRangeHeaderValue\n  nameWithType: ContentRangeHeaderValue\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}