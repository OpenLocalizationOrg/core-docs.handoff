{"nodes":[{"pos":[1033,1071],"content":"TypeConverter.SimplePropertyDescriptor","needQuote":true,"nodes":[{"content":"TypeConverter.SimplePropertyDescriptor","pos":[0,38]}]},{"pos":[5523,5567],"content":"SimplePropertyDescriptor(Type, String, Type)","needQuote":true,"nodes":[{"content":"SimplePropertyDescriptor(Type, String, Type)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The name of the property.","pos":[6831,6861],"source":"\\n<p>The name of the property."},{"content":"&lt;/p&gt;\\n","pos":[6862,6868],"source":" </p>\\n"},{"pos":[8055,8112],"content":"SimplePropertyDescriptor(Type, String, Type, Attribute[])","needQuote":true,"nodes":[{"content":"SimplePropertyDescriptor(Type, String, Type, Attribute[])","pos":[0,57]}]},{"content":"\\n&lt;p&gt;The name of the property.","pos":[9447,9477],"source":"\\n<p>The name of the property."},{"content":"&lt;/p&gt;\\n","pos":[9478,9484],"source":" </p>\\n"},{"pos":[11163,11176],"content":"ComponentType","needQuote":true,"nodes":[{"content":"ComponentType","pos":[0,13]}]},{"pos":[13054,13064],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the property is read-only; &lt;strong&gt;false&lt;/strong&gt; if the property is read/write.&lt;/p&gt;\\n","pos":[13872,13990],"source":"\\n<p>\\n<strong>true</strong> if the property is read-only; <strong>false</strong> if the property is read/write.</p>\\n"},{"pos":[15000,15012],"content":"PropertyType","needQuote":true,"nodes":[{"content":"PropertyType","pos":[0,12]}]},{"pos":[16874,16895],"content":"CanResetValue(Object)","needQuote":true,"nodes":[{"content":"CanResetValue(Object)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The component to test for reset capability.","pos":[17769,17817],"source":"\\n<p>The component to test for reset capability."},{"content":"&lt;/p&gt;\\n","pos":[17818,17824],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if resetting the component changes the value of the component; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17885,18017],"source":"\\n<p>\\n<strong>true</strong> if resetting the component changes the value of the component; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[18967,18985],"content":"ResetValue(Object)","needQuote":true,"nodes":[{"content":"ResetValue(Object)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The component with the property value to be reset.","pos":[19808,19863],"source":"\\n<p>The component with the property value to be reset."},{"content":"&lt;/p&gt;\\n","pos":[19864,19870],"source":" </p>\\n"},{"pos":[20844,20872],"content":"ShouldSerializeValue(Object)","needQuote":true,"nodes":[{"content":"ShouldSerializeValue(Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The component with the property that is to be examined for persistence.","pos":[21754,21830],"source":"\\n<p>The component with the property that is to be examined for persistence."},{"content":"&lt;/p&gt;\\n","pos":[21831,21837],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of the property can persist; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21898,22009],"source":"\\n<p>\\n<strong>true</strong> if the value of the property can persist; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[22708,22729],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[22905,22911],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23096,23112],"content":"MemberDescriptor","needQuote":true,"nodes":[{"content":"MemberDescriptor","pos":[0,16]}]},{"pos":[23359,23377],"content":"PropertyDescriptor","needQuote":true,"nodes":[{"content":"PropertyDescriptor","pos":[0,18]}]},{"pos":[23659,23668],"content":"Converter","needQuote":true,"nodes":[{"content":"Converter","pos":[0,9]}]},{"pos":[23984,23997],"content":"IsLocalizable","needQuote":true,"nodes":[{"content":"IsLocalizable","pos":[0,13]}]},{"pos":[24332,24352],"content":"SupportsChangeEvents","needQuote":true,"nodes":[{"content":"SupportsChangeEvents","pos":[0,20]}]},{"pos":[24737,24774],"content":"AddValueChanged(Object, EventHandler)","needQuote":true,"nodes":[{"content":"AddValueChanged(Object, EventHandler)","pos":[0,37]}]},{"pos":[25006,25021],"content":"AddValueChanged","needQuote":true,"nodes":[{"content":"AddValueChanged","pos":[0,15]}]},{"pos":[25103,25104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25154,25160],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25221,25222]},{"pos":[25283,25295],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[25361,25362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25501,25516],"content":"AddValueChanged","needQuote":true,"nodes":[{"content":"AddValueChanged","pos":[0,15]}]},{"pos":[25598,25599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25649,25655],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25716,25717]},{"pos":[25778,25790],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[25856,25857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26208,26228],"content":"CreateInstance(Type)","needQuote":true,"nodes":[{"content":"CreateInstance(Type)","pos":[0,20]}]},{"pos":[26413,26427],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[26508,26509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26557,26561],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[26619,26620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26736,26750],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[26831,26832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26880,26884],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[26942,26943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27248,27262],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[27435,27441],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27514,27515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27565,27571],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27631,27632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27742,27748],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27821,27822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27872,27878],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27938,27939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28251,28272],"content":"FillAttributes(IList)","needQuote":true,"nodes":[{"content":"FillAttributes(IList)","pos":[0,21]}]},{"pos":[28483,28497],"content":"FillAttributes","needQuote":true,"nodes":[{"content":"FillAttributes","pos":[0,14]}]},{"pos":[28578,28579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28640,28645],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[28716,28717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28846,28860],"content":"FillAttributes","needQuote":true,"nodes":[{"content":"FillAttributes","pos":[0,14]}]},{"pos":[28941,28942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29003,29008],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[29079,29080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29397,29417],"content":"GetChildProperties()","needQuote":true,"nodes":[{"content":"GetChildProperties()","pos":[0,20]}]},{"pos":[29586,29604],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[29689,29690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29717,29718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29825,29843],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[29928,29929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29956,29957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30270,30301],"content":"GetChildProperties(Attribute[])","needQuote":true,"nodes":[{"content":"GetChildProperties(Attribute[])","pos":[0,31]}]},{"pos":[30646,30664],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[30749,30750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30803,30812],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[30876,30878]},{"pos":[30909,30910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31037,31055],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[31140,31141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31194,31203],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[31266,31268],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[31296,31297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31706,31732],"content":"GetChildProperties(Object)","needQuote":true,"nodes":[{"content":"GetChildProperties(Object)","pos":[0,26]}]},{"pos":[31929,31947],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[32032,32033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32083,32089],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32149,32150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32272,32290],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[32375,32376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32426,32432],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32492,32493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32841,32880],"content":"GetChildProperties(Object, Attribute[])","needQuote":true,"nodes":[{"content":"GetChildProperties(Object, Attribute[])","pos":[0,39]}]},{"pos":[33277,33295],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[33380,33381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33431,33437],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33498,33499]},{"pos":[33557,33566],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[33630,33632]},{"pos":[33663,33664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33805,33823],"content":"GetChildProperties","needQuote":true,"nodes":[{"content":"GetChildProperties","pos":[0,18]}]},{"pos":[33908,33909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33959,33965],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34026,34027]},{"pos":[34085,34094],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[34157,34159],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[34187,34188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34616,34631],"content":"GetEditor(Type)","needQuote":true,"nodes":[{"content":"GetEditor(Type)","pos":[0,15]}]},{"pos":[34806,34815],"content":"GetEditor","needQuote":true,"nodes":[{"content":"GetEditor","pos":[0,9]}]},{"pos":[34891,34892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34940,34944],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[35002,35003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35114,35123],"content":"GetEditor","needQuote":true,"nodes":[{"content":"GetEditor","pos":[0,9]}]},{"pos":[35199,35200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35248,35252],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[35310,35311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35597,35610],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[35765,35776],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[35854,35855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35882,35883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35983,35994],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[36072,36073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36100,36101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36408,36441],"content":"GetInvocationTarget(Type, Object)","needQuote":true,"nodes":[{"content":"GetInvocationTarget(Type, Object)","pos":[0,33]}]},{"pos":[36665,36684],"content":"GetInvocationTarget","needQuote":true,"nodes":[{"content":"GetInvocationTarget","pos":[0,19]}]},{"pos":[36770,36771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36819,36823],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[36882,36883]},{"pos":[36938,36944],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37004,37005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37140,37159],"content":"GetInvocationTarget","needQuote":true,"nodes":[{"content":"GetInvocationTarget","pos":[0,19]}]},{"pos":[37245,37246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37294,37298],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[37357,37358]},{"pos":[37413,37419],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37479,37480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37826,37849],"content":"GetTypeFromName(String)","needQuote":true,"nodes":[{"content":"GetTypeFromName(String)","pos":[0,23]}]},{"pos":[38040,38055],"content":"GetTypeFromName","needQuote":true,"nodes":[{"content":"GetTypeFromName","pos":[0,15]}]},{"pos":[38137,38138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38188,38194],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38254,38255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38374,38389],"content":"GetTypeFromName","needQuote":true,"nodes":[{"content":"GetTypeFromName","pos":[0,15]}]},{"pos":[38471,38472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38522,38528],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38588,38589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38902,38918],"content":"GetValue(Object)","needQuote":true,"nodes":[{"content":"GetValue(Object)","pos":[0,16]}]},{"pos":[39095,39103],"content":"GetValue","needQuote":true,"nodes":[{"content":"GetValue","pos":[0,8]}]},{"pos":[39178,39179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39229,39235],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39295,39296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39408,39416],"content":"GetValue","needQuote":true,"nodes":[{"content":"GetValue","pos":[0,8]}]},{"pos":[39491,39492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39542,39548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39608,39609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39922,39952],"content":"GetValueChangedHandler(Object)","needQuote":true,"nodes":[{"content":"GetValueChangedHandler(Object)","pos":[0,30]}]},{"pos":[40157,40179],"content":"GetValueChangedHandler","needQuote":true,"nodes":[{"content":"GetValueChangedHandler","pos":[0,22]}]},{"pos":[40268,40269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40319,40325],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40385,40386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40512,40534],"content":"GetValueChangedHandler","needQuote":true,"nodes":[{"content":"GetValueChangedHandler","pos":[0,22]}]},{"pos":[40623,40624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40674,40680],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40740,40741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41091,41124],"content":"OnValueChanged(Object, EventArgs)","needQuote":true,"nodes":[{"content":"OnValueChanged(Object, EventArgs)","pos":[0,33]}]},{"pos":[41348,41362],"content":"OnValueChanged","needQuote":true,"nodes":[{"content":"OnValueChanged","pos":[0,14]}]},{"pos":[41443,41444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41494,41500],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41561,41562]},{"pos":[41620,41629],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[41692,41693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41828,41842],"content":"OnValueChanged","needQuote":true,"nodes":[{"content":"OnValueChanged","pos":[0,14]}]},{"pos":[41923,41924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41974,41980],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42041,42042]},{"pos":[42100,42109],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[42172,42173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42542,42582],"content":"RemoveValueChanged(Object, EventHandler)","needQuote":true,"nodes":[{"content":"RemoveValueChanged(Object, EventHandler)","pos":[0,40]}]},{"pos":[42820,42838],"content":"RemoveValueChanged","needQuote":true,"nodes":[{"content":"RemoveValueChanged","pos":[0,18]}]},{"pos":[42923,42924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42974,42980],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43041,43042]},{"pos":[43103,43115],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[43181,43182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43324,43342],"content":"RemoveValueChanged","needQuote":true,"nodes":[{"content":"RemoveValueChanged","pos":[0,18]}]},{"pos":[43427,43428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43478,43484],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43545,43546]},{"pos":[43607,43619],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[43685,43686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44040,44063],"content":"SerializationVisibility","needQuote":true,"nodes":[{"content":"SerializationVisibility","pos":[0,23]}]},{"pos":[44444,44468],"content":"SetValue(Object, Object)","needQuote":true,"nodes":[{"content":"SetValue(Object, Object)","pos":[0,24]}]},{"pos":[44674,44682],"content":"SetValue","needQuote":true,"nodes":[{"content":"SetValue","pos":[0,8]}]},{"pos":[44757,44758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44808,44814],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[44875,44876]},{"pos":[44931,44937],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44997,44998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45124,45132],"content":"SetValue","needQuote":true,"nodes":[{"content":"SetValue","pos":[0,8]}]},{"pos":[45207,45208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45258,45264],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[45325,45326]},{"pos":[45381,45387],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45447,45448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45757,45771],"content":"AttributeArray","needQuote":true,"nodes":[{"content":"AttributeArray","pos":[0,14]}]},{"pos":[46089,46099],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[46403,46411],"content":"Category","needQuote":true,"nodes":[{"content":"Category","pos":[0,8]}]},{"pos":[46712,46723],"content":"Description","needQuote":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[47036,47050],"content":"DesignTimeOnly","needQuote":true,"nodes":[{"content":"DesignTimeOnly","pos":[0,14]}]},{"pos":[47369,47380],"content":"DisplayName","needQuote":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[47690,47701],"content":"IsBrowsable","needQuote":true,"nodes":[{"content":"IsBrowsable","pos":[0,11]}]},{"pos":[48004,48008],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[48298,48310],"content":"NameHashCode","needQuote":true,"nodes":[{"content":"NameHashCode","pos":[0,12]}]},{"pos":[48637,48664],"content":"CreateAttributeCollection()","needQuote":true,"nodes":[{"content":"CreateAttributeCollection()","pos":[0,27]}]},{"pos":[48843,48868],"content":"CreateAttributeCollection","needQuote":true,"nodes":[{"content":"CreateAttributeCollection","pos":[0,25]}]},{"pos":[48958,48959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48986,48987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49099,49124],"content":"CreateAttributeCollection","needQuote":true,"nodes":[{"content":"CreateAttributeCollection","pos":[0,25]}]},{"pos":[49214,49215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49242,49243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49587,49625],"content":"FindMethod(Type, String, Type[], Type)","needQuote":true,"nodes":[{"content":"FindMethod(Type, String, Type[], Type)","pos":[0,38]}]},{"pos":[50052,50062],"content":"FindMethod","needQuote":true,"nodes":[{"content":"FindMethod","pos":[0,10]}]},{"pos":[50137,50138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50186,50190],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[50249,50250]},{"pos":[50305,50311],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[50372,50373]},{"pos":[50426,50430],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[50489,50491]},{"content":",","pos":[50523,50524]},{"pos":[50577,50581],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[50639,50640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50790,50800],"content":"FindMethod","needQuote":true,"nodes":[{"content":"FindMethod","pos":[0,10]}]},{"pos":[50875,50876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50924,50928],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[50987,50988]},{"pos":[51043,51049],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[51110,51111]},{"pos":[51164,51168],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[51226,51228],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[51257,51258]},{"pos":[51311,51315],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[51373,51374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51857,51904],"content":"FindMethod(Type, String, Type[], Type, Boolean)","needQuote":true,"nodes":[{"content":"FindMethod(Type, String, Type[], Type, Boolean)","pos":[0,47]}]},{"pos":[52387,52397],"content":"FindMethod","needQuote":true,"nodes":[{"content":"FindMethod","pos":[0,10]}]},{"pos":[52472,52473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52521,52525],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[52584,52585]},{"pos":[52640,52646],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[52707,52708]},{"pos":[52761,52765],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[52824,52826]},{"content":",","pos":[52858,52859]},{"pos":[52912,52916],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[52975,52976]},{"pos":[53032,53039],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53100,53101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53266,53276],"content":"FindMethod","needQuote":true,"nodes":[{"content":"FindMethod","pos":[0,10]}]},{"pos":[53351,53352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53400,53404],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[53463,53464]},{"pos":[53519,53525],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[53586,53587]},{"pos":[53640,53644],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[53702,53704],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[53733,53734]},{"pos":[53787,53791],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[53850,53851]},{"pos":[53907,53914],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53975,53976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54436,54451],"content":"GetSite(Object)","needQuote":true,"nodes":[{"content":"GetSite(Object)","pos":[0,15]}]},{"pos":[54622,54629],"content":"GetSite","needQuote":true,"nodes":[{"content":"GetSite","pos":[0,7]}]},{"pos":[54701,54702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54752,54758],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54818,54819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54928,54935],"content":"GetSite","needQuote":true,"nodes":[{"content":"GetSite","pos":[0,7]}]},{"pos":[55007,55008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55058,55064],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55124,55125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55349,55359],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[55454,55462],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[55531,55532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55559,55560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55630,55638],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[55707,55708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55735,55736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55933,55955],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[56103,56109],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56176,56177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56227,56233],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[56294,56295]},{"pos":[56350,56356],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56416,56417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56514,56520],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56587,56588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56638,56644],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[56705,56706]},{"pos":[56761,56767],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56827,56828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57073,57104],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[57270,57285],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[57361,57362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57412,57418],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57479,57480]},{"pos":[57535,57541],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57601,57602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57708,57723],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[57799,57800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57850,57856],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57917,57918]},{"pos":[57973,57979],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58039,58040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58266,58275],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[58368,58375],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[58443,58444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58471,58472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58541,58548],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[58616,58617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58644,58645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58820,58837],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[58946,58961],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[59037,59038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59065,59066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59143,59158],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[59234,59235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59262,59263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59408,59414],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[59543,59547],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59686,59692],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59805,59816],"content":"Attribute[]","needQuote":true,"nodes":[{"content":"Attribute[]","pos":[0,11]}]},{"pos":[59956,59965],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[60029,60031]},{"pos":[60099,60108],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[60171,60173],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[60391,60404],"content":"ComponentType","needQuote":true,"nodes":[{"content":"ComponentType","pos":[0,13]}]},{"pos":[60729,60739],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[60984,60991],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[61213,61225],"content":"PropertyType","needQuote":true,"nodes":[{"content":"PropertyType","pos":[0,12]}]},{"pos":[61564,61585],"content":"CanResetValue(Object)","needQuote":true,"nodes":[{"content":"CanResetValue(Object)","pos":[0,21]}]},{"pos":[61772,61785],"content":"CanResetValue","needQuote":true,"nodes":[{"content":"CanResetValue","pos":[0,13]}]},{"pos":[61865,61866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61916,61922],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61982,61983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62100,62113],"content":"CanResetValue","needQuote":true,"nodes":[{"content":"CanResetValue","pos":[0,13]}]},{"pos":[62193,62194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62244,62250],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62310,62311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62622,62640],"content":"ResetValue(Object)","needQuote":true,"nodes":[{"content":"ResetValue(Object)","pos":[0,18]}]},{"pos":[62821,62831],"content":"ResetValue","needQuote":true,"nodes":[{"content":"ResetValue","pos":[0,10]}]},{"pos":[62908,62909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62959,62965],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63025,63026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63140,63150],"content":"ResetValue","needQuote":true,"nodes":[{"content":"ResetValue","pos":[0,10]}]},{"pos":[63227,63228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63278,63284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63344,63345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63660,63688],"content":"ShouldSerializeValue(Object)","needQuote":true,"nodes":[{"content":"ShouldSerializeValue(Object)","pos":[0,28]}]},{"pos":[63889,63909],"content":"ShouldSerializeValue","needQuote":true,"nodes":[{"content":"ShouldSerializeValue","pos":[0,20]}]},{"pos":[63996,63997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64047,64053],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64113,64114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64238,64258],"content":"ShouldSerializeValue","needQuote":true,"nodes":[{"content":"ShouldSerializeValue","pos":[0,20]}]},{"pos":[64345,64346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64396,64402],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64462,64463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  id: TypeConverter.SimplePropertyDescriptor\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  langs:\n  - csharp\n  - vb\n  name: TypeConverter.SimplePropertyDescriptor\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SimplePropertyDescriptor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 428\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Represents an <strong>abstract</strong> class that provides properties for objects that do not have properties.</p>\\n\"\n  syntax:\n    content: 'protected abstract class SimplePropertyDescriptor : PropertyDescriptor'\n    content.vb: >-\n      Protected MustInherit Class SimplePropertyDescriptor\n          Inherits PropertyDescriptor\n  seealso:\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  inheritance:\n  - System.Object\n  - System.ComponentModel.MemberDescriptor\n  - System.ComponentModel.PropertyDescriptor\n  inheritedMembers:\n  - System.ComponentModel.PropertyDescriptor.Converter\n  - System.ComponentModel.PropertyDescriptor.IsLocalizable\n  - System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  - System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  - System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  - System.ComponentModel.PropertyDescriptor.GetHashCode\n  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  - System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  - System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  - System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  - System.ComponentModel.MemberDescriptor.AttributeArray\n  - System.ComponentModel.MemberDescriptor.Attributes\n  - System.ComponentModel.MemberDescriptor.Category\n  - System.ComponentModel.MemberDescriptor.Description\n  - System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  - System.ComponentModel.MemberDescriptor.DisplayName\n  - System.ComponentModel.MemberDescriptor.IsBrowsable\n  - System.ComponentModel.MemberDescriptor.Name\n  - System.ComponentModel.MemberDescriptor.NameHashCode\n  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - protected\n  - abstract\n  - class\n  modifiers.vb:\n  - Protected\n  - MustInherit\n  - Class\n  nameWithType: TypeConverter.SimplePropertyDescriptor\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)\n  id: '#ctor(System.Type,System.String,System.Type)'\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: SimplePropertyDescriptor(Type, String, Type)\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.SimplePropertyDescriptor(System.Type, System.String, System.Type)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 438\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected SimplePropertyDescriptor(Type componentType, string name, Type propertyType)\n    content.vb: Protected Sub New(componentType As Type, name As String, propertyType As Type)\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the type of component to which this property descriptor binds. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property. </p>\\n\"\n    - id: propertyType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the data type for this property. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: TypeConverter.SimplePropertyDescriptor.SimplePropertyDescriptor(Type, String, Type)\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])\n  id: '#ctor(System.Type,System.String,System.Type,System.Attribute[])'\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: SimplePropertyDescriptor(Type, String, Type, Attribute[])\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.SimplePropertyDescriptor(System.Type, System.String, System.Type, System.Attribute[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 447\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected SimplePropertyDescriptor(Type componentType, string name, Type propertyType, Attribute[] attributes)\n    content.vb: Protected Sub New(componentType As Type, name As String, propertyType As Type, attributes As Attribute())\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the type of component to which this property descriptor binds. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property. </p>\\n\"\n    - id: propertyType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the data type for this property. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array with the attributes to associate with the property. </p>\\n\"\n  seealso:\n  - type: System.Attribute\n    commentId: T:System.Attribute\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.SimplePropertyDescriptor(System.Type, System.String, System.Type, System.Attribute())\n  name.vb: SimplePropertyDescriptor(Type, String, Type, Attribute())\n  nameWithType: TypeConverter.SimplePropertyDescriptor.SimplePropertyDescriptor(Type, String, Type, Attribute[])\n  nameWithType.vb: TypeConverter.SimplePropertyDescriptor.SimplePropertyDescriptor(Type, String, Type, Attribute())\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  commentId: P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  id: ComponentType\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: ComponentType\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ComponentType\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 456\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the type of component to which this property description binds.</p>\\n\"\n  syntax:\n    content: public override Type ComponentType { get; }\n    content.vb: Public Overrides ReadOnly Property ComponentType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the type of component to which this property binds.</p>\\n\"\n  overridden: System.ComponentModel.PropertyDescriptor.ComponentType\n  seealso:\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ComponentType\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  commentId: P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  id: IsReadOnly\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsReadOnly\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 467\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a value indicating whether this property is read-only.</p>\\n\"\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    content.vb: Public Overrides ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the property is read-only; <strong>false</strong> if the property is read/write.</p>\\n\"\n  overridden: System.ComponentModel.PropertyDescriptor.IsReadOnly\n  seealso:\n  - type: System.ComponentModel.ReadOnlyAttribute\n    commentId: T:System.ComponentModel.ReadOnlyAttribute\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeConverter.SimplePropertyDescriptor.IsReadOnly\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  commentId: P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  id: PropertyType\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: PropertyType\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PropertyType\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 478\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the type of the property.</p>\\n\"\n  syntax:\n    content: public override Type PropertyType { get; }\n    content.vb: Public Overrides ReadOnly Property PropertyType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the type of the property.</p>\\n\"\n  overridden: System.ComponentModel.PropertyDescriptor.PropertyType\n  seealso:\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeConverter.SimplePropertyDescriptor.PropertyType\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  id: CanResetValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CanResetValue(Object)\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanResetValue\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 491\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns whether resetting the component changes the value of the component.</p>\\n\"\n  syntax:\n    content: public override bool CanResetValue(object component)\n    content.vb: Public Overrides Function CanResetValue(component As Object) As Boolean\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component to test for reset capability. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if resetting the component changes the value of the component; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n  seealso:\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeConverter.SimplePropertyDescriptor.CanResetValue(Object)\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  id: ResetValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: ResetValue(Object)\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetValue\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 504\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Resets the value for this property of the component.</p>\\n\"\n  syntax:\n    content: public override void ResetValue(object component)\n    content.vb: Public Overrides Sub ResetValue(component As Object)\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component with the property value to be reset. </p>\\n\"\n  overridden: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n  seealso:\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ResetValue(Object)\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  id: ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  - vb\n  name: ShouldSerializeValue(Object)\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ShouldSerializeValue\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\n    startLine: 516\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns whether the value of this property can persist.</p>\\n\"\n  syntax:\n    content: public override bool ShouldSerializeValue(object component)\n    content.vb: Public Overrides Function ShouldSerializeValue(component As Object) As Boolean\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component with the property that is to be examined for persistence. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of the property can persist; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n  seealso:\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n    commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(Object)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.MemberDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: MemberDescriptor\n  fullName: System.ComponentModel.MemberDescriptor\n  nameWithType: MemberDescriptor\n  commentId: T:System.ComponentModel.MemberDescriptor\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  commentId: T:System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.PropertyDescriptor.Converter\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: Converter\n  fullName: System.ComponentModel.PropertyDescriptor.Converter\n  nameWithType: PropertyDescriptor.Converter\n  commentId: P:System.ComponentModel.PropertyDescriptor.Converter\n- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: IsLocalizable\n  fullName: System.ComponentModel.PropertyDescriptor.IsLocalizable\n  nameWithType: PropertyDescriptor.IsLocalizable\n  commentId: P:System.ComponentModel.PropertyDescriptor.IsLocalizable\n- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SupportsChangeEvents\n  fullName: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  nameWithType: PropertyDescriptor.SupportsChangeEvents\n  commentId: P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: AddValueChanged(Object, EventHandler)\n  fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object, System.EventHandler)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n    name: AddValueChanged\n    fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.EventHandler\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n    name: AddValueChanged\n    fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.EventHandler\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.AddValueChanged(Object, EventHandler)\n  commentId: M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: CreateInstance(Type)\n  fullName: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n    name: CreateInstance\n    fullName: System.ComponentModel.PropertyDescriptor.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n    name: CreateInstance\n    fullName: System.ComponentModel.PropertyDescriptor.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.CreateInstance(Type)\n  commentId: M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n    name: Equals\n    fullName: System.ComponentModel.PropertyDescriptor.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n    name: Equals\n    fullName: System.ComponentModel.PropertyDescriptor.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.Equals(Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: FillAttributes(IList)\n  fullName: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n    name: FillAttributes\n    fullName: System.ComponentModel.PropertyDescriptor.FillAttributes\n  - name: (\n    fullName: (\n  - uid: System.Collections.IList\n    name: IList\n    fullName: System.Collections.IList\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n    name: FillAttributes\n    fullName: System.ComponentModel.PropertyDescriptor.FillAttributes\n  - name: (\n    fullName: (\n  - uid: System.Collections.IList\n    name: IList\n    fullName: System.Collections.IList\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.FillAttributes(IList)\n  commentId: M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties()\n  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties()\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetChildProperties()\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetChildProperties(Attribute[])\n  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  fullname.vb: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute())\n  name.vb: GetChildProperties(Attribute())\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])\n  nameWithType.vb: PropertyDescriptor.GetChildProperties(Attribute())\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetChildProperties(Object)\n  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetChildProperties(Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetChildProperties(Object, Attribute[])\n  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object, System.Attribute[])\n  fullname.vb: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object, System.Attribute())\n  name.vb: GetChildProperties(Object, Attribute())\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n    name: GetChildProperties\n    fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetChildProperties(Object, Attribute[])\n  nameWithType.vb: PropertyDescriptor.GetChildProperties(Object, Attribute())\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetEditor(Type)\n  fullName: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n    name: GetEditor\n    fullName: System.ComponentModel.PropertyDescriptor.GetEditor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n    name: GetEditor\n    fullName: System.ComponentModel.PropertyDescriptor.GetEditor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetEditor(Type)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n- uid: System.ComponentModel.PropertyDescriptor.GetHashCode\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ComponentModel.PropertyDescriptor.GetHashCode()\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetHashCode\n    name: GetHashCode\n    fullName: System.ComponentModel.PropertyDescriptor.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetHashCode\n    name: GetHashCode\n    fullName: System.ComponentModel.PropertyDescriptor.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetHashCode()\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetHashCode\n- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetInvocationTarget(Type, Object)\n  fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n    name: GetInvocationTarget\n    fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n    name: GetInvocationTarget\n    fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetInvocationTarget(Type, Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetTypeFromName(String)\n  fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n    name: GetTypeFromName\n    fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n    name: GetTypeFromName\n    fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetTypeFromName(String)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetValue(Object)\n  fullName: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n    name: GetValue\n    fullName: System.ComponentModel.PropertyDescriptor.GetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n    name: GetValue\n    fullName: System.ComponentModel.PropertyDescriptor.GetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetValue(Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: GetValueChangedHandler(Object)\n  fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n    name: GetValueChangedHandler\n    fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n    name: GetValueChangedHandler\n    fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: OnValueChanged(Object, EventArgs)\n  fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object, System.EventArgs)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n    name: OnValueChanged\n    fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.EventArgs\n    name: EventArgs\n    fullName: System.EventArgs\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n    name: OnValueChanged\n    fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.EventArgs\n    name: EventArgs\n    fullName: System.EventArgs\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.OnValueChanged(Object, EventArgs)\n  commentId: M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: RemoveValueChanged(Object, EventHandler)\n  fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object, System.EventHandler)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n    name: RemoveValueChanged\n    fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.EventHandler\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n    name: RemoveValueChanged\n    fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.EventHandler\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.RemoveValueChanged(Object, EventHandler)\n  commentId: M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SerializationVisibility\n  fullName: System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  nameWithType: PropertyDescriptor.SerializationVisibility\n  commentId: P:System.ComponentModel.PropertyDescriptor.SerializationVisibility\n- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: SetValue(Object, Object)\n  fullName: System.ComponentModel.PropertyDescriptor.SetValue(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n    name: SetValue\n    fullName: System.ComponentModel.PropertyDescriptor.SetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n    name: SetValue\n    fullName: System.ComponentModel.PropertyDescriptor.SetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.SetValue(Object, Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n- uid: System.ComponentModel.MemberDescriptor.AttributeArray\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: AttributeArray\n  fullName: System.ComponentModel.MemberDescriptor.AttributeArray\n  nameWithType: MemberDescriptor.AttributeArray\n  commentId: P:System.ComponentModel.MemberDescriptor.AttributeArray\n- uid: System.ComponentModel.MemberDescriptor.Attributes\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Attributes\n  fullName: System.ComponentModel.MemberDescriptor.Attributes\n  nameWithType: MemberDescriptor.Attributes\n  commentId: P:System.ComponentModel.MemberDescriptor.Attributes\n- uid: System.ComponentModel.MemberDescriptor.Category\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Category\n  fullName: System.ComponentModel.MemberDescriptor.Category\n  nameWithType: MemberDescriptor.Category\n  commentId: P:System.ComponentModel.MemberDescriptor.Category\n- uid: System.ComponentModel.MemberDescriptor.Description\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Description\n  fullName: System.ComponentModel.MemberDescriptor.Description\n  nameWithType: MemberDescriptor.Description\n  commentId: P:System.ComponentModel.MemberDescriptor.Description\n- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: DesignTimeOnly\n  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  nameWithType: MemberDescriptor.DesignTimeOnly\n  commentId: P:System.ComponentModel.MemberDescriptor.DesignTimeOnly\n- uid: System.ComponentModel.MemberDescriptor.DisplayName\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: DisplayName\n  fullName: System.ComponentModel.MemberDescriptor.DisplayName\n  nameWithType: MemberDescriptor.DisplayName\n  commentId: P:System.ComponentModel.MemberDescriptor.DisplayName\n- uid: System.ComponentModel.MemberDescriptor.IsBrowsable\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: IsBrowsable\n  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable\n  nameWithType: MemberDescriptor.IsBrowsable\n  commentId: P:System.ComponentModel.MemberDescriptor.IsBrowsable\n- uid: System.ComponentModel.MemberDescriptor.Name\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Name\n  fullName: System.ComponentModel.MemberDescriptor.Name\n  nameWithType: MemberDescriptor.Name\n  commentId: P:System.ComponentModel.MemberDescriptor.Name\n- uid: System.ComponentModel.MemberDescriptor.NameHashCode\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: NameHashCode\n  fullName: System.ComponentModel.MemberDescriptor.NameHashCode\n  nameWithType: MemberDescriptor.NameHashCode\n  commentId: P:System.ComponentModel.MemberDescriptor.NameHashCode\n- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: CreateAttributeCollection()\n  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()\n  spec.csharp:\n  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n    name: CreateAttributeCollection\n    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n    name: CreateAttributeCollection\n    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberDescriptor.CreateAttributeCollection()\n  commentId: M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: true\n  name: FindMethod(Type, String, Type[], Type)\n  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type)\n  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type)\n  name.vb: FindMethod(Type, String, Type(), Type)\n  spec.csharp:\n  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n    name: FindMethod\n    fullName: System.ComponentModel.MemberDescriptor.FindMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n    name: FindMethod\n    fullName: System.ComponentModel.MemberDescriptor.FindMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type)\n  nameWithType.vb: MemberDescriptor.FindMethod(Type, String, Type(), Type)\n  commentId: M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: true\n  name: FindMethod(Type, String, Type[], Type, Boolean)\n  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type, System.Boolean)\n  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type, System.Boolean)\n  name.vb: FindMethod(Type, String, Type(), Type, Boolean)\n  spec.csharp:\n  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n    name: FindMethod\n    fullName: System.ComponentModel.MemberDescriptor.FindMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n    name: FindMethod\n    fullName: System.ComponentModel.MemberDescriptor.FindMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type, Boolean)\n  nameWithType.vb: MemberDescriptor.FindMethod(Type, String, Type(), Type, Boolean)\n  commentId: M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: true\n  name: GetSite(Object)\n  fullName: System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n    name: GetSite\n    fullName: System.ComponentModel.MemberDescriptor.GetSite\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n    name: GetSite\n    fullName: System.ComponentModel.MemberDescriptor.GetSite\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberDescriptor.GetSite(Object)\n  commentId: M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Attribute[]\n  name: Attribute[]\n  fullName: System.Attribute[]\n  fullname.vb: System.Attribute()\n  name.vb: Attribute()\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Attribute[]\n  nameWithType.vb: Attribute()\n- uid: System.ComponentModel.PropertyDescriptor.ComponentType\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: ComponentType\n  fullName: System.ComponentModel.PropertyDescriptor.ComponentType\n  nameWithType: PropertyDescriptor.ComponentType\n  commentId: P:System.ComponentModel.PropertyDescriptor.ComponentType\n- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.ComponentModel.PropertyDescriptor.IsReadOnly\n  nameWithType: PropertyDescriptor.IsReadOnly\n  commentId: P:System.ComponentModel.PropertyDescriptor.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ComponentModel.PropertyDescriptor.PropertyType\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: PropertyType\n  fullName: System.ComponentModel.PropertyDescriptor.PropertyType\n  nameWithType: PropertyDescriptor.PropertyType\n  commentId: P:System.ComponentModel.PropertyDescriptor.PropertyType\n- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: CanResetValue(Object)\n  fullName: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n    name: CanResetValue\n    fullName: System.ComponentModel.PropertyDescriptor.CanResetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n    name: CanResetValue\n    fullName: System.ComponentModel.PropertyDescriptor.CanResetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.CanResetValue(Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: ResetValue(Object)\n  fullName: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n    name: ResetValue\n    fullName: System.ComponentModel.PropertyDescriptor.ResetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n    name: ResetValue\n    fullName: System.ComponentModel.PropertyDescriptor.ResetValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.ResetValue(Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: true\n  name: ShouldSerializeValue(Object)\n  fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n    name: ShouldSerializeValue\n    fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n    name: ShouldSerializeValue\n    fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: PropertyDescriptor.ShouldSerializeValue(Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n"}