{"nodes":[{"pos":[933,955],"content":"AsyncTaskMethodBuilder","needQuote":true,"nodes":[{"content":"AsyncTaskMethodBuilder","pos":[0,22]}]},{"pos":[2718,2722],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The task for this builder.&lt;/p&gt;\\n","pos":[3437,3474],"source":"\\n<p>The task for this builder.</p>\\n"},{"content":"\\n&lt;p&gt;The builder is not initialized.&lt;/p&gt;\\n","pos":[3601,3643],"source":"\\n<p>The builder is not initialized.</p>\\n"},{"pos":[4099,4173],"content":"AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)","needQuote":true,"nodes":[{"content":"AwaitOnCompleted&lt;TAwaiter, TStateMachine&gt;(ref TAwaiter, ref TStateMachine)","pos":[0,74],"source":"AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)"}]},{"content":"\\n&lt;p&gt;The awaiter.&lt;/p&gt;\\n","pos":[5304,5327],"source":"\\n<p>The awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The state machine.&lt;/p&gt;\\n","pos":[5402,5431],"source":"\\n<p>The state machine.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the awaiter.&lt;/p&gt;\\n","pos":[5492,5527],"source":"\\n<p>The type of the awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the state machine.&lt;/p&gt;\\n","pos":[5573,5614],"source":"\\n<p>The type of the state machine.</p>\\n"},{"pos":[6506,6586],"content":"AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)","needQuote":true,"nodes":[{"content":"AwaitUnsafeOnCompleted&lt;TAwaiter, TStateMachine&gt;(ref TAwaiter, ref TStateMachine)","pos":[0,80],"source":"AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)"}]},{"content":"\\n&lt;p&gt;The awaiter.&lt;/p&gt;\\n","pos":[7812,7835],"source":"\\n<p>The awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The state machine.&lt;/p&gt;\\n","pos":[7910,7939],"source":"\\n<p>The state machine.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the awaiter.&lt;/p&gt;\\n","pos":[8000,8035],"source":"\\n<p>The type of the awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the state machine.&lt;/p&gt;\\n","pos":[8081,8122],"source":"\\n<p>The type of the state machine.</p>\\n"},{"pos":[8948,8956],"content":"Create()","needQuote":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A new instance of the builder.&lt;/p&gt;\\n","pos":[9838,9879],"source":"\\n<p>A new instance of the builder.</p>\\n"},{"pos":[10340,10363],"content":"SetException(Exception)","needQuote":true,"nodes":[{"content":"SetException(Exception)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The exception to bind to the task.&lt;/p&gt;\\n","pos":[11174,11219],"source":"\\n<p>The exception to bind to the task.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;exception&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11338,11395],"source":"\\n<p>\\n<em>exception</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The task has already completed.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The builder is not initialized.&lt;/p&gt;\\n","pos":[11508,11603],"source":"\\n<p>The task has already completed.</p>\\n<p>-or-</p>\\n<p>The builder is not initialized.</p>\\n"},{"pos":[11994,12005],"content":"SetResult()","needQuote":true,"nodes":[{"content":"SetResult()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The task has already completed.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The builder is not initialized.&lt;/p&gt;\\n","pos":[12755,12850],"source":"\\n<p>The task has already completed.</p>\\n<p>-or-</p>\\n<p>The builder is not initialized.</p>\\n"},{"pos":[13403,13438],"content":"SetStateMachine(IAsyncStateMachine)","needQuote":true,"nodes":[{"content":"SetStateMachine(IAsyncStateMachine)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The state machine instance to associate with the builder.&lt;/p&gt;\\n","pos":[14341,14409],"source":"\\n<p>The state machine instance to associate with the builder.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stateMachine&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[14528,14588],"source":"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The state machine was previously set.&lt;/p&gt;\\n","pos":[14701,14749],"source":"\\n<p>The state machine was previously set.</p>\\n"},{"pos":[15167,15206],"content":"Start<TStateMachine>(ref TStateMachine)","needQuote":true,"nodes":[{"content":"Start&lt;TStateMachine&gt;(ref TStateMachine)","pos":[0,39],"source":"Start<TStateMachine>(ref TStateMachine)"}]},{"content":"\\n&lt;p&gt;The state machine instance, passed by reference.&lt;/p&gt;\\n","pos":[16254,16313],"source":"\\n<p>The state machine instance, passed by reference.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the state machine.&lt;/p&gt;\\n","pos":[16379,16420],"source":"\\n<p>The type of the state machine.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stateMachine&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[16539,16599],"source":"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n"},{"pos":[17075,17106],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[17346,17360],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17485,17491],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17540,17541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17591,17597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17657,17658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17744,17750],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17799,17800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17850,17856],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17916,17917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18120,18133],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18240,18251],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18305,18306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18333,18334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18410,18421],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18475,18476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18503,18504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18693,18703],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[18804,18812],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[18863,18864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18891,18892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18965,18973],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19024,19025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19052,19053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19256,19278],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19426,19432],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19499,19500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19550,19556],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19617,19618]},{"pos":[19673,19679],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19739,19740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19837,19843],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19910,19911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19961,19967],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20028,20029]},{"pos":[20084,20090],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20150,20151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20396,20427],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[20593,20608],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20684,20685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20735,20741],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20802,20803]},{"pos":[20858,20864],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20924,20925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21031,21046],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21122,21123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21173,21179],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21240,21241]},{"pos":[21296,21302],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21362,21363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21589,21598],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[21691,21698],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21766,21767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21794,21795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21864,21871],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21939,21940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21967,21968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22124,22133],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[22287,22293],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22414,22420],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[22581,22585],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[22748,22770],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[22934,22942],"content":"TAwaiter","needQuote":true,"nodes":[{"content":"TAwaiter","pos":[0,8]}]},{"pos":[23076,23089],"content":"TStateMachine","needQuote":true,"nodes":[{"content":"TStateMachine","pos":[0,13]}]},{"pos":[23221,23229],"content":"TAwaiter","needQuote":true,"nodes":[{"content":"TAwaiter","pos":[0,8]}]},{"pos":[23325,23338],"content":"TStateMachine","needQuote":true,"nodes":[{"content":"TStateMachine","pos":[0,13]}]},{"pos":[23527,23549],"content":"AsyncTaskMethodBuilder","needQuote":true,"nodes":[{"content":"AsyncTaskMethodBuilder","pos":[0,22]}]},{"pos":[23795,23804],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[24020,24038],"content":"IAsyncStateMachine","needQuote":true,"nodes":[{"content":"IAsyncStateMachine","pos":[0,18]}]},{"pos":[24288,24313],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[24513,24534],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  commentId: T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  id: AsyncTaskMethodBuilder\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)\n  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task\n  langs:\n  - csharp\n  - vb\n  name: AsyncTaskMethodBuilder\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AsyncTaskMethodBuilder\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 275\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Represents a builder for asynchronous methods that return a task.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      public struct AsyncTaskMethodBuilder\n    content.vb: >-\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      Public Structure AsyncTaskMethodBuilder\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: AsyncTaskMethodBuilder\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task\n  commentId: P:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task\n  id: Task\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Task\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Task\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 366\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the task for this builder.</p>\\n\"\n  syntax:\n    content: public Task Task { get; }\n    content.vb: Public ReadOnly Property Task As Task\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>The task for this builder.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The builder is not initialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AsyncTaskMethodBuilder.Task\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)\n  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)\n  id: AwaitOnCompleted``2(``0@,``1@)\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AwaitOnCompleted\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 340\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Schedules the state machine to proceed to the next action when the specified awaiter completes.</p>\\n\"\n  syntax:\n    content: 'public void AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : INotifyCompletion where TStateMachine : IAsyncStateMachine'\n    content.vb: Public Sub AwaitOnCompleted(Of TAwaiter As INotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)\n    parameters:\n    - id: awaiter\n      type: '{TAwaiter}'\n      description: \"\\n<p>The awaiter.</p>\\n\"\n    - id: stateMachine\n      type: '{TStateMachine}'\n      description: \"\\n<p>The state machine.</p>\\n\"\n    typeParameters:\n    - id: TAwaiter\n      description: \"\\n<p>The type of the awaiter.</p>\\n\"\n    - id: TStateMachine\n      description: \"\\n<p>The type of the state machine.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  name.vb: AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  nameWithType: AsyncTaskMethodBuilder.AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  nameWithType.vb: AsyncTaskMethodBuilder.AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)\n  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)\n  id: AwaitUnsafeOnCompleted``2(``0@,``1@)\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AwaitUnsafeOnCompleted\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 355\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Schedules the state machine to proceed to the next action when the specified awaiter completes. This method can be called from partially trusted code.</p>\\n\"\n  syntax:\n    content: 'public void AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : ICriticalNotifyCompletion where TStateMachine : IAsyncStateMachine'\n    content.vb: Public Sub AwaitUnsafeOnCompleted(Of TAwaiter As ICriticalNotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)\n    parameters:\n    - id: awaiter\n      type: '{TAwaiter}'\n      description: \"\\n<p>The awaiter.</p>\\n\"\n    - id: stateMachine\n      type: '{TStateMachine}'\n      description: \"\\n<p>The state machine.</p>\\n\"\n    typeParameters:\n    - id: TAwaiter\n      description: \"\\n<p>The type of the awaiter.</p>\\n\"\n    - id: TStateMachine\n      description: \"\\n<p>The type of the state machine.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  name.vb: AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  nameWithType: AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  nameWithType.vb: AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create\n  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create\n  id: Create\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Create()\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Create\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 286\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Creates an instance of the <xref href=\\\"System.Runtime.CompilerServices.AsyncTaskMethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public static AsyncTaskMethodBuilder Create()\n    content.vb: Public Shared Function Create As AsyncTaskMethodBuilder\n    return:\n      type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n      description: \"\\n<p>A new instance of the builder.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: AsyncTaskMethodBuilder.Create()\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)\n  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)\n  id: SetException(System.Exception)\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetException(Exception)\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetException\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 389\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Marks the task as failed and binds the specified exception to the task.</p>\\n\"\n  syntax:\n    content: public void SetException(Exception exception)\n    content.vb: Public Sub SetException(exception As Exception)\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: \"\\n<p>The exception to bind to the task.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>exception</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The task has already completed.</p>\\n<p>-or-</p>\\n<p>The builder is not initialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncTaskMethodBuilder.SetException(Exception)\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult\n  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult\n  id: SetResult\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetResult()\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetResult\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 374\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Marks the task as successfully completed.</p>\\n\"\n  syntax:\n    content: public void SetResult()\n    content.vb: Public Sub SetResult\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The task has already completed.</p>\\n<p>-or-</p>\\n<p>The builder is not initialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncTaskMethodBuilder.SetResult()\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  id: SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetStateMachine(IAsyncStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetStateMachine\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 328\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Associates the builder with the specified state machine.</p>\\n\"\n  syntax:\n    content: public void SetStateMachine(IAsyncStateMachine stateMachine)\n    content.vb: Public Sub SetStateMachine(stateMachine As IAsyncStateMachine)\n    parameters:\n    - id: stateMachine\n      type: System.Runtime.CompilerServices.IAsyncStateMachine\n      description: \"\\n<p>The state machine instance to associate with the builder.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The state machine was previously set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncTaskMethodBuilder.SetStateMachine(IAsyncStateMachine)\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)\n  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)\n  id: Start``1(``0@)\n  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Start<TStateMachine>(ref TStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<TStateMachine>(ref TStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Start\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 296\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Begins running the builder with the associated state machine.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [DebuggerStepThrough]\n\n      public void Start<TStateMachine>(ref TStateMachine stateMachine)where TStateMachine : IAsyncStateMachine\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <DebuggerStepThrough>\n\n      Public Sub Start(Of TStateMachine As IAsyncStateMachine)(ByRef stateMachine As TStateMachine)\n    parameters:\n    - id: stateMachine\n      type: '{TStateMachine}'\n      description: \"\\n<p>The state machine instance, passed by reference.</p>\\n\"\n    typeParameters:\n    - id: TStateMachine\n      description: \"\\n<p>The type of the state machine.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start(Of TStateMachine)(ByRef TStateMachine)\n  name.vb: Start(Of TStateMachine)(ByRef TStateMachine)\n  nameWithType: AsyncTaskMethodBuilder.Start<TStateMachine>(ref TStateMachine)\n  nameWithType.vb: AsyncTaskMethodBuilder.Start(Of TStateMachine)(ByRef TStateMachine)\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  nameWithType: Task\n  commentId: T:System.Threading.Tasks.Task\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: '{TAwaiter}'\n  definition: TAwaiter\n  name: TAwaiter\n  fullName: TAwaiter\n  nameWithType: TAwaiter\n  commentId: '!:TAwaiter'\n- uid: '{TStateMachine}'\n  definition: TStateMachine\n  name: TStateMachine\n  fullName: TStateMachine\n  nameWithType: TStateMachine\n  commentId: '!:TStateMachine'\n- uid: TAwaiter\n  isExternal: false\n  name: TAwaiter\n  fullName: TAwaiter\n  nameWithType: TAwaiter\n- uid: TStateMachine\n  isExternal: false\n  name: TStateMachine\n  fullName: TStateMachine\n  nameWithType: TStateMachine\n- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: AsyncTaskMethodBuilder\n  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n  nameWithType: AsyncTaskMethodBuilder\n  commentId: T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.CompilerServices.IAsyncStateMachine\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: IAsyncStateMachine\n  fullName: System.Runtime.CompilerServices.IAsyncStateMachine\n  nameWithType: IAsyncStateMachine\n  commentId: T:System.Runtime.CompilerServices.IAsyncStateMachine\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}