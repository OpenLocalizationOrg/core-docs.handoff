{"nodes":[{"pos":[288,312],"content":"IDbColumnSchemaGenerator","needQuote":true,"nodes":[{"content":"IDbColumnSchemaGenerator","pos":[0,24]}]},{"pos":[1271,1288],"content":"GetColumnSchema()","needQuote":true,"nodes":[{"content":"GetColumnSchema()","pos":[0,17]}]},{"pos":[2124,2142],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[2444,2472],"content":"ReadOnlyCollection<DbColumn>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;DbColumn&gt;","pos":[0,28],"source":"ReadOnlyCollection<DbColumn>"}]},{"pos":[2886,2904],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[3037,3038],"content":"<","needQuote":true,"nodes":[]},{"pos":[3122,3130],"content":"DbColumn","needQuote":true,"nodes":[{"content":"DbColumn","pos":[0,8]}]},{"pos":[3336,3354],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[3488,3491]},{"pos":[3587,3595],"content":"DbColumn","needQuote":true,"nodes":[{"content":"DbColumn","pos":[0,8]}]},{"pos":[3675,3676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3894,3915],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[4256,4274],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[4386,4387],"content":"<","needQuote":true,"nodes":[]},{"pos":[4434,4435],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4608,4626],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[4739,4742]},{"pos":[4801,4802],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4849,4850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5020,5050],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]}],"content":"items:\n- uid: System.Data.Common.IDbColumnSchemaGenerator\n  commentId: T:System.Data.Common.IDbColumnSchemaGenerator\n  id: IDbColumnSchemaGenerator\n  parent: System.Data.Common\n  children:\n  - System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema\n  langs:\n  - csharp\n  - vb\n  name: IDbColumnSchemaGenerator\n  nameWithType: IDbColumnSchemaGenerator\n  fullName: System.Data.Common.IDbColumnSchemaGenerator\n  type: Interface\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/IDbColumnSchemaGenerator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IDbColumnSchemaGenerator\n    path: src/System.Data.Common/src/System/Data/Common/IDbColumnSchemaGenerator.cs\n    startLine: 6\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public interface IDbColumnSchemaGenerator\n    content.vb: Public Interface IDbColumnSchemaGenerator\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n- uid: System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema\n  commentId: M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema\n  id: GetColumnSchema\n  parent: System.Data.Common.IDbColumnSchemaGenerator\n  langs:\n  - csharp\n  - vb\n  name: GetColumnSchema()\n  nameWithType: IDbColumnSchemaGenerator.GetColumnSchema()\n  fullName: System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/IDbColumnSchemaGenerator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetColumnSchema\n    path: src/System.Data.Common/src/System/Data/Common/IDbColumnSchemaGenerator.cs\n    startLine: 8\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: ReadOnlyCollection<DbColumn> GetColumnSchema()\n    content.vb: Function GetColumnSchema As ReadOnlyCollection(Of DbColumn)\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}\nreferences:\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  nameWithType: System.Data.Common\n  fullName: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<DbColumn>\n  nameWithType: ReadOnlyCollection<DbColumn>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Common.DbColumn>\n  nameWithType.vb: ReadOnlyCollection(Of DbColumn)\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Data.Common.DbColumn)\n  name.vb: ReadOnlyCollection(Of DbColumn)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.DbColumn\n    name: DbColumn\n    nameWithType: DbColumn\n    fullName: System.Data.Common.DbColumn\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Data.Common.DbColumn\n    name: DbColumn\n    nameWithType: DbColumn\n    fullName: System.Data.Common.DbColumn\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n"}