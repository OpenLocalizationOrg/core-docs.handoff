{"nodes":[{"pos":[527,541],"content":"ChannelBinding","needQuote":true,"nodes":[{"content":"ChannelBinding","pos":[0,14]}]},{"pos":[3219,3235],"content":"ChannelBinding()","needQuote":true,"nodes":[{"content":"ChannelBinding()","pos":[0,16]}]},{"pos":[4432,4455],"content":"ChannelBinding(Boolean)","needQuote":true,"nodes":[{"content":"ChannelBinding(Boolean)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.&lt;/p&gt;\\n","pos":[5340,5581],"source":"\\n<p>A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.</p>\\n"},{"pos":[5985,5989],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[7472,7521],"content":"System.Security.Authentication.ExtendedProtection","needQuote":true,"nodes":[{"content":"System.Security.Authentication.ExtendedProtection","pos":[0,49]}]},{"pos":[7781,7787],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8006,8029],"content":"CriticalFinalizerObject","needQuote":true,"nodes":[{"content":"CriticalFinalizerObject","pos":[0,23]}]},{"pos":[8335,8345],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[8555,8566],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[8796,8802],"content":"handle","needQuote":true,"nodes":[{"content":"handle","pos":[0,6]}]},{"pos":[9115,9132],"content":"SetHandle(IntPtr)","needQuote":true,"nodes":[{"content":"SetHandle(IntPtr)","pos":[0,17]}]},{"pos":[9313,9322],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[9399,9400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9450,9456],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[9516,9517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9631,9640],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[9717,9718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9768,9774],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[9834,9835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10127,10147],"content":"DangerousGetHandle()","needQuote":true,"nodes":[{"content":"DangerousGetHandle()","pos":[0,20]}]},{"pos":[10318,10336],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[10422,10423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10450,10451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10559,10577],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[10663,10664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10691,10692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10967,10974],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[11119,11124],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[11218,11219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11246,11247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11342,11347],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[11441,11442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11469,11470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11722,11731],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[11880,11887],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[11962,11963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11990,11991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12088,12095],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12170,12171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12198,12199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12470,12486],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[12665,12672],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12747,12748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12799,12806],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12867,12868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12981,12988],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13063,13064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13115,13122],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13183,13184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13474,13494],"content":"SetHandleAsInvalid()","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid()","pos":[0,20]}]},{"pos":[13665,13683],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[13769,13770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13797,13798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13906,13924],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[14010,14011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14038,14039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14323,14338],"content":"ReleaseHandle()","needQuote":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[14499,14512],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[14593,14594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14621,14622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14725,14738],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[14819,14820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14847,14848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15140,15164],"content":"DangerousAddRef(Boolean)","needQuote":true,"nodes":[{"content":"DangerousAddRef(Boolean)","pos":[0,24]}]},{"pos":[15360,15375],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[15458,15459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15510,15517],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15578,15579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15701,15716],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[15799,15800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15851,15858],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15919,15920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16225,16243],"content":"DangerousRelease()","needQuote":true,"nodes":[{"content":"DangerousRelease()","pos":[0,18]}]},{"pos":[16410,16426],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[16510,16511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16538,16539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16645,16661],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[16745,16746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16773,16774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17049,17057],"content":"IsClosed","needQuote":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[17362,17371],"content":"IsInvalid","needQuote":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[17621,17631],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17726,17734],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17803,17804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17831,17832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17902,17910],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17979,17980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18007,18008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18191,18205],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[18324,18330],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18397,18398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18448,18454],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18514,18515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18598,18604],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18671,18672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18722,18728],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18788,18789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19003,19025],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19173,19179],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19246,19247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19297,19303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19364,19365]},{"pos":[19420,19426],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19486,19487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19584,19590],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19657,19658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19708,19714],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19775,19776]},{"pos":[19831,19837],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19897,19898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20143,20174],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[20340,20355],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20431,20432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20482,20488],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20549,20550]},{"pos":[20605,20611],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20671,20672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20778,20793],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20869,20870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20920,20926],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20987,20988]},{"pos":[21043,21049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21109,21110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21340,21353],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[21454,21465],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[21537,21538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21565,21566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21639,21650],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[21722,21723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21750,21751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21926,21935],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[22028,22035],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22103,22104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22131,22132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22201,22208],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22276,22277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22304,22305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22480,22497],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[22606,22621],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22697,22698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22725,22726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22803,22818],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22894,22895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22922,22923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23068,23074],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[23210,23245],"content":"System.Runtime.ConstrainedExecution","needQuote":true,"nodes":[{"content":"System.Runtime.ConstrainedExecution","pos":[0,35]}]},{"pos":[23463,23493],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[23697,23704],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23851,23856],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding\n  id: ChannelBinding\n  parent: System.Security.Authentication.ExtendedProtection\n  children:\n  - System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor\n  - System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)\n  - System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  langs:\n  - csharp\n  - vb\n  name: ChannelBinding\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChannelBinding\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 427\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.</p>\\n\"\n  syntax:\n    content: 'public abstract class ChannelBinding : SafeHandle, IDisposable'\n    content.vb: >-\n      Public MustInherit Class ChannelBinding\n          Inherits SafeHandle\n          Implements IDisposable\n  seealso:\n  - type: System.Net.TransportContext\n    commentId: T:System.Net.TransportContext\n  inheritance:\n  - System.Object\n  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  - System.Runtime.InteropServices.SafeHandle\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Runtime.InteropServices.SafeHandle.handle\n  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - System.Runtime.InteropServices.SafeHandle.Close\n  - System.Runtime.InteropServices.SafeHandle.Dispose\n  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  - System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - System.Runtime.InteropServices.SafeHandle.IsClosed\n  - System.Runtime.InteropServices.SafeHandle.IsInvalid\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: ChannelBinding\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor\n  commentId: M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor\n  id: '#ctor'\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  langs:\n  - csharp\n  - vb\n  name: ChannelBinding()\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding.ChannelBinding()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 429\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected ChannelBinding()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: ChannelBinding.ChannelBinding()\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)\n  commentId: M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  langs:\n  - csharp\n  - vb\n  name: ChannelBinding(Boolean)\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding.ChannelBinding(System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 430\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected ChannelBinding(bool ownsHandle)\n    content.vb: Protected Sub New(ownsHandle As Boolean)\n    parameters:\n    - id: ownsHandle\n      type: System.Boolean\n      description: \"\\n<p>A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: ChannelBinding.ChannelBinding(Boolean)\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  commentId: P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  id: Size\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  langs:\n  - csharp\n  - vb\n  name: Size\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Size\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 431\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property gets the size, in bytes, of the channel binding token associated with the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public abstract int Size { get; }\n    content.vb: Public MustOverride ReadOnly Property Size As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The size, in bytes, of the channel binding token in the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: ChannelBinding.Size\nreferences:\n- uid: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: System.Security.Authentication.ExtendedProtection\n  fullName: System.Security.Authentication.ExtendedProtection\n  commentId: N:System.Security.Authentication.ExtendedProtection\n  nameWithType: System.Security.Authentication.ExtendedProtection\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  parent: System.Runtime.ConstrainedExecution\n  isExternal: true\n  name: CriticalFinalizerObject\n  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  commentId: T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  nameWithType: CriticalFinalizerObject\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n  nameWithType: SafeHandle\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Runtime.InteropServices.SafeHandle.handle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: handle\n  fullName: System.Runtime.InteropServices.SafeHandle.handle\n  commentId: F:System.Runtime.InteropServices.SafeHandle.handle\n  nameWithType: SafeHandle.handle\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: SetHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  nameWithType: SafeHandle.SetHandle(IntPtr)\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousGetHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  nameWithType: SafeHandle.DangerousGetHandle()\n- uid: System.Runtime.InteropServices.SafeHandle.Close\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: Close()\n  fullName: System.Runtime.InteropServices.SafeHandle.Close()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Close\n    name: Close\n    fullName: System.Runtime.InteropServices.SafeHandle.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Close\n    name: Close\n    fullName: System.Runtime.InteropServices.SafeHandle.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Close\n  nameWithType: SafeHandle.Close()\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Dispose()\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose\n  nameWithType: SafeHandle.Dispose()\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  nameWithType: SafeHandle.Dispose(Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandleAsInvalid()\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  nameWithType: SafeHandle.SetHandleAsInvalid()\n- uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: ReleaseHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  nameWithType: SafeHandle.ReleaseHandle()\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: DangerousAddRef(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  nameWithType: SafeHandle.DangerousAddRef(Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousRelease()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  nameWithType: SafeHandle.DangerousRelease()\n- uid: System.Runtime.InteropServices.SafeHandle.IsClosed\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsClosed\n  fullName: System.Runtime.InteropServices.SafeHandle.IsClosed\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsClosed\n  nameWithType: SafeHandle.IsClosed\n- uid: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsInvalid\n  fullName: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsInvalid\n  nameWithType: SafeHandle.IsInvalid\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.ConstrainedExecution\n  isExternal: false\n  name: System.Runtime.ConstrainedExecution\n  fullName: System.Runtime.ConstrainedExecution\n  commentId: N:System.Runtime.ConstrainedExecution\n  nameWithType: System.Runtime.ConstrainedExecution\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n"}