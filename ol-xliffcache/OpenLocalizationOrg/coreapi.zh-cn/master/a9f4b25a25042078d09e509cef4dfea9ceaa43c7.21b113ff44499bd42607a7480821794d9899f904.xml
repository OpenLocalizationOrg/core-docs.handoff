{"nodes":[{"pos":[1615,1629],"content":"WinHttpHandler","needQuote":true,"nodes":[{"content":"WinHttpHandler","pos":[0,14]}]},{"pos":[2559,2575],"content":"WinHttpHandler()","needQuote":true,"nodes":[{"content":"WinHttpHandler()","pos":[0,16]}]},{"pos":[3445,3467],"content":"AutomaticDecompression","needQuote":true,"nodes":[{"content":"AutomaticDecompression","pos":[0,22]}]},{"pos":[4537,4557],"content":"AutomaticRedirection","needQuote":true,"nodes":[{"content":"AutomaticRedirection","pos":[0,20]}]},{"pos":[5601,5631],"content":"CheckCertificateRevocationList","needQuote":true,"nodes":[{"content":"CheckCertificateRevocationList","pos":[0,30]}]},{"pos":[6704,6727],"content":"ClientCertificateOption","needQuote":true,"nodes":[{"content":"ClientCertificateOption","pos":[0,23]}]},{"pos":[7810,7828],"content":"ClientCertificates","needQuote":true,"nodes":[{"content":"ClientCertificates","pos":[0,18]}]},{"pos":[8925,8940],"content":"CookieContainer","needQuote":true,"nodes":[{"content":"CookieContainer","pos":[0,15]}]},{"pos":[9945,9960],"content":"CookieUsePolicy","needQuote":true,"nodes":[{"content":"CookieUsePolicy","pos":[0,15]}]},{"pos":[10994,11017],"content":"DefaultProxyCredentials","needQuote":true,"nodes":[{"content":"DefaultProxyCredentials","pos":[0,23]}]},{"pos":[12080,12104],"content":"MaxAutomaticRedirections","needQuote":true,"nodes":[{"content":"MaxAutomaticRedirections","pos":[0,24]}]},{"pos":[13144,13167],"content":"MaxConnectionsPerServer","needQuote":true,"nodes":[{"content":"MaxConnectionsPerServer","pos":[0,23]}]},{"pos":[14193,14213],"content":"MaxResponseDrainSize","needQuote":true,"nodes":[{"content":"MaxResponseDrainSize","pos":[0,20]}]},{"pos":[15236,15260],"content":"MaxResponseHeadersLength","needQuote":true,"nodes":[{"content":"MaxResponseHeadersLength","pos":[0,24]}]},{"pos":[16276,16291],"content":"PreAuthenticate","needQuote":true,"nodes":[{"content":"PreAuthenticate","pos":[0,15]}]},{"pos":[17250,17260],"content":"Properties","needQuote":true,"nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[18287,18292],"content":"Proxy","needQuote":true,"nodes":[{"content":"Proxy","pos":[0,5]}]},{"pos":[19238,19256],"content":"ReceiveDataTimeout","needQuote":true,"nodes":[{"content":"ReceiveDataTimeout","pos":[0,18]}]},{"pos":[20269,20290],"content":"ReceiveHeadersTimeout","needQuote":true,"nodes":[{"content":"ReceiveHeadersTimeout","pos":[0,21]}]},{"pos":[21288,21299],"content":"SendTimeout","needQuote":true,"nodes":[{"content":"SendTimeout","pos":[0,11]}]},{"pos":[22319,22354],"content":"ServerCertificateValidationCallback","needQuote":true,"nodes":[{"content":"ServerCertificateValidationCallback","pos":[0,35]}]},{"pos":[23802,23819],"content":"ServerCredentials","needQuote":true,"nodes":[{"content":"ServerCredentials","pos":[0,17]}]},{"pos":[24816,24828],"content":"SslProtocols","needQuote":true,"nodes":[{"content":"SslProtocols","pos":[0,12]}]},{"pos":[25877,25898],"content":"WindowsProxyUsePolicy","needQuote":true,"nodes":[{"content":"WindowsProxyUsePolicy","pos":[0,21]}]},{"pos":[26980,26996],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[28203,28251],"content":"SendAsync(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(HttpRequestMessage, CancellationToken)","pos":[0,48]}]},{"pos":[29577,29592],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[29748,29754],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29868,29874],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[30052,30072],"content":"DecompressionMethods","needQuote":true,"nodes":[{"content":"DecompressionMethods","pos":[0,20]}]},{"pos":[30226,30236],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[30384,30391],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30599,30622],"content":"ClientCertificateOption","needQuote":true,"nodes":[{"content":"ClientCertificateOption","pos":[0,23]}]},{"pos":[30967,30993],"content":"X509Certificate2Collection","needQuote":true,"nodes":[{"content":"X509Certificate2Collection","pos":[0,26]}]},{"pos":[31264,31309],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[31534,31549],"content":"CookieContainer","needQuote":true,"nodes":[{"content":"CookieContainer","pos":[0,15]}]},{"pos":[31761,31776],"content":"CookieUsePolicy","needQuote":true,"nodes":[{"content":"CookieUsePolicy","pos":[0,15]}]},{"pos":[31972,31984],"content":"ICredentials","needQuote":true,"nodes":[{"content":"ICredentials","pos":[0,12]}]},{"pos":[32143,32148],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32454,32481],"content":"IDictionary<String, Object>","needQuote":true,"nodes":[{"content":"IDictionary&lt;String, Object&gt;","pos":[0,27],"source":"IDictionary<String, Object>"}]},{"pos":[32861,32872],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[32987,32988],"content":"<","needQuote":true,"nodes":[]},{"pos":[33058,33064],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[33150,33151]},{"pos":[33229,33235],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33435,33446],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[33562,33565]},{"pos":[33647,33653],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[33739,33740]},{"pos":[33818,33824],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33909,33910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34079,34104],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[34446,34457],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[34551,34552],"content":"<","needQuote":true,"nodes":[]},{"pos":[34599,34603],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[34657,34658]},{"pos":[34713,34719],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[34891,34902],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[34997,35000]},{"pos":[35059,35063],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[35117,35118]},{"pos":[35173,35179],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[35236,35237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35378,35404],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[35579,35588],"content":"IWebProxy","needQuote":true,"nodes":[{"content":"IWebProxy","pos":[0,9]}]},{"pos":[35747,35755],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[36320,36408],"content":"Func<HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean>","needQuote":true,"nodes":[{"content":"Func&lt;HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean&gt;","pos":[0,88],"source":"Func<HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean>"}]},{"pos":[37250,37254],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[37335,37336],"content":"<","needQuote":true,"nodes":[]},{"pos":[37427,37445],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"content":",","pos":[37543,37544]},{"pos":[37671,37687],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"content":",","pos":[37832,37833]},{"pos":[37953,37962],"content":"X509Chain","needQuote":true,"nodes":[{"content":"X509Chain","pos":[0,9]}]},{"content":",","pos":[38093,38094]},{"pos":[38194,38218],"content":"Security.SslPolicyErrors","needQuote":true,"nodes":[{"content":"Security.SslPolicyErrors","pos":[0,24]}]},{"content":",","pos":[38344,38345]},{"pos":[38424,38431],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38606,38610],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[38692,38695]},{"pos":[38798,38816],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"content":",","pos":[38914,38915]},{"pos":[39042,39058],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"content":",","pos":[39203,39204]},{"pos":[39324,39333],"content":"X509Chain","needQuote":true,"nodes":[{"content":"X509Chain","pos":[0,9]}]},{"content":",","pos":[39464,39465]},{"pos":[39565,39589],"content":"Security.SslPolicyErrors","needQuote":true,"nodes":[{"content":"Security.SslPolicyErrors","pos":[0,24]}]},{"content":",","pos":[39715,39716]},{"pos":[39795,39802],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39889,39890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40005,40034],"content":"Func<T1, T2, T3, T4, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T1, T2, T3, T4, TResult&gt;","pos":[0,29],"source":"Func<T1, T2, T3, T4, TResult>"}]},{"pos":[40329,40333],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[40393,40394],"content":"<","needQuote":true,"nodes":[]},{"pos":[40441,40443],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[40493,40494]},{"pos":[40549,40551],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"content":",","pos":[40601,40602]},{"pos":[40657,40659],"content":"T3","needQuote":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"content":",","pos":[40709,40710]},{"pos":[40765,40767],"content":"T4","needQuote":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"content":",","pos":[40817,40818]},{"pos":[40873,40880],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[41027,41031],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[41092,41095]},{"pos":[41154,41156],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[41206,41207]},{"pos":[41262,41264],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"content":",","pos":[41314,41315]},{"pos":[41370,41372],"content":"T3","needQuote":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"content":",","pos":[41422,41423]},{"pos":[41478,41480],"content":"T4","needQuote":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"content":",","pos":[41530,41531]},{"pos":[41586,41593],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[41652,41653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41869,41881],"content":"SslProtocols","needQuote":true,"nodes":[{"content":"SslProtocols","pos":[0,12]}]},{"pos":[42079,42109],"content":"System.Security.Authentication","needQuote":true,"nodes":[{"content":"System.Security.Authentication","pos":[0,30]}]},{"pos":[42352,42373],"content":"WindowsProxyUsePolicy","needQuote":true,"nodes":[{"content":"WindowsProxyUsePolicy","pos":[0,21]}]},{"pos":[42608,42626],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"pos":[42856,42873],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[43192,43217],"content":"Task<HttpResponseMessage>","needQuote":true,"nodes":[{"content":"Task&lt;HttpResponseMessage&gt;","pos":[0,25],"source":"Task<HttpResponseMessage>"}]},{"pos":[43572,43576],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[43673,43674],"content":"<","needQuote":true,"nodes":[]},{"pos":[43766,43785],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[43988,43992],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[44090,44093]},{"pos":[44197,44216],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[44315,44316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44437,44453],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[44626,44639],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[44902,44906],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[44982,44983],"content":"<","needQuote":true,"nodes":[]},{"pos":[45030,45037],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[45200,45204],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[45281,45284]},{"pos":[45343,45350],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[45409,45410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45543,45565],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]}],"content":"items:\n- uid: System.Net.Http.WinHttpHandler\n  commentId: T:System.Net.Http.WinHttpHandler\n  id: WinHttpHandler\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.WinHttpHandler.#ctor\n  - System.Net.Http.WinHttpHandler.AutomaticDecompression\n  - System.Net.Http.WinHttpHandler.AutomaticRedirection\n  - System.Net.Http.WinHttpHandler.CheckCertificateRevocationList\n  - System.Net.Http.WinHttpHandler.ClientCertificateOption\n  - System.Net.Http.WinHttpHandler.ClientCertificates\n  - System.Net.Http.WinHttpHandler.CookieContainer\n  - System.Net.Http.WinHttpHandler.CookieUsePolicy\n  - System.Net.Http.WinHttpHandler.DefaultProxyCredentials\n  - System.Net.Http.WinHttpHandler.Dispose(System.Boolean)\n  - System.Net.Http.WinHttpHandler.MaxAutomaticRedirections\n  - System.Net.Http.WinHttpHandler.MaxConnectionsPerServer\n  - System.Net.Http.WinHttpHandler.MaxResponseDrainSize\n  - System.Net.Http.WinHttpHandler.MaxResponseHeadersLength\n  - System.Net.Http.WinHttpHandler.PreAuthenticate\n  - System.Net.Http.WinHttpHandler.Properties\n  - System.Net.Http.WinHttpHandler.Proxy\n  - System.Net.Http.WinHttpHandler.ReceiveDataTimeout\n  - System.Net.Http.WinHttpHandler.ReceiveHeadersTimeout\n  - System.Net.Http.WinHttpHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  - System.Net.Http.WinHttpHandler.SendTimeout\n  - System.Net.Http.WinHttpHandler.ServerCertificateValidationCallback\n  - System.Net.Http.WinHttpHandler.ServerCredentials\n  - System.Net.Http.WinHttpHandler.SslProtocols\n  - System.Net.Http.WinHttpHandler.WindowsProxyUsePolicy\n  langs:\n  - csharp\n  - vb\n  name: WinHttpHandler\n  nameWithType: WinHttpHandler\n  fullName: System.Net.Http.WinHttpHandler\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WinHttpHandler\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 23\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: 'public class WinHttpHandler : HttpMessageHandler'\n    content.vb: >-\n      Public Class WinHttpHandler\n          Inherits HttpMessageHandler\n  inheritance:\n  - System.Object\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Net.Http.WinHttpHandler.#ctor\n  commentId: M:System.Net.Http.WinHttpHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: WinHttpHandler()\n  nameWithType: WinHttpHandler.WinHttpHandler()\n  fullName: System.Net.Http.WinHttpHandler.WinHttpHandler()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 25\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public WinHttpHandler()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.AutomaticDecompression\n  commentId: P:System.Net.Http.WinHttpHandler.AutomaticDecompression\n  id: AutomaticDecompression\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: AutomaticDecompression\n  nameWithType: WinHttpHandler.AutomaticDecompression\n  fullName: System.Net.Http.WinHttpHandler.AutomaticDecompression\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AutomaticDecompression\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 26\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public DecompressionMethods AutomaticDecompression { get; set; }\n    content.vb: Public Property AutomaticDecompression As DecompressionMethods\n    parameters: []\n    return:\n      type: System.Net.DecompressionMethods\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.AutomaticRedirection\n  commentId: P:System.Net.Http.WinHttpHandler.AutomaticRedirection\n  id: AutomaticRedirection\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: AutomaticRedirection\n  nameWithType: WinHttpHandler.AutomaticRedirection\n  fullName: System.Net.Http.WinHttpHandler.AutomaticRedirection\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AutomaticRedirection\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 27\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public bool AutomaticRedirection { get; set; }\n    content.vb: Public Property AutomaticRedirection As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.CheckCertificateRevocationList\n  commentId: P:System.Net.Http.WinHttpHandler.CheckCertificateRevocationList\n  id: CheckCertificateRevocationList\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: CheckCertificateRevocationList\n  nameWithType: WinHttpHandler.CheckCertificateRevocationList\n  fullName: System.Net.Http.WinHttpHandler.CheckCertificateRevocationList\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CheckCertificateRevocationList\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 28\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public bool CheckCertificateRevocationList { get; set; }\n    content.vb: Public Property CheckCertificateRevocationList As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.ClientCertificateOption\n  commentId: P:System.Net.Http.WinHttpHandler.ClientCertificateOption\n  id: ClientCertificateOption\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: ClientCertificateOption\n  nameWithType: WinHttpHandler.ClientCertificateOption\n  fullName: System.Net.Http.WinHttpHandler.ClientCertificateOption\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ClientCertificateOption\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 29\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public ClientCertificateOption ClientCertificateOption { get; set; }\n    content.vb: Public Property ClientCertificateOption As ClientCertificateOption\n    parameters: []\n    return:\n      type: System.Net.Http.ClientCertificateOption\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.ClientCertificates\n  commentId: P:System.Net.Http.WinHttpHandler.ClientCertificates\n  id: ClientCertificates\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: ClientCertificates\n  nameWithType: WinHttpHandler.ClientCertificates\n  fullName: System.Net.Http.WinHttpHandler.ClientCertificates\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ClientCertificates\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 30\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public X509Certificate2Collection ClientCertificates { get; }\n    content.vb: Public ReadOnly Property ClientCertificates As X509Certificate2Collection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: System.Net.Http.WinHttpHandler.CookieContainer\n  commentId: P:System.Net.Http.WinHttpHandler.CookieContainer\n  id: CookieContainer\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: CookieContainer\n  nameWithType: WinHttpHandler.CookieContainer\n  fullName: System.Net.Http.WinHttpHandler.CookieContainer\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CookieContainer\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 31\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public CookieContainer CookieContainer { get; set; }\n    content.vb: Public Property CookieContainer As CookieContainer\n    parameters: []\n    return:\n      type: System.Net.CookieContainer\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.CookieUsePolicy\n  commentId: P:System.Net.Http.WinHttpHandler.CookieUsePolicy\n  id: CookieUsePolicy\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: CookieUsePolicy\n  nameWithType: WinHttpHandler.CookieUsePolicy\n  fullName: System.Net.Http.WinHttpHandler.CookieUsePolicy\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CookieUsePolicy\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 32\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public CookieUsePolicy CookieUsePolicy { get; set; }\n    content.vb: Public Property CookieUsePolicy As CookieUsePolicy\n    parameters: []\n    return:\n      type: System.Net.Http.CookieUsePolicy\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.DefaultProxyCredentials\n  commentId: P:System.Net.Http.WinHttpHandler.DefaultProxyCredentials\n  id: DefaultProxyCredentials\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: DefaultProxyCredentials\n  nameWithType: WinHttpHandler.DefaultProxyCredentials\n  fullName: System.Net.Http.WinHttpHandler.DefaultProxyCredentials\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DefaultProxyCredentials\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 33\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public ICredentials DefaultProxyCredentials { get; set; }\n    content.vb: Public Property DefaultProxyCredentials As ICredentials\n    parameters: []\n    return:\n      type: System.Net.ICredentials\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.MaxAutomaticRedirections\n  commentId: P:System.Net.Http.WinHttpHandler.MaxAutomaticRedirections\n  id: MaxAutomaticRedirections\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: MaxAutomaticRedirections\n  nameWithType: WinHttpHandler.MaxAutomaticRedirections\n  fullName: System.Net.Http.WinHttpHandler.MaxAutomaticRedirections\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxAutomaticRedirections\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 34\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public int MaxAutomaticRedirections { get; set; }\n    content.vb: Public Property MaxAutomaticRedirections As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.MaxConnectionsPerServer\n  commentId: P:System.Net.Http.WinHttpHandler.MaxConnectionsPerServer\n  id: MaxConnectionsPerServer\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: MaxConnectionsPerServer\n  nameWithType: WinHttpHandler.MaxConnectionsPerServer\n  fullName: System.Net.Http.WinHttpHandler.MaxConnectionsPerServer\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxConnectionsPerServer\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 35\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public int MaxConnectionsPerServer { get; set; }\n    content.vb: Public Property MaxConnectionsPerServer As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.MaxResponseDrainSize\n  commentId: P:System.Net.Http.WinHttpHandler.MaxResponseDrainSize\n  id: MaxResponseDrainSize\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: MaxResponseDrainSize\n  nameWithType: WinHttpHandler.MaxResponseDrainSize\n  fullName: System.Net.Http.WinHttpHandler.MaxResponseDrainSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxResponseDrainSize\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 36\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public int MaxResponseDrainSize { get; set; }\n    content.vb: Public Property MaxResponseDrainSize As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.MaxResponseHeadersLength\n  commentId: P:System.Net.Http.WinHttpHandler.MaxResponseHeadersLength\n  id: MaxResponseHeadersLength\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: MaxResponseHeadersLength\n  nameWithType: WinHttpHandler.MaxResponseHeadersLength\n  fullName: System.Net.Http.WinHttpHandler.MaxResponseHeadersLength\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxResponseHeadersLength\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 37\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public int MaxResponseHeadersLength { get; set; }\n    content.vb: Public Property MaxResponseHeadersLength As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.PreAuthenticate\n  commentId: P:System.Net.Http.WinHttpHandler.PreAuthenticate\n  id: PreAuthenticate\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: PreAuthenticate\n  nameWithType: WinHttpHandler.PreAuthenticate\n  fullName: System.Net.Http.WinHttpHandler.PreAuthenticate\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreAuthenticate\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 38\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public bool PreAuthenticate { get; set; }\n    content.vb: Public Property PreAuthenticate As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.Properties\n  commentId: P:System.Net.Http.WinHttpHandler.Properties\n  id: Properties\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: Properties\n  nameWithType: WinHttpHandler.Properties\n  fullName: System.Net.Http.WinHttpHandler.Properties\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Properties\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 39\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public IDictionary<string, object> Properties { get; }\n    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, Object)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: System.Net.Http.WinHttpHandler.Proxy\n  commentId: P:System.Net.Http.WinHttpHandler.Proxy\n  id: Proxy\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: Proxy\n  nameWithType: WinHttpHandler.Proxy\n  fullName: System.Net.Http.WinHttpHandler.Proxy\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Proxy\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 40\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public IWebProxy Proxy { get; set; }\n    content.vb: Public Property Proxy As IWebProxy\n    parameters: []\n    return:\n      type: System.Net.IWebProxy\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.ReceiveDataTimeout\n  commentId: P:System.Net.Http.WinHttpHandler.ReceiveDataTimeout\n  id: ReceiveDataTimeout\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: ReceiveDataTimeout\n  nameWithType: WinHttpHandler.ReceiveDataTimeout\n  fullName: System.Net.Http.WinHttpHandler.ReceiveDataTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveDataTimeout\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 41\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public TimeSpan ReceiveDataTimeout { get; set; }\n    content.vb: Public Property ReceiveDataTimeout As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.ReceiveHeadersTimeout\n  commentId: P:System.Net.Http.WinHttpHandler.ReceiveHeadersTimeout\n  id: ReceiveHeadersTimeout\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: ReceiveHeadersTimeout\n  nameWithType: WinHttpHandler.ReceiveHeadersTimeout\n  fullName: System.Net.Http.WinHttpHandler.ReceiveHeadersTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveHeadersTimeout\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 42\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public TimeSpan ReceiveHeadersTimeout { get; set; }\n    content.vb: Public Property ReceiveHeadersTimeout As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.SendTimeout\n  commentId: P:System.Net.Http.WinHttpHandler.SendTimeout\n  id: SendTimeout\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: SendTimeout\n  nameWithType: WinHttpHandler.SendTimeout\n  fullName: System.Net.Http.WinHttpHandler.SendTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendTimeout\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 43\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public TimeSpan SendTimeout { get; set; }\n    content.vb: Public Property SendTimeout As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.ServerCertificateValidationCallback\n  commentId: P:System.Net.Http.WinHttpHandler.ServerCertificateValidationCallback\n  id: ServerCertificateValidationCallback\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: ServerCertificateValidationCallback\n  nameWithType: WinHttpHandler.ServerCertificateValidationCallback\n  fullName: System.Net.Http.WinHttpHandler.ServerCertificateValidationCallback\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ServerCertificateValidationCallback\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 44\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public Func<HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, bool> ServerCertificateValidationCallback { get; set; }\n    content.vb: Public Property ServerCertificateValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean)\n    parameters: []\n    return:\n      type: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.ServerCredentials\n  commentId: P:System.Net.Http.WinHttpHandler.ServerCredentials\n  id: ServerCredentials\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: ServerCredentials\n  nameWithType: WinHttpHandler.ServerCredentials\n  fullName: System.Net.Http.WinHttpHandler.ServerCredentials\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ServerCredentials\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 45\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public ICredentials ServerCredentials { get; set; }\n    content.vb: Public Property ServerCredentials As ICredentials\n    parameters: []\n    return:\n      type: System.Net.ICredentials\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.SslProtocols\n  commentId: P:System.Net.Http.WinHttpHandler.SslProtocols\n  id: SslProtocols\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: SslProtocols\n  nameWithType: WinHttpHandler.SslProtocols\n  fullName: System.Net.Http.WinHttpHandler.SslProtocols\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SslProtocols\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 46\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public Authentication.SslProtocols SslProtocols { get; set; }\n    content.vb: Public Property SslProtocols As Authentication.SslProtocols\n    parameters: []\n    return:\n      type: System.Security.Authentication.SslProtocols\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.WindowsProxyUsePolicy\n  commentId: P:System.Net.Http.WinHttpHandler.WindowsProxyUsePolicy\n  id: WindowsProxyUsePolicy\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: WindowsProxyUsePolicy\n  nameWithType: WinHttpHandler.WindowsProxyUsePolicy\n  fullName: System.Net.Http.WinHttpHandler.WindowsProxyUsePolicy\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WindowsProxyUsePolicy\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 47\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: public WindowsProxyUsePolicy WindowsProxyUsePolicy { get; set; }\n    content.vb: Public Property WindowsProxyUsePolicy As WindowsProxyUsePolicy\n    parameters: []\n    return:\n      type: System.Net.Http.WindowsProxyUsePolicy\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: System.Net.Http.WinHttpHandler.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.WinHttpHandler.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  nameWithType: WinHttpHandler.Dispose(Boolean)\n  fullName: System.Net.Http.WinHttpHandler.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 48\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n- uid: System.Net.Http.WinHttpHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.WinHttpHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.WinHttpHandler\n  langs:\n  - csharp\n  - vb\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  nameWithType: WinHttpHandler.SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.WinHttpHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendAsync\n    path: src/System.Net.Http.WinHttpHandler/ref/System.Net.Http.WinHttpHandler.cs\n    startLine: 49\n  assemblies:\n  - System.Net.Http.WinHttpHandler\n  namespace: System.Net.Http\n  syntax:\n    content: protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n    content.vb: Protected Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\nreferences:\n- uid: System.Net.Http\n  commentId: N:System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  nameWithType: System.Net.Http\n  fullName: System.Net.Http\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Net.DecompressionMethods\n  commentId: T:System.Net.DecompressionMethods\n  parent: System.Net\n  isExternal: false\n  name: DecompressionMethods\n  nameWithType: DecompressionMethods\n  fullName: System.Net.DecompressionMethods\n- uid: System.Net\n  commentId: N:System.Net\n  isExternal: false\n  name: System.Net\n  nameWithType: System.Net\n  fullName: System.Net\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.ClientCertificateOption\n  commentId: T:System.Net.Http.ClientCertificateOption\n  parent: System.Net.Http\n  isExternal: false\n  name: ClientCertificateOption\n  nameWithType: ClientCertificateOption\n  fullName: System.Net.Http.ClientCertificateOption\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2Collection\n  nameWithType: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n- uid: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n- uid: System.Net.CookieContainer\n  commentId: T:System.Net.CookieContainer\n  isExternal: false\n  name: CookieContainer\n  nameWithType: CookieContainer\n  fullName: System.Net.CookieContainer\n- uid: System.Net.Http.CookieUsePolicy\n  commentId: T:System.Net.Http.CookieUsePolicy\n  parent: System.Net.Http\n  isExternal: false\n  name: CookieUsePolicy\n  nameWithType: CookieUsePolicy\n  fullName: System.Net.Http.CookieUsePolicy\n- uid: System.Net.ICredentials\n  commentId: T:System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IDictionary`2\n  name: IDictionary<String, Object>\n  nameWithType: IDictionary<String, Object>\n  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>\n  nameWithType.vb: IDictionary(Of String, Object)\n  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)\n  name.vb: IDictionary(Of String, Object)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Collections.Generic.IDictionary`2\n  commentId: T:System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  nameWithType: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  fullName: System.Collections.Generic\n- uid: System.Net.IWebProxy\n  commentId: T:System.Net.IWebProxy\n  isExternal: false\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.TimeSpan\n  commentId: T:System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}\n  commentId: T:System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}\n  parent: System\n  definition: System.Func`5\n  name: Func<HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean>\n  nameWithType: Func<HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean>\n  fullName: System.Func<System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, System.Boolean>\n  nameWithType.vb: Func(Of HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean)\n  fullname.vb: System.Func(Of System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, System.Boolean)\n  name.vb: Func(Of HttpRequestMessage, X509Certificate2, X509Chain, Security.SslPolicyErrors, Boolean)\n  spec.csharp:\n  - uid: System.Func`5\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpRequestMessage\n    name: HttpRequestMessage\n    nameWithType: HttpRequestMessage\n    fullName: System.Net.Http.HttpRequestMessage\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n    name: X509Certificate2\n    nameWithType: X509Certificate2\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Security.Cryptography.X509Certificates.X509Chain\n    name: X509Chain\n    nameWithType: X509Chain\n    fullName: System.Security.Cryptography.X509Certificates.X509Chain\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Net.Security.SslPolicyErrors\n    name: Security.SslPolicyErrors\n    nameWithType: Security.SslPolicyErrors\n    fullName: System.Net.Security.SslPolicyErrors\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`5\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.HttpRequestMessage\n    name: HttpRequestMessage\n    nameWithType: HttpRequestMessage\n    fullName: System.Net.Http.HttpRequestMessage\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n    name: X509Certificate2\n    nameWithType: X509Certificate2\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Security.Cryptography.X509Certificates.X509Chain\n    name: X509Chain\n    nameWithType: X509Chain\n    fullName: System.Security.Cryptography.X509Certificates.X509Chain\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Net.Security.SslPolicyErrors\n    name: Security.SslPolicyErrors\n    nameWithType: Security.SslPolicyErrors\n    fullName: System.Net.Security.SslPolicyErrors\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Func`5\n  commentId: T:System.Func`5\n  isExternal: false\n  name: Func<T1, T2, T3, T4, TResult>\n  nameWithType: Func<T1, T2, T3, T4, TResult>\n  fullName: System.Func<T1, T2, T3, T4, TResult>\n  nameWithType.vb: Func(Of T1, T2, T3, T4, TResult)\n  fullname.vb: System.Func(Of T1, T2, T3, T4, TResult)\n  name.vb: Func(Of T1, T2, T3, T4, TResult)\n  spec.csharp:\n  - uid: System.Func`5\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T3\n    nameWithType: T3\n    fullName: T3\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T4\n    nameWithType: T4\n    fullName: T4\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`5\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T3\n    nameWithType: T3\n    fullName: T3\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T4\n    nameWithType: T4\n    fullName: T4\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Security.Authentication.SslProtocols\n  commentId: T:System.Security.Authentication.SslProtocols\n  parent: System.Security.Authentication\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslProtocols\n  fullName: System.Security.Authentication.SslProtocols\n- uid: System.Security.Authentication\n  commentId: N:System.Security.Authentication\n  isExternal: false\n  name: System.Security.Authentication\n  nameWithType: System.Security.Authentication\n  fullName: System.Security.Authentication\n- uid: System.Net.Http.WindowsProxyUsePolicy\n  commentId: T:System.Net.Http.WindowsProxyUsePolicy\n  parent: System.Net.Http\n  isExternal: false\n  name: WindowsProxyUsePolicy\n  nameWithType: WindowsProxyUsePolicy\n  fullName: System.Net.Http.WindowsProxyUsePolicy\n- uid: System.Net.Http.HttpRequestMessage\n  commentId: T:System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  nameWithType: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<HttpResponseMessage>\n  nameWithType: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  nameWithType.vb: Task(Of HttpResponseMessage)\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)\n  name.vb: Task(Of HttpResponseMessage)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Threading\n  commentId: N:System.Threading\n  isExternal: false\n  name: System.Threading\n  nameWithType: System.Threading\n  fullName: System.Threading\n- uid: System.Threading.Tasks.Task`1\n  commentId: T:System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n"}