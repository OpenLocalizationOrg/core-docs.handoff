{"nodes":[{"pos":[585,608],"content":"AsyncCompletedEventArgs","needQuote":true,"nodes":[{"content":"AsyncCompletedEventArgs","pos":[0,23]}]},{"pos":[2590,2641],"content":"AsyncCompletedEventArgs(Exception, Boolean, Object)","needQuote":true,"nodes":[{"content":"AsyncCompletedEventArgs(Exception, Boolean, Object)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;Any error that occurred during the asynchronous operation.&lt;/p&gt;\\n","pos":[3664,3733],"source":"\\n<p>Any error that occurred during the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;A value indicating whether the asynchronous operation was canceled.&lt;/p&gt;\\n","pos":[3802,3880],"source":"\\n<p>A value indicating whether the asynchronous operation was canceled.</p>\\n"},{"pos":[4542,4551],"content":"Cancelled","needQuote":true,"nodes":[{"content":"Cancelled","pos":[0,9]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the background operation has been canceled; otherwise &lt;strong&gt;false&lt;/strong&gt;.","pos":[5355,5464],"source":"\\n<p>\\n<strong>true</strong> if the background operation has been canceled; otherwise <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5465,5509],"source":" The default is <strong>false</strong>.</p>\\n"},{"pos":[6221,6226],"content":"Error","needQuote":true,"nodes":[{"content":"Error","pos":[0,5]}]},{"pos":[7933,7942],"content":"UserState","needQuote":true,"nodes":[{"content":"UserState","pos":[0,9]}]},{"content":"\\n&lt;p&gt;An object reference that uniquely identifies the asynchronous task; otherwise, &lt;strong&gt;null&lt;/strong&gt; if no value has been set.&lt;/p&gt;\\n","pos":[8723,8860],"source":"\\n<p>An object reference that uniquely identifies the asynchronous task; otherwise, <strong>null</strong> if no value has been set.</p>\\n"},{"pos":[9632,9659],"content":"RaiseExceptionIfNecessary()","needQuote":true,"nodes":[{"content":"RaiseExceptionIfNecessary()","pos":[0,27]}]},{"pos":[11691,11712],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[11888,11894],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12042,12051],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[12223,12228],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[12415,12425],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12520,12528],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12597,12598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12625,12626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12696,12704],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12773,12774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12801,12802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12985,12999],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13118,13124],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13191,13192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13242,13248],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13308,13309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13392,13398],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13465,13466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13516,13522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13582,13583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13797,13819],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13967,13973],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14040,14041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14091,14097],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14158,14159]},{"pos":[14214,14220],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14280,14281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14378,14384],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14451,14452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14502,14508],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14569,14570]},{"pos":[14625,14631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14691,14692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14937,14968],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15134,15149],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15225,15226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15276,15282],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15343,15344]},{"pos":[15399,15405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15465,15466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15572,15587],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15663,15664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15714,15720],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15781,15782]},{"pos":[15837,15843],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15903,15904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16134,16147],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16248,16259],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16331,16332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16359,16360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16433,16444],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16516,16517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16544,16545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16720,16729],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[16822,16829],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16897,16898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16925,16926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16995,17002],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17070,17071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17098,17099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17274,17291],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17400,17415],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17491,17492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17519,17520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17597,17612],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17688,17689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17716,17717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17862,17868],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18002,18011],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[18166,18173],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18340,18365],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[18580,18605],"content":"TargetInvocationException","needQuote":true,"nodes":[{"content":"TargetInvocationException","pos":[0,25]}]}],"content":"items:\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  commentId: T:System.ComponentModel.AsyncCompletedEventArgs\n  id: AsyncCompletedEventArgs\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)\n  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  - System.ComponentModel.AsyncCompletedEventArgs.Error\n  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  - System.ComponentModel.AsyncCompletedEventArgs.UserState\n  langs:\n  - csharp\n  - vb\n  name: AsyncCompletedEventArgs\n  fullName: System.ComponentModel.AsyncCompletedEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AsyncCompletedEventArgs\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n    startLine: 11\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides data for the MethodName<strong>Completed</strong> event.</p>\\n\"\n  syntax:\n    content: 'public class AsyncCompletedEventArgs : EventArgs'\n    content.vb: >-\n      Public Class AsyncCompletedEventArgs\n          Inherits EventArgs\n  seealso:\n  - type: System.ComponentModel.AsyncCompletedEventHandler\n    commentId: T:System.ComponentModel.AsyncCompletedEventHandler\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: AsyncCompletedEventArgs\n- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)\n  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)\n  id: '#ctor(System.Exception,System.Boolean,System.Object)'\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: AsyncCompletedEventArgs(Exception, Boolean, Object)\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.AsyncCompletedEventArgs(System.Exception, System.Boolean, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n    startLine: 13\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public AsyncCompletedEventArgs(Exception error, bool cancelled, object userState)\n    content.vb: Public Sub New(error As Exception, cancelled As Boolean, userState As Object)\n    parameters:\n    - id: error\n      type: System.Exception\n      description: \"\\n<p>Any error that occurred during the asynchronous operation.</p>\\n\"\n    - id: cancelled\n      type: System.Boolean\n      description: \"\\n<p>A value indicating whether the asynchronous operation was canceled.</p>\\n\"\n    - id: userState\n      type: System.Object\n      description: \"\\n<p>The optional user-supplied state object passed to the <xref href=\\\"System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception, Boolean, Object)\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  id: Cancelled\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Cancelled\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Cancelled\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n    startLine: 38\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a value indicating whether an asynchronous operation has been canceled.</p>\\n\"\n  syntax:\n    content: public bool Cancelled { get; }\n    content.vb: Public ReadOnly Property Cancelled As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the background operation has been canceled; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncCompletedEventHandler\n    commentId: T:System.ComponentModel.AsyncCompletedEventHandler\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AsyncCompletedEventArgs.Cancelled\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Error\n  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Error\n  id: Error\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Error\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.Error\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Error\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n    startLine: 39\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a value indicating which error occurred during an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public Exception Error { get; }\n    content.vb: Public ReadOnly Property Error As Exception\n    parameters: []\n    return:\n      type: System.Exception\n      description: \"\\n<p>An <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance, if an error occurred during an asynchronous operation; otherwise <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncCompletedEventHandler\n    commentId: T:System.ComponentModel.AsyncCompletedEventHandler\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AsyncCompletedEventArgs.Error\n- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState\n  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.UserState\n  id: UserState\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: UserState\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.UserState\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserState\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n    startLine: 40\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the unique identifier for the asynchronous task.</p>\\n\"\n  syntax:\n    content: public object UserState { get; }\n    content.vb: Public ReadOnly Property UserState As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An object reference that uniquely identifies the asynchronous task; otherwise, <strong>null</strong> if no value has been set.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncCompletedEventHandler\n    commentId: T:System.ComponentModel.AsyncCompletedEventHandler\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AsyncCompletedEventArgs.UserState\n- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  id: RaiseExceptionIfNecessary\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: RaiseExceptionIfNecessary()\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RaiseExceptionIfNecessary\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n    startLine: 25\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Raises a user-supplied exception if an asynchronous operation failed.</p>\\n\"\n  syntax:\n    content: protected void RaiseExceptionIfNecessary()\n    content.vb: Protected Sub RaiseExceptionIfNecessary\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs.Cancelled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>. </p>\\n\"\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: \"\\n<p>The <xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property has been set by the asynchronous operation. The <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property holds a reference to <xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.Reflection.TargetInvocationException\n  isExternal: false\n  name: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n  nameWithType: TargetInvocationException\n  commentId: T:System.Reflection.TargetInvocationException\n"}