{"nodes":[{"pos":[442,457],"content":"ParallelOptions","needQuote":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[1799,1816],"content":"ParallelOptions()","needQuote":true,"nodes":[{"content":"ParallelOptions()","pos":[0,17]}]},{"pos":[2838,2855],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The token that is associated with this instance.&lt;/p&gt;\\n","pos":[3807,3866],"source":"\\n<p>The token that is associated with this instance.</p>\\n"},{"pos":[4251,4273],"content":"MaxDegreeOfParallelism","needQuote":true,"nodes":[{"content":"MaxDegreeOfParallelism","pos":[0,22]}]},{"content":"\\n&lt;p&gt;An integer that represents the maximum degree of parallelism.&lt;/p&gt;\\n","pos":[5133,5205],"source":"\\n<p>An integer that represents the maximum degree of parallelism.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to zero or to a value that is less than -1.&lt;/p&gt;\\n","pos":[5336,5416],"source":"\\n<p>The property is being set to zero or to a value that is less than -1.</p>\\n"},{"pos":[5779,5792],"content":"TaskScheduler","needQuote":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The task scheduler that is associated with this instance.&lt;/p&gt;\\n","pos":[6806,6874],"source":"\\n<p>The task scheduler that is associated with this instance.</p>\\n"},{"pos":[7066,7088],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[7267,7273],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7433,7443],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7538,7546],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7615,7616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7643,7644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7714,7722],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7791,7792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7819,7820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8003,8017],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8136,8142],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8209,8210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8260,8266],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8326,8327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8410,8416],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8483,8484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8534,8540],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8600,8601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8815,8837],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8985,8991],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9058,9059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9109,9115],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9176,9177]},{"pos":[9232,9238],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9298,9299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9396,9402],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9469,9470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9520,9526],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9587,9588]},{"pos":[9643,9649],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9709,9710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9955,9986],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10152,10167],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10243,10244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10294,10300],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10361,10362]},{"pos":[10417,10423],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10483,10484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10590,10605],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10681,10682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10732,10738],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10799,10800]},{"pos":[10855,10861],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10921,10922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11152,11165],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11266,11277],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11349,11350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11377,11378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11451,11462],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11534,11535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11562,11563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11738,11747],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11840,11847],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11915,11916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11943,11944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12013,12020],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12088,12089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12116,12117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12292,12309],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12418,12433],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12509,12510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12537,12538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12615,12630],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12706,12707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12734,12735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12880,12886],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13048,13065],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[13249,13265],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[13425,13430],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13611,13624],"content":"TaskScheduler","needQuote":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[13826,13853],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Threading.Tasks.ParallelOptions\n  commentId: T:System.Threading.Tasks.ParallelOptions\n  id: ParallelOptions\n  parent: System.Threading.Tasks\n  children:\n  - System.Threading.Tasks.ParallelOptions.#ctor\n  - System.Threading.Tasks.ParallelOptions.CancellationToken\n  - System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  - System.Threading.Tasks.ParallelOptions.TaskScheduler\n  langs:\n  - csharp\n  - vb\n  name: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParallelOptions\n    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n    startLine: 36\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Stores options that configure the operation of methods on the <xref href=\\\"System.Threading.Tasks.Parallel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public class ParallelOptions\n    content.vb: Public Class ParallelOptions\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ParallelOptions\n- uid: System.Threading.Tasks.ParallelOptions.#ctor\n  commentId: M:System.Threading.Tasks.ParallelOptions.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  - vb\n  name: ParallelOptions()\n  fullName: System.Threading.Tasks.ParallelOptions.ParallelOptions()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n    startLine: 52\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.Tasks.ParallelOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ParallelOptions()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ParallelOptions.ParallelOptions()\n- uid: System.Threading.Tasks.ParallelOptions.CancellationToken\n  commentId: P:System.Threading.Tasks.ParallelOptions.CancellationToken\n  id: CancellationToken\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  - vb\n  name: CancellationToken\n  fullName: System.Threading.Tasks.ParallelOptions.CancellationToken\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CancellationToken\n    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n    startLine: 116\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Threading.CancellationToken\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with this <xref href=\\\"System.Threading.Tasks.ParallelOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public CancellationToken CancellationToken { get; set; }\n    content.vb: Public Property CancellationToken As CancellationToken\n    parameters: []\n    return:\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token that is associated with this instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ParallelOptions.CancellationToken\n- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  commentId: P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  id: MaxDegreeOfParallelism\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  - vb\n  name: MaxDegreeOfParallelism\n  fullName: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxDegreeOfParallelism\n    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n    startLine: 94\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Gets or sets the maximum number of concurrent tasks enabled by this <xref href=\\\"System.Threading.Tasks.ParallelOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public int MaxDegreeOfParallelism { get; set; }\n    content.vb: Public Property MaxDegreeOfParallelism As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer that represents the maximum degree of parallelism.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to zero or to a value that is less than -1.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ParallelOptions.MaxDegreeOfParallelism\n- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler\n  commentId: P:System.Threading.Tasks.ParallelOptions.TaskScheduler\n  id: TaskScheduler\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  - vb\n  name: TaskScheduler\n  fullName: System.Threading.Tasks.ParallelOptions.TaskScheduler\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TaskScheduler\n    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs\n    startLine: 64\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Threading.Tasks.TaskScheduler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with this <xref href=\\\"System.Threading.Tasks.ParallelOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. Setting this property to null indicates that the current scheduler should be used.</p>\\n\"\n  syntax:\n    content: public TaskScheduler TaskScheduler { get; set; }\n    content.vb: Public Property TaskScheduler As TaskScheduler\n    parameters: []\n    return:\n      type: System.Threading.Tasks.TaskScheduler\n      description: \"\\n<p>The task scheduler that is associated with this instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ParallelOptions.TaskScheduler\nreferences:\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  nameWithType: CancellationToken\n  commentId: T:System.Threading.CancellationToken\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n  nameWithType: TaskScheduler\n  commentId: T:System.Threading.Tasks.TaskScheduler\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}