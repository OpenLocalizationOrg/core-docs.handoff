{"nodes":[{"pos":[313,324],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1666,1673],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The current element in the collection.&lt;/p&gt;\\n","pos":[2302,2351],"source":"\\n<p>The current element in the collection.</p>\\n"},{"pos":[2858,2868],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the enumerator was successfully advanced to the next element; &lt;strong&gt;false&lt;/strong&gt; if the enumerator has passed the end of the collection.&lt;/p&gt;\\n","pos":[3485,3663],"source":"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[3790,3856],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[3857,3863],"source":" </p>\\n"},{"pos":[4305,4312],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[5002,5068],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[5069,5075],"source":" </p>\\n"},{"pos":[5402,5420],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[5587,5593],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5714,5720],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5852,5859],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6026,6051],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  id: IEnumerator\n  parent: System.Collections\n  children:\n  - System.Collections.IEnumerator.Current\n  - System.Collections.IEnumerator.MoveNext\n  - System.Collections.IEnumerator.Reset\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEnumerator\n    path: src/mscorlib/src/System/Collections/IEnumerator.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Supports a simple iteration over a non-generic collection.</p>\\n\"\n  syntax:\n    content: >-\n      [Guid(\"496B0ABF-CDEE-11d3-88E8-00902754C43A\")]\n\n      [ComVisible(true)]\n\n      public interface IEnumerator\n    content.vb: >-\n      <Guid(\"496B0ABF-CDEE-11d3-88E8-00902754C43A\")>\n\n      <ComVisible(True)>\n\n      Public Interface IEnumerator\n  seealso:\n  - type: System.Collections.IEnumerable\n    commentId: T:System.Collections.IEnumerable\n  - type: System.Collections.ICollection\n    commentId: T:System.Collections.ICollection\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IEnumerator\n- uid: System.Collections.IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n  id: Current\n  parent: System.Collections.IEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Current\n    path: src/mscorlib/src/System/Collections/IEnumerator.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Gets the current element in the collection.</p>\\n\"\n  syntax:\n    content: object Current { get; }\n    content.vb: ReadOnly Property Current As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The current element in the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.IEnumerator.MoveNext\n    commentId: M:System.Collections.IEnumerator.MoveNext\n  - type: System.Collections.IEnumerator.Reset\n    commentId: M:System.Collections.IEnumerator.Reset\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IEnumerator.Current\n- uid: System.Collections.IEnumerator.MoveNext\n  commentId: M:System.Collections.IEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Collections.IEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MoveNext\n    path: src/mscorlib/src/System/Collections/IEnumerator.cs\n    startLine: 32\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Advances the enumerator to the next element of the collection.</p>\\n\"\n  syntax:\n    content: bool MoveNext()\n    content.vb: Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.IEnumerator.Current\n    commentId: P:System.Collections.IEnumerator.Current\n  - type: System.Collections.IEnumerator.Reset\n    commentId: M:System.Collections.IEnumerator.Reset\n  nameWithType: IEnumerator.MoveNext()\n- uid: System.Collections.IEnumerator.Reset\n  commentId: M:System.Collections.IEnumerator.Reset\n  id: Reset\n  parent: System.Collections.IEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reset\n    path: src/mscorlib/src/System/Collections/IEnumerator.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Sets the enumerator to its initial position, which is before the first element in the collection.</p>\\n\"\n  syntax:\n    content: void Reset()\n    content.vb: Sub Reset\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.IEnumerator.MoveNext\n    commentId: M:System.Collections.IEnumerator.MoveNext\n  - type: System.Collections.IEnumerator.Current\n    commentId: P:System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Reset()\nreferences:\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}