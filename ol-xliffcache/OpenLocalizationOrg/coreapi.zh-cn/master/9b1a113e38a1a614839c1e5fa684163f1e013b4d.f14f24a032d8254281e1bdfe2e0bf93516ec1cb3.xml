{"nodes":[{"pos":[374,395],"content":"AsyncOperationManager","needQuote":true,"nodes":[{"content":"AsyncOperationManager","pos":[0,21]}]},{"pos":[1983,2005],"content":"SynchronizationContext","needQuote":true,"nodes":[{"content":"SynchronizationContext","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The synchronization context for the asynchronous operation.&lt;/p&gt;\\n","pos":[2927,2997],"source":"\\n<p>The synchronization context for the asynchronous operation.</p>\\n"},{"pos":[3558,3581],"content":"CreateOperation(Object)","needQuote":true,"nodes":[{"content":"CreateOperation(Object)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.","pos":[4601,4719],"source":"\\n<p>An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation."},{"content":"&lt;/p&gt;\\n","pos":[4720,4726],"source":" </p>\\n"},{"pos":[5321,5342],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[5518,5524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5684,5694],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5789,5797],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5866,5867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5894,5895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5965,5973],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6042,6043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6070,6071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6254,6268],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6387,6393],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6460,6461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6511,6517],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6577,6578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6661,6667],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6734,6735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6785,6791],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6851,6852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7066,7088],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7236,7242],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7309,7310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7360,7366],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7427,7428]},{"pos":[7483,7489],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7549,7550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7647,7653],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7720,7721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7771,7777],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7838,7839]},{"pos":[7894,7900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7960,7961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8206,8237],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8403,8418],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8494,8495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8545,8551],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8612,8613]},{"pos":[8668,8674],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8734,8735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8841,8856],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8932,8933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8983,8989],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9050,9051]},{"pos":[9106,9112],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9172,9173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9403,9416],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9517,9528],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9600,9601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9628,9629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9702,9713],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9785,9786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9813,9814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9989,9998],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10091,10098],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10166,10167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10194,10195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10264,10271],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10339,10340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10367,10368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10543,10560],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10669,10684],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10760,10761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10788,10789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10866,10881],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10957,10958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10985,10986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11131,11137],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11304,11326],"content":"SynchronizationContext","needQuote":true,"nodes":[{"content":"SynchronizationContext","pos":[0,22]}]},{"pos":[11525,11541],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[11740,11754],"content":"AsyncOperation","needQuote":true,"nodes":[{"content":"AsyncOperation","pos":[0,14]}]}],"content":"items:\n- uid: System.ComponentModel.AsyncOperationManager\n  commentId: T:System.ComponentModel.AsyncOperationManager\n  id: AsyncOperationManager\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)\n  - System.ComponentModel.AsyncOperationManager.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: AsyncOperationManager\n  fullName: System.ComponentModel.AsyncOperationManager\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AsyncOperationManager\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs\n    startLine: 10\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides concurrency management for classes that support asynchronous method calls. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public class AsyncOperationManager\n    content.vb: Public Class AsyncOperationManager\n  seealso:\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: AsyncOperationManager\n- uid: System.ComponentModel.AsyncOperationManager.SynchronizationContext\n  commentId: P:System.ComponentModel.AsyncOperationManager.SynchronizationContext\n  id: SynchronizationContext\n  parent: System.ComponentModel.AsyncOperationManager\n  langs:\n  - csharp\n  - vb\n  name: SynchronizationContext\n  fullName: System.ComponentModel.AsyncOperationManager.SynchronizationContext\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SynchronizationContext\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs\n    startLine: 17\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets or sets the synchronization context for the asynchronous operation.</p>\\n\"\n  syntax:\n    content: public static SynchronizationContext SynchronizationContext { get; set; }\n    content.vb: Public Shared Property SynchronizationContext As SynchronizationContext\n    parameters: []\n    return:\n      type: System.Threading.SynchronizationContext\n      description: \"\\n<p>The synchronization context for the asynchronous operation.</p>\\n\"\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: AsyncOperationManager.SynchronizationContext\n- uid: System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)\n  commentId: M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)\n  id: CreateOperation(System.Object)\n  parent: System.ComponentModel.AsyncOperationManager\n  langs:\n  - csharp\n  - vb\n  name: CreateOperation(Object)\n  fullName: System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateOperation\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns an <xref href=\\\"System.ComponentModel.AsyncOperation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for tracking the duration of a particular asynchronous operation.</p>\\n\"\n  syntax:\n    content: public static AsyncOperation CreateOperation(object userSuppliedState)\n    content.vb: Public Shared Function CreateOperation(userSuppliedState As Object) As AsyncOperation\n    parameters:\n    - id: userSuppliedState\n      type: System.Object\n      description: \"\\n<p>An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation. </p>\\n\"\n    return:\n      type: System.ComponentModel.AsyncOperation\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.AsyncOperation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that you can use to track the duration of an asynchronous method invocation.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: AsyncOperationManager.CreateOperation(Object)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.SynchronizationContext\n  parent: System.Threading\n  isExternal: false\n  name: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n  nameWithType: SynchronizationContext\n  commentId: T:System.Threading.SynchronizationContext\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.ComponentModel.AsyncOperation\n  parent: System.ComponentModel\n  isExternal: false\n  name: AsyncOperation\n  fullName: System.ComponentModel.AsyncOperation\n  nameWithType: AsyncOperation\n  commentId: T:System.ComponentModel.AsyncOperation\n"}