{"nodes":[{"pos":[858,876],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"pos":[2115,2135],"content":"HttpRequestMessage()","needQuote":true,"nodes":[{"content":"HttpRequestMessage()","pos":[0,20]}]},{"pos":[3200,3238],"content":"HttpRequestMessage(HttpMethod, String)","needQuote":true,"nodes":[{"content":"HttpRequestMessage(HttpMethod, String)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The HTTP method.&lt;/p&gt;\\n","pos":[4183,4210],"source":"\\n<p>The HTTP method.</p>\\n"},{"pos":[4848,4883],"content":"HttpRequestMessage(HttpMethod, Uri)","needQuote":true,"nodes":[{"content":"HttpRequestMessage(HttpMethod, Uri)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The HTTP method.&lt;/p&gt;\\n","pos":[5819,5846],"source":"\\n<p>The HTTP method.</p>\\n"},{"pos":[6342,6349],"content":"Content","needQuote":true,"nodes":[{"content":"Content","pos":[0,7]}]},{"pos":[7463,7470],"content":"Headers","needQuote":true,"nodes":[{"content":"Headers","pos":[0,7]}]},{"pos":[8646,8652],"content":"Method","needQuote":true,"nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[9832,9842],"content":"Properties","needQuote":true,"nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[11043,11053],"content":"RequestUri","needQuote":true,"nodes":[{"content":"RequestUri","pos":[0,10]}]},{"pos":[12276,12283],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[13375,13384],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[14436,14452],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to releases only unmanaged resources.&lt;/p&gt;\\n","pos":[15276,15420],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n"},{"pos":[15771,15781],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16788,16803],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[16961,16967],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17117,17128],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[17316,17330],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17449,17455],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17522,17523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17573,17579],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17639,17640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17723,17729],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17796,17797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17847,17853],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17913,17914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18128,18150],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18298,18304],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18371,18372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18422,18428],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18489,18490]},{"pos":[18545,18551],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18611,18612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18709,18715],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18782,18783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18833,18839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18900,18901]},{"pos":[18956,18962],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19022,19023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19268,19299],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19465,19480],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19556,19557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19607,19613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19674,19675]},{"pos":[19730,19736],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19796,19797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19903,19918],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19994,19995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20045,20051],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20112,20113]},{"pos":[20168,20174],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20234,20235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20465,20478],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20579,20590],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20662,20663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20690,20691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20764,20775],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20847,20848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20875,20876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21051,21060],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[21153,21160],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21228,21229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21256,21257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21326,21333],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21401,21402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21429,21430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21605,21622],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21731,21746],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21822,21823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21850,21851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21928,21943],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22019,22020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22047,22048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22193,22199],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[22352,22362],"content":"HttpMethod","needQuote":true,"nodes":[{"content":"HttpMethod","pos":[0,10]}]},{"pos":[22537,22543],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22685,22688],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[22847,22858],"content":"HttpContent","needQuote":true,"nodes":[{"content":"HttpContent","pos":[0,11]}]},{"pos":[23082,23100],"content":"HttpRequestHeaders","needQuote":true,"nodes":[{"content":"HttpRequestHeaders","pos":[0,18]}]},{"pos":[23308,23331],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[23622,23649],"content":"IDictionary<String, Object>","needQuote":true,"nodes":[{"content":"IDictionary&lt;String, Object&gt;","pos":[0,27],"source":"IDictionary<String, Object>"}]},{"pos":[23935,23946],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[24031,24032],"content":"<","needQuote":true,"nodes":[]},{"pos":[24082,24088],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[24149,24150]},{"pos":[24205,24211],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24364,24375],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[24461,24464]},{"pos":[24521,24527],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[24588,24589]},{"pos":[24644,24650],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24710,24711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24981,25006],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[25258,25269],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[25333,25334],"content":"<","needQuote":true,"nodes":[]},{"pos":[25361,25365],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[25396,25397]},{"pos":[25429,25435],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[25560,25571],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[25636,25639]},{"pos":[25673,25677],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[25708,25709]},{"pos":[25741,25747],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[25779,25780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26005,26031],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[26223,26230],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[26403,26412],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[26515,26522],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[26574,26575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26602,26603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26677,26684],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[26736,26737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26764,26765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26929,26936],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27099,27109],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[27204,27212],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27281,27282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27309,27310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27380,27388],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27457,27458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27485,27486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Net.Http.HttpRequestMessage\n  commentId: T:System.Net.Http.HttpRequestMessage\n  id: HttpRequestMessage\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.HttpRequestMessage.#ctor\n  - System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)\n  - System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)\n  - System.Net.Http.HttpRequestMessage.Content\n  - System.Net.Http.HttpRequestMessage.Dispose\n  - System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)\n  - System.Net.Http.HttpRequestMessage.Headers\n  - System.Net.Http.HttpRequestMessage.Method\n  - System.Net.Http.HttpRequestMessage.Properties\n  - System.Net.Http.HttpRequestMessage.RequestUri\n  - System.Net.Http.HttpRequestMessage.ToString\n  - System.Net.Http.HttpRequestMessage.Version\n  langs:\n  - csharp\n  - vb\n  name: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HttpRequestMessage\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 167\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents a HTTP request message.</p>\\n\"\n  syntax:\n    content: 'public class HttpRequestMessage : IDisposable'\n    content.vb: >-\n      Public Class HttpRequestMessage\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: HttpRequestMessage\n- uid: System.Net.Http.HttpRequestMessage.#ctor\n  commentId: M:System.Net.Http.HttpRequestMessage.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: HttpRequestMessage()\n  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 169\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.HttpRequestMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public HttpRequestMessage()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.HttpRequestMessage()\n- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)\n  commentId: M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)\n  id: '#ctor(System.Net.Http.HttpMethod,System.String)'\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: HttpRequestMessage(HttpMethod, String)\n  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(System.Net.Http.HttpMethod, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 170\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.HttpRequestMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with an HTTP method and a request <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public HttpRequestMessage(HttpMethod method, string requestUri)\n    content.vb: Public Sub New(method As HttpMethod, requestUri As String)\n    parameters:\n    - id: method\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>The HTTP method.</p>\\n\"\n    - id: requestUri\n      type: System.String\n      description: \"\\n<p>A string that represents the request  <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.HttpRequestMessage(HttpMethod, String)\n- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)\n  commentId: M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)\n  id: '#ctor(System.Net.Http.HttpMethod,System.Uri)'\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: HttpRequestMessage(HttpMethod, Uri)\n  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(System.Net.Http.HttpMethod, System.Uri)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 171\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.HttpRequestMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with an HTTP method and a request <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public HttpRequestMessage(HttpMethod method, Uri requestUri)\n    content.vb: Public Sub New(method As HttpMethod, requestUri As Uri)\n    parameters:\n    - id: method\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>The HTTP method.</p>\\n\"\n    - id: requestUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to request.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.HttpRequestMessage(HttpMethod, Uri)\n- uid: System.Net.Http.HttpRequestMessage.Content\n  commentId: P:System.Net.Http.HttpRequestMessage.Content\n  id: Content\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: Content\n  fullName: System.Net.Http.HttpRequestMessage.Content\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Content\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 172\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the contents of the HTTP message. </p>\\n\"\n  syntax:\n    content: public HttpContent Content { get; set; }\n    content.vb: Public Property Content As HttpContent\n    parameters: []\n    return:\n      type: System.Net.Http.HttpContent\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The content of a message</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.Content\n- uid: System.Net.Http.HttpRequestMessage.Headers\n  commentId: P:System.Net.Http.HttpRequestMessage.Headers\n  id: Headers\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: Headers\n  fullName: System.Net.Http.HttpRequestMessage.Headers\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Headers\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 173\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets the collection of HTTP request headers.</p>\\n\"\n  syntax:\n    content: public HttpRequestHeaders Headers { get; }\n    content.vb: Public ReadOnly Property Headers As HttpRequestHeaders\n    parameters: []\n    return:\n      type: System.Net.Http.Headers.HttpRequestHeaders\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.HttpRequestHeaders\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The collection of HTTP request headers.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: HttpRequestMessage.Headers\n- uid: System.Net.Http.HttpRequestMessage.Method\n  commentId: P:System.Net.Http.HttpRequestMessage.Method\n  id: Method\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: Method\n  fullName: System.Net.Http.HttpRequestMessage.Method\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Method\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 174\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the HTTP method used by the HTTP request message.</p>\\n\"\n  syntax:\n    content: public HttpMethod Method { get; set; }\n    content.vb: Public Property Method As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The HTTP method used by the request message. The default is the GET method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.Method\n- uid: System.Net.Http.HttpRequestMessage.Properties\n  commentId: P:System.Net.Http.HttpRequestMessage.Properties\n  id: Properties\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: Properties\n  fullName: System.Net.Http.HttpRequestMessage.Properties\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Properties\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 175\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets a set of properties for the HTTP request.</p>\\n\"\n  syntax:\n    content: public IDictionary<string, object> Properties { get; }\n    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, Object)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: \"\\n<p>Returns <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: HttpRequestMessage.Properties\n- uid: System.Net.Http.HttpRequestMessage.RequestUri\n  commentId: P:System.Net.Http.HttpRequestMessage.RequestUri\n  id: RequestUri\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: RequestUri\n  fullName: System.Net.Http.HttpRequestMessage.RequestUri\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RequestUri\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 176\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used for the HTTP request.</p>\\n\"\n  syntax:\n    content: public Uri RequestUri { get; set; }\n    content.vb: Public Property RequestUri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>Returns <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used for the HTTP request.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.RequestUri\n- uid: System.Net.Http.HttpRequestMessage.Version\n  commentId: P:System.Net.Http.HttpRequestMessage.Version\n  id: Version\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: Version\n  fullName: System.Net.Http.HttpRequestMessage.Version\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Version\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 177\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the HTTP message version.</p>\\n\"\n  syntax:\n    content: public Version Version { get; set; }\n    content.vb: Public Property Version As Version\n    parameters: []\n    return:\n      type: System.Version\n      description: \"\\n<p>Returns <xref href=\\\"System.Version\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The HTTP message version. The default is 1.1.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.Version\n- uid: System.Net.Http.HttpRequestMessage.Dispose\n  commentId: M:System.Net.Http.HttpRequestMessage.Dispose\n  id: Dispose\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Net.Http.HttpRequestMessage.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 178\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\\\"System.Net.Http.HttpRequestMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpRequestMessage.Dispose()\n- uid: System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 179\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Net.Http.HttpRequestMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally disposes of the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: HttpRequestMessage.Dispose(Boolean)\n- uid: System.Net.Http.HttpRequestMessage.ToString\n  commentId: M:System.Net.Http.HttpRequestMessage.ToString\n  id: ToString\n  parent: System.Net.Http.HttpRequestMessage\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.HttpRequestMessage.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 180\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Returns a string that represents the current object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string representation of the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: HttpRequestMessage.ToString()\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Http.HttpMethod\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMethod\n  fullName: System.Net.Http.HttpMethod\n  commentId: T:System.Net.Http.HttpMethod\n  nameWithType: HttpMethod\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.Net.Http.HttpContent\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpContent\n  fullName: System.Net.Http.HttpContent\n  commentId: T:System.Net.Http.HttpContent\n  nameWithType: HttpContent\n- uid: System.Net.Http.Headers.HttpRequestHeaders\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: HttpRequestHeaders\n  fullName: System.Net.Http.Headers.HttpRequestHeaders\n  commentId: T:System.Net.Http.Headers.HttpRequestHeaders\n  nameWithType: HttpRequestHeaders\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IDictionary`2\n  name: IDictionary<String, Object>\n  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>\n  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)\n  name.vb: IDictionary(Of String, Object)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}\n  nameWithType: IDictionary<String, Object>\n  nameWithType.vb: IDictionary(Of String, Object)\n- uid: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IDictionary`2\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  fullName: System.Version\n  commentId: T:System.Version\n  nameWithType: Version\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n"}