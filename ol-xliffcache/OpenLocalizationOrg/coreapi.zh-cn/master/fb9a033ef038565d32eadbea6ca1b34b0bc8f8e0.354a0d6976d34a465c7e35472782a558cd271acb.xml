{"nodes":[{"pos":[2199,2209],"content":"FileStream","needQuote":true,"nodes":[{"content":"FileStream","pos":[0,10]}]},{"pos":[5458,5496],"content":"FileStream(SafeFileHandle, FileAccess)","needQuote":true,"nodes":[{"content":"FileStream(SafeFileHandle, FileAccess)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;A file handle for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[6486,6587],"source":"\\n<p>A file handle for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[6588,6594],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[7294,7348],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[7349,7355],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as a disk error, occurred.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.","pos":[7446,7545],"source":"\\n<p>An I/O error, such as a disk error, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed."},{"content":"&lt;/p&gt;\\n","pos":[7546,7552],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;access&lt;/em&gt; requested is not permitted by the operating system for the specified file handle, such as when &lt;em&gt;access&lt;/em&gt; is &lt;strong&gt;Write&lt;/strong&gt; or &lt;strong&gt;ReadWrite&lt;/strong&gt; and the file handle is set for read-only access.","pos":[7669,7909],"source":"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified file handle, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file handle is set for read-only access."},{"content":"&lt;/p&gt;\\n","pos":[7910,7916],"source":" </p>\\n"},{"pos":[8556,8601],"content":"FileStream(SafeFileHandle, FileAccess, Int32)","needQuote":true,"nodes":[{"content":"FileStream(SafeFileHandle, FileAccess, Int32)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;A file handle for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[9660,9761],"source":"\\n<p>A file handle for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[9762,9768],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;handle&lt;/em&gt; parameter is an invalid handle.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;handle&lt;/em&gt; parameter is a synchronous handle and it was used asynchronously.","pos":[10549,10712],"source":"\\n<p>The <em>handle</em> parameter is an invalid handle.</p>\\n<p>-or-</p>\\n<p>The <em>handle</em> parameter is a synchronous handle and it was used asynchronously."},{"content":"&lt;/p&gt;\\n","pos":[10713,10719],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;bufferSize&lt;/em&gt; parameter is negative.","pos":[10836,10887],"source":"\\n<p>The <em>bufferSize</em> parameter is negative."},{"content":"&lt;/p&gt;\\n","pos":[10888,10894],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as a disk error, occurred.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.","pos":[10985,11084],"source":"\\n<p>An I/O error, such as a disk error, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed."},{"content":"&lt;/p&gt;\\n","pos":[11086,11092],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[11207,11261],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[11262,11268],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;access&lt;/em&gt; requested is not permitted by the operating system for the specified file handle, such as when &lt;em&gt;access&lt;/em&gt; is &lt;strong&gt;Write&lt;/strong&gt; or &lt;strong&gt;ReadWrite&lt;/strong&gt; and the file handle is set for read-only access.","pos":[11385,11625],"source":"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified file handle, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file handle is set for read-only access."},{"content":"&lt;/p&gt;\\n","pos":[11626,11632],"source":" </p>\\n"},{"pos":[12445,12499],"content":"FileStream(SafeFileHandle, FileAccess, Int32, Boolean)","needQuote":true,"nodes":[{"content":"FileStream(SafeFileHandle, FileAccess, Int32, Boolean)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;A file handle for the file that this &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[13836,13930],"source":"\\n<p>A file handle for the file that this <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[13931,13937],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[14593,14731],"source":"\\n<p>\\n<strong>true</strong> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[14732,14738],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;handle&lt;/em&gt; parameter is an invalid handle.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;handle&lt;/em&gt; parameter is a synchronous handle and it was used asynchronously.","pos":[14849,15012],"source":"\\n<p>The <em>handle</em> parameter is an invalid handle.</p>\\n<p>-or-</p>\\n<p>The <em>handle</em> parameter is a synchronous handle and it was used asynchronously."},{"content":"&lt;/p&gt;\\n","pos":[15013,15019],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;bufferSize&lt;/em&gt; parameter is negative.","pos":[15136,15187],"source":"\\n<p>The <em>bufferSize</em> parameter is negative."},{"content":"&lt;/p&gt;\\n","pos":[15188,15194],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as a disk error, occurred.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.","pos":[15285,15384],"source":"\\n<p>An I/O error, such as a disk error, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed."},{"content":"&lt;/p&gt;\\n","pos":[15386,15392],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[15507,15561],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[15562,15568],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;access&lt;/em&gt; requested is not permitted by the operating system for the specified file handle, such as when &lt;em&gt;access&lt;/em&gt; is &lt;strong&gt;Write&lt;/strong&gt; or &lt;strong&gt;ReadWrite&lt;/strong&gt; and the file handle is set for read-only access.","pos":[15685,15925],"source":"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified file handle, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file handle is set for read-only access."},{"content":"&lt;/p&gt;\\n","pos":[15926,15932],"source":" </p>\\n"},{"pos":[16577,16605],"content":"FileStream(String, FileMode)","needQuote":true,"nodes":[{"content":"FileStream(String, FileMode)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;A relative or absolute path for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[17474,17589],"source":"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[17590,17596],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how to open or create the file.","pos":[17664,17727],"source":"\\n<p>A constant that determines how to open or create the file."},{"content":"&lt;/p&gt;\\n","pos":[17728,17734],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[18442,18488],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18489,18495],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[18610,18664],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[18665,18671],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file cannot be found, such as when &lt;em&gt;mode&lt;/em&gt; is &lt;strong&gt;FileMode.Truncate&lt;/strong&gt; or &lt;strong&gt;FileMode.Open&lt;/strong&gt;, and the file specified by &lt;em&gt;path&lt;/em&gt; does not exist.","pos":[18782,18968],"source":"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist."},{"content":"The file must already exist in these modes.","pos":[18969,19012]},{"content":"&lt;/p&gt;\\n","pos":[19013,19019],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as specifying &lt;strong&gt;FileMode.CreateNew&lt;/strong&gt; when the file specified by &lt;em&gt;path&lt;/em&gt; already exists, occurred.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.","pos":[19110,19299],"source":"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed."},{"content":"&lt;/p&gt;\\n","pos":[19300,19306],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, such as being on an unmapped drive.","pos":[19427,19498],"source":"\\n<p>The specified path is invalid, such as being on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[19499,19505],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[19614,19699],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[19700,19829]},{"content":"&lt;/p&gt;\\n","pos":[19830,19836],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt; contains an invalid value.","pos":[19953,20000],"source":"\\n<p>\\n<em>mode</em> contains an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[20001,20007],"source":" </p>\\n"},{"pos":[20670,20710],"content":"FileStream(String, FileMode, FileAccess)","needQuote":true,"nodes":[{"content":"FileStream(String, FileMode, FileAccess)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;A relative or absolute path for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[21666,21781],"source":"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[21782,21788],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how to open or create the file.","pos":[21856,21919],"source":"\\n<p>A constant that determines how to open or create the file."},{"content":"&lt;/p&gt;\\n","pos":[21920,21926],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[22666,22712],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[22713,22719],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file cannot be found, such as when &lt;em&gt;mode&lt;/em&gt; is &lt;strong&gt;FileMode.Truncate&lt;/strong&gt; or &lt;strong&gt;FileMode.Open&lt;/strong&gt;, and the file specified by &lt;em&gt;path&lt;/em&gt; does not exist.","pos":[23419,23605],"source":"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist."},{"content":"The file must already exist in these modes.","pos":[23606,23649]},{"content":"&lt;/p&gt;\\n","pos":[23650,23656],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as specifying &lt;strong&gt;FileMode.CreateNew&lt;/strong&gt; when the file specified by &lt;em&gt;path&lt;/em&gt; already exists, occurred.","pos":[23747,23887],"source":"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.&lt;/p&gt;\\n","pos":[23888,23943],"source":" </p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[24058,24112],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[24113,24119],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, such as being on an unmapped drive.","pos":[24240,24311],"source":"\\n<p>The specified path is invalid, such as being on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[24312,24318],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;access&lt;/em&gt; requested is not permitted by the operating system for the specified &lt;em&gt;path&lt;/em&gt;, such as when &lt;em&gt;access&lt;/em&gt; is &lt;strong&gt;Write&lt;/strong&gt; or &lt;strong&gt;ReadWrite&lt;/strong&gt; and the file or directory is set for read-only access.","pos":[24435,24683],"source":"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access."},{"content":"&lt;/p&gt;\\n","pos":[24684,24690],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[24799,24884],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[24885,25014]},{"content":"&lt;/p&gt;\\n","pos":[25015,25021],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt; contains an invalid value.","pos":[25138,25185],"source":"\\n<p>\\n<em>mode</em> contains an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[25186,25192],"source":" </p>\\n"},{"pos":[25825,25876],"content":"FileStream(String, FileMode, FileAccess, FileShare)","needQuote":true,"nodes":[{"content":"FileStream(String, FileMode, FileAccess, FileShare)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;A relative or absolute path for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[26910,27025],"source":"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[27026,27032],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how to open or create the file.","pos":[27100,27163],"source":"\\n<p>A constant that determines how to open or create the file."},{"content":"&lt;/p&gt;\\n","pos":[27164,27170],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how the file will be shared by processes.","pos":[27861,27934],"source":"\\n<p>A constant that determines how the file will be shared by processes."},{"content":"&lt;/p&gt;\\n","pos":[27935,27941],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28060,28106],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28107,28113],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file cannot be found, such as when &lt;em&gt;mode&lt;/em&gt; is &lt;strong&gt;FileMode.Truncate&lt;/strong&gt; or &lt;strong&gt;FileMode.Open&lt;/strong&gt;, and the file specified by &lt;em&gt;path&lt;/em&gt; does not exist.","pos":[28813,28999],"source":"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist."},{"content":"The file must already exist in these modes.","pos":[29000,29043]},{"content":"&lt;/p&gt;\\n","pos":[29044,29050],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as specifying &lt;strong&gt;FileMode.CreateNew&lt;/strong&gt; when the file specified by &lt;em&gt;path&lt;/em&gt; already exists, occurred.","pos":[29141,29281],"source":"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The system is running Windows 98 or Windows 98 Second Edition and &lt;em&gt;share&lt;/em&gt; is set to &lt;strong&gt;FileShare.Delete&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.&lt;/p&gt;\\n","pos":[29282,29484],"source":" </p>\\n<p>-or-</p>\\n<p>The system is running Windows 98 or Windows 98 Second Edition and <em>share</em> is set to <strong>FileShare.Delete</strong>.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[29599,29653],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[29654,29660],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, such as being on an unmapped drive.","pos":[29781,29852],"source":"\\n<p>The specified path is invalid, such as being on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[29853,29859],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;access&lt;/em&gt; requested is not permitted by the operating system for the specified &lt;em&gt;path&lt;/em&gt;, such as when &lt;em&gt;access&lt;/em&gt; is &lt;strong&gt;Write&lt;/strong&gt; or &lt;strong&gt;ReadWrite&lt;/strong&gt; and the file or directory is set for read-only access.","pos":[29976,30224],"source":"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access."},{"content":"&lt;/p&gt;\\n","pos":[30225,30231],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[30340,30425],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[30426,30555]},{"content":"&lt;/p&gt;\\n","pos":[30556,30562],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt; contains an invalid value.","pos":[30679,30726],"source":"\\n<p>\\n<em>mode</em> contains an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[30727,30733],"source":" </p>\\n"},{"pos":[31416,31474],"content":"FileStream(String, FileMode, FileAccess, FileShare, Int32)","needQuote":true,"nodes":[{"content":"FileStream(String, FileMode, FileAccess, FileShare, Int32)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;A relative or absolute path for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[32566,32681],"source":"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[32682,32688],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how to open or create the file.","pos":[32756,32819],"source":"\\n<p>A constant that determines how to open or create the file."},{"content":"&lt;/p&gt;\\n","pos":[32820,32826],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how the file will be shared by processes.","pos":[33517,33590],"source":"\\n<p>A constant that determines how the file will be shared by processes."},{"content":"&lt;/p&gt;\\n","pos":[33591,33597],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[33961,34007],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[34008,34014],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;bufferSize&lt;/em&gt; is negative or zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt;, &lt;em&gt;access&lt;/em&gt;, or &lt;em&gt;share&lt;/em&gt; contain an invalid value.","pos":[34720,34867],"source":"\\n<p>\\n<em>bufferSize</em> is negative or zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> contain an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[34868,34874],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file cannot be found, such as when &lt;em&gt;mode&lt;/em&gt; is &lt;strong&gt;FileMode.Truncate&lt;/strong&gt; or &lt;strong&gt;FileMode.Open&lt;/strong&gt;, and the file specified by &lt;em&gt;path&lt;/em&gt; does not exist.","pos":[34985,35171],"source":"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist."},{"content":"The file must already exist in these modes.","pos":[35172,35215]},{"content":"&lt;/p&gt;\\n","pos":[35216,35222],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as specifying &lt;strong&gt;FileMode.CreateNew&lt;/strong&gt; when the file specified by &lt;em&gt;path&lt;/em&gt; already exists, occurred.","pos":[35313,35453],"source":"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The system is running Windows 98 or Windows 98 Second Edition and &lt;em&gt;share&lt;/em&gt; is set to &lt;strong&gt;FileShare.Delete&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.&lt;/p&gt;\\n","pos":[35454,35656],"source":" </p>\\n<p>-or-</p>\\n<p>The system is running Windows 98 or Windows 98 Second Edition and <em>share</em> is set to <strong>FileShare.Delete</strong>.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[35771,35825],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[35826,35832],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, such as being on an unmapped drive.","pos":[35953,36024],"source":"\\n<p>The specified path is invalid, such as being on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[36025,36031],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;access&lt;/em&gt; requested is not permitted by the operating system for the specified &lt;em&gt;path&lt;/em&gt;, such as when &lt;em&gt;access&lt;/em&gt; is &lt;strong&gt;Write&lt;/strong&gt; or &lt;strong&gt;ReadWrite&lt;/strong&gt; and the file or directory is set for read-only access.","pos":[36148,36396],"source":"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access."},{"content":"&lt;/p&gt;\\n","pos":[36397,36403],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[36512,36597],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[36598,36727]},{"content":"&lt;/p&gt;\\n","pos":[36728,36734],"source":" </p>\\n"},{"pos":[37469,37536],"content":"FileStream(String, FileMode, FileAccess, FileShare, Int32, Boolean)","needQuote":true,"nodes":[{"content":"FileStream(String, FileMode, FileAccess, FileShare, Int32, Boolean)","pos":[0,67]}]},{"content":"\\n&lt;p&gt;A relative or absolute path for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[38707,38822],"source":"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[38823,38829],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how to open or create the file.","pos":[38897,38960],"source":"\\n<p>A constant that determines how to open or create the file."},{"content":"&lt;/p&gt;\\n","pos":[38961,38967],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how the file will be shared by processes.","pos":[39658,39731],"source":"\\n<p>A constant that determines how the file will be shared by processes."},{"content":"&lt;/p&gt;\\n","pos":[39732,39738],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[41264,41310],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[41311,41317],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;bufferSize&lt;/em&gt; is negative or zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt;, &lt;em&gt;access&lt;/em&gt;, or &lt;em&gt;share&lt;/em&gt; contain an invalid value.","pos":[42023,42170],"source":"\\n<p>\\n<em>bufferSize</em> is negative or zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> contain an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[42171,42177],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file cannot be found, such as when &lt;em&gt;mode&lt;/em&gt; is &lt;strong&gt;FileMode.Truncate&lt;/strong&gt; or &lt;strong&gt;FileMode.Open&lt;/strong&gt;, and the file specified by &lt;em&gt;path&lt;/em&gt; does not exist.","pos":[42288,42474],"source":"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist."},{"content":"The file must already exist in these modes.","pos":[42475,42518]},{"content":"&lt;/p&gt;\\n","pos":[42519,42525],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as specifying &lt;strong&gt;FileMode.CreateNew&lt;/strong&gt; when the file specified by &lt;em&gt;path&lt;/em&gt; already exists, occurred.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The system is running Windows 98 or Windows 98 Second Edition and &lt;em&gt;share&lt;/em&gt; is set to &lt;strong&gt;FileShare.Delete&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.&lt;/p&gt;\\n","pos":[42616,42959],"source":"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred.</p>\\n<p>-or- </p>\\n<p>The system is running Windows 98 or Windows 98 Second Edition and <em>share</em> is set to <strong>FileShare.Delete</strong>.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[43074,43128],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[43129,43135],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, such as being on an unmapped drive.","pos":[43256,43327],"source":"\\n<p>The specified path is invalid, such as being on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[43328,43334],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;access&lt;/em&gt; requested is not permitted by the operating system for the specified &lt;em&gt;path&lt;/em&gt;, such as when &lt;em&gt;access&lt;/em&gt; is &lt;strong&gt;Write&lt;/strong&gt; or &lt;strong&gt;ReadWrite&lt;/strong&gt; and the file or directory is set for read-only access.","pos":[43451,43699],"source":"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access."},{"content":"&lt;/p&gt;\\n","pos":[43700,43706],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[43815,43900],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[43901,44030]},{"content":"&lt;/p&gt;\\n","pos":[44031,44037],"source":" </p>\\n"},{"pos":[44870,44941],"content":"FileStream(String, FileMode, FileAccess, FileShare, Int32, FileOptions)","needQuote":true,"nodes":[{"content":"FileStream(String, FileMode, FileAccess, FileShare, Int32, FileOptions)","pos":[0,71]}]},{"content":"\\n&lt;p&gt;A relative or absolute path for the file that the current &lt;strong&gt;FileStream&lt;/strong&gt; object will encapsulate.","pos":[46186,46301],"source":"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate."},{"content":"&lt;/p&gt;\\n","pos":[46302,46308],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how to open or create the file.","pos":[46376,46439],"source":"\\n<p>A constant that determines how to open or create the file."},{"content":"&lt;/p&gt;\\n","pos":[46440,46446],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A constant that determines how the file will be shared by processes.","pos":[47137,47210],"source":"\\n<p>A constant that determines how the file will be shared by processes."},{"content":"&lt;/p&gt;\\n","pos":[47211,47217],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value that specifies additional file options.&lt;/p&gt;\\n","pos":[47535,47593],"source":"\\n<p>A value that specifies additional file options.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[47712,47758],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[47759,47765],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;bufferSize&lt;/em&gt; is negative or zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt;, &lt;em&gt;access&lt;/em&gt;, or &lt;em&gt;share&lt;/em&gt; contain an invalid value.","pos":[48471,48618],"source":"\\n<p>\\n<em>bufferSize</em> is negative or zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> contain an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[48619,48625],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file cannot be found, such as when &lt;em&gt;mode&lt;/em&gt; is &lt;strong&gt;FileMode.Truncate&lt;/strong&gt; or &lt;strong&gt;FileMode.Open&lt;/strong&gt;, and the file specified by &lt;em&gt;path&lt;/em&gt; does not exist.","pos":[48736,48922],"source":"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist."},{"content":"The file must already exist in these modes.","pos":[48923,48966]},{"content":"&lt;/p&gt;\\n","pos":[48967,48973],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as specifying &lt;strong&gt;FileMode.CreateNew&lt;/strong&gt; when the file specified by &lt;em&gt;path&lt;/em&gt; already exists, occurred.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The stream has been closed.&lt;/p&gt;\\n","pos":[49064,49259],"source":"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[49374,49428],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[49429,49435],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, such as being on an unmapped drive.","pos":[49556,49627],"source":"\\n<p>The specified path is invalid, such as being on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[49628,49634],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[50327,50412],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[50413,50542]},{"content":"&lt;/p&gt;\\n","pos":[50543,50549],"source":" </p>\\n"},{"pos":[50992,50999],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the stream supports reading; &lt;strong&gt;false&lt;/strong&gt; if the stream is closed or was opened with write-only access.&lt;/p&gt;\\n","pos":[51655,51806],"source":"\\n<p>\\n<strong>true</strong> if the stream supports reading; <strong>false</strong> if the stream is closed or was opened with write-only access.</p>\\n"},{"pos":[52148,52155],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the stream supports seeking; &lt;strong&gt;false&lt;/strong&gt; if the stream is closed or if the &lt;strong&gt;FileStream&lt;/strong&gt; was constructed from an operating-system handle such as a pipe or output to the console.&lt;/p&gt;\\n","pos":[52811,53051],"source":"\\n<p>\\n<strong>true</strong> if the stream supports seeking; <strong>false</strong> if the stream is closed or if the <strong>FileStream</strong> was constructed from an operating-system handle such as a pipe or output to the console.</p>\\n"},{"pos":[53396,53404],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the stream supports writing; &lt;strong&gt;false&lt;/strong&gt; if the stream is closed or was opened with read-only access.&lt;/p&gt;\\n","pos":[54064,54214],"source":"\\n<p>\\n<strong>true</strong> if the stream supports writing; <strong>false</strong> if the stream is closed or was opened with read-only access.</p>\\n"},{"pos":[54558,54565],"content":"IsAsync","needQuote":true,"nodes":[{"content":"IsAsync","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the &lt;strong&gt;FileStream&lt;/strong&gt; was opened asynchronously; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[55261,55392],"source":"\\n<p>\\n<strong>true</strong> if the <strong>FileStream</strong> was opened asynchronously; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[55693,55699],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;A long value representing the length of the stream in bytes.&lt;/p&gt;\\n","pos":[56382,56453],"source":"\\n<p>A long value representing the length of the stream in bytes.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error, such as the file being closed, occurred.","pos":[56846,56905],"source":"\\n<p>An I/O error, such as the file being closed, occurred."},{"content":"&lt;/p&gt;\\n","pos":[56906,56912],"source":" </p>\\n"},{"pos":[57205,57209],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;A string that is the name of the &lt;strong&gt;FileStream&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[57915,57987],"source":"\\n<p>A string that is the name of the <strong>FileStream</strong>.</p>\\n"},{"pos":[58387,58395],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The current position of this stream.&lt;/p&gt;\\n","pos":[59102,59149],"source":"\\n<p>The current position of this stream.</p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support seeking.","pos":[59308,59349],"source":"\\n<p>The stream does not support seeking."},{"content":"&lt;/p&gt;\\n","pos":[59350,59356],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[59447,59474],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;The position was set to a very large value beyond the end of the stream in Windows 98 or earlier.&lt;/p&gt;\\n","pos":[59475,59602],"source":" </p>\\n<p>- or -</p>\\n<p>The position was set to a very large value beyond the end of the stream in Windows 98 or earlier.</p>\\n"},{"content":"\\n&lt;p&gt;Attempted to set the position to a negative value.","pos":[59719,59774],"source":"\\n<p>Attempted to set the position to a negative value."},{"content":"&lt;/p&gt;\\n","pos":[59775,59781],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Attempted seeking past the end of a stream that does not support this.","pos":[59890,59965],"source":"\\n<p>Attempted seeking past the end of a stream that does not support this."},{"content":"&lt;/p&gt;\\n","pos":[59966,59972],"source":" </p>\\n"},{"pos":[60292,60306],"content":"SafeFileHandle","needQuote":true,"nodes":[{"content":"SafeFileHandle","pos":[0,14]}]},{"pos":[62246,62262],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.","pos":[63129,63266],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[63267,63273],"source":" </p>\\n"},{"pos":[63628,63638],"content":"Finalize()","needQuote":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[64585,64592],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[65288,65315],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[65316,65322],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.","pos":[65431,65457],"source":"\\n<p>The stream is closed."},{"content":"&lt;/p&gt;\\n","pos":[65458,65464],"source":" </p>\\n"},{"pos":[65912,65926],"content":"Flush(Boolean)","needQuote":true,"nodes":[{"content":"Flush(Boolean)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to flush all intermediate file buffers; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[66747,66850],"source":"\\n<p>\\n<strong>true</strong> to flush all intermediate file buffers; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[66851,66857],"source":" </p>\\n"},{"pos":[67356,67385],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The token to monitor for cancellation requests.&lt;/p&gt;\\n","pos":[68491,68549],"source":"\\n<p>The token to monitor for cancellation requests.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous flush operation.","pos":[68623,68684],"source":"\\n<p>A task that represents the asynchronous flush operation."},{"content":"&lt;/p&gt;\\n","pos":[68685,68691],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream has been disposed.&lt;/p&gt;\\n","pos":[68892,68932],"source":"\\n<p>The stream has been disposed.</p>\\n"},{"pos":[69350,69376],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the specified byte array with the values between &lt;em&gt;offset&lt;/em&gt; and (&lt;em&gt;offset&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; - 1&lt;em&gt;)&lt;/em&gt; replaced by the bytes read from the current source.","pos":[70230,70438],"source":"\\n<p>When this method returns, contains the specified byte array with the values between <em>offset</em> and (<em>offset</em> + <em>count</em> - 1<em>)</em> replaced by the bytes read from the current source."},{"content":"&lt;/p&gt;\\n","pos":[70439,70445],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;array&lt;/em&gt; at which the read bytes will be placed.","pos":[70813,70891],"source":"\\n<p>The byte offset in <em>array</em> at which the read bytes will be placed."},{"content":"&lt;/p&gt;\\n","pos":[70892,70898],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to read.","pos":[70961,71002],"source":"\\n<p>The maximum number of bytes to read."},{"content":"&lt;/p&gt;\\n","pos":[71003,71009],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The total number of bytes read into the buffer.","pos":[71068,71120],"source":"\\n<p>The total number of bytes read into the buffer."},{"content":"This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.&lt;/p&gt;\\n","pos":[71121,71278],"source":" This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[71474,71521],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[71522,71528],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.","pos":[71645,71698],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is negative."},{"content":"&lt;/p&gt;\\n","pos":[71699,71705],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support reading.","pos":[71810,71851],"source":"\\n<p>The stream does not support reading."},{"content":"&lt;/p&gt;\\n","pos":[71852,71858],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[71949,71976],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[71977,71983],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; describe an invalid range in &lt;em&gt;array&lt;/em&gt;.","pos":[72080,72166],"source":"\\n<p>\\n<em>offset</em> and <em>count</em> describe an invalid range in <em>array</em>."},{"content":"&lt;/p&gt;\\n","pos":[72167,72173],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Methods were called after the stream was closed.","pos":[72282,72335],"source":"\\n<p>Methods were called after the stream was closed."},{"content":"&lt;/p&gt;\\n","pos":[72336,72342],"source":" </p>\\n"},{"pos":[73056,73106],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The buffer to write the data into.&lt;/p&gt;\\n","pos":[74347,74392],"source":"\\n<p>The buffer to write the data into.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;buffer&lt;/em&gt; at which to begin writing data from the stream.&lt;/p&gt;\\n","pos":[74456,74549],"source":"\\n<p>The byte offset in <em>buffer</em> at which to begin writing data from the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to read.&lt;/p&gt;\\n","pos":[74612,74659],"source":"\\n<p>The maximum number of bytes to read.</p>\\n"},{"content":"\\n&lt;p&gt;The token to monitor for cancellation requests.&lt;/p&gt;\\n","pos":[74756,74814],"source":"\\n<p>The token to monitor for cancellation requests.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous read operation.","pos":[74902,74962],"source":"\\n<p>A task that represents the asynchronous read operation."},{"content":"The value of the &lt;em&gt;TResult&lt;/em&gt; parameter contains the total number of bytes read into the buffer.","pos":[74963,75063],"source":" The value of the <em>TResult</em> parameter contains the total number of bytes read into the buffer."},{"content":"The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","pos":[75064,75270]},{"content":"&lt;/p&gt;\\n","pos":[75271,75277],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[75513,75567],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[75684,75743],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The sum of &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; is larger than the buffer length.&lt;/p&gt;\\n","pos":[75840,75930],"source":"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support reading.&lt;/p&gt;\\n","pos":[76035,76082],"source":"\\n<p>The stream does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The stream has been disposed.&lt;/p&gt;\\n","pos":[76191,76231],"source":"\\n<p>The stream has been disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is currently in use by a previous read operation.","pos":[76344,76409],"source":"\\n<p>The stream is currently in use by a previous read operation."},{"content":"&lt;/p&gt;\\n","pos":[76410,76416],"source":" </p>\\n"},{"pos":[77012,77022],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The current stream does not support reading.","pos":[78034,78083],"source":"\\n<p>The current stream does not support reading."},{"content":"&lt;/p&gt;\\n","pos":[78084,78090],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current stream is closed.","pos":[78199,78233],"source":"\\n<p>The current stream is closed."},{"content":"&lt;/p&gt;\\n","pos":[78234,78240],"source":" </p>\\n"},{"pos":[78621,78644],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The point relative to &lt;em&gt;origin&lt;/em&gt; from which to begin seeking.","pos":[79441,79512],"source":"\\n<p>The point relative to <em>origin</em> from which to begin seeking."},{"content":"&lt;/p&gt;\\n","pos":[79513,79519],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The new position in the stream.&lt;/p&gt;\\n","pos":[79865,79907],"source":"\\n<p>The new position in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[80083,80110],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[80111,80117],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support seeking, such as if the &lt;strong&gt;FileStream&lt;/strong&gt; is constructed from a pipe or console output.","pos":[80222,80352],"source":"\\n<p>The stream does not support seeking, such as if the <strong>FileStream</strong> is constructed from a pipe or console output."},{"content":"&lt;/p&gt;\\n","pos":[80353,80359],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Seeking is attempted before the beginning of the stream.","pos":[80456,80517],"source":"\\n<p>Seeking is attempted before the beginning of the stream."},{"content":"&lt;/p&gt;\\n","pos":[80518,80524],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Methods were called after the stream was closed.","pos":[80633,80686],"source":"\\n<p>Methods were called after the stream was closed."},{"content":"&lt;/p&gt;\\n","pos":[80687,80693],"source":" </p>\\n"},{"pos":[81039,81055],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The new length of the stream.","pos":[81783,81817],"source":"\\n<p>The new length of the stream."},{"content":"&lt;/p&gt;\\n","pos":[81818,81824],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error has occurred.","pos":[81984,82015],"source":"\\n<p>An I/O error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[82016,82022],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support both writing and seeking.","pos":[82127,82185],"source":"\\n<p>The stream does not support both writing and seeking."},{"content":"&lt;/p&gt;\\n","pos":[82186,82192],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Attempted to set the &lt;em&gt;value&lt;/em&gt; parameter to less than 0.","pos":[82309,82375],"source":"\\n<p>Attempted to set the <em>value</em> parameter to less than 0."},{"content":"&lt;/p&gt;\\n","pos":[82376,82382],"source":" </p>\\n"},{"pos":[82790,82817],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The buffer containing data to write to the stream.&lt;/p&gt;\\n","pos":[83616,83677],"source":"\\n<p>The buffer containing data to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based byte offset in &lt;em&gt;array&lt;/em&gt; from which to begin copying bytes to the stream.","pos":[83741,83839],"source":"\\n<p>The zero-based byte offset in <em>array</em> from which to begin copying bytes to the stream."},{"content":"&lt;/p&gt;\\n","pos":[83840,83846],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to write.","pos":[83909,83951],"source":"\\n<p>The maximum number of bytes to write."},{"content":"&lt;/p&gt;\\n","pos":[83952,83958],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[84155,84202],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[84203,84209],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; describe an invalid range in &lt;em&gt;array&lt;/em&gt;.","pos":[84306,84392],"source":"\\n<p>\\n<em>offset</em> and <em>count</em> describe an invalid range in <em>array</em>."},{"content":"&lt;/p&gt;\\n","pos":[84393,84399],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.","pos":[84516,84569],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is negative."},{"content":"&lt;/p&gt;\\n","pos":[84570,84576],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[84667,84694],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;Another thread may have caused an unexpected change in the position of the operating system's file handle.","pos":[84695,84825],"source":" </p>\\n<p>- or -</p>\\n<p>Another thread may have caused an unexpected change in the position of the operating system's file handle."},{"content":"&lt;/p&gt;\\n","pos":[84826,84832],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.","pos":[84941,84967],"source":"\\n<p>The stream is closed."},{"content":"&lt;/p&gt;\\n","pos":[84968,84974],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current stream instance does not support writing.","pos":[85079,85137],"source":"\\n<p>The current stream instance does not support writing."},{"content":"&lt;/p&gt;\\n","pos":[85138,85144],"source":" </p>\\n"},{"pos":[85865,85916],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The buffer to write data from.","pos":[87156,87191],"source":"\\n<p>The buffer to write data from."},{"content":"&lt;/p&gt;\\n","pos":[87192,87198],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The zero-based byte offset in &lt;em&gt;buffer&lt;/em&gt; from which to begin copying bytes to the stream.&lt;/p&gt;\\n","pos":[87262,87367],"source":"\\n<p>The zero-based byte offset in <em>buffer</em> from which to begin copying bytes to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to write.&lt;/p&gt;\\n","pos":[87430,87478],"source":"\\n<p>The maximum number of bytes to write.</p>\\n"},{"content":"\\n&lt;p&gt;The token to monitor for cancellation requests.&lt;/p&gt;\\n","pos":[87575,87633],"source":"\\n<p>The token to monitor for cancellation requests.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[87707,87774],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[88011,88065],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[88182,88241],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The sum of &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; is larger than the buffer length.&lt;/p&gt;\\n","pos":[88338,88428],"source":"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support writing.&lt;/p&gt;\\n","pos":[88533,88580],"source":"\\n<p>The stream does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The stream has been disposed.&lt;/p&gt;\\n","pos":[88689,88729],"source":"\\n<p>The stream has been disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is currently in use by a previous write operation.","pos":[88842,88908],"source":"\\n<p>The stream is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[88909,88915],"source":" </p>\\n"},{"pos":[89557,89572],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A byte to write to the stream.","pos":[90305,90340],"source":"\\n<p>A byte to write to the stream."},{"content":"&lt;/p&gt;\\n","pos":[90341,90347],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.","pos":[90524,90550],"source":"\\n<p>The stream is closed."},{"content":"&lt;/p&gt;\\n","pos":[90551,90557],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support writing.","pos":[90662,90703],"source":"\\n<p>The stream does not support writing."},{"content":"&lt;/p&gt;\\n","pos":[90704,90710],"source":" </p>\\n"},{"pos":[90897,90906],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[91046,91052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91208,91226],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[91413,91419],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[91575,91586],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[91964,91983],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[92124,92135],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[92189,92190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92243,92249],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[92291,92292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92386,92397],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[92451,92452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92505,92511],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[92553,92554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92797,92823],"content":"CopyToAsync(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32)","pos":[0,26]}]},{"pos":[92991,93002],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[93056,93057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93110,93116],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[93159,93160]},{"pos":[93214,93219],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[93278,93279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93386,93397],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[93451,93452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93505,93511],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[93554,93555]},{"pos":[93609,93614],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[93673,93674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93972,94017],"content":"CopyToAsync(Stream, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32, CancellationToken)","pos":[0,45]}]},{"pos":[94256,94267],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[94321,94322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94375,94381],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[94424,94425]},{"pos":[94479,94484],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[94544,94545]},{"pos":[94621,94638],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[94719,94720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94862,94873],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[94927,94928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94981,94987],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[95030,95031]},{"pos":[95085,95090],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[95150,95151]},{"pos":[95227,95244],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[95325,95326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95626,95640],"content":"CopyTo(Stream)","needQuote":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[95771,95777],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[95826,95827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95880,95886],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[95928,95929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96018,96024],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[96073,96074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96127,96133],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[96175,96176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96404,96425],"content":"CopyTo(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Stream, Int32)","pos":[0,21]}]},{"pos":[96583,96589],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[96638,96639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96692,96698],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[96741,96742]},{"pos":[96796,96801],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[96860,96861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96963,96969],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[97018,97019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97072,97078],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[97121,97122]},{"pos":[97176,97181],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[97240,97241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97457,97464],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[97559,97564],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[97633,97634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97661,97662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97732,97737],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[97806,97807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97834,97835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98008,98017],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[98116,98123],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[98173,98174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98201,98202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98274,98281],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[98331,98332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98359,98360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98540,98552],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[98657,98667],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[98720,98721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98748,98749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98824,98834],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[98887,98888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98915,98916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99107,99125],"content":"CreateWaitHandle()","needQuote":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[99242,99258],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[99338,99339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99366,99367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99448,99464],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[99544,99545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99572,99573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99845,99899],"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,54]}]},{"pos":[100344,100353],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[100426,100427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100475,100479],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[100538,100540]},{"content":",","pos":[100572,100573]},{"pos":[100627,100632],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100692,100693]},{"pos":[100747,100752],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100812,100813]},{"pos":[100875,100888],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[100956,100957]},{"pos":[101012,101018],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101078,101079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101229,101238],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[101311,101312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101360,101364],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[101422,101424],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[101453,101454]},{"pos":[101508,101513],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[101573,101574]},{"pos":[101628,101633],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[101693,101694]},{"pos":[101756,101769],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[101837,101838]},{"pos":[101893,101899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101959,101960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102361,102382],"content":"EndRead(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[102521,102528],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[102599,102600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102656,102668],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[102734,102735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102828,102835],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[102906,102907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102963,102975],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[103041,103042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103294,103325],"content":"ReadAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32)","pos":[0,31]}]},{"pos":[103638,103647],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[103699,103700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103748,103752],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[103811,103813]},{"content":",","pos":[103845,103846]},{"pos":[103900,103905],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[103965,103966]},{"pos":[104020,104025],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104084,104085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104200,104209],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[104261,104262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104310,104314],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[104372,104374],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[104403,104404]},{"pos":[104458,104463],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[104523,104524]},{"pos":[104578,104583],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104642,104643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105021,105076],"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,55]}]},{"pos":[105525,105535],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[105609,105610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105658,105662],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[105721,105723]},{"content":",","pos":[105755,105756]},{"pos":[105810,105815],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[105875,105876]},{"pos":[105930,105935],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[105995,105996]},{"pos":[106058,106071],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[106139,106140]},{"pos":[106195,106201],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[106261,106262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106413,106423],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[106497,106498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106546,106550],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[106608,106610],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[106639,106640]},{"pos":[106694,106699],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[106759,106760]},{"pos":[106814,106819],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[106879,106880]},{"pos":[106942,106955],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[107023,107024]},{"pos":[107079,107085],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[107145,107146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107551,107573],"content":"EndWrite(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[107714,107722],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[107794,107795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107851,107863],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[107929,107930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108024,108032],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[108104,108105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108161,108173],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[108239,108240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108495,108527],"content":"WriteAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32)","pos":[0,32]}]},{"pos":[108844,108854],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[108907,108908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108956,108960],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[109019,109021]},{"content":",","pos":[109053,109054]},{"pos":[109108,109113],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[109173,109174]},{"pos":[109228,109233],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109292,109293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109409,109419],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[109472,109473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109521,109525],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[109583,109585],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[109614,109615]},{"pos":[109669,109674],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[109734,109735]},{"pos":[109789,109794],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109853,109854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110179,110199],"content":"Synchronized(Stream)","needQuote":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[110342,110354],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[110430,110431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110484,110490],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[110553,110554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110649,110661],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[110737,110738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110791,110797],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[110860,110861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111079,111096],"content":"ObjectInvariant()","needQuote":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[111211,111226],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[111305,111306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111333,111334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111414,111429],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[111508,111509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111536,111537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111733,111743],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[111952,111963],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[112176,112188],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[112440,112464],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[112627,112642],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[112730,112731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112782,112789],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[112850,112851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112956,112971],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[113059,113060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113111,113118],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[113179,113180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113445,113465],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[113604,113622],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[113713,113714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113741,113742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113834,113852],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[113943,113944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113971,113972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114227,114254],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[114407,114432],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[114530,114531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114558,114559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114658,114683],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[114781,114782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114809,114810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115079,115097],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[115248,115260],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[115345,115346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115394,115398],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[115456,115457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115556,115568],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[115653,115654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115702,115706],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[115764,115765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115984,115994],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[116089,116097],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[116166,116167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116194,116195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116265,116273],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[116342,116343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116370,116371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116554,116568],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[116687,116693],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[116760,116761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116811,116817],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[116877,116878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116961,116967],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[117034,117035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117085,117091],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[117151,117152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117366,117388],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[117536,117542],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[117609,117610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117660,117666],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[117727,117728]},{"pos":[117783,117789],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[117849,117850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117947,117953],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[118020,118021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118071,118077],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[118138,118139]},{"pos":[118194,118200],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[118260,118261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118506,118537],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[118703,118718],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[118794,118795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118845,118851],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[118912,118913]},{"pos":[118968,118974],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[119034,119035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119141,119156],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[119232,119233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119283,119289],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[119350,119351]},{"pos":[119406,119412],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[119472,119473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119703,119716],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[119817,119828],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[119900,119901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119928,119929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120002,120013],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[120085,120086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120113,120114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120289,120298],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[120391,120398],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[120466,120467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120494,120495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120564,120571],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[120639,120640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120667,120668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120843,120860],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[120969,120984],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[121060,121061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121088,121089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121166,121181],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[121257,121258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121285,121286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121614,121629],"content":"AsInputStream()","needQuote":true,"nodes":[{"content":"AsInputStream()","pos":[0,15]}]},{"pos":[121788,121801],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[121881,121882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121909,121910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122012,122025],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[122105,122106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122133,122134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122529,122545],"content":"AsOutputStream()","needQuote":true,"nodes":[{"content":"AsOutputStream()","pos":[0,16]}]},{"pos":[122706,122720],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[122801,122802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122829,122830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122933,122947],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[123028,123029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123056,123057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123466,123488],"content":"AsRandomAccessStream()","needQuote":true,"nodes":[{"content":"AsRandomAccessStream()","pos":[0,22]}]},{"pos":[123661,123681],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[123768,123769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123796,123797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123906,123926],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[124013,124014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124041,124042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124266,124272],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[124444,124465],"content":"AsInputStream(Stream)","needQuote":true,"nodes":[{"content":"AsInputStream(Stream)","pos":[0,21]}]},{"pos":[124658,124671],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[124751,124752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124805,124811],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[124874,124875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124995,125008],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[125088,125089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125142,125148],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[125211,125212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125482,125512],"content":"WindowsRuntimeStreamExtensions","needQuote":true,"nodes":[{"content":"WindowsRuntimeStreamExtensions","pos":[0,30]}]},{"pos":[125777,125799],"content":"AsOutputStream(Stream)","needQuote":true,"nodes":[{"content":"AsOutputStream(Stream)","pos":[0,22]}]},{"pos":[125994,126008],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[126089,126090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126143,126149],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[126212,126213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126334,126348],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[126429,126430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126483,126489],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[126552,126553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126843,126871],"content":"AsRandomAccessStream(Stream)","needQuote":true,"nodes":[{"content":"AsRandomAccessStream(Stream)","pos":[0,28]}]},{"pos":[127078,127098],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[127185,127186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127239,127245],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[127308,127309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127436,127456],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[127543,127544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127597,127603],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[127666,127667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127971,127985],"content":"SafeFileHandle","needQuote":true,"nodes":[{"content":"SafeFileHandle","pos":[0,14]}]},{"pos":[128206,128216],"content":"FileAccess","needQuote":true,"nodes":[{"content":"FileAccess","pos":[0,10]}]},{"pos":[128376,128403],"content":"Microsoft.Win32.SafeHandles","needQuote":true,"nodes":[{"content":"Microsoft.Win32.SafeHandles","pos":[0,27]}]},{"pos":[128596,128601],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[128744,128751],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[128899,128905],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[129058,129066],"content":"FileMode","needQuote":true,"nodes":[{"content":"FileMode","pos":[0,8]}]},{"pos":[129232,129241],"content":"FileShare","needQuote":true,"nodes":[{"content":"FileShare","pos":[0,9]}]},{"pos":[129412,129423],"content":"FileOptions","needQuote":true,"nodes":[{"content":"FileOptions","pos":[0,11]}]},{"pos":[129610,129617],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[129813,129820],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[130017,130025],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[130223,130229],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[130400,130405],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[130569,130577],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[130791,130807],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[130936,130943],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[130993,130994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131045,131052],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[131113,131114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131202,131209],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[131259,131260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131311,131318],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[131379,131380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131578,131585],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[131680,131685],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[131733,131734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131761,131762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131832,131837],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[131885,131886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131913,131914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132125,132154],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[132329,132339],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[132392,132393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132464,132481],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[132562,132563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132674,132684],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[132737,132738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132809,132826],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[132907,132908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133154,133171],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[133399,133403],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[133560,133576],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[133729,133751],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[133988,134014],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"pos":[134307,134311],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[134358,134359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134407,134411],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[134470,134472]},{"content":",","pos":[134504,134505]},{"pos":[134559,134564],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[134624,134625]},{"pos":[134679,134684],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[134743,134744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134854,134858],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[134905,134906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134954,134958],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[135016,135018],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[135047,135048]},{"pos":[135102,135107],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[135167,135168]},{"pos":[135222,135227],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[135286,135287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135514,135520],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[135640,135644],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[135703,135705]},{"pos":[135768,135772],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[135830,135832],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[136063,136113],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[136552,136561],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[136613,136614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136662,136666],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[136725,136727]},{"content":",","pos":[136759,136760]},{"pos":[136814,136819],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[136879,136880]},{"pos":[136934,136939],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[136999,137000]},{"pos":[137076,137093],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[137174,137175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137325,137334],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[137386,137387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137435,137439],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[137497,137499],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[137528,137529]},{"pos":[137583,137588],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[137648,137649]},{"pos":[137703,137708],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[137768,137769]},{"pos":[137845,137862],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[137943,137944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138364,138375],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[138580,138584],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[138658,138659],"content":"<","needQuote":true,"nodes":[]},{"pos":[138708,138713],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[138854,138858],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[138933,138936]},{"pos":[138992,138997],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[139056,139057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139258,139271],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[139468,139472],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[139525,139526],"content":"<","needQuote":true,"nodes":[]},{"pos":[139553,139560],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[139675,139679],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[139733,139736]},{"pos":[139770,139777],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[139810,139811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140027,140037],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[140138,140146],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[140197,140198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140225,140226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140299,140307],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[140358,140359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140386,140387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140597,140620],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"pos":[140782,140786],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[140833,140834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140883,140888],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[140948,140949]},{"pos":[141011,141021],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[141067,141068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141172,141176],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[141223,141224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141273,141278],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[141338,141339]},{"pos":[141401,141411],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[141457,141458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141670,141680],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[141879,141895],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[142024,142033],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[142085,142086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142135,142140],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[142199,142200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142288,142297],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[142349,142350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142399,142404],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[142463,142464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142702,142729],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"pos":[143026,143031],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[143079,143080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143128,143132],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[143191,143193]},{"content":",","pos":[143225,143226]},{"pos":[143280,143285],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[143345,143346]},{"pos":[143400,143405],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[143464,143465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143576,143581],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[143629,143630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143678,143682],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[143740,143742],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[143771,143772]},{"pos":[143826,143831],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[143891,143892]},{"pos":[143946,143951],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[144010,144011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144377,144428],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[144871,144881],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[144934,144935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144983,144987],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[145046,145048]},{"content":",","pos":[145080,145081]},{"pos":[145135,145140],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[145200,145201]},{"pos":[145255,145260],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[145320,145321]},{"pos":[145397,145414],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[145495,145496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145647,145657],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[145710,145711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145759,145763],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[145821,145823],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[145852,145853]},{"pos":[145907,145912],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[145972,145973]},{"pos":[146027,146032],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[146092,146093]},{"pos":[146169,146186],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[146267,146268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146658,146673],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[146800,146809],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[146861,146862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146910,146914],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[146972,146973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147060,147069],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[147121,147122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147170,147174],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[147232,147233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147408,147412],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[147562,147579],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[147760,147777],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[147984,147995],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[148182,148209],"content":"UnauthorizedAccessException","needQuote":true,"nodes":[{"content":"UnauthorizedAccessException","pos":[0,27]}]},{"pos":[148421,148448],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[148671,148692],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[148880,148901],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[149092,149113],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[149315,149341],"content":"DirectoryNotFoundException","needQuote":true,"nodes":[{"content":"DirectoryNotFoundException","pos":[0,26]}]},{"pos":[149552,149572],"content":"PathTooLongException","needQuote":true,"nodes":[{"content":"PathTooLongException","pos":[0,20]}]},{"pos":[149765,149785],"content":"EndOfStreamException","needQuote":true,"nodes":[{"content":"EndOfStreamException","pos":[0,20]}]},{"pos":[149978,150001],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[150216,150241],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.IO.FileStream\n  commentId: T:System.IO.FileStream\n  id: FileStream\n  parent: System.IO\n  children:\n  - System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)\n  - System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)\n  - System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)\n  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode)\n  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)\n  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)\n  - System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)\n  - System.IO.FileStream.CanRead\n  - System.IO.FileStream.CanSeek\n  - System.IO.FileStream.CanWrite\n  - System.IO.FileStream.Dispose(System.Boolean)\n  - System.IO.FileStream.Finalize\n  - System.IO.FileStream.Flush\n  - System.IO.FileStream.Flush(System.Boolean)\n  - System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.FileStream.IsAsync\n  - System.IO.FileStream.Length\n  - System.IO.FileStream.Name\n  - System.IO.FileStream.Position\n  - System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.FileStream.ReadByte\n  - System.IO.FileStream.SafeFileHandle\n  - System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.FileStream.SetLength(System.Int64)\n  - System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.FileStream.WriteByte(System.Byte)\n  langs:\n  - csharp\n  - vb\n  name: FileStream\n  fullName: System.IO.FileStream\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FileStream\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 374\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Provides a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a file, supporting both synchronous and asynchronous read and write operations.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public class FileStream : Stream, IDisposable\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Class FileStream\n          Inherits Stream\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.Stream.Null\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.Close\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.WriteTimeout\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: FileStream\n  extensionMethods:\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n- uid: System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)\n  commentId: M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)\n  id: '#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(SafeFileHandle, FileAccess)\n  fullName: System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 874\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified file handle, with the specified read/write permission. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FileStream(SafeFileHandle handle, FileAccess access)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(handle As SafeFileHandle, access As FileAccess)\n    parameters:\n    - id: handle\n      type: Microsoft.Win32.SafeHandles.SafeFileHandle\n      description: \"\\n<p>A file handle for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A constant that sets the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>access</em> is not a field of <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as a disk error, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified file handle, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file handle is set for read-only access. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(SafeFileHandle, FileAccess)\n- uid: System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)\n  commentId: M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)\n  id: '#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(SafeFileHandle, FileAccess, Int32)\n  fullName: System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 879\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified file handle, with the specified read/write permission, and buffer size.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FileStream(SafeFileHandle handle, FileAccess access, int bufferSize)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(handle As SafeFileHandle, access As FileAccess, bufferSize As Integer)\n    parameters:\n    - id: handle\n      type: Microsoft.Win32.SafeHandles.SafeFileHandle\n      description: \"\\n<p>A file handle for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constant that sets the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>A positive <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value greater than 0 indicating the buffer size. The default buffer size is 4096.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>handle</em> parameter is an invalid handle.</p>\\n<p>-or-</p>\\n<p>The <em>handle</em> parameter is a synchronous handle and it was used asynchronously. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>bufferSize</em> parameter is negative. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as a disk error, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.  </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified file handle, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file handle is set for read-only access. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(SafeFileHandle, FileAccess, Int32)\n- uid: System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)\n  commentId: M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)\n  id: '#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(SafeFileHandle, FileAccess, Int32, Boolean)\n  fullName: System.IO.FileStream.FileStream(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess, System.Int32, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 884\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified file handle, with the specified read/write permission, buffer size, and synchronous or asynchronous state.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]\n\n      public FileStream(SafeFileHandle handle, FileAccess access, int bufferSize, bool isAsync)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <SecurityPermission(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)>\n\n      Public Sub New(handle As SafeFileHandle, access As FileAccess, bufferSize As Integer, isAsync As Boolean)\n    parameters:\n    - id: handle\n      type: Microsoft.Win32.SafeHandles.SafeFileHandle\n      description: \"\\n<p>A file handle for the file that this <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A constant that sets the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>A positive <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value greater than 0 indicating the buffer size. The default buffer size is 4096.</p>\\n\"\n    - id: isAsync\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <strong>false</strong>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>handle</em> parameter is an invalid handle.</p>\\n<p>-or-</p>\\n<p>The <em>handle</em> parameter is a synchronous handle and it was used asynchronously. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>bufferSize</em> parameter is negative. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as a disk error, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.  </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified file handle, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file handle is set for read-only access. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(SafeFileHandle, FileAccess, Int32, Boolean)\n- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode)\n  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)\n  id: '#ctor(System.String,System.IO.FileMode)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(String, FileMode)\n  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 405\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified path and creation mode.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FileStream(string path, FileMode mode)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(path As String, mode As FileMode)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A constant that determines how to open or create the file. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is an empty string (\\\"\\\"), contains only white space, or contains one or more invalid characters. </p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in an NTFS environment.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in a non-NTFS environment.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist. The file must already exist in these modes. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, such as being on an unmapped drive. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>mode</em> contains an invalid value. </p>\\n\"\n  seealso:\n  - type: System.IO.Path.InvalidPathChars\n    commentId: F:System.IO.Path.InvalidPathChars\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(String, FileMode)\n- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(String, FileMode, FileAccess)\n  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 410\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified path, creation mode, and read/write permission.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FileStream(string path, FileMode mode, FileAccess access)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(path As String, mode As FileMode, access As FileAccess)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A constant that determines how to open or create the file. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A constant that determines how the file can be accessed by the <strong>FileStream</strong> object. This also determines the values returned by the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. <xref href=\\\"System.IO.FileStream.CanSeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>true</strong> if <em>path</em> specifies a disk file. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is an empty string (\\\"\\\"), contains only white space, or contains one or more invalid characters. </p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in an NTFS environment.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in a non-NTFS environment.</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist. The file must already exist in these modes. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred. </p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, such as being on an unmapped drive. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>mode</em> contains an invalid value. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(String, FileMode, FileAccess)\n- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(String, FileMode, FileAccess, FileShare)\n  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 415\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified path, creation mode, read/write permission, and sharing permission.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FileStream(string path, FileMode mode, FileAccess access, FileShare share)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A constant that determines how to open or create the file. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A constant that determines how the file can be accessed by the <strong>FileStream</strong> object. This also determines the values returned by the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. <xref href=\\\"System.IO.FileStream.CanSeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>true</strong> if <em>path</em> specifies a disk file. </p>\\n\"\n    - id: share\n      type: System.IO.FileShare\n      description: \"\\n<p>A constant that determines how the file will be shared by processes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is an empty string (\\\"\\\"), contains only white space, or contains one or more invalid characters. </p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in an NTFS environment.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in a non-NTFS environment.</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist. The file must already exist in these modes. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred. </p>\\n<p>-or-</p>\\n<p>The system is running Windows 98 or Windows 98 Second Edition and <em>share</em> is set to <strong>FileShare.Delete</strong>.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, such as being on an unmapped drive. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>mode</em> contains an invalid value. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare)\n- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)\n  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(String, FileMode, FileAccess, FileShare, Int32)\n  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 420\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified path, creation mode, read/write and sharing permission, and buffer size.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FileStream(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A constant that determines how to open or create the file. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A constant that determines how the file can be accessed by the <strong>FileStream</strong> object. This also determines the values returned by the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. <xref href=\\\"System.IO.FileStream.CanSeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>true</strong> if <em>path</em> specifies a disk file. </p>\\n\"\n    - id: share\n      type: System.IO.FileShare\n      description: \"\\n<p>A constant that determines how the file will be shared by processes. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>A positive <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value greater than 0 indicating the buffer size. The default buffer size is 4096. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is an empty string (\\\"\\\"), contains only white space, or contains one or more invalid characters. </p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in an NTFS environment.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in a non-NTFS environment.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>bufferSize</em> is negative or zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> contain an invalid value. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist. The file must already exist in these modes. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred. </p>\\n<p>-or-</p>\\n<p>The system is running Windows 98 or Windows 98 Second Edition and <em>share</em> is set to <strong>FileShare.Delete</strong>.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, such as being on an unmapped drive. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare, Int32)\n- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)\n  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(String, FileMode, FileAccess, FileShare, Int32, Boolean)\n  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.Int32, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 456\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public FileStream(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, bool useAsync)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, useAsync As Boolean)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A constant that determines how to open or create the file. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A constant that determines how the file can be accessed by the <strong>FileStream</strong> object. This also determines the values returned by the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. <xref href=\\\"System.IO.FileStream.CanSeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>true</strong> if <em>path</em> specifies a disk file. </p>\\n\"\n    - id: share\n      type: System.IO.FileShare\n      description: \"\\n<p>A constant that determines how the file will be shared by processes. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>A positive <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value greater than 0 indicating the buffer size. The default buffer size is 4096.. </p>\\n\"\n    - id: useAsync\n      type: System.Boolean\n      description: \"\\n<p>Specifies whether to use asynchronous I/O or synchronous I/O. However, note that the underlying operating system might not support asynchronous I/O, so when specifying <strong>true</strong>, the handle might be opened synchronously depending on the platform. When opened asynchronously, the <xref href=\\\"System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> methods perform better on large reads or writes, but they might be much slower for small reads or writes. If the application is designed to take advantage of asynchronous I/O, set the <em>useAsync</em> parameter to <strong>true</strong>. Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is an empty string (\\\"\\\"), contains only white space, or contains one or more invalid characters. </p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in an NTFS environment.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in a non-NTFS environment.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>bufferSize</em> is negative or zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> contain an invalid value. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist. The file must already exist in these modes. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred.</p>\\n<p>-or- </p>\\n<p>The system is running Windows 98 or Windows 98 Second Edition and <em>share</em> is set to <strong>FileShare.Delete</strong>.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, such as being on an unmapped drive. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  seealso:\n  - type: System.IO.File\n    commentId: T:System.IO.File\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare, Int32, Boolean)\n- uid: System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)\n  commentId: M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)'\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FileStream(String, FileMode, FileAccess, FileShare, Int32, FileOptions)\n  fullName: System.IO.FileStream.FileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.Int32, System.IO.FileOptions)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 449\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FileStream(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, FileOptions options)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, options As FileOptions)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>A relative or absolute path for the file that the current <strong>FileStream</strong> object will encapsulate. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A constant that determines how to open or create the file. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A constant that determines how the file can be accessed by the <strong>FileStream</strong> object. This also determines the values returned by the <xref href=\\\"System.IO.FileStream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileStream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the <strong>FileStream</strong> object. <xref href=\\\"System.IO.FileStream.CanSeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>true</strong> if <em>path</em> specifies a disk file. </p>\\n\"\n    - id: share\n      type: System.IO.FileShare\n      description: \"\\n<p>A constant that determines how the file will be shared by processes. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>A positive <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value greater than 0 indicating the buffer size. The default buffer size is 4096.</p>\\n\"\n    - id: options\n      type: System.IO.FileOptions\n      description: \"\\n<p>A value that specifies additional file options.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is an empty string (\\\"\\\"), contains only white space, or contains one or more invalid characters. </p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in an NTFS environment.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> refers to a non-file device, such as \\\"con:\\\", \\\"com1:\\\", \\\"lpt1:\\\", etc. in a non-NTFS environment.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>bufferSize</em> is negative or zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> contain an invalid value. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file cannot be found, such as when <em>mode</em> is <strong>FileMode.Truncate</strong> or <strong>FileMode.Open</strong>, and the file specified by <em>path</em> does not exist. The file must already exist in these modes. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as specifying <strong>FileMode.CreateNew</strong> when the file specified by <em>path</em> already exists, occurred.</p>\\n<p>-or-</p>\\n<p>The stream has been closed.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, such as being on an unmapped drive. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <em>access</em> requested is not permitted by the operating system for the specified <em>path</em>, such as when <em>access</em> is <strong>Write</strong> or <strong>ReadWrite</strong> and the file or directory is set for read-only access. </p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.FileOptions.Encrypted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is specified for <em>options</em>, but file encryption is not supported on the current platform.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileStream.FileStream(String, FileMode, FileAccess, FileShare, Int32, FileOptions)\n- uid: System.IO.FileStream.CanRead\n  commentId: P:System.IO.FileStream.CanRead\n  id: CanRead\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.IO.FileStream.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanRead\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1030\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether the current stream supports reading.</p>\\n\"\n  syntax:\n    content: public override bool CanRead { get; }\n    content.vb: Public Overrides ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the stream supports reading; <strong>false</strong> if the stream is closed or was opened with write-only access.</p>\\n\"\n  overridden: System.IO.Stream.CanRead\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: FileStream.CanRead\n- uid: System.IO.FileStream.CanSeek\n  commentId: P:System.IO.FileStream.CanSeek\n  id: CanSeek\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: CanSeek\n  fullName: System.IO.FileStream.CanSeek\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanSeek\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1040\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether the current stream supports seeking.</p>\\n\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the stream supports seeking; <strong>false</strong> if the stream is closed or if the <strong>FileStream</strong> was constructed from an operating-system handle such as a pipe or output to the console.</p>\\n\"\n  overridden: System.IO.Stream.CanSeek\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: FileStream.CanSeek\n- uid: System.IO.FileStream.CanWrite\n  commentId: P:System.IO.FileStream.CanWrite\n  id: CanWrite\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.IO.FileStream.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanWrite\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1035\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether the current stream supports writing.</p>\\n\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the stream supports writing; <strong>false</strong> if the stream is closed or was opened with read-only access.</p>\\n\"\n  overridden: System.IO.Stream.CanWrite\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: FileStream.CanWrite\n- uid: System.IO.FileStream.IsAsync\n  commentId: P:System.IO.FileStream.IsAsync\n  id: IsAsync\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: IsAsync\n  fullName: System.IO.FileStream.IsAsync\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsAsync\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1045\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether the <strong>FileStream</strong> was opened asynchronously or synchronously.</p>\\n\"\n  syntax:\n    content: public virtual bool IsAsync { get; }\n    content.vb: Public Overridable ReadOnly Property IsAsync As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <strong>FileStream</strong> was opened asynchronously; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: FileStream.IsAsync\n- uid: System.IO.FileStream.Length\n  commentId: P:System.IO.FileStream.Length\n  id: Length\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.IO.FileStream.Length\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Length\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1049\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the length in bytes of the stream.</p>\\n\"\n  syntax:\n    content: >-\n      public override long Length\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overrides ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long value representing the length of the stream in bytes.</p>\\n\"\n  overridden: System.IO.Stream.Length\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileStream.CanSeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this stream is <strong>false</strong>. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error, such as the file being closed, occurred. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: FileStream.Length\n- uid: System.IO.FileStream.Name\n  commentId: P:System.IO.FileStream.Name\n  id: Name\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.IO.FileStream.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1073\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the name of the <strong>FileStream</strong> that was passed to the constructor.</p>\\n\"\n  syntax:\n    content: >-\n      public string Name\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string that is the name of the <strong>FileStream</strong>.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileStream.Name\n- uid: System.IO.FileStream.Position\n  commentId: P:System.IO.FileStream.Position\n  id: Position\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.IO.FileStream.Position\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Position\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1096\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the current position of this stream.</p>\\n\"\n  syntax:\n    content: >-\n      public override long Position\n\n      {\n          [SecuritySafeCritical]\n          get;\n          set;\n      }\n    content.vb: Public Overrides Property Position As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The current position of this stream.</p>\\n\"\n  overridden: System.IO.Stream.Position\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support seeking. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n<p>- or -</p>\\n<p>The position was set to a very large value beyond the end of the stream in Windows 98 or earlier.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>Attempted to set the position to a negative value. </p>\\n\"\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: \"\\n<p>Attempted seeking past the end of a stream that does not support this. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileStream.Position\n- uid: System.IO.FileStream.SafeFileHandle\n  commentId: P:System.IO.FileStream.SafeFileHandle\n  id: SafeFileHandle\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: SafeFileHandle\n  fullName: System.IO.FileStream.SafeFileHandle\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SafeFileHandle\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1293\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets a <xref href=\\\"Microsoft.Win32.SafeHandles.SafeFileHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the operating system file handle for the file that the current <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object encapsulates.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual SafeFileHandle SafeFileHandle\n\n      {\n          [SecurityCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property SafeFileHandle As SafeFileHandle\n    parameters: []\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeFileHandle\n      description: \"\\n<p>An object that represents the operating system file handle for the file that the current <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object encapsulates.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: FileStream.SafeFileHandle\n- uid: System.IO.FileStream.Dispose(System.Boolean)\n  commentId: M:System.IO.FileStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.FileStream.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1144\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      protected override void Dispose(bool disposing)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\\n\"\n  overridden: System.IO.Stream.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: FileStream.Dispose(Boolean)\n- uid: System.IO.FileStream.Finalize\n  commentId: M:System.IO.FileStream.Finalize\n  id: Finalize\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Finalize()\n  fullName: System.IO.FileStream.Finalize()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Finalize\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1180\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <strong>FileStream</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      protected void Finalize()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Protected Sub Finalize\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileStream.Finalize()\n- uid: System.IO.FileStream.Flush\n  commentId: M:System.IO.FileStream.Flush\n  id: Flush\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.IO.FileStream.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Flush\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1189\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Clears buffers for this stream and causes any buffered data to be written to the file.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.Stream.Flush\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed. </p>\\n\"\n  seealso:\n  - type: System.IO.FileStream.Flush(System.Boolean)\n    commentId: M:System.IO.FileStream.Flush(System.Boolean)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileStream.Flush()\n- uid: System.IO.FileStream.Flush(System.Boolean)\n  commentId: M:System.IO.FileStream.Flush(System.Boolean)\n  id: Flush(System.Boolean)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Flush(Boolean)\n  fullName: System.IO.FileStream.Flush(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Flush\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1194\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public virtual void Flush(bool flushToDisk)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overridable Sub Flush(flushToDisk As Boolean)\n    parameters:\n    - id: flushToDisk\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to flush all intermediate file buffers; otherwise, <strong>false</strong>. </p>\\n\"\n  seealso:\n  - type: System.IO.FileStream.Flush\n    commentId: M:System.IO.FileStream.Flush\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: FileStream.Flush(Boolean)\n- uid: System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)\n  commentId: M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)\n  id: FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FlushAsync\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 2648\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests. </p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      [SecuritySafeCritical]\n\n      public override Task FlushAsync(CancellationToken cancellationToken)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      <SecuritySafeCritical>\n\n      Public Overrides Function FlushAsync(cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous flush operation. </p>\\n\"\n  overridden: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileStream.FlushAsync(CancellationToken)\n- uid: System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.FileStream.Read(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Read\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1365\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Reads a block of bytes from the stream and writes the data in a given buffer.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int Read([In, Out] byte[] array, int offset, int count)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Read(array As Byte(), offset As Integer, count As Integer) As Integer\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: \"\\n<p>When this method returns, contains the specified byte array with the values between <em>offset</em> and (<em>offset</em> + <em>count</em> - 1<em>)</em> replaced by the bytes read from the current source. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.InAttribute\n        ctor: System.Runtime.InteropServices.InAttribute.#ctor\n        arguments: []\n      - type: System.Runtime.InteropServices.OutAttribute\n        ctor: System.Runtime.InteropServices.OutAttribute.#ctor\n        arguments: []\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>array</em> at which the read bytes will be placed. </p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to read. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The total number of bytes read into the buffer. This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</p>\\n\"\n  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is negative. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support reading. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>offset</em> and <em>count</em> describe an invalid range in <em>array</em>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>Methods were called after the stream was closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.FileStream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  nameWithType: FileStream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: FileStream.Read(Byte(), Int32, Int32)\n- uid: System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.FileStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadAsync\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 2423\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      [SecuritySafeCritical]\n\n      public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      <SecuritySafeCritical>\n\n      Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer to write the data into.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>buffer</em> at which to begin writing data from the stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to read.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>A task that represents the asynchronous read operation. The value of the <em>TResult</em> parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached. </p>\\n\"\n  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream has been disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream is currently in use by a previous read operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.FileStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: FileStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: FileStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.FileStream.ReadByte\n  commentId: M:System.IO.FileStream.ReadByte\n  id: ReadByte\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: ReadByte()\n  fullName: System.IO.FileStream.ReadByte()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadByte\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 2007\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Reads a byte from the file and advances the read position one byte.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int ReadByte()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ReadByte As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The byte, cast to an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or -1 if the end of the stream has been reached.</p>\\n\"\n  overridden: System.IO.Stream.ReadByte\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The current stream does not support reading. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The current stream is closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileStream.ReadByte()\n- uid: System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.FileStream.Seek(System.Int64, System.IO.SeekOrigin)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Seek\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1476\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the current position of this stream to the given value.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override long Seek(long offset, SeekOrigin origin)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The point relative to <em>origin</em> from which to begin seeking. </p>\\n\"\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: \"\\n<p>Specifies the beginning, the end, or the current position as a reference point for <em>offset</em>, using a value of type <xref href=\\\"System.IO.SeekOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The new position in the stream.</p>\\n\"\n  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support seeking, such as if the <strong>FileStream</strong> is constructed from a pipe or console output. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Seeking is attempted before the beginning of the stream. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>Methods were called after the stream was closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.FileStream.SetLength(System.Int64)\n  commentId: M:System.IO.FileStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.IO.FileStream.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLength\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1311\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the length of this stream to the given value.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override void SetLength(long value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The new length of the stream. </p>\\n\"\n  overridden: System.IO.Stream.SetLength(System.Int64)\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error has occurred. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support both writing and seeking. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>Attempted to set the <em>value</em> parameter to less than 0. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileStream.SetLength(Int64)\n- uid: System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.FileStream.Write(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 1618\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Writes a block of bytes to the file stream.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override void Write(byte[] array, int offset, int count)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Sub Write(array As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: \"\\n<p>The buffer containing data to write to the stream.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based byte offset in <em>array</em> from which to begin copying bytes to the stream. </p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to write. </p>\\n\"\n  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>offset</em> and <em>count</em> describe an invalid range in <em>array</em>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is negative. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n<p>- or -</p>\\n<p>Another thread may have caused an unexpected change in the position of the operating system's file handle. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The current stream instance does not support writing. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.FileStream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  nameWithType: FileStream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: FileStream.Write(Byte(), Int32, Int32)\n- uid: System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.FileStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 2475\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests. </p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      [SecuritySafeCritical]\n\n      public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      <SecuritySafeCritical>\n\n      Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer to write data from. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based byte offset in <em>buffer</em> from which to begin copying bytes to the stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to write.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream has been disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.FileStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: FileStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: FileStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.FileStream.WriteByte(System.Byte)\n  commentId: M:System.IO.FileStream.WriteByte(System.Byte)\n  id: WriteByte(System.Byte)\n  parent: System.IO.FileStream\n  langs:\n  - csharp\n  - vb\n  name: WriteByte(Byte)\n  fullName: System.IO.FileStream.WriteByte(System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteByte\n    path: src/mscorlib/src/System/IO/FileStream.cs\n    startLine: 2237\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Writes a byte to the current position in the file stream.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override void WriteByte(byte value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Sub WriteByte(value As Byte)\n    parameters:\n    - id: value\n      type: System.Byte\n      description: \"\\n<p>A byte to write to the stream. </p>\\n\"\n  overridden: System.IO.Stream.WriteByte(System.Byte)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support writing. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: FileStream.WriteByte(Byte)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  fullName: System.IO.Stream.Null\n  nameWithType: Stream.Null\n  commentId: F:System.IO.Stream.Null\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyToAsync(Stream)\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyTo(Stream)\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyTo(Stream, Int32)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: true\n  name: Close()\n  fullName: System.IO.Stream.Close()\n  spec.csharp:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.Close()\n  commentId: M:System.IO.Stream.Close\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.Stream.Dispose()\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.Dispose()\n  commentId: M:System.IO.Stream.Dispose\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.FlushAsync()\n  commentId: M:System.IO.Stream.FlushAsync\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: true\n  name: CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  spec.csharp:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.CreateWaitHandle()\n  commentId: M:System.IO.Stream.CreateWaitHandle\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.EndRead(IAsyncResult)\n  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.EndWrite(IAsyncResult)\n  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Synchronized(Stream)\n  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: true\n  name: ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  spec.csharp:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.ObjectInvariant()\n  commentId: M:System.IO.Stream.ObjectInvariant\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  nameWithType: Stream.CanTimeout\n  commentId: P:System.IO.Stream.CanTimeout\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  commentId: P:System.IO.Stream.ReadTimeout\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  commentId: P:System.IO.Stream.WriteTimeout\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  name: AsInputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  name: AsOutputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  name: AsRandomAccessStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  isExternal: true\n  name: AsInputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions\n  parent: System.IO\n  isExternal: false\n  name: WindowsRuntimeStreamExtensions\n  fullName: System.IO.WindowsRuntimeStreamExtensions\n  nameWithType: WindowsRuntimeStreamExtensions\n  commentId: T:System.IO.WindowsRuntimeStreamExtensions\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  isExternal: true\n  name: AsOutputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  isExternal: true\n  name: AsRandomAccessStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n- uid: Microsoft.Win32.SafeHandles.SafeFileHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeFileHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle\n  nameWithType: SafeFileHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafeFileHandle\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  fullName: System.IO.FileAccess\n  nameWithType: FileAccess\n  commentId: T:System.IO.FileAccess\n- uid: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: Microsoft.Win32.SafeHandles\n  fullName: Microsoft.Win32.SafeHandles\n  nameWithType: Microsoft.Win32.SafeHandles\n  commentId: N:Microsoft.Win32.SafeHandles\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  fullName: System.IO.FileMode\n  nameWithType: FileMode\n  commentId: T:System.IO.FileMode\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  fullName: System.IO.FileShare\n  nameWithType: FileShare\n  commentId: T:System.IO.FileShare\n- uid: System.IO.FileOptions\n  parent: System.IO\n  isExternal: false\n  name: FileOptions\n  fullName: System.IO.FileOptions\n  nameWithType: FileOptions\n  commentId: T:System.IO.FileOptions\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  fullName: System.IO.Stream.CanRead\n  nameWithType: Stream.CanRead\n  commentId: P:System.IO.Stream.CanRead\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  fullName: System.IO.Stream.CanSeek\n  nameWithType: Stream.CanSeek\n  commentId: P:System.IO.Stream.CanSeek\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  fullName: System.IO.Stream.CanWrite\n  nameWithType: Stream.CanWrite\n  commentId: P:System.IO.Stream.CanWrite\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  fullName: System.IO.Stream.Length\n  nameWithType: Stream.Length\n  commentId: P:System.IO.Stream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  fullName: System.IO.Stream.Position\n  nameWithType: Stream.Position\n  commentId: P:System.IO.Stream.Position\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Dispose(Boolean)\n  commentId: M:System.IO.Stream.Dispose(System.Boolean)\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.Stream.Flush()\n  spec.csharp:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.Flush()\n  commentId: M:System.IO.Stream.Flush\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  nameWithType: CancellationToken\n  commentId: T:System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  nameWithType: Task\n  commentId: T:System.Threading.Tasks.Task\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n  commentId: T:System.Threading.Tasks.Task`1\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  spec.csharp:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Stream.ReadByte()\n  commentId: M:System.IO.Stream.ReadByte\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)\n  spec.csharp:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  nameWithType: Stream.Seek(Int64, SeekOrigin)\n  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  fullName: System.IO.SeekOrigin\n  nameWithType: SeekOrigin\n  commentId: T:System.IO.SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: true\n  name: SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(System.Int64)\n  spec.csharp:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.SetLength(Int64)\n  commentId: M:System.IO.Stream.SetLength(System.Int64)\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)\n  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(System.Byte)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Stream.WriteByte(Byte)\n  commentId: M:System.IO.Stream.WriteByte(System.Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  commentId: T:System.UnauthorizedAccessException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  commentId: T:System.IO.DirectoryNotFoundException\n- uid: System.IO.PathTooLongException\n  isExternal: false\n  name: PathTooLongException\n  fullName: System.IO.PathTooLongException\n  nameWithType: PathTooLongException\n  commentId: T:System.IO.PathTooLongException\n- uid: System.IO.EndOfStreamException\n  isExternal: false\n  name: EndOfStreamException\n  fullName: System.IO.EndOfStreamException\n  nameWithType: EndOfStreamException\n  commentId: T:System.IO.EndOfStreamException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}