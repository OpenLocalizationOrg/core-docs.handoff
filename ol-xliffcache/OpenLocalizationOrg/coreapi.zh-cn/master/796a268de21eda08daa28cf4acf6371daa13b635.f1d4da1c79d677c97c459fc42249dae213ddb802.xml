{"nodes":[{"pos":[1051,1068],"content":"GeneratorPosition","needQuote":true,"nodes":[{"content":"GeneratorPosition","pos":[0,17]}]},{"pos":[2871,2902],"content":"GeneratorPosition(Int32, Int32)","needQuote":true,"nodes":[{"content":"GeneratorPosition(Int32, Int32)","pos":[0,31]}]},{"pos":[4076,4081],"content":"Index","needQuote":true,"nodes":[{"content":"Index","pos":[0,5]}]},{"pos":[5126,5132],"content":"Offset","needQuote":true,"nodes":[{"content":"Offset","pos":[0,6]}]},{"pos":[6227,6241],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7685,7698],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9387,9433],"content":"Equality(GeneratorPosition, GeneratorPosition)","needQuote":true,"nodes":[{"content":"Equality(GeneratorPosition, GeneratorPosition)","pos":[0,46]}]},{"pos":[11252,11300],"content":"Inequality(GeneratorPosition, GeneratorPosition)","needQuote":true,"nodes":[{"content":"Inequality(GeneratorPosition, GeneratorPosition)","pos":[0,48]}]},{"pos":[12784,12794],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14004,14039],"content":"Windows.UI.Xaml.Controls.Primitives","needQuote":true,"nodes":[{"content":"Windows.UI.Xaml.Controls.Primitives","pos":[0,35]}]},{"pos":[14313,14335],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14529,14535],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14634,14635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14705,14711],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14797,14798]},{"pos":[14876,14882],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14967,14968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15085,15091],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15190,15191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15261,15267],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15353,15354]},{"pos":[15432,15438],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15523,15524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15752,15783],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16004,16019],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16136,16137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16207,16213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16299,16300]},{"pos":[16378,16384],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16469,16470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16596,16611],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16728,16729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16799,16805],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16891,16892]},{"pos":[16970,16976],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17061,17062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17216,17225],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17351,17358],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17459,17460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17507,17508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17597,17604],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17705,17706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17753,17754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17886,17892],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18006,18012],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18148,18153],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18355,18369],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[18535,18541],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18625,18626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18696,18702],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18787,18788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18894,18900],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18984,18985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19055,19061],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19146,19147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19281,19288],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19441,19450],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[19641,19654],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19801,19812],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19906,19907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19954,19955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20051,20062],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20156,20157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20204,20205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20446,20463],"content":"GeneratorPosition","needQuote":true,"nodes":[{"content":"GeneratorPosition","pos":[0,17]}]},{"pos":[20693,20703],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20841,20849],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20937,20938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20985,20986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21079,21087],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21175,21176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21223,21224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21356,21362],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  commentId: T:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  id: GeneratorPosition\n  parent: Windows.UI.Xaml.Controls.Primitives\n  children:\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Equals(System.Object)\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.GetHashCode\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Index\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Offset\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.op_Equality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.op_Inequality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  - Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.ToString\n  langs:\n  - csharp\n  - vb\n  name: GeneratorPosition\n  nameWithType: GeneratorPosition\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GeneratorPosition\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 144\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct GeneratorPosition\n    content.vb: >-\n      <SecurityCritical>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure GeneratorPosition\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)\n  commentId: M:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: GeneratorPosition(Int32, Int32)\n  nameWithType: GeneratorPosition.GeneratorPosition(Int32, Int32)\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.GeneratorPosition(System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 148\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: public GeneratorPosition(int index, int offset)\n    content.vb: Public Sub New(index As Integer, offset As Integer)\n    parameters:\n    - id: index\n      type: System.Int32\n    - id: offset\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Index\n  commentId: P:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Index\n  id: Index\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: Index\n  nameWithType: GeneratorPosition.Index\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Index\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Index\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 149\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: public int Index { get; set; }\n    content.vb: Public Property Index As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Offset\n  commentId: P:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Offset\n  id: Offset\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: Offset\n  nameWithType: GeneratorPosition.Offset\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Offset\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 150\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: public int Offset { get; set; }\n    content.vb: Public Property Offset As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Equals(System.Object)\n  commentId: M:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  nameWithType: GeneratorPosition.Equals(Object)\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 151\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override bool Equals(object o)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Equals(o As Object) As Boolean\n    parameters:\n    - id: o\n      type: System.Object\n    return:\n      type: System.Boolean\n  overridden: System.ValueType.Equals(System.Object)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.GetHashCode\n  commentId: M:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.GetHashCode\n  id: GetHashCode\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  nameWithType: GeneratorPosition.GetHashCode()\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 153\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int GetHashCode()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n  overridden: System.ValueType.GetHashCode\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.op_Equality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  commentId: M:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.op_Equality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  id: op_Equality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: Equality(GeneratorPosition, GeneratorPosition)\n  nameWithType: GeneratorPosition.Equality(GeneratorPosition, GeneratorPosition)\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Equality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition, Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 155\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: public static bool operator ==(GeneratorPosition gp1, GeneratorPosition gp2)\n    content.vb: Public Shared Operator =(gp1 As GeneratorPosition, gp2 As GeneratorPosition) As Boolean\n    parameters:\n    - id: gp1\n      type: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n    - id: gp2\n      type: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.op_Inequality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  commentId: M:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.op_Inequality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  id: op_Inequality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition,Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: Inequality(GeneratorPosition, GeneratorPosition)\n  nameWithType: GeneratorPosition.Inequality(GeneratorPosition, GeneratorPosition)\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.Inequality(Windows.UI.Xaml.Controls.Primitives.GeneratorPosition, Windows.UI.Xaml.Controls.Primitives.GeneratorPosition)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 156\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: public static bool operator !=(GeneratorPosition gp1, GeneratorPosition gp2)\n    content.vb: Public Shared Operator <>(gp1 As GeneratorPosition, gp2 As GeneratorPosition) As Boolean\n    parameters:\n    - id: gp1\n      type: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n    - id: gp2\n      type: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.ToString\n  commentId: M:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.ToString\n  id: ToString\n  parent: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  nameWithType: GeneratorPosition.ToString()\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 157\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml.Controls.Primitives\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n  overridden: System.ValueType.ToString\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\nreferences:\n- uid: Windows.UI.Xaml.Controls.Primitives\n  commentId: N:Windows.UI.Xaml.Controls.Primitives\n  isExternal: false\n  name: Windows.UI.Xaml.Controls.Primitives\n  nameWithType: Windows.UI.Xaml.Controls.Primitives\n  fullName: Windows.UI.Xaml.Controls.Primitives\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  commentId: T:Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n  parent: Windows.UI.Xaml.Controls.Primitives\n  isExternal: false\n  name: GeneratorPosition\n  nameWithType: GeneratorPosition\n  fullName: Windows.UI.Xaml.Controls.Primitives.GeneratorPosition\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}