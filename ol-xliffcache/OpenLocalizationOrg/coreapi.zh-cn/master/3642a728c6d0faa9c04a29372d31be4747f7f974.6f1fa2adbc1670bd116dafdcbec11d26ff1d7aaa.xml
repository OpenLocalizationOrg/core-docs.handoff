{"nodes":[{"pos":[206,225],"content":"WaitOrTimerCallback","needQuote":true,"nodes":[{"content":"WaitOrTimerCallback","pos":[0,19]}]},{"content":"\\n&lt;p&gt;An object containing information to be used by the callback method each time it executes.","pos":[1141,1235],"source":"\\n<p>An object containing information to be used by the callback method each time it executes."},{"content":"&lt;/p&gt;\\n","pos":[1236,1242],"source":" </p>\\n"},{"pos":[1780,1796],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[2129,2144],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2313,2326],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2411,2412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2439,2440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2547,2560],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2645,2646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2673,2674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2909,2915],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3061,3068],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[3261,3284],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3485,3498],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3583,3584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3636,3644],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3706,3707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3831,3844],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3929,3930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3982,3990],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4052,4053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4339,4366],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[4572,4578],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[4696,4713],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Threading.WaitOrTimerCallback\n  commentId: T:System.Threading.WaitOrTimerCallback\n  id: WaitOrTimerCallback\n  parent: System.Threading\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: WaitOrTimerCallback\n  fullName: System.Threading.WaitOrTimerCallback\n  type: Delegate\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WaitOrTimerCallback\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1133\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Represents a method to be called when a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is signaled or times out.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public delegate void WaitOrTimerCallback(object state, bool timedOut);\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Delegate Sub WaitOrTimerCallback(state As Object, timedOut As Boolean)\n    parameters:\n    - id: state\n      type: System.Object\n      description: \"\\n<p>An object containing information to be used by the callback method each time it executes. </p>\\n\"\n    - id: timedOut\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> timed out; <strong>false</strong> if it was signaled. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: WaitOrTimerCallback\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}