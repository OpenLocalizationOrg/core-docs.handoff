{"nodes":[{"pos":[595,619],"content":"DecimalConstantAttribute","needQuote":true,"nodes":[{"content":"DecimalConstantAttribute","pos":[0,24]}]},{"pos":[2386,2395],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[3047,3104],"content":"DecimalConstantAttribute(Byte, Byte, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"DecimalConstantAttribute(Byte, Byte, Int32, Int32, Int32)","pos":[0,57]}]},{"content":"\\n&lt;p&gt;The power of 10 scaling factor that indicates the number of digits to the right of the decimal point.","pos":[4177,4283],"source":"\\n<p>The power of 10 scaling factor that indicates the number of digits to the right of the decimal point."},{"content":"Valid values are 0 through 28 inclusive.&lt;/p&gt;\\n","pos":[4284,4330],"source":" Valid values are 0 through 28 inclusive.</p>\\n"},{"content":"\\n&lt;p&gt;A value of 0 indicates a positive value, and a value of 1 indicates a negative value.&lt;/p&gt;\\n","pos":[4391,4487],"source":"\\n<p>A value of 0 indicates a positive value, and a value of 1 indicates a negative value.</p>\\n"},{"pos":[5789,5849],"content":"DecimalConstantAttribute(Byte, Byte, UInt32, UInt32, UInt32)","needQuote":true,"nodes":[{"content":"DecimalConstantAttribute(Byte, Byte, UInt32, UInt32, UInt32)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The power of 10 scaling factor that indicates the number of digits to the right of the decimal point.","pos":[7008,7114],"source":"\\n<p>The power of 10 scaling factor that indicates the number of digits to the right of the decimal point."},{"content":"Valid values are 0 through 28 inclusive.","pos":[7115,7155]},{"content":"&lt;/p&gt;\\n","pos":[7156,7162],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value of 0 indicates a positive value, and a value of 1 indicates a negative value.","pos":[7223,7313],"source":"\\n<p>A value of 0 indicates a positive value, and a value of 1 indicates a negative value."},{"content":"&lt;/p&gt;\\n","pos":[7314,7320],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;scale&lt;/em&gt; &gt; 28.","pos":[8135,8162],"source":"\\n<p>\\n<em>scale</em> > 28."},{"content":"&lt;/p&gt;\\n","pos":[8163,8169],"source":" </p>\\n"},{"pos":[8768,8773],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The decimal constant stored in this attribute.&lt;/p&gt;\\n","pos":[9510,9567],"source":"\\n<p>The decimal constant stored in this attribute.</p>\\n"},{"pos":[9774,9805],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[10011,10017],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10165,10174],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[10362,10376],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10501,10507],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10556,10557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10607,10613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10673,10674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10760,10766],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10815,10816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10866,10872],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10932,10933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11136,11149],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11256,11267],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11321,11322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11349,11350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11426,11437],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11491,11492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11519,11520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11702,11712],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11807,11815],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11884,11885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11912,11913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11983,11991],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12060,12061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12088,12089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12286,12308],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12456,12462],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12529,12530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12580,12586],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12647,12648]},{"pos":[12703,12709],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12769,12770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12867,12873],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12940,12941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12991,12997],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13058,13059]},{"pos":[13114,13120],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13180,13181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13426,13457],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13623,13638],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13714,13715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13765,13771],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13832,13833]},{"pos":[13888,13894],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13954,13955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14061,14076],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14152,14153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14203,14209],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14270,14271]},{"pos":[14326,14332],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14392,14393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14619,14628],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14721,14728],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14796,14797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14824,14825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14894,14901],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14969,14970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14997,14998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15173,15190],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15299,15314],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15390,15391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15418,15419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15496,15511],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15587,15588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15615,15616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15761,15767],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15896,15900],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[16038,16043],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16185,16191],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[16337,16344],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[16496,16523],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.DecimalConstantAttribute\n  commentId: T:System.Runtime.CompilerServices.DecimalConstantAttribute\n  id: DecimalConstantAttribute\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)\n  - System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)\n  - System.Runtime.CompilerServices.DecimalConstantAttribute.Value\n  langs:\n  - csharp\n  - vb\n  name: DecimalConstantAttribute\n  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DecimalConstantAttribute\n    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n    startLine: 13\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Stores the value of a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constant in metadata. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter, Inherited = false)]\n\n      [ComVisible(true)]\n\n      public sealed class DecimalConstantAttribute : Attribute, _Attribute\n    content.vb: >-\n      <Serializable>\n\n      <AttributeUsage(AttributeTargets.Field Or AttributeTargets.Parameter, Inherited:=False)>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class DecimalConstantAttribute\n          Inherits Attribute\n          Implements _Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 2304\n    namedArguments:\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DecimalConstantAttribute\n- uid: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)'\n  parent: System.Runtime.CompilerServices.DecimalConstantAttribute\n  langs:\n  - csharp\n  - vb\n  name: DecimalConstantAttribute(Byte, Byte, Int32, Int32, Int32)\n  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute.DecimalConstantAttribute(System.Byte, System.Byte, System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified signed integer values. </p>\\n\"\n  syntax:\n    content: public DecimalConstantAttribute(byte scale, byte sign, int hi, int mid, int low)\n    content.vb: Public Sub New(scale As Byte, sign As Byte, hi As Integer, mid As Integer, low As Integer)\n    parameters:\n    - id: scale\n      type: System.Byte\n      description: \"\\n<p>The power of 10 scaling factor that indicates the number of digits to the right of the decimal point. Valid values are 0 through 28 inclusive.</p>\\n\"\n    - id: sign\n      type: System.Byte\n      description: \"\\n<p>A value of 0 indicates a positive value, and a value of 1 indicates a negative value.</p>\\n\"\n    - id: hi\n      type: System.Int32\n      description: \"\\n<p>The high 32 bits of the 96-bit <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: mid\n      type: System.Int32\n      description: \"\\n<p>The middle 32 bits of the 96-bit <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: low\n      type: System.Int32\n      description: \"\\n<p>The low 32 bits of the 96-bit <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DecimalConstantAttribute.DecimalConstantAttribute(Byte, Byte, Int32, Int32, Int32)\n- uid: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)\n  commentId: M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)\n  id: '#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)'\n  parent: System.Runtime.CompilerServices.DecimalConstantAttribute\n  langs:\n  - csharp\n  - vb\n  name: DecimalConstantAttribute(Byte, Byte, UInt32, UInt32, UInt32)\n  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute.DecimalConstantAttribute(System.Byte, System.Byte, System.UInt32, System.UInt32, System.UInt32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified unsigned integer values.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public DecimalConstantAttribute(byte scale, byte sign, uint hi, uint mid, uint low)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Sub New(scale As Byte, sign As Byte, hi As UInteger, mid As UInteger, low As UInteger)\n    parameters:\n    - id: scale\n      type: System.Byte\n      description: \"\\n<p>The power of 10 scaling factor that indicates the number of digits to the right of the decimal point. Valid values are 0 through 28 inclusive. </p>\\n\"\n    - id: sign\n      type: System.Byte\n      description: \"\\n<p>A value of 0 indicates a positive value, and a value of 1 indicates a negative value. </p>\\n\"\n    - id: hi\n      type: System.UInt32\n      description: \"\\n<p>The high 32 bits of the 96-bit <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: mid\n      type: System.UInt32\n      description: \"\\n<p>The middle 32 bits of the 96-bit <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: low\n      type: System.UInt32\n      description: \"\\n<p>The low 32 bits of the 96-bit <xref href=\\\"System.Runtime.CompilerServices.DecimalConstantAttribute.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>scale</em> > 28. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DecimalConstantAttribute.DecimalConstantAttribute(Byte, Byte, UInt32, UInt32, UInt32)\n- uid: System.Runtime.CompilerServices.DecimalConstantAttribute.Value\n  commentId: P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value\n  id: Value\n  parent: System.Runtime.CompilerServices.DecimalConstantAttribute\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs\n    startLine: 42\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the decimal constant stored in this attribute.</p>\\n\"\n  syntax:\n    content: public decimal Value { get; }\n    content.vb: Public ReadOnly Property Value As Decimal\n    parameters: []\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The decimal constant stored in this attribute.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DecimalConstantAttribute.Value\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}