{"nodes":[{"pos":[2876,2891],"content":"NegotiateStream","needQuote":true,"nodes":[{"content":"NegotiateStream","pos":[0,15]}]},{"pos":[6539,6562],"content":"NegotiateStream(Stream)","needQuote":true,"nodes":[{"content":"NegotiateStream(Stream)","pos":[0,23]}]},{"pos":[8101,8133],"content":"NegotiateStream(Stream, Boolean)","needQuote":true,"nodes":[{"content":"NegotiateStream(Stream, Boolean)","pos":[0,32]}]},{"pos":[10517,10524],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if authentication has occurred and the underlying stream is readable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11298,11437],"source":"\\n<p>\\n<strong>true</strong> if authentication has occurred and the underlying stream is readable; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11829,11836],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"content":"\\n&lt;p&gt;This property always returns &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12610,12673],"source":"\\n<p>This property always returns <strong>false</strong>.</p>\\n"},{"pos":[13202,13212],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the underlying stream supports time-outs; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[14005,14119],"source":"\\n<p>\\n<strong>true</strong> if the underlying stream supports time-outs; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[14520,14528],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if authentication has occurred and the underlying stream is writable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15306,15445],"source":"\\n<p>\\n<strong>true</strong> if authentication has occurred and the underlying stream is writable; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[15872,15890],"content":"ImpersonationLevel","needQuote":true,"nodes":[{"content":"ImpersonationLevel","pos":[0,18]}]},{"content":"\\n&lt;p&gt;Authentication failed or has not occurred.&lt;/p&gt;\\n","pos":[16976,17029],"source":"\\n<p>Authentication failed or has not occurred.</p>\\n"},{"pos":[17418,17433],"content":"IsAuthenticated","needQuote":true,"nodes":[{"content":"IsAuthenticated","pos":[0,15]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if successful authentication occurred; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[18235,18337],"source":"\\n<p>\\n<strong>true</strong> if successful authentication occurred; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18338,18344],"source":" </p>\\n"},{"pos":[18787,18798],"content":"IsEncrypted","needQuote":true,"nodes":[{"content":"IsEncrypted","pos":[0,11]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19676,19859],"source":"\\n<p>\\n<strong>true</strong> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[20440,20463],"content":"IsMutuallyAuthenticated","needQuote":true,"nodes":[{"content":"IsMutuallyAuthenticated","pos":[0,23]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the server has been authenticated; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21322,21429],"source":"\\n<p>\\n<strong>true</strong> if the server has been authenticated; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[21879,21887],"content":"IsServer","needQuote":true,"nodes":[{"content":"IsServer","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22805,22979],"source":"\\n<p>\\n<strong>true</strong> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[23399,23407],"content":"IsSigned","needQuote":true,"nodes":[{"content":"IsSigned","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the data is signed before being transmitted; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[24193,24310],"source":"\\n<p>\\n<strong>true</strong> if the data is signed before being transmitted; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[24724,24730],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[26228,26236],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[27837,27848],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[29143,29157],"content":"RemoteIdentity","needQuote":true,"nodes":[{"content":"RemoteIdentity","pos":[0,14]}]},{"content":"\\n&lt;p&gt;Authentication failed or has not occurred.&lt;/p&gt;\\n","pos":[30228,30281],"source":"\\n<p>Authentication failed or has not occurred.</p>\\n"},{"pos":[30657,30669],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[32005,32032],"content":"AuthenticateAsClientAsync()","needQuote":true,"nodes":[{"content":"AuthenticateAsClientAsync()","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The authentication failed.","pos":[33183,33214],"source":"\\n<p>The authentication failed."},{"content":"You can use this object to retry the authentication.&lt;/p&gt;\\n","pos":[33215,33273],"source":" You can use this object to retry the authentication.</p>\\n"},{"content":"\\n&lt;p&gt;The authentication failed.","pos":[33436,33467],"source":"\\n<p>The authentication failed."},{"content":"You can use this object to retry the authentication.&lt;/p&gt;\\n","pos":[33468,33526],"source":" You can use this object to retry the authentication.</p>\\n"},{"content":"\\n&lt;p&gt;This object has been closed.&lt;/p&gt;\\n","pos":[33635,33674],"source":"\\n<p>This object has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;Authentication has already occurred.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;This stream was used previously to attempt authentication as the server.","pos":[33787,33924],"source":"\\n<p>Authentication has already occurred.</p>\\n<p>- or -</p>\\n<p>This stream was used previously to attempt authentication as the server."},{"content":"You cannot use the stream to retry authentication as the client.&lt;/p&gt;\\n","pos":[33925,33995],"source":" You cannot use the stream to retry authentication as the client.</p>\\n"},{"pos":[34629,34681],"content":"AuthenticateAsClientAsync(NetworkCredential, String)","needQuote":true,"nodes":[{"content":"AuthenticateAsClientAsync(NetworkCredential, String)","pos":[0,52]}]},{"pos":[36285,36353],"content":"AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String)","needQuote":true,"nodes":[{"content":"AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String)","pos":[0,68]}]},{"pos":[38248,38342],"content":"AuthenticateAsClientAsync(NetworkCredential, String, ProtectionLevel, TokenImpersonationLevel)","needQuote":true,"nodes":[{"content":"AuthenticateAsClientAsync(NetworkCredential, String, ProtectionLevel, TokenImpersonationLevel)","pos":[0,94]}]},{"pos":[40704,40814],"content":"AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String, ProtectionLevel, TokenImpersonationLevel)","needQuote":true,"nodes":[{"content":"AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String, ProtectionLevel, TokenImpersonationLevel)","pos":[0,110]}]},{"pos":[42852,42879],"content":"AuthenticateAsServerAsync()","needQuote":true,"nodes":[{"content":"AuthenticateAsServerAsync()","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The authentication failed.","pos":[44030,44061],"source":"\\n<p>The authentication failed."},{"content":"You can use this object to retry the authentication.&lt;/p&gt;\\n","pos":[44062,44120],"source":" You can use this object to retry the authentication.</p>\\n"},{"content":"\\n&lt;p&gt;The authentication failed.","pos":[44283,44314],"source":"\\n<p>The authentication failed."},{"content":"You can use this object to retry the authentication.&lt;/p&gt;\\n","pos":[44315,44373],"source":" You can use this object to retry the authentication.</p>\\n"},{"content":"\\n&lt;p&gt;This object has been closed.&lt;/p&gt;\\n","pos":[44482,44521],"source":"\\n<p>This object has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;Windows 95 and Windows 98 are not supported.&lt;/p&gt;\\n","pos":[44626,44681],"source":"\\n<p>Windows 95 and Windows 98 are not supported.</p>\\n"},{"pos":[45444,45495],"content":"AuthenticateAsServerAsync(ExtendedProtectionPolicy)","needQuote":true,"nodes":[{"content":"AuthenticateAsServerAsync(ExtendedProtectionPolicy)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The authentication failed.","pos":[47722,47753],"source":"\\n<p>The authentication failed."},{"content":"You can use this object to retry the authentication.&lt;/p&gt;\\n","pos":[47754,47812],"source":" You can use this object to retry the authentication.</p>\\n"},{"content":"\\n&lt;p&gt;The authentication failed.","pos":[47975,48006],"source":"\\n<p>The authentication failed."},{"content":"You can use this object to retry the authentication.&lt;/p&gt;\\n","pos":[48007,48065],"source":" You can use this object to retry the authentication.</p>\\n"},{"content":"\\n&lt;p&gt;Windows 95 and Windows 98 are not supported.&lt;/p&gt;\\n","pos":[48170,48225],"source":"\\n<p>Windows 95 and Windows 98 are not supported.</p>\\n"},{"content":"\\n&lt;p&gt;This object has been closed.&lt;/p&gt;\\n","pos":[48334,48373],"source":"\\n<p>This object has been closed.</p>\\n"},{"pos":[49671,49757],"content":"AuthenticateAsServerAsync(NetworkCredential, ProtectionLevel, TokenImpersonationLevel)","needQuote":true,"nodes":[{"content":"AuthenticateAsServerAsync(NetworkCredential, ProtectionLevel, TokenImpersonationLevel)","pos":[0,86]}]},{"pos":[51999,52111],"content":"AuthenticateAsServerAsync(NetworkCredential, ExtendedProtectionPolicy, ProtectionLevel, TokenImpersonationLevel)","needQuote":true,"nodes":[{"content":"AuthenticateAsServerAsync(NetworkCredential, ExtendedProtectionPolicy, ProtectionLevel, TokenImpersonationLevel)","pos":[0,112]}]},{"pos":[54028,54035],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[55091,55117],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The read operation failed.&lt;/p&gt;\\n","pos":[56974,57011],"source":"\\n<p>The read operation failed.</p>\\n"},{"content":"\\n&lt;p&gt;Authentication has not occurred.&lt;/p&gt;\\n","pos":[57124,57167],"source":"\\n<p>Authentication has not occurred.</p>\\n"},{"pos":[58106,58129],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;This value is ignored.&lt;/p&gt;\\n","pos":[58925,58958],"source":"\\n<p>This value is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;This value is ignored.&lt;/p&gt;\\n","pos":[59030,59063],"source":"\\n<p>This value is ignored.</p>\\n"},{"pos":[59959,59975],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[61303,61330],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[63026,63080],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset is less than 0&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; plus count is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n","pos":[63177,63408],"source":"\\n<p>\\n<em>offset is less than 0</em>.</p>\\n<p>- or -</p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>- or -</p>\\n<p>\\n<em>offset</em> plus count is greater than the length of <em>buffer</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The write operation failed.&lt;/p&gt;\\n&lt;p&gt;- or -&lt;/p&gt;\\n&lt;p&gt;Encryption is in use, but the data could not be encrypted.&lt;/p&gt;\\n","pos":[63499,63619],"source":"\\n<p>The write operation failed.</p>\\n<p>- or -</p>\\n<p>Encryption is in use, but the data could not be encrypted.</p>\\n"},{"content":"\\n&lt;p&gt;There is already a write operation in progress.&lt;/p&gt;\\n","pos":[63724,63782],"source":"\\n<p>There is already a write operation in progress.</p>\\n"},{"content":"\\n&lt;p&gt;This object has been closed.&lt;/p&gt;\\n","pos":[63891,63930],"source":"\\n<p>This object has been closed.</p>\\n"},{"content":"\\n&lt;p&gt;Authentication has not occurred.&lt;/p&gt;\\n","pos":[64043,64086],"source":"\\n<p>Authentication has not occurred.</p>\\n"},{"pos":[64502,64521],"content":"System.Net.Security","needQuote":true,"nodes":[{"content":"System.Net.Security","pos":[0,19]}]},{"pos":[64691,64697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64853,64871],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[65058,65064],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[65254,65273],"content":"AuthenticatedStream","needQuote":true,"nodes":[{"content":"AuthenticatedStream","pos":[0,19]}]},{"pos":[65488,65499],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[65739,65759],"content":"LeaveInnerStreamOpen","needQuote":true,"nodes":[{"content":"LeaveInnerStreamOpen","pos":[0,20]}]},{"pos":[66103,66114],"content":"InnerStream","needQuote":true,"nodes":[{"content":"InnerStream","pos":[0,11]}]},{"pos":[66442,66458],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[66633,66640],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[66713,66714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66765,66772],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[66833,66834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66945,66952],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[67025,67026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67077,67084],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[67145,67146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67579,67598],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[67739,67750],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[67804,67805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67858,67864],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[67906,67907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68001,68012],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[68066,68067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68120,68126],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[68168,68169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68412,68438],"content":"CopyToAsync(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32)","pos":[0,26]}]},{"pos":[68606,68617],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[68671,68672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68725,68731],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[68774,68775]},{"pos":[68829,68834],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68893,68894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69001,69012],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[69066,69067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69120,69126],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[69169,69170]},{"pos":[69224,69229],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69288,69289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69587,69632],"content":"CopyToAsync(Stream, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32, CancellationToken)","pos":[0,45]}]},{"pos":[69871,69882],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[69936,69937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69990,69996],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[70039,70040]},{"pos":[70094,70099],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[70159,70160]},{"pos":[70236,70253],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[70334,70335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70477,70488],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[70542,70543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70596,70602],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[70645,70646]},{"pos":[70700,70705],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[70765,70766]},{"pos":[70842,70859],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[70940,70941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71241,71255],"content":"CopyTo(Stream)","needQuote":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[71386,71392],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[71441,71442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71495,71501],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[71543,71544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71633,71639],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[71688,71689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71742,71748],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[71790,71791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72019,72040],"content":"CopyTo(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Stream, Int32)","pos":[0,21]}]},{"pos":[72198,72204],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[72253,72254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72307,72313],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[72356,72357]},{"pos":[72411,72416],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72475,72476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72578,72584],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[72633,72634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72687,72693],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[72736,72737]},{"pos":[72791,72796],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72855,72856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73072,73079],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[73174,73179],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[73248,73249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73276,73277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73347,73352],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[73421,73422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73449,73450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73623,73632],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[73731,73738],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[73788,73789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73816,73817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73889,73896],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[73946,73947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73974,73975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74155,74167],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[74272,74282],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[74335,74336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74363,74364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74439,74449],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[74502,74503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74530,74531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74752,74781],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[74956,74966],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[75019,75020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75091,75108],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[75189,75190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75301,75311],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[75364,75365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75436,75453],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[75534,75535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75779,75797],"content":"CreateWaitHandle()","needQuote":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[75914,75930],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[76010,76011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76038,76039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76120,76136],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[76216,76217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76244,76245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76517,76571],"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,54]}]},{"pos":[77016,77025],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[77098,77099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77147,77151],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[77210,77212]},{"content":",","pos":[77244,77245]},{"pos":[77299,77304],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[77364,77365]},{"pos":[77419,77424],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[77484,77485]},{"pos":[77547,77560],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[77628,77629]},{"pos":[77684,77690],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77750,77751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77901,77910],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[77983,77984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78032,78036],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[78094,78096],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[78125,78126]},{"pos":[78180,78185],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[78245,78246]},{"pos":[78300,78305],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[78365,78366]},{"pos":[78428,78441],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[78509,78510]},{"pos":[78565,78571],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78631,78632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79033,79054],"content":"EndRead(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[79193,79200],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[79271,79272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79328,79340],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[79406,79407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79500,79507],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[79578,79579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79635,79647],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[79713,79714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79966,79997],"content":"ReadAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32)","pos":[0,31]}]},{"pos":[80310,80319],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[80371,80372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80420,80424],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[80483,80485]},{"content":",","pos":[80517,80518]},{"pos":[80572,80577],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[80637,80638]},{"pos":[80692,80697],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[80756,80757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80872,80881],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[80933,80934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80982,80986],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[81044,81046],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[81075,81076]},{"pos":[81130,81135],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[81195,81196]},{"pos":[81250,81255],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81314,81315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81692,81742],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[82181,82190],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[82242,82243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82291,82295],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[82354,82356]},{"content":",","pos":[82388,82389]},{"pos":[82443,82448],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[82508,82509]},{"pos":[82563,82568],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[82628,82629]},{"pos":[82705,82722],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[82803,82804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82954,82963],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[83015,83016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83064,83068],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[83126,83128],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[83157,83158]},{"pos":[83212,83217],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83277,83278]},{"pos":[83332,83337],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83397,83398]},{"pos":[83474,83491],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[83572,83573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84024,84079],"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,55]}]},{"pos":[84528,84538],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[84612,84613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84661,84665],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[84724,84726]},{"content":",","pos":[84758,84759]},{"pos":[84813,84818],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84878,84879]},{"pos":[84933,84938],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84998,84999]},{"pos":[85061,85074],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[85142,85143]},{"pos":[85198,85204],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85264,85265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85416,85426],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[85500,85501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85549,85553],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[85611,85613],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[85642,85643]},{"pos":[85697,85702],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[85762,85763]},{"pos":[85817,85822],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[85882,85883]},{"pos":[85945,85958],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[86026,86027]},{"pos":[86082,86088],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86148,86149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86554,86576],"content":"EndWrite(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[86717,86725],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[86797,86798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86854,86866],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[86932,86933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87027,87035],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[87107,87108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87164,87176],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[87242,87243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87498,87530],"content":"WriteAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32)","pos":[0,32]}]},{"pos":[87847,87857],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[87910,87911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87959,87963],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[88022,88024]},{"content":",","pos":[88056,88057]},{"pos":[88111,88116],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[88176,88177]},{"pos":[88231,88236],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88295,88296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88412,88422],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[88475,88476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88524,88528],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[88586,88588],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[88617,88618]},{"pos":[88672,88677],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[88737,88738]},{"pos":[88792,88797],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88856,88857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89238,89289],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[89732,89742],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[89795,89796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89844,89848],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[89907,89909]},{"content":",","pos":[89941,89942]},{"pos":[89996,90001],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[90061,90062]},{"pos":[90116,90121],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[90181,90182]},{"pos":[90258,90275],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[90356,90357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90508,90518],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[90571,90572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90620,90624],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[90682,90684],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[90713,90714]},{"pos":[90768,90773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[90833,90834]},{"pos":[90888,90893],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[90953,90954]},{"pos":[91030,91047],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[91128,91129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91506,91516],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[91617,91625],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[91676,91677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91704,91705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91778,91786],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[91837,91838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91865,91866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92059,92074],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[92201,92210],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[92262,92263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92311,92315],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[92373,92374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92461,92470],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[92522,92523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92571,92575],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[92633,92634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92854,92874],"content":"Synchronized(Stream)","needQuote":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[93017,93029],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[93105,93106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93159,93165],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[93228,93229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93324,93336],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[93412,93413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93466,93472],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[93535,93536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93754,93771],"content":"ObjectInvariant()","needQuote":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[93886,93901],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[93980,93981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94008,94009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94089,94104],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[94183,94184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94211,94212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94446,94470],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[94633,94648],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[94736,94737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94788,94795],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[94856,94857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94962,94977],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[95065,95066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95117,95124],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[95185,95186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95451,95471],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[95610,95628],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[95719,95720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95747,95748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95840,95858],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[95949,95950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95977,95978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96233,96260],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[96413,96438],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[96536,96537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96564,96565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96664,96689],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[96787,96788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96815,96816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97085,97103],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[97254,97266],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[97351,97352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97400,97404],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[97462,97463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97562,97574],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[97659,97660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97708,97712],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[97770,97771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97990,98000],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[98095,98103],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[98172,98173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98200,98201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98271,98279],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[98348,98349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98376,98377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98560,98574],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[98693,98699],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[98766,98767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98817,98823],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[98883,98884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98967,98973],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[99040,99041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99091,99097],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99157,99158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99372,99394],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[99542,99548],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[99615,99616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99666,99672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[99733,99734]},{"pos":[99789,99795],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99855,99856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99953,99959],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[100026,100027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100077,100083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[100144,100145]},{"pos":[100200,100206],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[100266,100267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100512,100543],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[100709,100724],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[100800,100801],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100851,100857],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[100918,100919]},{"pos":[100974,100980],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101040,101041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101147,101162],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[101238,101239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101289,101295],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[101356,101357]},{"pos":[101412,101418],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101478,101479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101709,101722],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[101823,101834],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[101906,101907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101934,101935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102008,102019],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[102091,102092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102119,102120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102295,102304],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[102397,102404],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[102472,102473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102500,102501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102570,102577],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[102645,102646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102673,102674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102849,102866],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[102975,102990],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[103066,103067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103094,103095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103172,103187],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[103263,103264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103291,103292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103620,103635],"content":"AsInputStream()","needQuote":true,"nodes":[{"content":"AsInputStream()","pos":[0,15]}]},{"pos":[103794,103807],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[103887,103888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103915,103916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104018,104031],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[104111,104112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104139,104140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104535,104551],"content":"AsOutputStream()","needQuote":true,"nodes":[{"content":"AsOutputStream()","pos":[0,16]}]},{"pos":[104712,104726],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[104807,104808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104835,104836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104939,104953],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[105034,105035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105062,105063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105472,105494],"content":"AsRandomAccessStream()","needQuote":true,"nodes":[{"content":"AsRandomAccessStream()","pos":[0,22]}]},{"pos":[105667,105687],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[105774,105775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105802,105803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105912,105932],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[106019,106020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106047,106048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106272,106278],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[106388,106397],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[106578,106599],"content":"AsInputStream(Stream)","needQuote":true,"nodes":[{"content":"AsInputStream(Stream)","pos":[0,21]}]},{"pos":[106792,106805],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[106885,106886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106939,106945],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[107008,107009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107129,107142],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[107222,107223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107276,107282],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[107345,107346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107616,107646],"content":"WindowsRuntimeStreamExtensions","needQuote":true,"nodes":[{"content":"WindowsRuntimeStreamExtensions","pos":[0,30]}]},{"pos":[107911,107933],"content":"AsOutputStream(Stream)","needQuote":true,"nodes":[{"content":"AsOutputStream(Stream)","pos":[0,22]}]},{"pos":[108128,108142],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[108223,108224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108277,108283],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[108346,108347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108468,108482],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[108563,108564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108617,108623],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[108686,108687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108977,109005],"content":"AsRandomAccessStream(Stream)","needQuote":true,"nodes":[{"content":"AsRandomAccessStream(Stream)","pos":[0,28]}]},{"pos":[109212,109232],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[109319,109320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109373,109379],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[109442,109443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109570,109590],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[109677,109678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109731,109737],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[109800,109801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110056,110063],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[110232,110239],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[110435,110442],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[110641,110651],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[110857,110865],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[111098,111121],"content":"TokenImpersonationLevel","needQuote":true,"nodes":[{"content":"TokenImpersonationLevel","pos":[0,23]}]},{"pos":[111350,111375],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[111638,111653],"content":"IsAuthenticated","needQuote":true,"nodes":[{"content":"IsAuthenticated","pos":[0,15]}]},{"pos":[111982,111993],"content":"IsEncrypted","needQuote":true,"nodes":[{"content":"IsEncrypted","pos":[0,11]}]},{"pos":[112322,112345],"content":"IsMutuallyAuthenticated","needQuote":true,"nodes":[{"content":"IsMutuallyAuthenticated","pos":[0,23]}]},{"pos":[112695,112703],"content":"IsServer","needQuote":true,"nodes":[{"content":"IsServer","pos":[0,8]}]},{"pos":[113008,113016],"content":"IsSigned","needQuote":true,"nodes":[{"content":"IsSigned","pos":[0,8]}]},{"pos":[113273,113279],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[113450,113455],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[113619,113627],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[113830,113841],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[114027,114032],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[114215,114224],"content":"IIdentity","needQuote":true,"nodes":[{"content":"IIdentity","pos":[0,9]}]},{"pos":[114442,114454],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[114674,114678],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[114841,114863],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[115028,115045],"content":"NetworkCredential","needQuote":true,"nodes":[{"content":"NetworkCredential","pos":[0,17]}]},{"pos":[115176,115182],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[115421,115435],"content":"ChannelBinding","needQuote":true,"nodes":[{"content":"ChannelBinding","pos":[0,14]}]},{"pos":[115709,115758],"content":"System.Security.Authentication.ExtendedProtection","needQuote":true,"nodes":[{"content":"System.Security.Authentication.ExtendedProtection","pos":[0,49]}]},{"pos":[116053,116068],"content":"ProtectionLevel","needQuote":true,"nodes":[{"content":"ProtectionLevel","pos":[0,15]}]},{"pos":[116370,116394],"content":"ExtendedProtectionPolicy","needQuote":true,"nodes":[{"content":"ExtendedProtectionPolicy","pos":[0,24]}]},{"pos":[116698,116705],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[116800,116805],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[116853,116854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116881,116882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116952,116957],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[117005,117006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117033,117034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117244,117270],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"pos":[117563,117567],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[117614,117615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117663,117667],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[117726,117728]},{"content":",","pos":[117760,117761]},{"pos":[117815,117820],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[117880,117881]},{"pos":[117935,117940],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[117999,118000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118110,118114],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[118161,118162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118210,118214],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[118272,118274],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[118303,118304]},{"pos":[118358,118363],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[118423,118424]},{"pos":[118478,118483],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[118542,118543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118770,118776],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[118896,118900],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[118959,118961]},{"pos":[119024,119028],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[119086,119088],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[119273,119296],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"pos":[119458,119462],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[119509,119510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119559,119564],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[119624,119625]},{"pos":[119687,119697],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[119743,119744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119848,119852],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[119899,119900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119949,119954],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[120014,120015]},{"pos":[120077,120087],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[120133,120134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120346,120356],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[120555,120571],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[120700,120709],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[120761,120762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120811,120816],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[120875,120876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120964,120973],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[121025,121026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121075,121080],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[121139,121140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121378,121405],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"pos":[121702,121707],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[121755,121756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121804,121808],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[121867,121869]},{"content":",","pos":[121901,121902]},{"pos":[121956,121961],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[122021,122022]},{"pos":[122076,122081],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[122140,122141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122252,122257],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[122305,122306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122354,122358],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[122416,122418],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[122447,122448]},{"pos":[122502,122507],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[122567,122568]},{"pos":[122622,122627],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[122686,122687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122952,122973],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[123182,123207],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[123424,123445],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[123700,123723],"content":"AuthenticationException","needQuote":true,"nodes":[{"content":"AuthenticationException","pos":[0,23]}]},{"pos":[123994,124020],"content":"InvalidCredentialException","needQuote":true,"nodes":[{"content":"InvalidCredentialException","pos":[0,26]}]},{"pos":[124273,124296],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[124503,124520],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[124704,124733],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]},{"pos":[124958,124969],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]}],"content":"items:\n- uid: System.Net.Security.NegotiateStream\n  commentId: T:System.Net.Security.NegotiateStream\n  id: NegotiateStream\n  parent: System.Net.Security\n  children:\n  - System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)\n  - System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)\n  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync\n  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)\n  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.String)\n  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync\n  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)\n  - System.Net.Security.NegotiateStream.CanRead\n  - System.Net.Security.NegotiateStream.CanSeek\n  - System.Net.Security.NegotiateStream.CanTimeout\n  - System.Net.Security.NegotiateStream.CanWrite\n  - System.Net.Security.NegotiateStream.Flush\n  - System.Net.Security.NegotiateStream.ImpersonationLevel\n  - System.Net.Security.NegotiateStream.IsAuthenticated\n  - System.Net.Security.NegotiateStream.IsEncrypted\n  - System.Net.Security.NegotiateStream.IsMutuallyAuthenticated\n  - System.Net.Security.NegotiateStream.IsServer\n  - System.Net.Security.NegotiateStream.IsSigned\n  - System.Net.Security.NegotiateStream.Length\n  - System.Net.Security.NegotiateStream.Position\n  - System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Security.NegotiateStream.ReadTimeout\n  - System.Net.Security.NegotiateStream.RemoteIdentity\n  - System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Net.Security.NegotiateStream.SetLength(System.Int64)\n  - System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Security.NegotiateStream.WriteTimeout\n  langs:\n  - csharp\n  - vb\n  name: NegotiateStream\n  fullName: System.Net.Security.NegotiateStream\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NegotiateStream\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 29\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</p>\\n\"\n  syntax:\n    content: 'public class NegotiateStream : AuthenticatedStream, IDisposable'\n    content.vb: >-\n      Public Class NegotiateStream\n          Inherits AuthenticatedStream\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  - System.Net.Security.AuthenticatedStream\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen\n  - System.Net.Security.AuthenticatedStream.InnerStream\n  - System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)\n  - System.IO.Stream.Null\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.Close\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.ObjectInvariant\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: NegotiateStream\n  extensionMethods:\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n- uid: System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)\n  commentId: M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: NegotiateStream(Stream)\n  fullName: System.Net.Security.NegotiateStream.NegotiateStream(System.IO.Stream)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 31\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public NegotiateStream(Stream innerStream)\n    content.vb: Public Sub New(innerStream As Stream)\n    parameters:\n    - id: innerStream\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used by the <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for sending and receiving data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NegotiateStream.NegotiateStream(Stream)\n- uid: System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)\n  commentId: M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Boolean)'\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: NegotiateStream(Stream, Boolean)\n  fullName: System.Net.Security.NegotiateStream.NegotiateStream(System.IO.Stream, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 32\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and stream closure behavior.</p>\\n\"\n  syntax:\n    content: public NegotiateStream(Stream innerStream, bool leaveInnerStreamOpen)\n    content.vb: Public Sub New(innerStream As Stream, leaveInnerStreamOpen As Boolean)\n    parameters:\n    - id: innerStream\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used by the <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for sending and receiving data.</p>\\n\"\n    - id: leaveInnerStreamOpen\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate that closing this <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has no effect on <em>innerstream</em>; <strong>false</strong> to indicate that closing this <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> also closes <em>innerStream</em>. See the Remarks section for more information.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>innerStream</em> is <strong>null</strong>.</p>\\n<p>- or -</p>\\n<p>\\n<em>innerStream</em> is equal to <xref href=\\\"System.IO.Stream.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NegotiateStream.NegotiateStream(Stream, Boolean)\n- uid: System.Net.Security.NegotiateStream.CanRead\n  commentId: P:System.Net.Security.NegotiateStream.CanRead\n  id: CanRead\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.Net.Security.NegotiateStream.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanRead\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 33\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether the underlying stream is readable.</p>\\n\"\n  syntax:\n    content: public override bool CanRead { get; }\n    content.vb: Public Overrides ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if authentication has occurred and the underlying stream is readable; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanRead\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.CanRead\n- uid: System.Net.Security.NegotiateStream.CanSeek\n  commentId: P:System.Net.Security.NegotiateStream.CanSeek\n  id: CanSeek\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: CanSeek\n  fullName: System.Net.Security.NegotiateStream.CanSeek\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanSeek\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 34\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether the underlying stream is seekable.</p>\\n\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This property always returns <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanSeek\n  seealso:\n  - type: System.Net.Security.NegotiateStream.Position\n    commentId: P:System.Net.Security.NegotiateStream.Position\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.CanSeek\n- uid: System.Net.Security.NegotiateStream.CanTimeout\n  commentId: P:System.Net.Security.NegotiateStream.CanTimeout\n  id: CanTimeout\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: CanTimeout\n  fullName: System.Net.Security.NegotiateStream.CanTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanTimeout\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 35\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether the underlying stream supports time-outs.</p>\\n\"\n  syntax:\n    content: public override bool CanTimeout { get; }\n    content.vb: Public Overrides ReadOnly Property CanTimeout As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the underlying stream supports time-outs; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanTimeout\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.CanTimeout\n- uid: System.Net.Security.NegotiateStream.CanWrite\n  commentId: P:System.Net.Security.NegotiateStream.CanWrite\n  id: CanWrite\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.Net.Security.NegotiateStream.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanWrite\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 36\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether the underlying stream is writable.</p>\\n\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if authentication has occurred and the underlying stream is writable; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanWrite\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.CanWrite\n- uid: System.Net.Security.NegotiateStream.ImpersonationLevel\n  commentId: P:System.Net.Security.NegotiateStream.ImpersonationLevel\n  id: ImpersonationLevel\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: ImpersonationLevel\n  fullName: System.Net.Security.NegotiateStream.ImpersonationLevel\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ImpersonationLevel\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 37\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a value that indicates how the server can use the client's credentials.</p>\\n\"\n  syntax:\n    content: public virtual TokenImpersonationLevel ImpersonationLevel { get; }\n    content.vb: Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel\n    parameters: []\n    return:\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.Principal.TokenImpersonationLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Authentication failed or has not occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: NegotiateStream.ImpersonationLevel\n- uid: System.Net.Security.NegotiateStream.IsAuthenticated\n  commentId: P:System.Net.Security.NegotiateStream.IsAuthenticated\n  id: IsAuthenticated\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: IsAuthenticated\n  fullName: System.Net.Security.NegotiateStream.IsAuthenticated\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsAuthenticated\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 38\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether authentication was successful.</p>\\n\"\n  syntax:\n    content: public override bool IsAuthenticated { get; }\n    content.vb: Public Overrides ReadOnly Property IsAuthenticated As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if successful authentication occurred; otherwise, <strong>false</strong>. </p>\\n\"\n  overridden: System.Net.Security.AuthenticatedStream.IsAuthenticated\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.IsAuthenticated\n- uid: System.Net.Security.NegotiateStream.IsEncrypted\n  commentId: P:System.Net.Security.NegotiateStream.IsEncrypted\n  id: IsEncrypted\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: IsEncrypted\n  fullName: System.Net.Security.NegotiateStream.IsEncrypted\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEncrypted\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 39\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether this <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uses data encryption.</p>\\n\"\n  syntax:\n    content: public override bool IsEncrypted { get; }\n    content.vb: Public Overrides ReadOnly Property IsEncrypted As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Net.Security.AuthenticatedStream.IsEncrypted\n  seealso:\n  - type: System.Net.Security.ProtectionLevel\n    commentId: T:System.Net.Security.ProtectionLevel\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.IsEncrypted\n- uid: System.Net.Security.NegotiateStream.IsMutuallyAuthenticated\n  commentId: P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated\n  id: IsMutuallyAuthenticated\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: IsMutuallyAuthenticated\n  fullName: System.Net.Security.NegotiateStream.IsMutuallyAuthenticated\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsMutuallyAuthenticated\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 40\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether both the server and the client have been authenticated.</p>\\n\"\n  syntax:\n    content: public override bool IsMutuallyAuthenticated { get; }\n    content.vb: Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the server has been authenticated; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.IsMutuallyAuthenticated\n- uid: System.Net.Security.NegotiateStream.IsServer\n  commentId: P:System.Net.Security.NegotiateStream.IsServer\n  id: IsServer\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: IsServer\n  fullName: System.Net.Security.NegotiateStream.IsServer\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsServer\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 41\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether the local side of the connection used by this <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was authenticated as the server.</p>\\n\"\n  syntax:\n    content: public override bool IsServer { get; }\n    content.vb: Public Overrides ReadOnly Property IsServer As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Net.Security.AuthenticatedStream.IsServer\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.IsServer\n- uid: System.Net.Security.NegotiateStream.IsSigned\n  commentId: P:System.Net.Security.NegotiateStream.IsSigned\n  id: IsSigned\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: IsSigned\n  fullName: System.Net.Security.NegotiateStream.IsSigned\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsSigned\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 42\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates whether the data sent using this stream is signed.</p>\\n\"\n  syntax:\n    content: public override bool IsSigned { get; }\n    content.vb: Public Overrides ReadOnly Property IsSigned As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the data is signed before being transmitted; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Net.Security.AuthenticatedStream.IsSigned\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.IsSigned\n- uid: System.Net.Security.NegotiateStream.Length\n  commentId: P:System.Net.Security.NegotiateStream.Length\n  id: Length\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.Net.Security.NegotiateStream.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 43\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets the length of the underlying stream.</p>\\n\"\n  syntax:\n    content: public override long Length { get; }\n    content.vb: Public Overrides ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the length of the underlying stream.</p>\\n\"\n  overridden: System.IO.Stream.Length\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Getting the value of this property is not supported when the underlying stream is a <xref href=\\\"System.Net.Sockets.NetworkStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: NegotiateStream.Length\n- uid: System.Net.Security.NegotiateStream.Position\n  commentId: P:System.Net.Security.NegotiateStream.Position\n  id: Position\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.Net.Security.NegotiateStream.Position\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Position\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 44\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets or sets the current position in the underlying stream.</p>\\n\"\n  syntax:\n    content: public override long Position { get; set; }\n    content.vb: Public Overrides Property Position As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the current position in the underlying stream.</p>\\n\"\n  overridden: System.IO.Stream.Position\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Setting this property is not supported.</p>\\n<p>- or -</p>\\n<p>Getting the value of this property is not supported when the underlying stream is a <xref href=\\\"System.Net.Sockets.NetworkStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NegotiateStream.Position\n- uid: System.Net.Security.NegotiateStream.ReadTimeout\n  commentId: P:System.Net.Security.NegotiateStream.ReadTimeout\n  id: ReadTimeout\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: ReadTimeout\n  fullName: System.Net.Security.NegotiateStream.ReadTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadTimeout\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 45\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets or sets the amount of time a read operation blocks waiting for data.</p>\\n\"\n  syntax:\n    content: public override int ReadTimeout { get; set; }\n    content.vb: Public Overrides Property ReadTimeout As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>A <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the amount of time that will elapse before a read operation fails. </p>\\n\"\n  overridden: System.IO.Stream.ReadTimeout\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NegotiateStream.ReadTimeout\n- uid: System.Net.Security.NegotiateStream.RemoteIdentity\n  commentId: P:System.Net.Security.NegotiateStream.RemoteIdentity\n  id: RemoteIdentity\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: RemoteIdentity\n  fullName: System.Net.Security.NegotiateStream.RemoteIdentity\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoteIdentity\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 46\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets information about the identity of the remote party sharing this authenticated stream.</p>\\n\"\n  syntax:\n    content: public virtual IIdentity RemoteIdentity { get; }\n    content.vb: Public Overridable ReadOnly Property RemoteIdentity As IIdentity\n    parameters: []\n    return:\n      type: System.Security.Principal.IIdentity\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that describes the identity of the remote endpoint.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Authentication failed or has not occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: NegotiateStream.RemoteIdentity\n- uid: System.Net.Security.NegotiateStream.WriteTimeout\n  commentId: P:System.Net.Security.NegotiateStream.WriteTimeout\n  id: WriteTimeout\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: WriteTimeout\n  fullName: System.Net.Security.NegotiateStream.WriteTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTimeout\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 47\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Gets or sets the amount of time a write operation blocks waiting for data.</p>\\n\"\n  syntax:\n    content: public override int WriteTimeout { get; set; }\n    content.vb: Public Overrides Property WriteTimeout As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>A <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the amount of time that will elapse before a write operation fails. </p>\\n\"\n  overridden: System.IO.Stream.WriteTimeout\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NegotiateStream.WriteTimeout\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync\n  id: AuthenticateAsClientAsync\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsClientAsync()\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsClientAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 48\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public virtual Task AuthenticateAsClientAsync()\n    content.vb: Public Overridable Function AuthenticateAsClientAsync As Task\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: \"\\n<p>The authentication failed. You can use this object to retry the authentication.</p>\\n\"\n  - type: System.Security.Authentication.InvalidCredentialException\n    commentId: T:System.Security.Authentication.InvalidCredentialException\n    description: \"\\n<p>The authentication failed. You can use this object to retry the authentication.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>This object has been closed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Authentication has already occurred.</p>\\n<p>- or -</p>\\n<p>This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsClientAsync()\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.String)\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.String)\n  id: AuthenticateAsClientAsync(NetworkCredential,System.String)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsClientAsync(NetworkCredential, String)\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsClientAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 49\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  syntax:\n    content: public virtual Task AuthenticateAsClientAsync(NetworkCredential credential, string targetName)\n    content.vb: Public Overridable Function AuthenticateAsClientAsync(credential As NetworkCredential, targetName As String) As Task\n    parameters:\n    - id: credential\n      type: NetworkCredential\n    - id: targetName\n      type: System.String\n    return:\n      type: System.Threading.Tasks.Task\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, String)\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)\n  id: AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String)\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsClientAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 50\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  syntax:\n    content: public virtual Task AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, string targetName)\n    content.vb: Public Overridable Function AuthenticateAsClientAsync(credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task\n    parameters:\n    - id: credential\n      type: NetworkCredential\n    - id: binding\n      type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n    - id: targetName\n      type: System.String\n    return:\n      type: System.Threading.Tasks.Task\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String)\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  id: AuthenticateAsClientAsync(NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsClientAsync(NetworkCredential, String, ProtectionLevel, TokenImpersonationLevel)\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, System.String, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsClientAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 51\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  syntax:\n    content: public virtual Task AuthenticateAsClientAsync(NetworkCredential credential, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)\n    content.vb: Public Overridable Function AuthenticateAsClientAsync(credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task\n    parameters:\n    - id: credential\n      type: NetworkCredential\n    - id: targetName\n      type: System.String\n    - id: requiredProtectionLevel\n      type: System.Net.Security.ProtectionLevel\n    - id: allowedImpersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n    return:\n      type: System.Threading.Tasks.Task\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, String, ProtectionLevel, TokenImpersonationLevel)\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  id: AuthenticateAsClientAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String, ProtectionLevel, TokenImpersonationLevel)\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, System.String, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsClientAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 52\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  syntax:\n    content: public virtual Task AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)\n    content.vb: Public Overridable Function AuthenticateAsClientAsync(credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task\n    parameters:\n    - id: credential\n      type: NetworkCredential\n    - id: binding\n      type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n    - id: targetName\n      type: System.String\n    - id: requiredProtectionLevel\n      type: System.Net.Security.ProtectionLevel\n    - id: allowedImpersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n    return:\n      type: System.Threading.Tasks.Task\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential, ChannelBinding, String, ProtectionLevel, TokenImpersonationLevel)\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync\n  id: AuthenticateAsServerAsync\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsServerAsync()\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsServerAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 53\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public virtual Task AuthenticateAsServerAsync()\n    content.vb: Public Overridable Function AuthenticateAsServerAsync As Task\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: \"\\n<p>The authentication failed. You can use this object to retry the authentication.</p>\\n\"\n  - type: System.Security.Authentication.InvalidCredentialException\n    commentId: T:System.Security.Authentication.InvalidCredentialException\n    description: \"\\n<p>The authentication failed. You can use this object to retry the authentication.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>This object has been closed.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows 95 and Windows 98 are not supported.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsServerAsync()\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)\n  id: AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsServerAsync(ExtendedProtectionPolicy)\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsServerAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 54\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified extended protection policy.</p>\\n\"\n  syntax:\n    content: public virtual Task AuthenticateAsServerAsync(ExtendedProtectionPolicy policy)\n    content.vb: Public Overridable Function AuthenticateAsServerAsync(policy As ExtendedProtectionPolicy) As Task\n    parameters:\n    - id: policy\n      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n      description: \"\\n<p>The <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is used for extended protection. </p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the extended protection policy passed in the <em>policy</em> parameter are both <strong>null</strong>.</p>\\n\"\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: \"\\n<p>The authentication failed. You can use this object to retry the authentication.</p>\\n\"\n  - type: System.Security.Authentication.InvalidCredentialException\n    commentId: T:System.Security.Authentication.InvalidCredentialException\n    description: \"\\n<p>The authentication failed. You can use this object to retry the authentication.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows 95 and Windows 98 are not supported.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>This object has been closed.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The <em>policy</em> parameter was set to <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on a platform that does not support extended protection.</p>\\n\"\n  seealso:\n  - type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n    commentId: T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsServerAsync(ExtendedProtectionPolicy)\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  id: AuthenticateAsServerAsync(NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsServerAsync(NetworkCredential, ProtectionLevel, TokenImpersonationLevel)\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsServerAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 55\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  syntax:\n    content: public virtual Task AuthenticateAsServerAsync(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)\n    content.vb: Public Overridable Function AuthenticateAsServerAsync(credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task\n    parameters:\n    - id: credential\n      type: NetworkCredential\n    - id: requiredProtectionLevel\n      type: System.Net.Security.ProtectionLevel\n    - id: requiredImpersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n    return:\n      type: System.Threading.Tasks.Task\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsServerAsync(NetworkCredential, ProtectionLevel, TokenImpersonationLevel)\n- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  commentId: M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  id: AuthenticateAsServerAsync(NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: AuthenticateAsServerAsync(NetworkCredential, ExtendedProtectionPolicy, ProtectionLevel, TokenImpersonationLevel)\n  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticateAsServerAsync\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 56\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  syntax:\n    content: public virtual Task AuthenticateAsServerAsync(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)\n    content.vb: Public Overridable Function AuthenticateAsServerAsync(credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task\n    parameters:\n    - id: credential\n      type: NetworkCredential\n    - id: policy\n      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n    - id: requiredProtectionLevel\n      type: System.Net.Security.ProtectionLevel\n    - id: requiredImpersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n    return:\n      type: System.Threading.Tasks.Task\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: NegotiateStream.AuthenticateAsServerAsync(NetworkCredential, ExtendedProtectionPolicy, ProtectionLevel, TokenImpersonationLevel)\n- uid: System.Net.Security.NegotiateStream.Flush\n  commentId: M:System.Net.Security.NegotiateStream.Flush\n  id: Flush\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.Net.Security.NegotiateStream.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flush\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 57\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Causes any buffered data to be written to the underlying device.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.Stream.Flush\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NegotiateStream.Flush()\n- uid: System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.Net.Security.NegotiateStream.Read(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 58\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Reads data from this stream and stores it in the specified array.</p>\\n\"\n  syntax:\n    content: public override int Read(byte[] buffer, int offset, int count)\n    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>A <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that receives the bytes read from the stream.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>A <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the zero-based location in <em>buffer</em> at which to begin storing the data read from this stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>A <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the maximum number of bytes to read from the stream.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the number of bytes read from the underlying stream. When there is no more data to be read, returns 0.</p>\\n\"\n  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The read operation failed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Authentication has not occurred.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>A <xref href=\\\"System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operation is already in progress.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Net.Security.NegotiateStream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  nameWithType: NegotiateStream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: NegotiateStream.Read(Byte(), Int32, Int32)\n- uid: System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.Net.Security.NegotiateStream.Seek(System.Int64, System.IO.SeekOrigin)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Seek\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 59\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Throws <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override long Seek(long offset, SeekOrigin origin)\n    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>This value is ignored.</p>\\n\"\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: \"\\n<p>This value is ignored.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>Always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Seeking is not supported on <xref href=\\\"System.Net.Security.NegotiateStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NegotiateStream.Seek(Int64, SeekOrigin)\n- uid: System.Net.Security.NegotiateStream.SetLength(System.Int64)\n  commentId: M:System.Net.Security.NegotiateStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.Net.Security.NegotiateStream.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetLength\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 60\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Sets the length of the underlying stream.</p>\\n\"\n  syntax:\n    content: public override void SetLength(long value)\n    content.vb: Public Overrides Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the length of the stream.</p>\\n\"\n  overridden: System.IO.Stream.SetLength(System.Int64)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NegotiateStream.SetLength(Int64)\n- uid: System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Security.NegotiateStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.Net.Security.NegotiateStream.Write(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 61\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Write the specified number of <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>s to the underlying stream using the specified buffer and offset.</p>\\n\"\n  syntax:\n    content: public override void Write(byte[] buffer, int offset, int count)\n    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>A <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that supplies the bytes written to the stream.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the zero-based location in<em> buffer</em> at which to begin reading bytes to be written to the stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>A <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the number of bytes to read from <em>buffer</em>.</p>\\n\"\n  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>offset is less than 0</em>.</p>\\n<p>- or -</p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>- or -</p>\\n<p>\\n<em>offset</em> plus count is greater than the length of <em>buffer</em>.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The write operation failed.</p>\\n<p>- or -</p>\\n<p>Encryption is in use, but the data could not be encrypted.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>There is already a write operation in progress.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>This object has been closed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Authentication has not occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Net.Security.NegotiateStream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  nameWithType: NegotiateStream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: NegotiateStream.Write(Byte(), Int32, Int32)\nreferences:\n- uid: System.Net.Security\n  isExternal: false\n  name: System.Net.Security\n  fullName: System.Net.Security\n  commentId: N:System.Net.Security\n  nameWithType: System.Net.Security\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.Net.Security.AuthenticatedStream\n  parent: System.Net.Security\n  isExternal: false\n  name: AuthenticatedStream\n  fullName: System.Net.Security.AuthenticatedStream\n  commentId: T:System.Net.Security.AuthenticatedStream\n  nameWithType: AuthenticatedStream\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: LeaveInnerStreamOpen\n  fullName: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen\n  commentId: P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen\n  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen\n- uid: System.Net.Security.AuthenticatedStream.InnerStream\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: InnerStream\n  fullName: System.Net.Security.AuthenticatedStream.InnerStream\n  commentId: P:System.Net.Security.AuthenticatedStream.InnerStream\n  nameWithType: AuthenticatedStream.InnerStream\n- uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Security.AuthenticatedStream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Security.AuthenticatedStream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)\n  nameWithType: AuthenticatedStream.Dispose(Boolean)\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  fullName: System.IO.Stream.Null\n  commentId: F:System.IO.Stream.Null\n  nameWithType: Stream.Null\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)\n  nameWithType: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyTo(Stream, Int32)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: true\n  name: Close()\n  fullName: System.IO.Stream.Close()\n  spec.csharp:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Close\n  nameWithType: Stream.Close()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.Stream.Dispose()\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose\n  nameWithType: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync\n  nameWithType: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: true\n  name: CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  spec.csharp:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CreateWaitHandle\n  nameWithType: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  spec.csharp:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadByte\n  nameWithType: Stream.ReadByte()\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(System.Byte)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteByte(System.Byte)\n  nameWithType: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)\n  nameWithType: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: true\n  name: ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  spec.csharp:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ObjectInvariant\n  nameWithType: Stream.ObjectInvariant()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  name: AsInputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  name: AsOutputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  name: AsRandomAccessStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  isExternal: true\n  name: AsInputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions\n  parent: System.IO\n  isExternal: false\n  name: WindowsRuntimeStreamExtensions\n  fullName: System.IO.WindowsRuntimeStreamExtensions\n  commentId: T:System.IO.WindowsRuntimeStreamExtensions\n  nameWithType: WindowsRuntimeStreamExtensions\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  isExternal: true\n  name: AsOutputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  isExternal: true\n  name: AsRandomAccessStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  fullName: System.IO.Stream.CanRead\n  commentId: P:System.IO.Stream.CanRead\n  nameWithType: Stream.CanRead\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  fullName: System.IO.Stream.CanSeek\n  commentId: P:System.IO.Stream.CanSeek\n  nameWithType: Stream.CanSeek\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  commentId: P:System.IO.Stream.CanTimeout\n  nameWithType: Stream.CanTimeout\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  fullName: System.IO.Stream.CanWrite\n  commentId: P:System.IO.Stream.CanWrite\n  nameWithType: Stream.CanWrite\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: false\n  name: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n  commentId: T:System.Security.Principal.TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: IsAuthenticated\n  fullName: System.Net.Security.AuthenticatedStream.IsAuthenticated\n  commentId: P:System.Net.Security.AuthenticatedStream.IsAuthenticated\n  nameWithType: AuthenticatedStream.IsAuthenticated\n- uid: System.Net.Security.AuthenticatedStream.IsEncrypted\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: IsEncrypted\n  fullName: System.Net.Security.AuthenticatedStream.IsEncrypted\n  commentId: P:System.Net.Security.AuthenticatedStream.IsEncrypted\n  nameWithType: AuthenticatedStream.IsEncrypted\n- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: IsMutuallyAuthenticated\n  fullName: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated\n  commentId: P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated\n  nameWithType: AuthenticatedStream.IsMutuallyAuthenticated\n- uid: System.Net.Security.AuthenticatedStream.IsServer\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: IsServer\n  fullName: System.Net.Security.AuthenticatedStream.IsServer\n  commentId: P:System.Net.Security.AuthenticatedStream.IsServer\n  nameWithType: AuthenticatedStream.IsServer\n- uid: System.Net.Security.AuthenticatedStream.IsSigned\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: IsSigned\n  fullName: System.Net.Security.AuthenticatedStream.IsSigned\n  commentId: P:System.Net.Security.AuthenticatedStream.IsSigned\n  nameWithType: AuthenticatedStream.IsSigned\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  fullName: System.IO.Stream.Length\n  commentId: P:System.IO.Stream.Length\n  nameWithType: Stream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  fullName: System.IO.Stream.Position\n  commentId: P:System.IO.Stream.Position\n  nameWithType: Stream.Position\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  commentId: P:System.IO.Stream.ReadTimeout\n  nameWithType: Stream.ReadTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: IIdentity\n  fullName: System.Security.Principal.IIdentity\n  commentId: T:System.Security.Principal.IIdentity\n  nameWithType: IIdentity\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  commentId: P:System.IO.Stream.WriteTimeout\n  nameWithType: Stream.WriteTimeout\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: NetworkCredential\n  isExternal: true\n  name: NetworkCredential\n  fullName: NetworkCredential\n  nameWithType: NetworkCredential\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ChannelBinding\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding\n  nameWithType: ChannelBinding\n- uid: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: System.Security.Authentication.ExtendedProtection\n  fullName: System.Security.Authentication.ExtendedProtection\n  commentId: N:System.Security.Authentication.ExtendedProtection\n  nameWithType: System.Security.Authentication.ExtendedProtection\n- uid: System.Net.Security.ProtectionLevel\n  parent: System.Net.Security\n  isExternal: false\n  name: ProtectionLevel\n  fullName: System.Net.Security.ProtectionLevel\n  commentId: T:System.Net.Security.ProtectionLevel\n  nameWithType: ProtectionLevel\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  commentId: T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  nameWithType: ExtendedProtectionPolicy\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.Stream.Flush()\n  spec.csharp:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Flush\n  nameWithType: Stream.Flush()\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)\n  spec.csharp:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  nameWithType: Stream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  fullName: System.IO.SeekOrigin\n  commentId: T:System.IO.SeekOrigin\n  nameWithType: SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: true\n  name: SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(System.Int64)\n  spec.csharp:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.SetLength(System.Int64)\n  nameWithType: Stream.SetLength(Int64)\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.Security.Authentication.AuthenticationException\n  parent: System.Security.Authentication\n  isExternal: false\n  name: AuthenticationException\n  fullName: System.Security.Authentication.AuthenticationException\n  commentId: T:System.Security.Authentication.AuthenticationException\n  nameWithType: AuthenticationException\n- uid: System.Security.Authentication.InvalidCredentialException\n  isExternal: false\n  name: InvalidCredentialException\n  fullName: System.Security.Authentication.InvalidCredentialException\n  commentId: T:System.Security.Authentication.InvalidCredentialException\n  nameWithType: InvalidCredentialException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n"}