{"nodes":[{"pos":[2501,2518],"content":"SemaphoreSecurity","needQuote":true,"nodes":[{"content":"SemaphoreSecurity","pos":[0,17]}]},{"pos":[10483,10502],"content":"SemaphoreSecurity()","needQuote":true,"nodes":[{"content":"SemaphoreSecurity()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;This class is not supported on Windows 98 or Windows Millennium Edition.&lt;/p&gt;\\n","pos":[11378,11461],"source":"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n"},{"pos":[12013,12061],"content":"SemaphoreSecurity(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"SemaphoreSecurity(String, AccessControlSections)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The name of the system semaphore whose access control security rules are to be retrieved.&lt;/p&gt;\\n","pos":[13166,13266],"source":"\\n<p>The name of the system semaphore whose access control security rules are to be retrieved.</p>\\n"},{"content":"\\n&lt;p&gt;This class is not supported on Windows 98 or Windows Millennium Edition.&lt;/p&gt;\\n","pos":[13679,13762],"source":"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n"},{"pos":[14170,14185],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[15816,15830],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[17442,17455],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[19716,19823],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"content":"\\n&lt;p&gt;Meaningless for named semaphores, because they have no hierarchy.&lt;/p&gt;\\n","pos":[21820,21896],"source":"\\n<p>Meaningless for named semaphores, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named semaphores, because they have no hierarchy.&lt;/p&gt;\\n","pos":[22004,22080],"source":"\\n<p>Meaningless for named semaphores, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named semaphores, because they have no hierarchy.&lt;/p&gt;\\n","pos":[22188,22264],"source":"\\n<p>Meaningless for named semaphores, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt;, &lt;em&gt;inheritanceFlags&lt;/em&gt;, &lt;em&gt;propagationFlags&lt;/em&gt;, or &lt;em&gt;type&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n","pos":[23247,23379],"source":"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>type</em> specifies an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;identityReference&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[23484,23543],"source":"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[23544,23602],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n"},{"pos":[24758,24792],"content":"AddAccessRule(SemaphoreAccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(SemaphoreAccessRule)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The access control rule to add.&lt;/p&gt;\\n","pos":[25714,25756],"source":"\\n<p>The access control rule to add.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[25875,25927],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[26462,26494],"content":"AddAuditRule(SemaphoreAuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(SemaphoreAuditRule)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The audit rule to add.","pos":[27406,27433],"source":"\\n<p>The audit rule to add."},{"content":"The user specified by this rule determines the search.&lt;/p&gt;\\n","pos":[27434,27494],"source":" The user specified by this rule determines the search.</p>\\n"},{"pos":[28513,28612],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"content":"\\n&lt;p&gt;Meaningless for named wait handles, because they have no hierarchy.&lt;/p&gt;\\n","pos":[30598,30676],"source":"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named wait handles, because they have no hierarchy.&lt;/p&gt;\\n","pos":[30784,30862],"source":"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named wait handles, because they have no hierarchy.&lt;/p&gt;\\n","pos":[30970,31048],"source":"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt;, &lt;em&gt;inheritanceFlags&lt;/em&gt;, &lt;em&gt;propagationFlags&lt;/em&gt;, or &lt;em&gt;flags&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n","pos":[32258,32391],"source":"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>flags</em> specifies an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;identityReference&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[32496,32555],"source":"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[32556,32614],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n"},{"pos":[33771,33808],"content":"RemoveAccessRule(SemaphoreAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(SemaphoreAccessRule)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a compatible rule is found; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35514,35613],"source":"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35732,35784],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[36346,36386],"content":"RemoveAccessRuleAll(SemaphoreAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(SemaphoreAccessRule)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[37901,37953],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[38533,38578],"content":"RemoveAccessRuleSpecific(SemaphoreAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(SemaphoreAccessRule)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39795,39847],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[40402,40437],"content":"RemoveAuditRule(SemaphoreAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(SemaphoreAuditRule)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a compatible rule is found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41892,41992],"source":"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[42111,42163],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[42717,42755],"content":"RemoveAuditRuleAll(SemaphoreAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(SemaphoreAuditRule)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[44012,44064],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[44636,44679],"content":"RemoveAuditRuleSpecific(SemaphoreAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(SemaphoreAuditRule)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[45878,45930],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[46486,46522],"content":"ResetAccessRule(SemaphoreAccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(SemaphoreAccessRule)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[47919,47971],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[48514,48548],"content":"SetAccessRule(SemaphoreAccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(SemaphoreAccessRule)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[50043,50095],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[50630,50662],"content":"SetAuditRule(SemaphoreAuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(SemaphoreAuditRule)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[52036,52088],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[52292,52321],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[52521,52527],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52726,52740],"content":"ObjectSecurity","needQuote":true,"nodes":[{"content":"ObjectSecurity","pos":[0,14]}]},{"pos":[53015,53035],"content":"CommonObjectSecurity","needQuote":true,"nodes":[{"content":"CommonObjectSecurity","pos":[0,20]}]},{"pos":[53328,53348],"content":"NativeObjectSecurity","needQuote":true,"nodes":[{"content":"NativeObjectSecurity","pos":[0,20]}]},{"pos":[53736,53774],"content":"Persist(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections)","pos":[0,38]}]},{"pos":[54074,54081],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[54165,54166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54216,54222],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[54283,54284]},{"pos":[54377,54398],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[54475,54476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54649,54656],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[54740,54741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54791,54797],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[54858,54859]},{"pos":[54952,54973],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[55050,55051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55520,55566],"content":"Persist(String, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections, Object)","pos":[0,46]}]},{"pos":[55895,55902],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[55986,55987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56037,56043],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[56104,56105]},{"pos":[56198,56219],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[56297,56298]},{"pos":[56353,56359],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56419,56420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56607,56614],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[56698,56699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56749,56755],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[56816,56817]},{"pos":[56910,56931],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[57009,57010]},{"pos":[57065,57071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57131,57132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57637,57679],"content":"Persist(SafeHandle, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections)","pos":[0,42]}]},{"pos":[58035,58042],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[58126,58127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58205,58215],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[58304,58305]},{"pos":[58398,58419],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[58496,58497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58698,58705],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[58789,58790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58868,58878],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[58967,58968]},{"pos":[59061,59082],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[59159,59160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59689,59739],"content":"Persist(SafeHandle, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections, Object)","pos":[0,50]}]},{"pos":[60124,60131],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[60215,60216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60294,60304],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[60393,60394]},{"pos":[60487,60508],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[60586,60587]},{"pos":[60642,60648],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60708,60709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60924,60931],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[61015,61016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61094,61104],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[61193,61194]},{"pos":[61287,61308],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[61386,61387]},{"pos":[61442,61448],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61508,61509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62070,62130],"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","pos":[0,60]}]},{"pos":[62534,62546],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[62635,62636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62728,62753],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[62835,62836]},{"pos":[62918,62928],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[62995,62996]},{"pos":[63052,63059],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63120,63121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63346,63358],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[63447,63448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63540,63565],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[63647,63648]},{"pos":[63730,63740],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[63807,63808]},{"pos":[63864,63871],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63932,63933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64512,64570],"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","pos":[0,58]}]},{"pos":[64970,64981],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[65069,65070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65162,65187],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[65269,65270]},{"pos":[65351,65360],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[65426,65427]},{"pos":[65483,65490],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[65551,65552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65775,65786],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[65874,65875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65967,65992],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[66074,66075]},{"pos":[66156,66165],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[66231,66232]},{"pos":[66288,66295],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[66356,66357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66864,66889],"content":"AddAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[67150,67163],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[67253,67254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67331,67341],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[67407,67408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67562,67575],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[67665,67666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67743,67753],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[67819,67820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68225,68250],"content":"SetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[68511,68524],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[68614,68615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68692,68702],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[68768,68769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68923,68936],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[69026,69027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69104,69114],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[69180,69181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69588,69615],"content":"ResetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(AccessRule)","pos":[0,27]}]},{"pos":[69880,69895],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[69987,69988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70065,70075],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[70141,70142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70298,70313],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[70405,70406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70483,70493],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[70559,70560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70972,71000],"content":"RemoveAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(AccessRule)","pos":[0,28]}]},{"pos":[71267,71283],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[71376,71377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71454,71464],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[71530,71531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71688,71704],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[71797,71798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71875,71885],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[71951,71952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72369,72400],"content":"RemoveAccessRuleAll(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(AccessRule)","pos":[0,31]}]},{"pos":[72673,72692],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[72788,72789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72866,72876],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[72942,72943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73103,73122],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[73218,73219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73296,73306],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[73372,73373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73801,73837],"content":"RemoveAccessRuleSpecific(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(AccessRule)","pos":[0,36]}]},{"pos":[74120,74144],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[74245,74246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74323,74333],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[74399,74400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74565,74589],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[74690,74691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74768,74778],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[74844,74845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75270,75293],"content":"AddAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[75550,75562],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[75651,75652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75728,75737],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[75802,75803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75955,75967],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[76056,76057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76133,76142],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[76207,76208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76607,76630],"content":"SetAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[76887,76899],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[76988,76989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77065,77074],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[77139,77140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77292,77304],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[77393,77394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77470,77479],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[77544,77545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77947,77973],"content":"RemoveAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(AuditRule)","pos":[0,26]}]},{"pos":[78236,78251],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[78343,78344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78420,78429],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[78494,78495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78650,78665],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[78757,78758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78834,78843],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[78908,78909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79320,79349],"content":"RemoveAuditRuleAll(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(AuditRule)","pos":[0,29]}]},{"pos":[79618,79636],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[79731,79732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79808,79817],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[79882,79883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80041,80059],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[80154,80155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80231,80240],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[80305,80306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80728,80762],"content":"RemoveAuditRuleSpecific(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(AuditRule)","pos":[0,34]}]},{"pos":[81041,81064],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[81164,81165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81241,81250],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[81315,81316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81479,81502],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[81602,81603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81679,81688],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[81753,81754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82178,82216],"content":"GetAccessRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAccessRules(Boolean, Boolean, Type)","pos":[0,38]}]},{"pos":[82483,82497],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[82588,82589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82640,82647],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[82709,82710]},{"pos":[82766,82773],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[82835,82836]},{"pos":[82889,82893],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[82951,82952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83108,83122],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[83213,83214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83265,83272],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[83334,83335]},{"pos":[83391,83398],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[83460,83461]},{"pos":[83514,83518],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[83576,83577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83997,84034],"content":"GetAuditRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAuditRules(Boolean, Boolean, Type)","pos":[0,37]}]},{"pos":[84299,84312],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[84402,84403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84454,84461],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[84523,84524]},{"pos":[84580,84587],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[84649,84650]},{"pos":[84703,84707],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[84765,84766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84921,84934],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[85024,85025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85076,85083],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[85145,85146]},{"pos":[85202,85209],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[85271,85272]},{"pos":[85325,85329],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[85387,85388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85747,85757],"content":"ReadLock()","needQuote":true,"nodes":[{"content":"ReadLock()","pos":[0,10]}]},{"pos":[85914,85922],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[86001,86002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86029,86030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86131,86139],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[86218,86219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86246,86247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86521,86533],"content":"ReadUnlock()","needQuote":true,"nodes":[{"content":"ReadUnlock()","pos":[0,12]}]},{"pos":[86694,86704],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[86785,86786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86813,86814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86917,86927],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[87008,87009],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87036,87037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87314,87325],"content":"WriteLock()","needQuote":true,"nodes":[{"content":"WriteLock()","pos":[0,11]}]},{"pos":[87484,87493],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[87573,87574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87601,87602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87704,87713],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[87793,87794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87821,87822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88099,88112],"content":"WriteUnlock()","needQuote":true,"nodes":[{"content":"WriteUnlock()","pos":[0,13]}]},{"pos":[88275,88286],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[88368,88369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88396,88397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88501,88512],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[88594,88595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88622,88623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88981,89028],"content":"Persist(Boolean, String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(Boolean, String, AccessControlSections)","pos":[0,47]}]},{"pos":[89347,89354],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[89432,89433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89484,89491],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[89553,89554]},{"pos":[89609,89615],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[89676,89677]},{"pos":[89770,89791],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[89868,89869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90051,90058],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[90136,90137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90188,90195],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[90257,90258]},{"pos":[90313,90319],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[90380,90381]},{"pos":[90474,90495],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[90572,90573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90975,90989],"content":"GetOwner(Type)","needQuote":true,"nodes":[{"content":"GetOwner(Type)","pos":[0,14]}]},{"pos":[91170,91178],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[91257,91258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91306,91310],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[91368,91369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91483,91491],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[91570,91571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91619,91623],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[91681,91682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92015,92042],"content":"SetOwner(IdentityReference)","needQuote":true,"nodes":[{"content":"SetOwner(IdentityReference)","pos":[0,27]}]},{"pos":[92287,92295],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[92374,92375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92455,92472],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[92562,92563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92709,92717],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[92796,92797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92877,92894],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[92984,92985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93331,93345],"content":"GetGroup(Type)","needQuote":true,"nodes":[{"content":"GetGroup(Type)","pos":[0,14]}]},{"pos":[93526,93534],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[93613,93614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93662,93666],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[93724,93725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93839,93847],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[93926,93927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93975,93979],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[94037,94038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94371,94398],"content":"SetGroup(IdentityReference)","needQuote":true,"nodes":[{"content":"SetGroup(IdentityReference)","pos":[0,27]}]},{"pos":[94643,94651],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[94730,94731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94811,94828],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[94918,94919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95065,95073],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[95152,95153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95233,95250],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[95340,95341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95727,95762],"content":"PurgeAccessRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAccessRules(IdentityReference)","pos":[0,35]}]},{"pos":[96023,96039],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[96126,96127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96207,96224],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[96314,96315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96469,96485],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[96572,96573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96653,96670],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[96760,96761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97162,97196],"content":"PurgeAuditRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAuditRules(IdentityReference)","pos":[0,34]}]},{"pos":[97455,97470],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[97556,97557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97637,97654],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[97744,97745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97898,97913],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[97999,98000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98080,98097],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[98187,98188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98581,98622],"content":"SetAccessRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection(Boolean, Boolean)","pos":[0,41]}]},{"pos":[98870,98893],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[98987,98988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99039,99046],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[99108,99109]},{"pos":[99165,99172],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[99233,99234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99381,99404],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[99498,99499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99550,99557],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[99619,99620]},{"pos":[99676,99683],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[99744,99745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100138,100178],"content":"SetAuditRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection(Boolean, Boolean)","pos":[0,40]}]},{"pos":[100424,100446],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[100539,100540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100591,100598],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[100660,100661]},{"pos":[100717,100724],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[100785,100786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100932,100954],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[101047,101048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101099,101106],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[101168,101169]},{"pos":[101225,101232],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[101293,101294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101658,101685],"content":"IsSddlConversionSupported()","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported()","pos":[0,27]}]},{"pos":[101876,101901],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[101997,101998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102025,102026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102144,102169],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[102265,102266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102293,102294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102674,102726],"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","pos":[0,52]}]},{"pos":[103029,103058],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[103158,103159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103247,103268],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[103345,103346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103521,103550],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[103650,103651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103739,103760],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[103837,103838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104261,104298],"content":"SetSecurityDescriptorSddlForm(String)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String)","pos":[0,37]}]},{"pos":[104525,104554],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[104654,104655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104705,104711],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[104771,104772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104909,104938],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[105038,105039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105089,105095],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[105155,105156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105578,105638],"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","pos":[0,60]}]},{"pos":[105970,105999],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[106099,106100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106150,106156],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[106217,106218]},{"pos":[106311,106332],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[106409,106410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106599,106628],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[106728,106729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106779,106785],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[106846,106847]},{"pos":[106940,106961],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[107038,107039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107472,107505],"content":"GetSecurityDescriptorBinaryForm()","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm()","pos":[0,33]}]},{"pos":[107708,107739],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[107841,107842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107869,107870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107994,108025],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[108127,108128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108155,108156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108511,108550],"content":"SetSecurityDescriptorBinaryForm(Byte[])","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[])","pos":[0,39]}]},{"pos":[108939,108970],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[109072,109073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109121,109125],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[109184,109186]},{"pos":[109217,109218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109357,109388],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[109490,109491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109539,109543],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[109601,109603],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[109631,109632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110134,110196],"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","pos":[0,62]}]},{"pos":[110766,110797],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[110899,110900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110948,110952],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[111011,111013]},{"content":",","pos":[111045,111046]},{"pos":[111139,111160],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[111237,111238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111429,111460],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[111562,111563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111611,111615],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[111673,111675],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[111704,111705]},{"pos":[111798,111819],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[111896,111897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112529,112593],"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","pos":[0,64]}]},{"pos":[112993,113009],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[113096,113097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113189,113214],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[113296,113297]},{"pos":[113379,113389],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[113456,113457]},{"pos":[113513,113520],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[113581,113582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113805,113821],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[113908,113909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114001,114026],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[114108,114109]},{"pos":[114191,114201],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[114268,114269]},{"pos":[114325,114332],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[114393,114394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114961,115023],"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","pos":[0,62]}]},{"pos":[115419,115434],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[115520,115521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115613,115638],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[115720,115721]},{"pos":[115802,115811],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[115877,115878]},{"pos":[115934,115941],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[116002,116003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116224,116239],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[116325,116326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116418,116443],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[116525,116526]},{"pos":[116607,116616],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[116682,116683]},{"pos":[116739,116746],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[116807,116808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117257,117270],"content":"OwnerModified","needQuote":true,"nodes":[{"content":"OwnerModified","pos":[0,13]}]},{"pos":[117610,117623],"content":"GroupModified","needQuote":true,"nodes":[{"content":"GroupModified","pos":[0,13]}]},{"pos":[117968,117986],"content":"AuditRulesModified","needQuote":true,"nodes":[{"content":"AuditRulesModified","pos":[0,18]}]},{"pos":[118347,118366],"content":"AccessRulesModified","needQuote":true,"nodes":[{"content":"AccessRulesModified","pos":[0,19]}]},{"pos":[118722,118733],"content":"IsContainer","needQuote":true,"nodes":[{"content":"IsContainer","pos":[0,11]}]},{"pos":[119058,119062],"content":"IsDS","needQuote":true,"nodes":[{"content":"IsDS","pos":[0,4]}]},{"pos":[119385,119408],"content":"AreAccessRulesProtected","needQuote":true,"nodes":[{"content":"AreAccessRulesProtected","pos":[0,23]}]},{"pos":[119787,119809],"content":"AreAuditRulesProtected","needQuote":true,"nodes":[{"content":"AreAuditRulesProtected","pos":[0,22]}]},{"pos":[120186,120209],"content":"AreAccessRulesCanonical","needQuote":true,"nodes":[{"content":"AreAccessRulesCanonical","pos":[0,23]}]},{"pos":[120588,120610],"content":"AreAuditRulesCanonical","needQuote":true,"nodes":[{"content":"AreAuditRulesCanonical","pos":[0,22]}]},{"pos":[120909,120919],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[121014,121022],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[121091,121092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121119,121120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121190,121198],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[121267,121268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121295,121296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121479,121493],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[121612,121618],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[121685,121686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121736,121742],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[121802,121803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121886,121892],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[121959,121960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122010,122016],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122076,122077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122291,122313],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[122461,122467],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[122534,122535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122585,122591],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[122652,122653]},{"pos":[122708,122714],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122774,122775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122872,122878],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[122945,122946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122996,123002],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[123063,123064]},{"pos":[123119,123125],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[123185,123186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123431,123462],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[123628,123643],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[123719,123720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123770,123776],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[123837,123838]},{"pos":[123893,123899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[123959,123960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124066,124081],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[124157,124158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124208,124214],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[124275,124276]},{"pos":[124331,124337],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[124397,124398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124628,124641],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[124742,124753],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[124825,124826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124853,124854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124927,124938],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[125010,125011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125038,125039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125214,125223],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[125316,125323],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[125391,125392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125419,125420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125489,125496],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[125564,125565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125592,125593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125768,125785],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[125894,125909],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[125985,125986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126013,126014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126091,126106],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[126182,126183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126210,126211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126356,126362],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[126493,126499],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[126705,126726],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[127047,127062],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[127323,127327],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[127550,127564],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[127907,127920],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[128478,128585],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"pos":[129193,129210],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[129298,129299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129379,129396],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[129487,129488]},{"pos":[129542,129547],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[129607,129608]},{"pos":[129664,129671],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[129733,129734]},{"pos":[129822,129838],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[129911,129912]},{"pos":[130000,130016],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[130089,130090]},{"pos":[130179,130196],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[130269,130270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130595,130612],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[130700,130701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130781,130798],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[130889,130890]},{"pos":[130944,130949],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[131009,131010]},{"pos":[131066,131073],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[131135,131136]},{"pos":[131224,131240],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[131313,131314]},{"pos":[131402,131418],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[131491,131492]},{"pos":[131581,131598],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[131671,131672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132236,132253],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[132468,132473],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[132616,132623],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[132827,132843],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[133120,133136],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[133414,133431],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[133705,133715],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[133913,133938],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[134185,134204],"content":"SemaphoreAccessRule","needQuote":true,"nodes":[{"content":"SemaphoreAccessRule","pos":[0,19]}]},{"pos":[134492,134510],"content":"SemaphoreAuditRule","needQuote":true,"nodes":[{"content":"SemaphoreAuditRule","pos":[0,18]}]},{"pos":[135030,135129],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"pos":[135721,135737],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[135824,135825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135905,135922],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[136013,136014]},{"pos":[136068,136073],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[136133,136134]},{"pos":[136190,136197],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[136259,136260]},{"pos":[136348,136364],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[136437,136438]},{"pos":[136526,136542],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[136615,136616]},{"pos":[136698,136708],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[136774,136775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137092,137108],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[137195,137196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137276,137293],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[137384,137385]},{"pos":[137439,137444],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[137504,137505]},{"pos":[137561,137568],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[137630,137631]},{"pos":[137719,137735],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[137808,137809]},{"pos":[137897,137913],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[137986,137987]},{"pos":[138069,138079],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[138145,138146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138695,138705],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[138957,138966],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[139181,139202],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[139396,139423],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[139629,139650],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[139851,139868],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Security.AccessControl.SemaphoreSecurity\n  commentId: T:System.Security.AccessControl.SemaphoreSecurity\n  id: SemaphoreSecurity\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.SemaphoreSecurity.#ctor\n  - System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.SemaphoreSecurity.AccessRightType\n  - System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.SemaphoreSecurity.AccessRuleType\n  - System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  - System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  - System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.SemaphoreSecurity.AuditRuleType\n  - System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  - System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)\n  - System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)\n  - System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  - System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)\n  - System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)\n  - System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  - System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  - System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  langs:\n  - csharp\n  - vb\n  name: SemaphoreSecurity\n  fullName: System.Security.AccessControl.SemaphoreSecurity\n  type: Class\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SemaphoreSecurity\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 95\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Represents the Windows access control security for a named semaphore. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public sealed class SemaphoreSecurity : NativeObjectSecurity\n    content.vb: >-\n      <SecurityCritical>\n\n      Public NotInheritable Class SemaphoreSecurity\n          Inherits NativeObjectSecurity\n  seealso:\n  - type: System.Security.AccessControl.SemaphoreAccessRule\n    commentId: T:System.Security.AccessControl.SemaphoreAccessRule\n  - type: System.Security.AccessControl.SemaphoreAuditRule\n    commentId: T:System.Security.AccessControl.SemaphoreAuditRule\n  - type: System.Security.AccessControl.SemaphoreRights\n    commentId: T:System.Security.AccessControl.SemaphoreRights\n  - type: System.Threading.Semaphore.GetAccessControl\n    commentId: M:System.Threading.Semaphore.GetAccessControl\n  - type: System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)\n    commentId: M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  inheritedMembers:\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SemaphoreSecurity\n- uid: System.Security.AccessControl.SemaphoreSecurity.#ctor\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: SemaphoreSecurity()\n  fullName: System.Security.AccessControl.SemaphoreSecurity.SemaphoreSecurity()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 98\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.SemaphoreSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with default values.</p>\\n\"\n  syntax:\n    content: public SemaphoreSecurity()\n    content.vb: Public Sub New\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.SemaphoreSecurity()\n- uid: System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)\n  id: '#ctor(System.String,System.Security.AccessControl.AccessControlSections)'\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: SemaphoreSecurity(String, AccessControlSections)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.SemaphoreSecurity(System.String, System.Security.AccessControl.AccessControlSections)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 99\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.SemaphoreSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified sections of the access control security rules from the system semaphore with the specified name.</p>\\n\"\n  syntax:\n    content: public SemaphoreSecurity(string name, AccessControlSections includeSections)\n    content.vb: Public Sub New(name As String, includeSections As AccessControlSections)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the system semaphore whose access control security rules are to be retrieved.</p>\\n\"\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: \"\\n<p>A combination of <xref href=\\\"System.Security.AccessControl.AccessControlSections\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags specifying the sections to retrieve.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.SemaphoreSecurity(String, AccessControlSections)\n- uid: System.Security.AccessControl.SemaphoreSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRightType\n  fullName: System.Security.AccessControl.SemaphoreSecurity.AccessRightType\n  type: Property\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRightType\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 100\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the enumeration that the <xref href=\\\"System.Security.AccessControl.SemaphoreSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class uses to represent access rights.</p>\\n\"\n  syntax:\n    content: public override Type AccessRightType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRightType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the <xref href=\\\"System.Security.AccessControl.SemaphoreRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SemaphoreSecurity.AccessRightType\n- uid: System.Security.AccessControl.SemaphoreSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.SemaphoreSecurity.AccessRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleType\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 101\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the type that the <xref href=\\\"System.Security.AccessControl.SemaphoreSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class uses to represent access rules.</p>\\n\"\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the <xref href=\\\"System.Security.AccessControl.SemaphoreAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SemaphoreSecurity.AccessRuleType\n- uid: System.Security.AccessControl.SemaphoreSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.SemaphoreSecurity.AuditRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleType\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 102\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the type that the <xref href=\\\"System.Security.AccessControl.SemaphoreSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class uses to represent audit rules.</p>\\n\"\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AuditRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the <xref href=\\\"System.Security.AccessControl.SemaphoreAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SemaphoreSecurity.AuditRuleType\n- uid: System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleFactory\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 103\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</p>\\n\"\n  syntax:\n    content: public override AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)\n    content.vb: Public Overrides Function AccessRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that identifies the user or group the rule applies to.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.SemaphoreRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying the access rights to allow or deny, cast to an integer.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>Meaningless for named semaphores, because they have no hierarchy.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Meaningless for named semaphores, because they have no hierarchy.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Meaningless for named semaphores, because they have no hierarchy.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying whether the rights are allowed or denied.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.SemaphoreAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the specified rights for the specified user.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>type</em> specifies an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>identityReference</em> is neither of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, nor of a type such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SemaphoreSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAccessRule(SemaphoreAccessRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 104\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for a matching rule with which the new rule can be merged. If none are found, adds the new rule.</p>\\n\"\n  syntax:\n    content: public void AddAccessRule(SemaphoreAccessRule rule)\n    content.vb: Public Sub AddAccessRule(rule As SemaphoreAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAccessRule\n      description: \"\\n<p>The access control rule to add.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.AddAccessRule(SemaphoreAccessRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAuditRule(SemaphoreAuditRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAuditRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 105\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.</p>\\n\"\n  syntax:\n    content: public void AddAuditRule(SemaphoreAuditRule rule)\n    content.vb: Public Sub AddAuditRule(rule As SemaphoreAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAuditRule\n      description: \"\\n<p>The audit rule to add. The user specified by this rule determines the search.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.AddAuditRule(SemaphoreAuditRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleFactory\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 106\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</p>\\n\"\n  syntax:\n    content: public override AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)\n    content.vb: Public Overrides Function AuditRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that identifies the user or group the rule applies to.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.SemaphoreRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying the access rights to audit, cast to an integer.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specify whether to audit successful access, failed access, or both.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.SemaphoreAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the specified audit rule for the specified user. The return type of the method is the base class, <xref href=\\\"System.Security.AccessControl.AuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, but the return value can be cast safely to the derived class.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>flags</em> specifies an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>identityReference</em> is neither of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, nor of a type such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SemaphoreSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRule(SemaphoreAccessRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 107\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an access control rule with the same user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</p>\\n\"\n  syntax:\n    content: public bool RemoveAccessRule(SemaphoreAccessRule rule)\n    content.vb: Public Function RemoveAccessRule(rule As SemaphoreAccessRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAccessRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.SemaphoreAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.RemoveAccessRule(SemaphoreAccessRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleAll(SemaphoreAccessRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleAll\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 108\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for all access control rules with the same user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> (allow or deny) as the specified rule and, if found, removes them.</p>\\n\"\n  syntax:\n    content: public void RemoveAccessRuleAll(SemaphoreAccessRule rule)\n    content.vb: Public Sub RemoveAccessRuleAll(rule As SemaphoreAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAccessRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.SemaphoreAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to search for. Any rights specified by this rule are ignored.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.RemoveAccessRuleAll(SemaphoreAccessRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleSpecific(SemaphoreAccessRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleSpecific\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 109\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</p>\\n\"\n  syntax:\n    content: public void RemoveAccessRuleSpecific(SemaphoreAccessRule rule)\n    content.vb: Public Sub RemoveAccessRuleSpecific(rule As SemaphoreAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.SemaphoreAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.RemoveAccessRuleSpecific(SemaphoreAccessRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRule(SemaphoreAuditRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 110\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</p>\\n\"\n  syntax:\n    content: public bool RemoveAuditRule(SemaphoreAuditRule rule)\n    content.vb: Public Function RemoveAuditRule(rule As SemaphoreAuditRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAuditRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.SemaphoreAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.RemoveAuditRule(SemaphoreAuditRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleAll(SemaphoreAuditRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleAll\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 111\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditRuleAll(SemaphoreAuditRule rule)\n    content.vb: Public Sub RemoveAuditRuleAll(rule As SemaphoreAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAuditRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.SemaphoreAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user to search for. Any rights specified by this rule are ignored.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.RemoveAuditRuleAll(SemaphoreAuditRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleSpecific(SemaphoreAuditRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleSpecific\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 112\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditRuleSpecific(SemaphoreAuditRule rule)\n    content.vb: Public Sub RemoveAuditRuleSpecific(rule As SemaphoreAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.SemaphoreAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.RemoveAuditRuleSpecific(SemaphoreAuditRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: ResetAccessRule(SemaphoreAccessRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 113\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access control rules with the same user as the specified rule, regardless of <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and then adds the specified rule.</p>\\n\"\n  syntax:\n    content: public void ResetAccessRule(SemaphoreAccessRule rule)\n    content.vb: Public Sub ResetAccessRule(rule As SemaphoreAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.SemaphoreAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. The user specified by this rule determines the rules to remove before this rule is added.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.ResetAccessRule(SemaphoreAccessRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAccessRule(SemaphoreAccessRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 114\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access control rules with the same user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> (allow or deny) as the specified rule, and then adds the specified rule.</p>\\n\"\n  syntax:\n    content: public void SetAccessRule(SemaphoreAccessRule rule)\n    content.vb: Public Sub SetAccessRule(rule As SemaphoreAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.SemaphoreAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. The user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this rule determine the rules to remove before this rule is added.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.SetAccessRule(SemaphoreAccessRule)\n- uid: System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  commentId: M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  parent: System.Security.AccessControl.SemaphoreSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAuditRule(SemaphoreAuditRule)\n  fullName: System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAuditRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 115\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules with the same user as the specified rule, regardless of the <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value, and then adds the specified rule.</p>\\n\"\n  syntax:\n    content: public void SetAuditRule(SemaphoreAuditRule rule)\n    content.vb: Public Sub SetAuditRule(rule As SemaphoreAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.SemaphoreAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.SemaphoreAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. The user specified by this rule determines the rules to remove before this rule is added.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SemaphoreSecurity.SetAuditRule(SemaphoreAuditRule)\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.ObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n  commentId: T:System.Security.AccessControl.ObjectSecurity\n  nameWithType: ObjectSecurity\n- uid: System.Security.AccessControl.CommonObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonObjectSecurity\n  fullName: System.Security.AccessControl.CommonObjectSecurity\n  commentId: T:System.Security.AccessControl.CommonObjectSecurity\n  nameWithType: CommonObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n  commentId: T:System.Security.AccessControl.NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAccessRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAuditRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock\n  nameWithType: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  nameWithType: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock\n  nameWithType: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  nameWithType: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: Persist(Boolean, String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetOwner(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetOwner(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetGroup(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetGroup(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAccessRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAuditRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())\n  name.vb: SetSecurityDescriptorBinaryForm(Byte())\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte())\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)\n  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  fullName: System.Security.AccessControl.ObjectSecurity.IsDS\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS\n  nameWithType: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n  commentId: T:System.Security.AccessControl.AccessControlSections\n  nameWithType: AccessControlSections\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n  commentId: T:System.Security.AccessControl.AccessControlType\n  nameWithType: AccessControlType\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n  commentId: T:System.Security.AccessControl.AccessRule\n  nameWithType: AccessRule\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.AccessControl.SemaphoreAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: SemaphoreAccessRule\n  fullName: System.Security.AccessControl.SemaphoreAccessRule\n  commentId: T:System.Security.AccessControl.SemaphoreAccessRule\n  nameWithType: SemaphoreAccessRule\n- uid: System.Security.AccessControl.SemaphoreAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: SemaphoreAuditRule\n  fullName: System.Security.AccessControl.SemaphoreAuditRule\n  commentId: T:System.Security.AccessControl.SemaphoreAuditRule\n  nameWithType: SemaphoreAuditRule\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n  commentId: T:System.Security.AccessControl.AuditFlags\n  nameWithType: AuditFlags\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n  commentId: T:System.Security.AccessControl.AuditRule\n  nameWithType: AuditRule\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}