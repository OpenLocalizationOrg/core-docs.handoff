{"nodes":[{"pos":[559,571],"content":"IEnumVARIANT","needQuote":true,"nodes":[{"content":"IEnumVARIANT","pos":[0,12]}]},{"pos":[2189,2196],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[3566,3595],"content":"Next(Int32, Object[], IntPtr)","needQuote":true,"nodes":[{"content":"Next(Int32, Object[], IntPtr)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The number of elements to return in &lt;em&gt;rgelt&lt;/em&gt;.","pos":[4595,4651],"source":"\\n<p>The number of elements to return in <em>rgelt</em>."},{"content":"&lt;/p&gt;\\n","pos":[4652,4658],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the enumerated elements.","pos":[4724,4803],"source":"\\n<p>When this method returns, contains a reference to the enumerated elements."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[4804,4849],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[5189,5203],"content":"SizeParamIndex","needQuote":true,"nodes":[{"content":"SizeParamIndex","pos":[0,14]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the actual number of elements enumerated in &lt;em&gt;rgelt&lt;/em&gt;.","pos":[5465,5579],"source":"\\n<p>When this method returns, contains a reference to the actual number of elements enumerated in <em>rgelt</em>."},{"content":"&lt;/p&gt;\\n","pos":[5580,5586],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;S_OK&lt;/strong&gt; if the &lt;em&gt;pceltFetched&lt;/em&gt; parameter equals the &lt;em&gt;celt&lt;/em&gt; parameter; otherwise, &lt;strong&gt;S_FALSE&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5645,5791],"source":"\\n<p>\\n<strong>S_OK</strong> if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n"},{"pos":[6324,6331],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;An HRESULT with the value &lt;strong&gt;S_OK&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7083,7142],"source":"\\n<p>An HRESULT with the value <strong>S_OK</strong>.</p>\\n"},{"pos":[7470,7481],"content":"Skip(Int32)","needQuote":true,"nodes":[{"content":"Skip(Int32)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The number of elements to skip in the enumeration.","pos":[8298,8353],"source":"\\n<p>The number of elements to skip in the enumeration."},{"content":"&lt;/p&gt;\\n","pos":[8354,8360],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;S_OK&lt;/strong&gt; if the number of elements skipped equals &lt;em&gt;celt&lt;/em&gt; parameter; otherwise, &lt;strong&gt;S_FALSE&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8419,8556],"source":"\\n<p>\\n<strong>S_OK</strong> if the number of elements skipped equals <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n"},{"pos":[8686,8725],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[9027,9039],"content":"IEnumVARIANT","needQuote":true,"nodes":[{"content":"IEnumVARIANT","pos":[0,12]}]},{"pos":[9267,9272],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9379,9387],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[9515,9521],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[9582,9584]},{"pos":[9649,9655],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9715,9717],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[9854,9860],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[9981,9987],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  id: IEnumVARIANT\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone\n  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)\n  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset\n  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: IEnumVARIANT\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEnumVARIANT\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Manages the definition of the <strong>IEnumVARIANT</strong> interface.</p>\\n\"\n  syntax:\n    content: >-\n      [Guid(\"00020404-0000-0000-C000-000000000046\")]\n\n      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n\n      [ComImport]\n\n      public interface IEnumVARIANT\n    content.vb: >-\n      <Guid(\"00020404-0000-0000-C000-000000000046\")>\n\n      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>\n\n      <ComImport>\n\n      Public Interface IEnumVARIANT\n  attributes:\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)\n    arguments:\n    - type: System.Runtime.InteropServices.ComInterfaceType\n      value: 1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IEnumVARIANT\n- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone\n  id: Clone\n  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  langs:\n  - csharp\n  - vb\n  name: Clone()\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clone\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Creates a new enumerator that contains the same enumeration state as the current one.</p>\\n\"\n  syntax:\n    content: IEnumVARIANT Clone()\n    content.vb: Function Clone As IEnumVARIANT\n    return:\n      type: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n      description: \"\\n<p>An <xref href=\\\"System.Runtime.InteropServices.ComTypes.IEnumVARIANT\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  reference to the newly created enumerator.</p>\\n\"\n  nameWithType: IEnumVARIANT.Clone()\n- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)\n  id: Next(System.Int32,System.Object[],System.IntPtr)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  langs:\n  - csharp\n  - vb\n  name: Next(Int32, Object[], IntPtr)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32, System.Object[], System.IntPtr)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Next\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves a specified number of items in the enumeration sequence.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int Next(int celt, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex = (short)0), Out] object[] rgVar, IntPtr pceltFetched)\n    content.vb: >-\n      <PreserveSig>\n\n      Function Next(celt As Integer, rgVar As Object(), pceltFetched As IntPtr) As Integer\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: \"\\n<p>The number of elements to return in <em>rgelt</em>. </p>\\n\"\n    - id: rgVar\n      type: System.Object[]\n      description: \"\\n<p>When this method returns, contains a reference to the enumerated elements. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 42\n        namedArguments:\n        - name: SizeParamIndex\n          type: System.Int16\n          value: 0\n      - type: System.Runtime.InteropServices.OutAttribute\n        ctor: System.Runtime.InteropServices.OutAttribute.#ctor\n        arguments: []\n    - id: pceltFetched\n      type: System.IntPtr\n      description: \"\\n<p>When this method returns, contains a reference to the actual number of elements enumerated in <em>rgelt</em>. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>\\n<strong>S_OK</strong> if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32, System.Object(), System.IntPtr)\n  name.vb: Next(Int32, Object(), IntPtr)\n  nameWithType: IEnumVARIANT.Next(Int32, Object[], IntPtr)\n  nameWithType.vb: IEnumVARIANT.Next(Int32, Object(), IntPtr)\n- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset\n  id: Reset\n  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reset\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Resets the enumeration sequence to the beginning.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int Reset()\n    content.vb: >-\n      <PreserveSig>\n\n      Function Reset As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>An HRESULT with the value <strong>S_OK</strong>.</p>\\n\"\n  nameWithType: IEnumVARIANT.Reset()\n- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)\n  id: Skip(System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  langs:\n  - csharp\n  - vb\n  name: Skip(Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Skip\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Skips a specified number of items in the enumeration sequence.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int Skip(int celt)\n    content.vb: >-\n      <PreserveSig>\n\n      Function Skip(celt As Integer) As Integer\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: \"\\n<p>The number of elements to skip in the enumeration. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>\\n<strong>S_OK</strong> if the number of elements skipped equals <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n\"\n  nameWithType: IEnumVARIANT.Skip(Int32)\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IEnumVARIANT\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n  nameWithType: IEnumVARIANT\n  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}