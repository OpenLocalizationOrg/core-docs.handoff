{"nodes":[{"pos":[1909,1928],"content":"XmlObjectSerializer","needQuote":true,"nodes":[{"content":"XmlObjectSerializer","pos":[0,19]}]},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.","pos":[3239,3298],"source":"\\n<p>there is a problem with the instance being serialized."},{"content":"&lt;/p&gt;\\n","pos":[3299,3305],"source":" </p>\\n"},{"pos":[4296,4317],"content":"XmlObjectSerializer()","needQuote":true,"nodes":[{"content":"XmlObjectSerializer()","pos":[0,21]}]},{"pos":[5559,5593],"content":"IsStartObject(XmlDictionaryReader)","needQuote":true,"nodes":[{"content":"IsStartObject(XmlDictionaryReader)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the reader can read the data; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6813,6915],"source":"\\n<p>\\n<strong>true</strong> if the reader can read the data; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[7404,7428],"content":"IsStartObject(XmlReader)","needQuote":true,"nodes":[{"content":"IsStartObject(XmlReader)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the reader is positioned over the starting element; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8587,8711],"source":"\\n<p>\\n<strong>true</strong> if the reader is positioned over the starting element; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9167,9185],"content":"ReadObject(Stream)","needQuote":true,"nodes":[{"content":"ReadObject(Stream)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[10293,10328],"source":"\\n<p>The deserialized object.</p>\\n"},{"pos":[10820,10851],"content":"ReadObject(XmlDictionaryReader)","needQuote":true,"nodes":[{"content":"ReadObject(XmlDictionaryReader)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[12033,12068],"source":"\\n<p>The deserialized object.</p>\\n"},{"pos":[12618,12658],"content":"ReadObject(XmlDictionaryReader, Boolean)","needQuote":true,"nodes":[{"content":"ReadObject(XmlDictionaryReader, Boolean)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;strong&gt;false&lt;/strong&gt; to skip the verification.&lt;/p&gt;\\n","pos":[14028,14232],"source":"\\n<p>\\n<strong>true</strong> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, <strong>false</strong> to skip the verification.</p>\\n"},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[14292,14327],"source":"\\n<p>The deserialized object.</p>\\n"},{"pos":[14813,14834],"content":"ReadObject(XmlReader)","needQuote":true,"nodes":[{"content":"ReadObject(XmlReader)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[15966,16001],"source":"\\n<p>The deserialized object.</p>\\n"},{"pos":[16511,16541],"content":"ReadObject(XmlReader, Boolean)","needQuote":true,"nodes":[{"content":"ReadObject(XmlReader, Boolean)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;strong&gt;false&lt;/strong&gt; to skip the verification.&lt;/p&gt;\\n","pos":[17859,18052],"source":"\\n<p>\\n<strong>true</strong> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; <strong>false</strong> to skip the verification.</p>\\n"},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[18112,18147],"source":"\\n<p>The deserialized object.</p>\\n"},{"pos":[18663,18698],"content":"WriteEndObject(XmlDictionaryWriter)","needQuote":true,"nodes":[{"content":"WriteEndObject(XmlDictionaryWriter)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[20429,20494],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[21346,21371],"content":"WriteEndObject(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteEndObject(XmlWriter)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[23040,23105],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[23966,23993],"content":"WriteObject(Stream, Object)","needQuote":true,"nodes":[{"content":"WriteObject(Stream, Object)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The object that contains the data to write to the stream.&lt;/p&gt;\\n","pos":[25180,25248],"source":"\\n<p>The object that contains the data to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[25825,25890],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[26795,26835],"content":"WriteObject(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObject(XmlDictionaryWriter, Object)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The object that contains the content to write.&lt;/p&gt;\\n","pos":[28120,28177],"source":"\\n<p>The object that contains the content to write.</p>\\n"},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[28754,28819],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[29707,29737],"content":"WriteObject(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObject(XmlWriter, Object)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The object that contains the content to write.&lt;/p&gt;\\n","pos":[30947,31004],"source":"\\n<p>The object that contains the content to write.</p>\\n"},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[31581,31646],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[32575,32622],"content":"WriteObjectContent(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObjectContent(XmlDictionaryWriter, Object)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The object that contains the content to write.&lt;/p&gt;\\n","pos":[33893,33950],"source":"\\n<p>The object that contains the content to write.</p>\\n"},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[34527,34592],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[35510,35547],"content":"WriteObjectContent(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObjectContent(XmlWriter, Object)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The object that contains the content to write.&lt;/p&gt;\\n","pos":[36755,36812],"source":"\\n<p>The object that contains the content to write.</p>\\n"},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[37389,37454],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[38384,38429],"content":"WriteStartObject(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteStartObject(XmlDictionaryWriter, Object)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The object to serialize.&lt;/p&gt;\\n","pos":[39678,39713],"source":"\\n<p>The object to serialize.</p>\\n"},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[40290,40355],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[41265,41300],"content":"WriteStartObject(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteStartObject(XmlWriter, Object)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The object to serialize.&lt;/p&gt;\\n","pos":[42487,42522],"source":"\\n<p>The object to serialize.</p>\\n"},{"content":"\\n&lt;p&gt;there is a problem with the instance being serialized.&lt;/p&gt;\\n","pos":[43099,43164],"source":"\\n<p>there is a problem with the instance being serialized.</p>\\n"},{"pos":[43759,43787],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[43984,43990],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44150,44160],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[44255,44263],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[44332,44333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44360,44361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44431,44439],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[44508,44509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44536,44537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44720,44734],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[44853,44859],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[44926,44927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44977,44983],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45043,45044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45127,45133],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[45200,45201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45251,45257],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45317,45318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45532,45554],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[45702,45708],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[45775,45776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45826,45832],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[45893,45894]},{"pos":[45949,45955],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46015,46016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46113,46119],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[46186,46187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46237,46243],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[46304,46305]},{"pos":[46360,46366],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46426,46427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46672,46703],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[46869,46884],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[46960,46961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47011,47017],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[47078,47079]},{"pos":[47134,47140],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47200,47201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47307,47322],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[47398,47399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47449,47455],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[47516,47517]},{"pos":[47572,47578],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47638,47639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47869,47882],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[47983,47994],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[48066,48067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48094,48095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48168,48179],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[48251,48252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48279,48280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48455,48464],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[48557,48564],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[48632,48633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48660,48661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48730,48737],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[48805,48806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48833,48834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49009,49026],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[49135,49150],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[49226,49227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49254,49255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49332,49347],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[49423,49424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49451,49452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49597,49603],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[49755,49774],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"pos":[49967,49974],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50102,50112],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[50266,50275],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[50443,50449],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[50579,50588],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[50749,50768],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"pos":[50971,50980],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[51169,51197],"content":"InvalidDataContractException","needQuote":true,"nodes":[{"content":"InvalidDataContractException","pos":[0,28]}]},{"pos":[51473,51495],"content":"SerializationException","needQuote":true,"nodes":[{"content":"SerializationException","pos":[0,22]}]}],"content":"items:\n- uid: System.Runtime.Serialization.XmlObjectSerializer\n  commentId: T:System.Runtime.Serialization.XmlObjectSerializer\n  id: XmlObjectSerializer\n  parent: System.Runtime.Serialization\n  children:\n  - System.Runtime.Serialization.XmlObjectSerializer.#ctor\n  - System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  - System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  langs:\n  - csharp\n  - vb\n  name: XmlObjectSerializer\n  fullName: System.Runtime.Serialization.XmlObjectSerializer\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlObjectSerializer\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 59\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Provides the base class used to serialize objects as XML streams or documents. This class is abstract.</p>\\n\"\n  syntax:\n    content: public abstract class XmlObjectSerializer\n    content.vb: Public MustInherit Class XmlObjectSerializer\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized. </p>\\n\"\n  seealso:\n  - type: System.Runtime.Serialization.DataContractSerializer\n    commentId: T:System.Runtime.Serialization.DataContractSerializer\n  - type: System.Runtime.Serialization.NetDataContractSerializer\n    commentId: T:System.Runtime.Serialization.NetDataContractSerializer\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: XmlObjectSerializer\n- uid: System.Runtime.Serialization.XmlObjectSerializer.#ctor\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlObjectSerializer()\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.XmlObjectSerializer()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 61\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.XmlObjectSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.  </p>\\n\"\n  syntax:\n    content: protected XmlObjectSerializer()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XmlObjectSerializer.XmlObjectSerializer()\n- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  id: IsStartObject(System.Xml.XmlDictionaryReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: IsStartObject(XmlDictionaryReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 62\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets a value that specifies whether the <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is positioned over an XML element that can be read.</p>\\n\"\n  syntax:\n    content: public abstract bool IsStartObject(XmlDictionaryReader reader)\n    content.vb: Public MustOverride Function IsStartObject(reader As XmlDictionaryReader) As Boolean\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream or document.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the reader can read the data; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlObjectSerializer.IsStartObject(XmlDictionaryReader)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  id: IsStartObject(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: IsStartObject(XmlReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 63\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets a value that specifies whether the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is positioned over an XML element that can be read. </p>\\n\"\n  syntax:\n    content: public virtual bool IsStartObject(XmlReader reader)\n    content.vb: Public Overridable Function IsStartObject(reader As XmlReader) As Boolean\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream or document.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the reader is positioned over the starting element; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.IsStartObject(XmlReader)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  id: ReadObject(System.IO.Stream)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(Stream)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 64\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML stream or document with a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object.</p>\\n\"\n  syntax:\n    content: public virtual object ReadObject(Stream stream)\n    content.vb: Public Overridable Function ReadObject(stream As Stream) As Object\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream or document.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.ReadObject(Stream)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  id: ReadObject(System.Xml.XmlDictionaryReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(XmlDictionaryReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 65\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML document or stream with an <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object.</p>\\n\"\n  syntax:\n    content: public virtual object ReadObject(XmlDictionaryReader reader)\n    content.vb: Public Overridable Function ReadObject(reader As XmlDictionaryReader) As Object\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML document.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.ReadObject(XmlDictionaryReader)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  id: ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(XmlDictionaryReader, Boolean)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 66\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML stream or document with an <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</p>\\n\"\n  syntax:\n    content: public abstract object ReadObject(XmlDictionaryReader reader, bool verifyObjectName)\n    content.vb: Public MustOverride Function ReadObject(reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML document.</p>\\n\"\n    - id: verifyObjectName\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, <strong>false</strong> to skip the verification.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlObjectSerializer.ReadObject(XmlDictionaryReader, Boolean)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  id: ReadObject(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(XmlReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 67\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML document or stream with an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object.</p>\\n\"\n  syntax:\n    content: public virtual object ReadObject(XmlReader reader)\n    content.vb: Public Overridable Function ReadObject(reader As XmlReader) As Object\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream or document.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.ReadObject(XmlReader)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  id: ReadObject(System.Xml.XmlReader,System.Boolean)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(XmlReader, Boolean)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 68\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML document or stream with an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</p>\\n\"\n  syntax:\n    content: public virtual object ReadObject(XmlReader reader, bool verifyObjectName)\n    content.vb: Public Overridable Function ReadObject(reader As XmlReader, verifyObjectName As Boolean) As Object\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML document or stream.</p>\\n\"\n    - id: verifyObjectName\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; <strong>false</strong> to skip the verification.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.ReadObject(XmlReader, Boolean)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  id: WriteEndObject(System.Xml.XmlDictionaryWriter)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteEndObject(XmlDictionaryWriter)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteEndObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 69\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the end of the object data as a closing XML element to the XML document or stream with an <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract void WriteEndObject(XmlDictionaryWriter writer)\n    content.vb: Public MustOverride Sub WriteEndObject(writer As XmlDictionaryWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document or stream.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlObjectSerializer.WriteEndObject(XmlDictionaryWriter)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  id: WriteEndObject(System.Xml.XmlWriter)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteEndObject(XmlWriter)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteEndObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 70\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the end of the object data as a closing XML element to the XML document or stream with an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void WriteEndObject(XmlWriter writer)\n    content.vb: Public Overridable Sub WriteEndObject(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document or stream.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.WriteEndObject(XmlWriter)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n  id: WriteObject(System.IO.Stream,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObject(Stream, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 71\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void WriteObject(Stream stream, object graph)\n    content.vb: Public Overridable Sub WriteObject(stream As Stream, graph As Object)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document or stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object that contains the data to write to the stream.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.WriteObject(Stream, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n  id: WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObject(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 72\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void WriteObject(XmlDictionaryWriter writer, object graph)\n    content.vb: Public Overridable Sub WriteObject(writer As XmlDictionaryWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the content to the XML document or stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object that contains the content to write.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.WriteObject(XmlDictionaryWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  id: WriteObject(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObject(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 73\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void WriteObject(XmlWriter writer, object graph)\n    content.vb: Public Overridable Sub WriteObject(writer As XmlWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document or stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object that contains the content to write.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.WriteObject(XmlWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  id: WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObjectContent(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObjectContent\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 74\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes only the content of the object to the XML document or stream using the specified <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract void WriteObjectContent(XmlDictionaryWriter writer, object graph)\n    content.vb: Public MustOverride Sub WriteObjectContent(writer As XmlDictionaryWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document or stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object that contains the content to write.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlObjectSerializer.WriteObjectContent(XmlDictionaryWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  id: WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObjectContent(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObjectContent\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 75\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes only the content of the object to the XML document or stream with the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void WriteObjectContent(XmlWriter writer, object graph)\n    content.vb: Public Overridable Sub WriteObjectContent(writer As XmlWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document or stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object that contains the content to write.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.WriteObjectContent(XmlWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  id: WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteStartObject(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 76\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the start of the object's data as an opening XML element using the specified <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract void WriteStartObject(XmlDictionaryWriter writer, object graph)\n    content.vb: Public MustOverride Sub WriteStartObject(writer As XmlDictionaryWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object to serialize.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlObjectSerializer.WriteStartObject(XmlDictionaryWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  id: WriteStartObject(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteStartObject(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 77\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the start of the object's data as an opening XML element using the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void WriteStartObject(XmlWriter writer, object graph)\n    content.vb: Public Overridable Sub WriteStartObject(writer As XmlWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object to serialize.</p>\\n\"\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>the type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>there is a problem with the instance being serialized.</p>\\n\"\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: \"\\n<p>the maximum number of objects to serialize has been exceeded. Check the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlObjectSerializer.WriteStartObject(XmlWriter, Object)\nreferences:\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.XmlDictionaryReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReader\n  fullName: System.Xml.XmlDictionaryReader\n  commentId: T:System.Xml.XmlDictionaryReader\n  nameWithType: XmlDictionaryReader\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  commentId: T:System.Xml.XmlReader\n  nameWithType: XmlReader\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Xml.XmlDictionaryWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryWriter\n  fullName: System.Xml.XmlDictionaryWriter\n  commentId: T:System.Xml.XmlDictionaryWriter\n  nameWithType: XmlDictionaryWriter\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Runtime.Serialization.InvalidDataContractException\n  isExternal: false\n  name: InvalidDataContractException\n  fullName: System.Runtime.Serialization.InvalidDataContractException\n  nameWithType: InvalidDataContractException\n  commentId: T:System.Runtime.Serialization.InvalidDataContractException\n- uid: System.Runtime.Serialization.SerializationException\n  isExternal: false\n  name: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n  nameWithType: SerializationException\n  commentId: T:System.Runtime.Serialization.SerializationException\n- uid: System.ServiceModel.QuotaExceededException\n"}