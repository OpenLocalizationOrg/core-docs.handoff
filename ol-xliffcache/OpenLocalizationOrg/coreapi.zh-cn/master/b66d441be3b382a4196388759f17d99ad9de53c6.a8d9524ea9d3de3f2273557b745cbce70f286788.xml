{"nodes":[{"pos":[411,433],"content":"DbDataReaderExtensions","needQuote":true,"nodes":[{"content":"DbDataReaderExtensions","pos":[0,22]}]},{"pos":[1804,1833],"content":"GetColumnSchema(DbDataReader)","needQuote":true,"nodes":[{"content":"GetColumnSchema(DbDataReader)","pos":[0,29]}]},{"pos":[3289,3321],"content":"CanGetColumnSchema(DbDataReader)","needQuote":true,"nodes":[{"content":"CanGetColumnSchema(DbDataReader)","pos":[0,32]}]},{"pos":[4366,4384],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[4551,4557],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4717,4727],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4856,4864],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4967,4968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5015,5016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5106,5114],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5217,5218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5265,5266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5435,5449],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5606,5612],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5711,5712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5782,5788],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5873,5874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5977,5983],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6082,6083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6153,6159],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6244,6245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6441,6463],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6657,6663],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6762,6763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6833,6839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6925,6926]},{"pos":[7004,7010],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7095,7096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7213,7219],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7318,7319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7389,7395],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7481,7482]},{"pos":[7560,7566],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7651,7652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7871,7902],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8123,8138],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8255,8256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8326,8332],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8418,8419]},{"pos":[8497,8503],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8588,8589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8715,8730],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8847,8848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8918,8924],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9010,9011]},{"pos":[9089,9095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9180,9181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9376,9389],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9527,9538],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9647,9648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9695,9696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9789,9800],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9909,9910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9957,9958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10116,10125],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10251,10258],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10359,10360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10407,10408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10497,10504],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10605,10606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10653,10654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10816,10833],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10983,10998],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11115,11116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11163,11164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11261,11276],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11393,11394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11441,11442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11566,11572],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11733,11745],"content":"DbDataReader","needQuote":true,"nodes":[{"content":"DbDataReader","pos":[0,12]}]},{"pos":[12067,12095],"content":"ReadOnlyCollection<DbColumn>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;DbColumn&gt;","pos":[0,28],"source":"ReadOnlyCollection<DbColumn>"}]},{"pos":[12509,12527],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[12660,12661],"content":"<","needQuote":true,"nodes":[]},{"pos":[12745,12753],"content":"DbColumn","needQuote":true,"nodes":[{"content":"DbColumn","pos":[0,8]}]},{"pos":[12959,12977],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[13111,13114]},{"pos":[13210,13218],"content":"DbColumn","needQuote":true,"nodes":[{"content":"DbColumn","pos":[0,8]}]},{"pos":[13298,13299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13517,13538],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[13879,13897],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[14009,14010],"content":"<","needQuote":true,"nodes":[]},{"pos":[14057,14058],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14231,14249],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[14362,14365]},{"pos":[14424,14425],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14472,14473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14643,14673],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[14877,14884],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Data.Common.DbDataReaderExtensions\n  commentId: T:System.Data.Common.DbDataReaderExtensions\n  id: DbDataReaderExtensions\n  parent: System.Data.Common\n  children:\n  - System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  - System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  langs:\n  - csharp\n  - vb\n  name: DbDataReaderExtensions\n  nameWithType: DbDataReaderExtensions\n  fullName: System.Data.Common.DbDataReaderExtensions\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbDataReaderExtensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbDataReaderExtensions\n    path: src/System.Data.Common/src/System/Data/Common/DbDataReaderExtensions.cs\n    startLine: 6\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public class DbDataReaderExtensions\n    content.vb: Public Class DbDataReaderExtensions\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  commentId: M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  id: GetColumnSchema(System.Data.Common.DbDataReader)\n  isExtensionMethod: true\n  parent: System.Data.Common.DbDataReaderExtensions\n  langs:\n  - csharp\n  - vb\n  name: GetColumnSchema(DbDataReader)\n  nameWithType: DbDataReaderExtensions.GetColumnSchema(DbDataReader)\n  fullName: System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbDataReaderExtensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetColumnSchema\n    path: src/System.Data.Common/src/System/Data/Common/DbDataReaderExtensions.cs\n    startLine: 8\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public static ReadOnlyCollection<DbColumn> GetColumnSchema(this DbDataReader reader)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function GetColumnSchema(reader As DbDataReader) As ReadOnlyCollection(Of DbColumn)\n    parameters:\n    - id: reader\n      type: System.Data.Common.DbDataReader\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  commentId: M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  id: CanGetColumnSchema(System.Data.Common.DbDataReader)\n  isExtensionMethod: true\n  parent: System.Data.Common.DbDataReaderExtensions\n  langs:\n  - csharp\n  - vb\n  name: CanGetColumnSchema(DbDataReader)\n  nameWithType: DbDataReaderExtensions.CanGetColumnSchema(DbDataReader)\n  fullName: System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbDataReaderExtensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanGetColumnSchema\n    path: src/System.Data.Common/src/System/Data/Common/DbDataReaderExtensions.cs\n    startLine: 17\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public static bool CanGetColumnSchema(this DbDataReader reader)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function CanGetColumnSchema(reader As DbDataReader) As Boolean\n    parameters:\n    - id: reader\n      type: System.Data.Common.DbDataReader\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\nreferences:\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  nameWithType: System.Data.Common\n  fullName: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n  commentId: N:System\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n  commentId: T:System.Data.Common.DbDataReader\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<DbColumn>\n  nameWithType: ReadOnlyCollection<DbColumn>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Common.DbColumn>\n  nameWithType.vb: ReadOnlyCollection(Of DbColumn)\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Data.Common.DbColumn)\n  name.vb: ReadOnlyCollection(Of DbColumn)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.DbColumn\n    name: DbColumn\n    nameWithType: DbColumn\n    fullName: System.Data.Common.DbColumn\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Data.Common.DbColumn\n    name: DbColumn\n    nameWithType: DbColumn\n    fullName: System.Data.Common.DbColumn\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.DbColumn}\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n"}