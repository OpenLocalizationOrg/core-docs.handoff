{"nodes":[{"pos":[540,545],"content":"Timer","needQuote":true,"nodes":[{"content":"Timer","pos":[0,5]}]},{"pos":[2600,2642],"content":"Timer(TimerCallback, Object, Int32, Int32)","needQuote":true,"nodes":[{"content":"Timer(TimerCallback, Object, Int32, Int32)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An object containing information to be used by the callback method, or &lt;strong&gt;null&lt;/strong&gt;.","pos":[3936,4034],"source":"\\n<p>An object containing information to be used by the callback method, or <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[4035,4041],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;callback&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[5095,5157],"source":"\\n<p>The <em>callback</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[5158,5164],"source":" </p>\\n"},{"pos":[5685,5733],"content":"Timer(TimerCallback, Object, TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Timer(TimerCallback, Object, TimeSpan, TimeSpan)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;A delegate representing a method to be executed.","pos":[6886,6939],"source":"\\n<p>A delegate representing a method to be executed."},{"content":"&lt;/p&gt;\\n","pos":[6940,6946],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object containing information to be used by the callback method, or &lt;strong&gt;null&lt;/strong&gt;.","pos":[7010,7108],"source":"\\n<p>An object containing information to be used by the callback method, or <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[7109,7115],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The amount of time to delay before the &lt;em&gt;callback&lt;/em&gt; parameter invokes its methods.","pos":[7183,7275],"source":"\\n<p>The amount of time to delay before the <em>callback</em> parameter invokes its methods."},{"content":"Specify negative one (-1) milliseconds to prevent the timer from starting.","pos":[7276,7350]},{"content":"Specify zero (0) to start the timer immediately.","pos":[7351,7399]},{"content":"&lt;/p&gt;\\n","pos":[7400,7406],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The time interval between invocations of the methods referenced by &lt;em&gt;callback&lt;/em&gt;.","pos":[7473,7563],"source":"\\n<p>The time interval between invocations of the methods referenced by <em>callback</em>."},{"content":"Specify negative one (-1) milliseconds to disable periodic signaling.","pos":[7564,7633]},{"content":"&lt;/p&gt;\\n","pos":[7634,7640],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;callback&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8192,8254],"source":"\\n<p>The <em>callback</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8255,8261],"source":" </p>\\n"},{"pos":[8636,8656],"content":"Change(Int32, Int32)","needQuote":true,"nodes":[{"content":"Change(Int32, Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the timer was successfully updated; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10315,10423],"source":"\\n<p>\\n<strong>true</strong> if the timer was successfully updated; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11341,11367],"content":"Change(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Change(TimeSpan, TimeSpan)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the timer was successfully updated; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13037,13145],"source":"\\n<p>\\n<strong>true</strong> if the timer was successfully updated; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;dueTime&lt;/em&gt; or &lt;em&gt;period&lt;/em&gt; parameter, in milliseconds, is less than -1.","pos":[13510,13599],"source":"\\n<p>The <em>dueTime</em> or <em>period</em> parameter, in milliseconds, is less than -1."},{"content":"&lt;/p&gt;\\n","pos":[13600,13606],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;dueTime&lt;/em&gt; or &lt;em&gt;period&lt;/em&gt; parameter, in milliseconds, is greater than 4294967294.","pos":[13711,13811],"source":"\\n<p>The <em>dueTime</em> or <em>period</em> parameter, in milliseconds, is greater than 4294967294."},{"content":"&lt;/p&gt;\\n","pos":[13812,13818],"source":" </p>\\n"},{"pos":[14093,14102],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[14912,14928],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[15089,15095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15245,15256],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[15431,15441],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15536,15544],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15613,15614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15641,15642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15712,15720],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15789,15790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15817,15818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16001,16015],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16134,16140],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16207,16208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16258,16264],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16324,16325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16408,16414],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16481,16482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16532,16538],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16598,16599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16813,16835],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16983,16989],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17056,17057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17107,17113],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17174,17175]},{"pos":[17230,17236],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17296,17297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17394,17400],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17467,17468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17518,17524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17585,17586]},{"pos":[17641,17647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17707,17708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17953,17984],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18150,18165],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18241,18242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18292,18298],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18359,18360]},{"pos":[18415,18421],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18481,18482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18588,18603],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18679,18680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18730,18736],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18797,18798]},{"pos":[18853,18859],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18919,18920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19150,19163],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19264,19275],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19347,19348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19375,19376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19449,19460],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19532,19533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19560,19561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19736,19745],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19838,19845],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19913,19914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19941,19942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20011,20018],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20086,20087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20114,20115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20290,20307],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20416,20431],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20507,20508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20535,20536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20613,20628],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20704,20705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20732,20733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20878,20884],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21042,21055],"content":"TimerCallback","needQuote":true,"nodes":[{"content":"TimerCallback","pos":[0,13]}]},{"pos":[21240,21245],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21389,21397],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[21549,21556],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21729,21738],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[21841,21848],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[21900,21901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21928,21929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22003,22010],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[22062,22063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22090,22091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22258,22285],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[22491,22512],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[22702,22725],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[22936,22957],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Threading.Timer\n  commentId: T:System.Threading.Timer\n  id: Timer\n  parent: System.Threading\n  children:\n  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)\n  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)\n  - System.Threading.Timer.Change(System.Int32,System.Int32)\n  - System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)\n  - System.Threading.Timer.Dispose\n  langs:\n  - csharp\n  - vb\n  name: Timer\n  fullName: System.Threading.Timer\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Timer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Timer\n    path: src/mscorlib/src/System/Threading/Timer.cs\n    startLine: 774\n  assemblies:\n  - System.Threading.Timer\n  namespace: System.Threading\n  summary: \"\\n<p>Provides a mechanism for executing a method on a thread pool thread at specified intervals. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      [ComVisible(true)]\n\n      public sealed class Timer : IDisposable\n    content.vb: >-\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class Timer\n          Implements IDisposable\n  seealso:\n  - type: System.Threading.TimerCallback\n    commentId: T:System.Threading.TimerCallback\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: true\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: Timer\n- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)\n  commentId: M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)\n  id: '#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)'\n  parent: System.Threading.Timer\n  langs:\n  - csharp\n  - vb\n  name: Timer(TimerCallback, Object, Int32, Int32)\n  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Timer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Timer.cs\n    startLine: 786\n  assemblies:\n  - System.Threading.Timer\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <strong>Timer</strong> class, using a 32-bit signed integer to specify the time interval.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public Timer(TimerCallback callback, object state, int dueTime, int period)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)\n    parameters:\n    - id: callback\n      type: System.Threading.TimerCallback\n      description: \"\\n<p>A <xref href=\\\"System.Threading.TimerCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate representing a method to be executed. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>An object containing information to be used by the callback method, or <strong>null</strong>. </p>\\n\"\n    - id: dueTime\n      type: System.Int32\n      description: \"\\n<p>The amount of time to delay before <em>callback</em> is invoked, in milliseconds. Specify <xref href=\\\"System.Threading.Timeout.Infinite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to prevent the timer from starting. Specify zero (0) to start the timer immediately. </p>\\n\"\n    - id: period\n      type: System.Int32\n      description: \"\\n<p>The time interval between invocations of <em>callback</em>, in milliseconds. Specify <xref href=\\\"System.Threading.Timeout.Infinite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to disable periodic signaling. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>dueTime</em> or <em>period</em> parameter is negative and is not equal to <xref href=\\\"System.Threading.Timeout.Infinite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>callback</em> parameter is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Timer.Timer(TimerCallback, Object, Int32, Int32)\n- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)\n  commentId: M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)\n  id: '#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)'\n  parent: System.Threading.Timer\n  langs:\n  - csharp\n  - vb\n  name: Timer(TimerCallback, Object, TimeSpan, TimeSpan)\n  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.TimeSpan, System.TimeSpan)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Timer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Timer.cs\n    startLine: 803\n  assemblies:\n  - System.Threading.Timer\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <strong>Timer</strong> class, using <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to measure time intervals.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public Timer(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)\n    parameters:\n    - id: callback\n      type: System.Threading.TimerCallback\n      description: \"\\n<p>A delegate representing a method to be executed. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>An object containing information to be used by the callback method, or <strong>null</strong>. </p>\\n\"\n    - id: dueTime\n      type: System.TimeSpan\n      description: \"\\n<p>The amount of time to delay before the <em>callback</em> parameter invokes its methods. Specify negative one (-1) milliseconds to prevent the timer from starting. Specify zero (0) to start the timer immediately. </p>\\n\"\n    - id: period\n      type: System.TimeSpan\n      description: \"\\n<p>The time interval between invocations of the methods referenced by <em>callback</em>. Specify negative one (-1) milliseconds to disable periodic signaling. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The number of milliseconds in the value of <em>dueTime</em> or <em>period</em> is negative and not equal to <xref href=\\\"System.Threading.Timeout.Infinite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or is greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>callback</em> parameter is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Timer.Timer(TimerCallback, Object, TimeSpan, TimeSpan)\n- uid: System.Threading.Timer.Change(System.Int32,System.Int32)\n  commentId: M:System.Threading.Timer.Change(System.Int32,System.Int32)\n  id: Change(System.Int32,System.Int32)\n  parent: System.Threading.Timer\n  langs:\n  - csharp\n  - vb\n  name: Change(Int32, Int32)\n  fullName: System.Threading.Timer.Change(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Timer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Change\n    path: src/mscorlib/src/System/Threading/Timer.cs\n    startLine: 897\n  assemblies:\n  - System.Threading.Timer\n  namespace: System.Threading\n  summary: \"\\n<p>Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.</p>\\n\"\n  syntax:\n    content: public bool Change(int dueTime, int period)\n    content.vb: Public Function Change(dueTime As Integer, period As Integer) As Boolean\n    parameters:\n    - id: dueTime\n      type: System.Int32\n      description: \"\\n<p>The amount of time to delay before the invoking the callback method specified when the <xref href=\\\"System.Threading.Timer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was constructed, in milliseconds. Specify <xref href=\\\"System.Threading.Timeout.Infinite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to prevent the timer from restarting. Specify zero (0) to restart the timer immediately. </p>\\n\"\n    - id: period\n      type: System.Int32\n      description: \"\\n<p>The time interval between invocations of the callback method specified when the <xref href=\\\"System.Threading.Timer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was constructed, in milliseconds. Specify <xref href=\\\"System.Threading.Timeout.Infinite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to disable periodic signaling. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the timer was successfully updated; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.Timer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has already been disposed. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>dueTime</em> or <em>period</em> parameter is negative and is not equal to <xref href=\\\"System.Threading.Timeout.Infinite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Timer.Change(Int32, Int32)\n- uid: System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)\n  id: Change(System.TimeSpan,System.TimeSpan)\n  parent: System.Threading.Timer\n  langs:\n  - csharp\n  - vb\n  name: Change(TimeSpan, TimeSpan)\n  fullName: System.Threading.Timer.Change(System.TimeSpan, System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Timer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Change\n    path: src/mscorlib/src/System/Threading/Timer.cs\n    startLine: 908\n  assemblies:\n  - System.Threading.Timer\n  namespace: System.Threading\n  summary: \"\\n<p>Changes the start time and the interval between method invocations for a timer, using <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to measure time intervals.</p>\\n\"\n  syntax:\n    content: public bool Change(TimeSpan dueTime, TimeSpan period)\n    content.vb: Public Function Change(dueTime As TimeSpan, period As TimeSpan) As Boolean\n    parameters:\n    - id: dueTime\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the amount of time to delay before invoking the callback method specified when the <xref href=\\\"System.Threading.Timer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was constructed. Specify negative one (-1) milliseconds to prevent the timer from restarting. Specify zero (0) to restart the timer immediately. </p>\\n\"\n    - id: period\n      type: System.TimeSpan\n      description: \"\\n<p>The time interval between invocations of the callback method specified when the <xref href=\\\"System.Threading.Timer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was constructed. Specify negative one (-1) milliseconds to disable periodic signaling. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the timer was successfully updated; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.Timer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has already been disposed. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>dueTime</em> or <em>period</em> parameter, in milliseconds, is less than -1. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <em>dueTime</em> or <em>period</em> parameter, in milliseconds, is greater than 4294967294. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Timer.Change(TimeSpan, TimeSpan)\n- uid: System.Threading.Timer.Dispose\n  commentId: M:System.Threading.Timer.Dispose\n  id: Dispose\n  parent: System.Threading.Timer\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Threading.Timer.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Timer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/Threading/Timer.cs\n    startLine: 943\n  assemblies:\n  - System.Threading.Timer\n  namespace: System.Threading\n  summary: \"\\n<p>Releases all resources used by the current instance of <xref href=\\\"System.Threading.Timer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Timer.Dispose()\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.TimerCallback\n  parent: System.Threading\n  isExternal: false\n  name: TimerCallback\n  fullName: System.Threading.TimerCallback\n  nameWithType: TimerCallback\n  commentId: T:System.Threading.TimerCallback\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}