{"nodes":[{"pos":[743,767],"content":"MessageProcessingHandler","needQuote":true,"nodes":[{"content":"MessageProcessingHandler","pos":[0,24]}]},{"pos":[2487,2513],"content":"MessageProcessingHandler()","needQuote":true,"nodes":[{"content":"MessageProcessingHandler()","pos":[0,26]}]},{"pos":[3617,3661],"content":"MessageProcessingHandler(HttpMessageHandler)","needQuote":true,"nodes":[{"content":"MessageProcessingHandler(HttpMessageHandler)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The inner handler which is responsible for processing the HTTP response messages.&lt;/p&gt;\\n","pos":[4546,4638],"source":"\\n<p>The inner handler which is responsible for processing the HTTP response messages.</p>\\n"},{"pos":[5244,5297],"content":"ProcessRequest(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"ProcessRequest(HttpRequestMessage, CancellationToken)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The HTTP request message to process.&lt;/p&gt;\\n","pos":[6236,6283],"source":"\\n<p>The HTTP request message to process.</p>\\n"},{"content":"\\n&lt;p&gt;A cancellation token that can be used by other objects or threads to receive notice of cancellation.&lt;/p&gt;\\n","pos":[6380,6491],"source":"\\n<p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\\n"},{"pos":[7390,7445],"content":"ProcessResponse(HttpResponseMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"ProcessResponse(HttpResponseMessage, CancellationToken)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;The HTTP response message to process.&lt;/p&gt;\\n","pos":[8394,8442],"source":"\\n<p>The HTTP response message to process.</p>\\n"},{"content":"\\n&lt;p&gt;A cancellation token that can be used by other objects or threads to receive notice of cancellation.&lt;/p&gt;\\n","pos":[8539,8650],"source":"\\n<p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\\n"},{"pos":[9533,9581],"content":"SendAsync(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(HttpRequestMessage, CancellationToken)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The HTTP request message to send to the server.&lt;/p&gt;\\n","pos":[10575,10633],"source":"\\n<p>The HTTP request message to send to the server.</p>\\n"},{"content":"\\n&lt;p&gt;A cancellation token that can be used by other objects or threads to receive notice of cancellation.&lt;/p&gt;\\n","pos":[10730,10841],"source":"\\n<p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;request&lt;/em&gt; was &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11374,11432],"source":"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n"},{"pos":[11708,11723],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[11881,11887],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12062,12080],"content":"HttpMessageHandler","needQuote":true,"nodes":[{"content":"HttpMessageHandler","pos":[0,18]}]},{"pos":[12308,12325],"content":"DelegatingHandler","needQuote":true,"nodes":[{"content":"DelegatingHandler","pos":[0,17]}]},{"pos":[12526,12537],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[12757,12769],"content":"InnerHandler","needQuote":true,"nodes":[{"content":"InnerHandler","pos":[0,12]}]},{"pos":[13074,13090],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13253,13260],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13327,13328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13379,13386],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13447,13448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13553,13560],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13627,13628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13679,13686],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13747,13748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14012,14021],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[14156,14163],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[14231,14232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14259,14260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14350,14357],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[14425,14426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14453,14454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14655,14665],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14760,14768],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14837,14838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14865,14866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14936,14944],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15013,15014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15041,15042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15225,15239],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15358,15364],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15431,15432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15482,15488],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15548,15549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15632,15638],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15705,15706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15756,15762],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15822,15823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16037,16059],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16207,16213],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16280,16281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16331,16337],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16398,16399]},{"pos":[16454,16460],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16520,16521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16618,16624],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16691,16692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16742,16748],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16809,16810]},{"pos":[16865,16871],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16931,16932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17177,17208],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17374,17389],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17465,17466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17516,17522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17583,17584]},{"pos":[17639,17645],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17705,17706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17812,17827],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17903,17904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17954,17960],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18021,18022]},{"pos":[18077,18083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18143,18144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18374,18387],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18488,18499],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18571,18572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18599,18600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18673,18684],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18756,18757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18784,18785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18960,18969],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19062,19069],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19137,19138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19165,19166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19235,19242],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19310,19311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19338,19339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19514,19531],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19640,19655],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19731,19732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19759,19760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19837,19852],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19928,19929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19956,19957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20102,20108],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20269,20287],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"pos":[20517,20534],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[20718,20734],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[20926,20945],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[21274,21322],"content":"SendAsync(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(HttpRequestMessage, CancellationToken)","pos":[0,48]}]},{"pos":[21600,21609],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[21678,21679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21750,21768],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"content":",","pos":[21829,21830]},{"pos":[21906,21923],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[22004,22005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22167,22176],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[22245,22246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22317,22335],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"content":",","pos":[22396,22397]},{"pos":[22473,22490],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[22571,22572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22959,22984],"content":"Task<HttpResponseMessage>","needQuote":true,"nodes":[{"content":"Task&lt;HttpResponseMessage&gt;","pos":[0,25],"source":"Task<HttpResponseMessage>"}]},{"pos":[23249,23253],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[23327,23328],"content":"<","needQuote":true,"nodes":[]},{"pos":[23400,23419],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[23562,23566],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[23641,23644]},{"pos":[23723,23742],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[23803,23804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24056,24069],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[24266,24270],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[24323,24324],"content":"<","needQuote":true,"nodes":[]},{"pos":[24351,24358],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[24473,24477],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[24531,24534]},{"pos":[24568,24575],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[24608,24609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24795,24817],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[24994,25015],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Net.Http.MessageProcessingHandler\n  commentId: T:System.Net.Http.MessageProcessingHandler\n  id: MessageProcessingHandler\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.MessageProcessingHandler.#ctor\n  - System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  - System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  - System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  - System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  - vb\n  name: MessageProcessingHandler\n  fullName: System.Net.Http.MessageProcessingHandler\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MessageProcessingHandler\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 198\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>A base type for handlers which only do some small processing of request and/or response messages.</p>\\n\"\n  syntax:\n    content: 'public abstract class MessageProcessingHandler : DelegatingHandler, IDisposable'\n    content.vb: >-\n      Public MustInherit Class MessageProcessingHandler\n          Inherits DelegatingHandler\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpMessageHandler\n  - System.Net.Http.DelegatingHandler\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Net.Http.DelegatingHandler.InnerHandler\n  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  - System.Net.Http.HttpMessageHandler.Dispose\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: MessageProcessingHandler\n- uid: System.Net.Http.MessageProcessingHandler.#ctor\n  commentId: M:System.Net.Http.MessageProcessingHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  - vb\n  name: MessageProcessingHandler()\n  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 200\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Creates an instance of a <xref href=\\\"System.Net.Http.MessageProcessingHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected MessageProcessingHandler()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: MessageProcessingHandler.MessageProcessingHandler()\n- uid: System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  commentId: M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  id: '#ctor(System.Net.Http.HttpMessageHandler)'\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  - vb\n  name: MessageProcessingHandler(HttpMessageHandler)\n  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler(System.Net.Http.HttpMessageHandler)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 201\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Creates an instance of a <xref href=\\\"System.Net.Http.MessageProcessingHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specific inner handler.</p>\\n\"\n  syntax:\n    content: protected MessageProcessingHandler(HttpMessageHandler innerHandler)\n    content.vb: Protected Sub New(innerHandler As HttpMessageHandler)\n    parameters:\n    - id: innerHandler\n      type: System.Net.Http.HttpMessageHandler\n      description: \"\\n<p>The inner handler which is responsible for processing the HTTP response messages.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)\n- uid: System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  - vb\n  name: ProcessRequest(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessRequest\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 202\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Performs processing on each request sent to the server.</p>\\n\"\n  syntax:\n    content: protected abstract HttpRequestMessage ProcessRequest(HttpRequestMessage request, CancellationToken cancellationToken)\n    content.vb: Protected MustOverride Function ProcessRequest(request As HttpRequestMessage, cancellationToken As CancellationToken) As HttpRequestMessage\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: \"\\n<p>The HTTP request message to process.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\\n\"\n    return:\n      type: System.Net.Http.HttpRequestMessage\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpRequestMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The HTTP request message that was processed.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: MessageProcessingHandler.ProcessRequest(HttpRequestMessage, CancellationToken)\n- uid: System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  id: ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  - vb\n  name: ProcessResponse(HttpResponseMessage, CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessResponse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 203\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Perform processing on each response from the server.</p>\\n\"\n  syntax:\n    content: protected abstract HttpResponseMessage ProcessResponse(HttpResponseMessage response, CancellationToken cancellationToken)\n    content.vb: Protected MustOverride Function ProcessResponse(response As HttpResponseMessage, cancellationToken As CancellationToken) As HttpResponseMessage\n    parameters:\n    - id: response\n      type: System.Net.Http.HttpResponseMessage\n      description: \"\\n<p>The HTTP response message to process.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\\n\"\n    return:\n      type: System.Net.Http.HttpResponseMessage\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpResponseMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The HTTP response message that was processed.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: MessageProcessingHandler.ProcessResponse(HttpResponseMessage, CancellationToken)\n- uid: System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  - vb\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 204\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: protected override sealed Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n    content.vb: Protected NotOverridable Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: \"\\n<p>The HTTP request message to send to the server.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  overridden: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - override\n  - sealed\n  modifiers.vb:\n  - Protected\n  - Overrides\n  - NotOverridable\n  nameWithType: MessageProcessingHandler.SendAsync(HttpRequestMessage, CancellationToken)\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n  commentId: T:System.Net.Http.HttpMessageHandler\n  nameWithType: HttpMessageHandler\n- uid: System.Net.Http.DelegatingHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: DelegatingHandler\n  fullName: System.Net.Http.DelegatingHandler\n  commentId: T:System.Net.Http.DelegatingHandler\n  nameWithType: DelegatingHandler\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Net.Http.DelegatingHandler.InnerHandler\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: InnerHandler\n  fullName: System.Net.Http.DelegatingHandler.InnerHandler\n  commentId: P:System.Net.Http.DelegatingHandler.InnerHandler\n  nameWithType: DelegatingHandler.InnerHandler\n- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.DelegatingHandler.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.DelegatingHandler.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  nameWithType: DelegatingHandler.Dispose(Boolean)\n- uid: System.Net.Http.HttpMessageHandler.Dispose\n  parent: System.Net.Http.HttpMessageHandler\n  isExternal: false\n  name: Dispose()\n  fullName: System.Net.Http.HttpMessageHandler.Dispose()\n  spec.csharp:\n  - uid: System.Net.Http.HttpMessageHandler.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpMessageHandler.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpMessageHandler.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpMessageHandler.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpMessageHandler.Dispose\n  nameWithType: HttpMessageHandler.Dispose()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n  commentId: T:System.Net.Http.HttpRequestMessage\n  nameWithType: HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Net.Http.HttpResponseMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpResponseMessage\n  fullName: System.Net.Http.HttpResponseMessage\n  commentId: T:System.Net.Http.HttpResponseMessage\n  nameWithType: HttpResponseMessage\n- uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: true\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n    name: SendAsync\n    fullName: System.Net.Http.DelegatingHandler.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Http.HttpRequestMessage\n    name: HttpRequestMessage\n    fullName: System.Net.Http.HttpRequestMessage\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n    name: SendAsync\n    fullName: System.Net.Http.DelegatingHandler.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Http.HttpRequestMessage\n    name: HttpRequestMessage\n    fullName: System.Net.Http.HttpRequestMessage\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  nameWithType: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)\n  name.vb: Task(Of HttpResponseMessage)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  nameWithType: Task<HttpResponseMessage>\n  nameWithType.vb: Task(Of HttpResponseMessage)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}